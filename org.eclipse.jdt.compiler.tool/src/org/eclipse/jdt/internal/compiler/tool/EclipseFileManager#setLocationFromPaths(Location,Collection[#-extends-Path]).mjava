	@Override
	public void setLocationFromPaths(Location location, Collection<? extends Path> paths) throws IOException {
		setLocation(location, getFiles(paths));
		if (location == StandardLocation.MODULE_PATH || location == StandardLocation.MODULE_SOURCE_PATH) { 
			// FIXME: same for module source path?
			Map<String, String> options = new HashMap<>();
			// FIXME: Find a way to get the options from the EclipseCompiler and pass it to the parser.
			String latest = CompilerOptions.getLatestVersion();
			options.put(CompilerOptions.OPTION_Compliance, latest);
			options.put(CompilerOptions.OPTION_Source, latest);
			options.put(CompilerOptions.OPTION_TargetPlatform, latest);
			CompilerOptions compilerOptions = new CompilerOptions(options);
			ProblemReporter problemReporter = 
					new ProblemReporter(
						DefaultErrorHandlingPolicies.proceedWithAllProblems(),
						compilerOptions,
						new DefaultProblemFactory());
			for (Path path : paths) {
				List<Classpath> mp = ModuleFinder.findModules(path.toFile(), null, 
						new Parser(problemReporter, true), null, true, this.releaseVersion);
				for (Classpath cp : mp) {
					Collection<String> moduleNames = cp.getModuleNames(null);
					for (String string : moduleNames) {
						Path p = Paths.get(cp.getPath());
						setLocationForModule(location, string,  Collections.singletonList(p));
					}
				}
			}
		}
	}

