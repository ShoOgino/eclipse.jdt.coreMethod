	@Override
	@SuppressWarnings("unchecked")
	protected void setPaths(ArrayList bootclasspaths,
			String sourcepathClasspathArg,
			ArrayList sourcepathClasspaths,
			ArrayList classpaths,
			ArrayList extdirsClasspaths,
			ArrayList endorsedDirClasspaths,
			String customEncoding) throws InvalidInputException {

		ArrayList<FileSystem.Classpath> fileSystemClasspaths = new ArrayList<FileSystem.Classpath>();
		if (this.fileManager instanceof OldEclipseFileManager) {
			OldEclipseFileManager javaFileManager = (OldEclipseFileManager) this.fileManager;

			if ((javaFileManager.flags & OldEclipseFileManager.HAS_ENDORSED_DIRS) == 0
					&& (javaFileManager.flags & OldEclipseFileManager.HAS_BOOTCLASSPATH) != 0) {
				fileSystemClasspaths.addAll((ArrayList<? extends FileSystem.Classpath>) this.handleEndorseddirs(null));
			}
			Iterable<? extends File> location = javaFileManager.getLocation(StandardLocation.PLATFORM_CLASS_PATH);
			if (location != null) {
				for (File file : location) {
					fileSystemClasspaths.add(FileSystem.getClasspath(
	    				file.getAbsolutePath(),
	    				null,
	    				null));
				}
			}
			if ((javaFileManager.flags & OldEclipseFileManager.HAS_EXT_DIRS) == 0
					&& (javaFileManager.flags & OldEclipseFileManager.HAS_BOOTCLASSPATH) != 0) {
				fileSystemClasspaths.addAll((ArrayList<? extends FileSystem.Classpath>) this.handleExtdirs(null));
			}
			location = javaFileManager.getLocation(StandardLocation.SOURCE_PATH);
			if (location != null) {
				for (File file : location) {
					fileSystemClasspaths.add(FileSystem.getClasspath(
	    				file.getAbsolutePath(),
	    				null,
	    				null));
				}
			}
			location = javaFileManager.getLocation(StandardLocation.CLASS_PATH);
			if (location != null) {
				for (File file : location) {
					fileSystemClasspaths.add(FileSystem.getClasspath(
	    				file.getAbsolutePath(),
	    				null,
	    				null));
				}
			}
		}
		final int size = fileSystemClasspaths.size();
		if (size != 0) {
    		this.checkedClasspaths = new FileSystem.Classpath[size];
    		int i = 0;
    		for (FileSystem.Classpath classpath : fileSystemClasspaths) {
    			this.checkedClasspaths[i++] = classpath;
    		}
		}
	}

