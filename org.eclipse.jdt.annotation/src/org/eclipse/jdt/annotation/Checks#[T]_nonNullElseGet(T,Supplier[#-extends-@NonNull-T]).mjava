	/**
	 * Answer the given value as a non-null value.
	 * If the value was actually <code>null</code> an alternative is computed by
	 * invoking the given 'fallbackSupplier'.
	 *
	 * @param value an arbitrary value, maybe <code>null</code>.
	 * @param fallbackSupplier will compute the value to be returned when the 'value' is <code>null</code>.
	 *
	 * @return the original passed value, guaranteed not to be <code>null</code>,
	 * 	or a fallback value provided by the 'fallbackSupplier'.
	 */
	public static <T> @NonNull T nonNullElseGet(@Nullable T value, @NonNull Supplier<? extends @NonNull T> fallbackSupplier) {
		if (value == null)
			return fallbackSupplier.get();
		return value;
	}

