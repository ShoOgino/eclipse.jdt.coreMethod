private void setUpBigProject() throws CoreException {
	try {
		IWorkspace workspace = ResourcesPlugin.getWorkspace();
		IWorkspaceRoot workspaceRoot = workspace.getRoot();
		long start = System.currentTimeMillis();
		if (PRINT) System.out.println("Create project "+BIG_PROJECT_NAME+":");

		// setup projects with several source folders and several packages per source folder
		final String[] sourceFolders = new String[FOLDERS_COUNT];
		for (int i = 0; i < FOLDERS_COUNT; i++) {
			sourceFolders[i] = "src" + i;
		}
		if (PRINT) System.out.print("	- create "+FOLDERS_COUNT+" folders and "+PACKAGES_COUNT+" packages...");
		String path = workspaceRoot.getLocation().toString() + "/BigProject/src";
		for (int i = 0; i < FOLDERS_COUNT; i++) {
			if (PRINT && ((i+1)%10)==0) System.out.print("		+ folder src"+i+"...");
			long top = System.currentTimeMillis();
			for (int j = 0; j < PACKAGES_COUNT; j++) {
				new java.io.File(path + i + "/org/eclipse/jdt/core/tests" + i + "/performance" + j).mkdirs();
			}
			if (PRINT && ((i+1)%10)==0) System.out.println("("+(System.currentTimeMillis()-top)+"ms)");
		}
		if (PRINT) {
			System.out.println("("+(System.currentTimeMillis()-start)+"ms)");
			start = System.currentTimeMillis();
			System.out.print("	- add project to full source workspace...");
		}
		ENV.addProject(BIG_PROJECT_NAME);
		BIG_PROJECT = (JavaProject) createJavaProject(BIG_PROJECT_NAME, sourceFolders, "bin", "1.4");
		BIG_PROJECT.setRawClasspath(BIG_PROJECT.getRawClasspath(), null);
		if (PRINT) {
			System.out.println("("+(System.currentTimeMillis()-start)+"ms)");
			start = System.currentTimeMillis();
			System.out.print("	- Create compilation unit with secondary type...");
		}
		BIG_PROJECT_TYPE_PATH = new Path("/BigProject/src" + (FOLDERS_COUNT-1) + "/org/eclipse/jdt/core/tests" + (FOLDERS_COUNT-1) + "/performance" + (PACKAGES_COUNT-1) + "/TestBigProject.java");
		IFile file = workspaceRoot.getFile(BIG_PROJECT_TYPE_PATH);
		String content = "package org.eclipse.jdt.core.tests" + (FOLDERS_COUNT-1) + ".performance" + (PACKAGES_COUNT-1) + ";\n" +
			"public class TestBigProject {\n" +
			"	class Level1 {\n" +
			"		class Level2 {\n" +
			"			class Level3 {\n" +
			"				class Level4 {\n" +
			"					class Level5 {\n" +
			"						class Level6 {\n" +
			"							class Level7 {\n" +
			"								class Level8 {\n" +
			"									class Level9 {\n" +
			"										class Level10 {}\n" +
			"									}\n" +
			"								}\n" +
			"							}\n" +
			"						}\n" +
			"					}\n" +
			"				}\n" +
			"			}\n" +
			"		}\n" +
			"	}\n" +
			"}\n" +
			"class TestSecondary {}\n";
		file.create(new ByteArrayInputStream(content.getBytes()), true, null);
		WORKING_COPY = (ICompilationUnit)JavaCore.create(file);
		if (PRINT) {
			System.out.println("("+(System.currentTimeMillis()-start)+"ms)");
		}
	} finally {
		// do not delete project
	}
	
}

