	/*
	 * Create hashtable of none or all warning options.
	 */
	protected Hashtable warningOptions(boolean all) {

		// Values
		Hashtable optionsMap = new Hashtable(30);
		String generate = all ? CompilerOptions.GENERATE : CompilerOptions.DO_NOT_GENERATE;
		String warning = all ? CompilerOptions.WARNING : CompilerOptions.IGNORE;
		String enabled = all ? CompilerOptions.ENABLED : CompilerOptions.DISABLED;
		String preserve = all ? CompilerOptions.OPTIMIZE_OUT : CompilerOptions.PRESERVE;
		
		// Set options values
		optionsMap.put(CompilerOptions.OPTION_LocalVariableAttribute, generate); 
		optionsMap.put(CompilerOptions.OPTION_LineNumberAttribute, generate);
		optionsMap.put(CompilerOptions.OPTION_SourceFileAttribute, generate);
		optionsMap.put(CompilerOptions.OPTION_PreserveUnusedLocal, preserve);
		optionsMap.put(CompilerOptions.OPTION_DocCommentSupport, enabled); 
		optionsMap.put(CompilerOptions.OPTION_ReportMethodWithConstructorName, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportOverridingPackageDefaultMethod, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportDeprecation, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportDeprecationInDeprecatedCode, enabled); 
		optionsMap.put(CompilerOptions.OPTION_ReportDeprecationWhenOverridingDeprecatedMethod, enabled); 
		optionsMap.put(CompilerOptions.OPTION_ReportHiddenCatchBlock, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportUnusedLocal, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportUnusedParameter, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportUnusedImport, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportSyntheticAccessEmulation, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportNoEffectAssignment, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportNonExternalizedStringLiteral, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportNoImplicitStringConversion, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportNonStaticAccessToStatic, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportIndirectStaticAccess, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportIncompatibleNonInheritedInterfaceMethod, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportUnusedPrivateMember, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportLocalVariableHiding, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportFieldHiding, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportPossibleAccidentalBooleanAssignment, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportEmptyStatement, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportAssertIdentifier, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportUndocumentedEmptyBlock, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportUnnecessaryTypeCheck, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportUnnecessaryElse, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportInvalidJavadoc, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportInvalidJavadocTags, enabled); 
		optionsMap.put(CompilerOptions.OPTION_ReportMissingJavadocTags, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportMissingJavadocComments, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportFinallyBlockNotCompletingNormally, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportUnusedDeclaredThrownException, warning); 
		optionsMap.put(CompilerOptions.OPTION_ReportUnqualifiedFieldAccess, warning); 
		optionsMap.put(CompilerOptions.OPTION_TaskTags, all ? JavaCore.DEFAULT_TASK_TAGS : "");
		optionsMap.put(CompilerOptions.OPTION_TaskPriorities, all ? JavaCore.DEFAULT_TASK_PRIORITIES : "");
		optionsMap.put(CompilerOptions.OPTION_TaskCaseSensitive, enabled); 
		optionsMap.put(CompilerOptions.OPTION_ReportUnusedParameterWhenImplementingAbstract, enabled); 
		optionsMap.put(CompilerOptions.OPTION_ReportUnusedParameterWhenOverridingConcrete, enabled); 
		optionsMap.put(CompilerOptions.OPTION_ReportSpecialParameterHidingField, enabled); 
		optionsMap.put(CompilerOptions.OPTION_InlineJsr, enabled); 
		
		// Return created options map
		return optionsMap;
	}

