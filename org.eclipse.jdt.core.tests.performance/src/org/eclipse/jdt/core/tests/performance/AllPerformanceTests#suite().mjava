	/**
	 * Build test suite.
	 * All classes suite method are called and bundle to main test suite.
	 * 
	 * @see FullSourceWorkspaceSearchTests
	 * @see FullSourceWorkspaceBuildTests
	 * @see FullSourceWorkspaceCompletionTests <-- additional class inserted at position 2
	 * @see FullSourceWorkspaceASTTests
	 * @see FullSourceWorkspaceTypeHierarchyTests
	 * @see NameLookupTests2
	 */
	public static Test suite() {
		PerformanceTestSuite perfSuite = new PerformanceTestSuite(AllPerformanceTests.class.getName());
		Class[] testSuites = getAllTestClasses();

		// Reset subsets of tests (after having test classes loaded
		TestCase.TESTS_NAMES = null;
		TestCase.TESTS_PREFIX = null;
		TestCase.TESTS_NUMBERS = null;
		TestCase.TESTS_RANGE = null;

		// Get test suites subset
		int length = testSuites.length;
		if (ADD) {
			try {
				Class[] complete = getAdditionalTestClasses();
				int completeLength = complete.length;
				Class[] newSuites = new Class[length+completeLength];
				System.arraycopy(testSuites, 0, newSuites, 0, length);
				System.arraycopy(complete, 0, newSuites, length, completeLength);
				testSuites = newSuites;
				length = testSuites.length;
			} catch (NumberFormatException e1) {
				// do nothing
			}
		}

		// Get suite acronym
		String suitesAcronym = "";
		for (int i = 0; i < length; i++) {
			String name = FullSourceWorkspaceTests.suiteTypeShortName(testSuites[i]);
			if (name != null) {
				suitesAcronym += name.substring(0, 1);
			}
		}
		FullSourceWorkspaceTests.RUN_ID = suitesAcronym; //.toLowerCase();
		
		// Get tests of suites
		for (int i = 0; i < length; i++) {
			Class testClass = testSuites[i];
			// call the suite() method and add the resulting suite to the suite
			try {
				Method suiteMethod = testClass.getDeclaredMethod("suite", new Class[0]); //$NON-NLS-1$
				Test suite = (Test) suiteMethod.invoke(null, new Object[0]);
				perfSuite.addTest(suite);
			} catch (IllegalAccessException e) {
				e.printStackTrace();
			} catch (InvocationTargetException e) {
				e.getTargetException().printStackTrace();
			} catch (NoSuchMethodException e) {
				e.printStackTrace();
			}
		}
		return perfSuite;
	}

