void dimToString(int idx, StringBuffer buffer) {
	Dim dim = DIMENSIONS[idx];
	buffer.append(dim.getName());
	buffer.append(": n=");
	// long count = this.session.getCount(dim);
	buffer.append(this.count);
	buffer.append(", sum=");
	buffer.append(this.session.getSum(dim));
	buffer.append(", av=");
	buffer.append(this.session.getAverage(dim));
	buffer.append(", dev=");
	double stddev = this.session.getStddev(dim);
	buffer.append(DOUBLE_FORMAT.format(stddev));
	buffer.append(", err=");
	buffer.append(DOUBLE_FORMAT.format(stddev / Math.sqrt(this.count)));
	buffer.append(", interval=[");
	double[] interval = this.session.getConfidenceInterval(dim, StatisticsUtil.T90);
	buffer.append(DOUBLE_FORMAT.format(interval[0]));
	buffer.append('-');
	buffer.append(DOUBLE_FORMAT.format(interval[1]));
//	buffer.append("], smoothed: {n=");
//	smoothValues();
//	buffer.append(this.smoothedCounts[idx]);
//	buffer.append(", s=");
//	buffer.append(this.smoothedSums[idx]);
//	buffer.append(", a=");
//	buffer.append(this.smoothedAverages[idx]);
//	buffer.append("}, measures: {");
	buffer.append("], measures: {");
	for (int i = 0; i < this.count; i++) {
		if (i > 0)
			buffer.append(',');
		buffer.append(this.measures[idx][i]);
	}
	buffer.append("}, min=");
	buffer.append(this.min[idx]);
	buffer.append(", max=");
	buffer.append(this.max[idx]);
}

