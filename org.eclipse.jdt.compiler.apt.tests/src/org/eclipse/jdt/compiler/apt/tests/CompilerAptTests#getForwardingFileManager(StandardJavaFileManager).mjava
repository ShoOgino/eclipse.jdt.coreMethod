	/**
	 * Get a JavaFileManager that can spit out diagnostic info.
	 */
	private ForwardingJavaFileManager<StandardJavaFileManager> getForwardingFileManager(
			StandardJavaFileManager manager) {
		ForwardingJavaFileManager<StandardJavaFileManager> forwardingJavaFileManager = new ForwardingJavaFileManager<StandardJavaFileManager>(manager) {
			@Override
			public FileObject getFileForInput(Location location, String packageName, String relativeName)
					throws IOException {
				System.out.println("Create file for input : " + packageName + " " + relativeName + " in location " + location);
				return super.getFileForInput(location, packageName, relativeName);
			}
			@Override
			public JavaFileObject getJavaFileForInput(Location location, String className, Kind kind)
					throws IOException {
				System.out.println("Create java file for input : " + className + " in location " + location);
				return super.getJavaFileForInput(location, className, kind);
			}
			@Override
			public JavaFileObject getJavaFileForOutput(Location location,
					String className,
					Kind kind,
					FileObject sibling) throws IOException {
				
				if (null != sibling) {
					System.out.println("Create .class file for " + className + " in location " + location + " with sibling " + sibling.toUri());
				}
				else {
					System.out.println("Create .class file for " + className + " in location " + location);
				}
				JavaFileObject javaFileForOutput = super.getJavaFileForOutput(location, className, kind, sibling);
				System.out.println(javaFileForOutput.toUri());
				return javaFileForOutput;
			}
		};
		return forwardingJavaFileManager;
	}

