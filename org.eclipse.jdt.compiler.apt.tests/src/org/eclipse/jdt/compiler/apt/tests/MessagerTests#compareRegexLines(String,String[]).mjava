	/**
	 * Compare an actual multi-line string against an array of regular expressions
	 * representing an expected string. Each regular expression will be matched against
	 * one line of the actual string.
	 * @return the string "OK" if every line in the actual was matched by the corresponding regex
	 * in the expected, or an error string if not.
	 */
	private static String compareRegexLines(String actual, String[] expected) {
		String[] actualLines = actual.split("\n");
		if (actualLines.length != expected.length) {
			return "ERROR: expected " + expected.length + " lines but found " + actualLines.length;
		}
		int i = 0;
		for (String pattern : expected) {
			int iCR = actualLines[i].indexOf('\r');
			actualLines[i] = iCR > 0 ? actualLines[i].substring(0, iCR) : actualLines[i];
			int iNL = actualLines[i].indexOf('\n');
			actualLines[i] = iNL > 0 ? actualLines[i].substring(0, iNL) : actualLines[i];
			if (!Pattern.matches(pattern, actualLines[i++])) {
				--i;
				return "ERROR: mismatch at line " + i + ": actual line was [" + actualLines[i] + "]";
			}
		}
		return COMPARE_OK;
	}

