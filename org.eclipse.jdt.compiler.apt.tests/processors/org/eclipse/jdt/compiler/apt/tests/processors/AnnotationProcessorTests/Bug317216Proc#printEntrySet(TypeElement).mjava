	public void printEntrySet(TypeElement element) {
		ProcessingEnvironment pe = processingEnv;
		for (ExecutableElement method : ElementFilter.methodsIn(pe.getElementUtils().getAllMembers(element))) {
			if (!method.toString().contains("getFoo")) {
				continue;
			}
			TypeElement element2 = (TypeElement) pe.getTypeUtils().asElement(method.getReturnType());
			// element2 == java.util.Map
			for (ExecutableElement method2 : ElementFilter.methodsIn(pe.getElementUtils().getAllMembers(element2))) {
				if (method2.getSimpleName().toString().contains("entrySet")) {
					TypeMirror s = method2.getReturnType();
					DeclaredType st = (DeclaredType) s;

					TypeMirror e = st.getTypeArguments().get(0);
					DeclaredType de = (DeclaredType) e;
					TypeMirror[] eargs = new TypeMirror[2];
					eargs[0] = de.getTypeArguments().get(0);
					eargs[1] = de.getTypeArguments().get(1);
					TypeMirror e2 = pe.getTypeUtils().getDeclaredType((TypeElement) de.asElement(), eargs);
					// e2.toString breaks without fix
					e2.toString();
					TypeMirror[] sargs = new TypeMirror[1];
					sargs[0] = e2;

					s = pe.getTypeUtils().getDeclaredType((TypeElement) st.asElement(), sargs);
					s.toString();
				}
			}
		}
	}

