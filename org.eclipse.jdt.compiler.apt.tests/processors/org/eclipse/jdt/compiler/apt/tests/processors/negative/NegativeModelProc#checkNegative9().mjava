	/**
	 * Check the model of resources/targets.negative.pa.Negative9
	 * @return true if all tests passed
	 */
	public boolean checkNegative9() throws Exception {
		// check that all expected elements are here
		List<TypeElement> rootElements = new ArrayList<TypeElement>();
		String[] suffixes = new String[] {"a", "b"};
		for (int i = 0, l = suffixes.length; i < l; i++) {
			TypeElement element = _elementUtils.getTypeElement("targets.negative.pa.Negative9" + suffixes[i]);
			if (null == element) {
				reportError("Element Negative9" + suffixes[i] + " was not found");
				return false;
			}
			rootElements.add(element);
		}
		if (this.processingEnv.getSourceVersion() == SourceVersion.RELEASE_6) {
			if (!checkModel(rootElements, NEGATIVE_9_MODEL_VERSION6, "Negative9")) {
				return false;
			}
			return true;
		} else {
			if (!checkModel(rootElements, NEGATIVE_9_MODEL, "Negative9")) {
				return false;
			}
			// check that specific elements are not here
			suffixes = new String[] { "b" };
			boolean result = true;
			String errorMessage = "";
			for (int i = 0, l = suffixes.length; i < l; i++) {
				TypeElement element = _elementUtils.getTypeElement("targets.negative.pa.Negative9" + suffixes[i]);
				List<? extends TypeMirror> interfaces = element.getInterfaces();
				if (interfaces.isEmpty()) {
					errorMessage += "Element Negative9" + suffixes[i] + " has missing interfaces\n";
					result = false;
				}
			}
			if (!result) {
				reportError(errorMessage);
			}
			return result;
		}
	}

