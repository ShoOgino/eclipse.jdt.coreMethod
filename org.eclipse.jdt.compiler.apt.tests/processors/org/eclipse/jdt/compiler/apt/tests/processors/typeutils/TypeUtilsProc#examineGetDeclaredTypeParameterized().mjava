	/**
	 * Test getDeclaredType() for parameterized types
	 * @return true if tests passed
	 */
	private boolean examineGetDeclaredTypeParameterized() {
		TypeElement stringDecl = _elementUtils.getTypeElement(String.class.getName());
		TypeElement mapDecl = _elementUtils.getTypeElement("java.util.Map");
		DeclaredType stringType = _typeUtils.getDeclaredType(stringDecl);
		ArrayType stringArrayType = _typeUtils.getArrayType(stringType);

		DeclaredType decl = _typeUtils.getDeclaredType(mapDecl, stringType, stringArrayType);
		List<? extends TypeMirror> args = decl.getTypeArguments();
		if (args.size() != 2) {
			reportError("Map<String, String[]> should have two arguments but decl.getTypeArguments() returned " + args.size());
			return false;
		}
		if (!_typeUtils.isSameType(stringType, args.get(0))) {
			reportError("First arg of Map<String, String[]> was expected to be String, but was: " + args.get(0));
			return false;
		}
		if (!_typeUtils.isSameType(stringArrayType, args.get(1))) {
			reportError("Second arg of Map<String, String[]> was expected to be String[], but was: " + args.get(1));
			return false;
		}
		return true;
	}

