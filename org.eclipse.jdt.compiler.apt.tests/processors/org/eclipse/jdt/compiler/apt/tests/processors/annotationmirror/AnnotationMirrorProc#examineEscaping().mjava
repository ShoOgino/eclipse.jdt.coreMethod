	private boolean examineEscaping() {
		TypeElement annotatedElement = _elementUtils.getTypeElement("targets.model.pc.K");
		if (null == annotatedElement || annotatedElement.getKind() != ElementKind.CLASS) {
			reportError("examineEscaping: couldn't get K element");
			return false;
		}
		final String badValue = "examineEscaping: unexpected value for ";
		List<? extends AnnotationMirror> annoMirrors = annotatedElement.getAnnotationMirrors();
		AnnotationMirror annoString = annoMirrors.get(0);
		if (null == annoString || !annoString.toString().equals("@org.eclipse.jdt.compiler.apt.tests.annotations.TypedAnnos.AnnoString(value = \"I'm \\\"special\\\": \\t\\\\\\n\")")) {
			reportError(badValue + "AnnoString");
			return false;
		}
		AnnotationMirror annoChar = annoMirrors.get(1);
		if (null == annoChar || !annoChar.toString().equals("@org.eclipse.jdt.compiler.apt.tests.annotations.TypedAnnos.AnnoChar(value = '\\'')")) {
			reportError(badValue + "AnnoChar");
			return false;
		}
		return true;
	}

