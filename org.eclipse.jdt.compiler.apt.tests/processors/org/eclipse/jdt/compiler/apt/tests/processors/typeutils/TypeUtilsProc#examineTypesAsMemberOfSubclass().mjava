	/**
	 * Test {@link Types#asMemberOf()} where the elements are members of a superclass of the
	 * declared container. See <a href="http://bugs.eclipse.org/382590">Bug 382590</a>. Note that
	 * the asMemberOf() javadoc says the element is viewed "as a member of, or otherwise directly 
	 * contained by, a given type." It is not clear what "directly" means here, but javac 1.6
	 * supports this case, so we will too.
	 * @return true if tests passed
	 */
	private boolean examineTypesAsMemberOfSubclass() {
	    DeclaredType declaredContainer = (DeclaredType) _elementUtils.getTypeElement("targets.model.pc.AsMemberOfSub").asType();
	    TypeElement containerElement = _elementUtils.getTypeElement("targets.model.pc.AsMemberOf");
	    return innerTestAsMemberOf("examineTypesAsMemberOfSubclass", declaredContainer, containerElement);
	}

