	/**
	 * Check the model of targets.negative.pa.Negative5
	 * @return true if all tests passed
	 */
	private boolean checkNegative5() {
		class TestElement {
			String name;
			TypeElement element;
			TestElement(String n) {
				name = n;
				element = null;
			}
		}
		
		TestElement elements[] = new TestElement[] {
			new TestElement("targets.negative.pa.Negative5.C1"),
			new TestElement("targets.negative.pa.Negative5.C2"),
			new TestElement("targets.negative.pa.Negative5.I1"),
			new TestElement("targets.negative.pa.Negative5.I2"),
			new TestElement("targets.negative.pa.INegative5.C101"),
			new TestElement("targets.negative.pa.INegative5.C102"),
			new TestElement("targets.negative.pa.INegative5.I101"),
			new TestElement("targets.negative.pa.INegative5.I102")
		};
		for (TestElement testElement : elements) {
			testElement.element = _elementUtils.getTypeElement(testElement.name);
			if (null == testElement.element) {
				reportError("Element " + testElement.name + " was not found");
				return false;
			}
			
			// TODO: check superclass and superinterfaces against expected values
			TypeMirror superClass = testElement.element.getSuperclass();
			List<? extends TypeMirror> superInterfaces = testElement.element.getInterfaces();
			if (superClass == null) {
				reportError("Element " + testElement.name + " has null superclass");
				return false;
			}
		}
		
		return true;
	}

