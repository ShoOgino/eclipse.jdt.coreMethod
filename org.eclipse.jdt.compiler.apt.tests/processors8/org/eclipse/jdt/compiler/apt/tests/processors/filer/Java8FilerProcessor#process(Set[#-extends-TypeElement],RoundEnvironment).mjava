	/* (non-Javadoc)
	 * @see javax.annotation.processing.AbstractProcessor#process(java.util.Set, javax.annotation.processing.RoundEnvironment)
	 */
	@Override
	public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {
		String packageName = "targets.filer8";
		this.reportSuccessAlready = true;
		if (++roundNo == 1) {
			this.reportSuccessAlready = false;
			try {
				createPackageBinary();
			} catch (IOException e) {
				e.printStackTrace();
			}
			System.setProperty(this.getClass().getName(), "Processor did not fully do the job");
		} else if (roundNo == 2){
			PackageElement packageEl = null;
			for (Element e : roundEnv.getRootElements()) {
				if (e.getKind() == ElementKind.PACKAGE) {
					packageEl = (PackageElement) e;
				}
			}
			if (packageEl == null) {
				reportError("Package Element not found");
				return false;
			}
			if (!packageName.equals(packageEl.getQualifiedName().toString())) {
				reportError("Package Element \"targets.filer8\" not found");
				return false;
			}
			if (packageEl.isUnnamed()) {
				reportError("Package info not found");
				return false;
			}
			if (packageEl.getAnnotationMirrors().isEmpty()) {
				reportError("Annotatons not found in package-info");
				return false;
			}
		}
		if (this.reportSuccessAlready) {
			super.reportSuccess();
		}
		return false;
	}

