    /**
     * Get an absolute XPath expression that identifies a given node within its document
     *
     * @param node the node whose path is required
     * @return a path expression that can be used to retrieve the node
     */

    public static String getPath(NodeInfo node) {
        String pre;
        NodeInfo parent = node.getParent();
        // System.err.println("node = " + node + " parent = " + parent);
        // Handle parentless nodes of any kind
        if (parent==null) return "/";
        switch (node.getNodeKind()) {
            case Type.DOCUMENT:
                return "/";
            case Type.ELEMENT:
                pre = getPath(parent);
                return (pre.equals("/") ? "" : pre) +
                        "/" + node.getDisplayName() + "[" + getNumberSimple(node) + "]";
            case Type.ATTRIBUTE:
                return getPath(parent) + "/@" + node.getDisplayName();
            case Type.TEXT:
                pre = getPath(parent);
                return (pre.equals("/") ? "" : pre) +
                        "/text()[" + getNumberSimple(node) + "]";
            case Type.COMMENT:
                pre = getPath(parent);
                return (pre.equals("/") ? "" : pre) +
                    "/comment()[" + getNumberSimple(node) + "]";
            case Type.PROCESSING_INSTRUCTION:
                pre = getPath(parent);
                return (pre.equals("/") ? "" : pre) +
                    "/processing-instruction()[" + getNumberSimple(node) + "]";
            default:
                return "";
        }
    }

