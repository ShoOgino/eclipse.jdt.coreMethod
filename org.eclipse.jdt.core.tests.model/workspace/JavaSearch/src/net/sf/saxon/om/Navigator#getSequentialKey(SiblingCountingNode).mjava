    /**
    * Get a character string that uniquely identifies this node and that collates nodes
    * into document order
    * @return a string. The string is always interned so keys can be compared using "==".
    */

    public static String getSequentialKey(SiblingCountingNode node) {
        // TODO: this was designed so it could be used for sorting nodes into document
        // order, but is not currently used that way.
        StringBuffer key = new StringBuffer();
        while(!(node instanceof DocumentInfo)) {
            key.insert(0, alphaKey(node.getSiblingPosition()));
            node = (SiblingCountingNode)node.getParent();
        }
        key.insert(0, "w" + node.getDocumentNumber());
        return key.toString().intern();
    }

