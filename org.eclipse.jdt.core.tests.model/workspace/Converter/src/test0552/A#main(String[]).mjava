	public static void main(String[] args) {
		System.out.println(
		new StringBuffer().append(
		"path: /Compiler/lib/classes.zip|java/applet/Applet.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/AWTError.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/AWTEvent.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/AWTEventMulticaster.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/AWTException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/BorderLayout.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Button.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Canvas.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/CardLayout.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Checkbox.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/CheckboxGroup.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/CheckboxMenuItem.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Choice.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Color.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Component$NativeInLightFixer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Component.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Container.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Cursor.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Dialog.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Dimension.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Event.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/EventDispatchThread$EmptyEvent.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/EventDispatchThread.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/EventQueue$EventQueueMulticaster.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/EventQueue.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/EventQueueItem.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/EventQueueListener.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/FileDialog.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/FlowLayout.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/FocusManager.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Font.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/FontMetrics.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Frame.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Graphics.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/GridBagConstraints.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/GridBagLayout.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/GridBagLayoutInfo.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/GridLayout.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/IllegalComponentStateException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Image.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/ImageMediaEntry.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Insets.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Label.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/LayoutManager2.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/LightweightDispatcher$TrackEnterExitEvent.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/LightweightDispatcher.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/LightweightPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/List.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/MediaEntry.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/MediaTracker.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Menu.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/MenuBar.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/MenuComponent.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/MenuItem.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/MenuShortcut.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Panel.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Point.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Polygon.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/PopupMenu.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/PrintJob.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Rectangle.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/ScrollPane$PeerFixer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/ScrollPane.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/ScrollPaneAdjustable.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Scrollbar.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/SystemColor.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/TextArea.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/TextComponent.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/TextField.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Toolkit.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/Window.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/datatransfer/Clipboard.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/datatransfer/DataFlavor.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/datatransfer/StringSelection.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/datatransfer/UnsupportedFlavorException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/ActionEvent.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/ActionListener.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/AdjustmentEvent.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/AdjustmentListener.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/ComponentAdapter.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/ComponentEvent.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/ComponentListener.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/ContainerAdapter.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/ContainerEvent.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/ContainerListener.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/FocusAdapter.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/FocusEvent.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/FocusListener.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/InputEvent.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/ItemEvent.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/ItemListener.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/KeyAdapter.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/KeyEvent.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/KeyListener.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/MouseAdapter.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/MouseEvent.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/MouseListener.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/MouseMotionAdapter.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/MouseMotionListener.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/PaintEvent.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/TextEvent.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/TextListener.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/WindowAdapter.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/WindowEvent.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/event/WindowListener.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/image/AreaAveragingScaleFilter.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/image/ColorModel.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/image/CropImageFilter.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/image/DirectColorModel.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/image/FilteredImageSource.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/image/ImageFilter.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/image/IndexColorModel.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/image/MemoryImageSource.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/image/PixelGrabber.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/image/RGBImageFilter.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/image/ReplicateScaleFilter.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/ButtonPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/CanvasPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/CheckboxMenuItemPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/CheckboxPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/ChoicePeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/ContainerPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/DialogPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/FileDialogPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/FramePeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/LabelPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/LightweightPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/ListPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/MenuBarPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/MenuItemPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/MenuPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/PanelPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/PopupMenuPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/ScrollPanePeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/ScrollbarPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/TextAreaPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/TextComponentPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/TextFieldPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/awt/peer/WindowPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/BeanDescriptor.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/Beans.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/BeansAppletContext.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/BeansAppletStub.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/EventSetDescriptor.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/FeatureDescriptor.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/GenericBeanInfo.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/IndexedPropertyDescriptor.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/IntrospectionException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/Introspector.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/MethodDescriptor.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/ObjectInputStreamWithLoader.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/ParameterDescriptor.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/PropertyChangeEvent.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/PropertyChangeListener.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/PropertyChangeSupport.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/PropertyDescriptor.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/PropertyEditorManager.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/PropertyEditorSupport.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/PropertyVetoException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/SimpleBeanInfo.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/VetoableChangeListener.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/beans/VetoableChangeSupport.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/BufferedInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/BufferedOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/BufferedReader.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/BufferedWriter.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/ByteArrayInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/ByteArrayOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/CharArrayReader.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/CharArrayWriter.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/CharConversionException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/DataInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/DataOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/EOFException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/Externalizable.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/File.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/FileDescriptor.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/FileInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/FileNotFoundException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/FileOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/FileReader.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/FileWriter.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/FilterInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/FilterOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/FilterReader.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/FilterWriter.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/IOException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/InputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/InputStreamReader.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/InterruptedIOException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/InvalidClassException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/InvalidObjectException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/LineNumberInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/LineNumberReader.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/NotActiveException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/NotSerializableException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/ObjectInput.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/ObjectInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/ObjectOutput.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/ObjectOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/ObjectStreamClass.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/ObjectStreamClassEntry.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/ObjectStreamException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/ObjectStreamField.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/OptionalDataException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/OutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/OutputStreamWriter.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/PipedInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/PipedOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/PipedReader.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/PipedWriter.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/PrintStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/PrintWriter.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/PushbackInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/PushbackReader.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/RandomAccessFile.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/Reader.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/SequenceInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/StreamCorruptedException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/StreamTokenizer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/StringBufferInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/StringReader.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/StringWriter.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/SyncFailedException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/UTFDataFormatException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/UnsupportedEncodingException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/ValidationCallback.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/WriteAbortedException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/io/Writer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/AbstractMethodError.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/ArithmeticException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/ArrayIndexOutOfBoundsException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/ArrayStoreException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Boolean.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Byte.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Character.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Class.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/ClassCastException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/ClassCircularityError.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/ClassFormatError.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/ClassLoader.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/ClassNotFoundException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/CloneNotSupportedException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Compiler.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Double.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Error.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Exception.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/ExceptionInInitializerError.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/FDBigInt.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Float.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/FloatingDecimal.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/IllegalAccessError.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/IllegalAccessException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/IllegalArgumentException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/IllegalMonitorStateException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/IllegalStateException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/IllegalThreadStateException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/IncompatibleClassChangeError.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/IndexOutOfBoundsException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/InstantiationError.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/InstantiationException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Integer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/InternalError.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/InterruptedException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/LinkageError.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Long.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Math.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/NegativeArraySizeException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/NoClassDefFoundError.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/NoSuchFieldError.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/NoSuchFieldException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/NoSuchMethodError.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/NoSuchMethodException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/NullPointerException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/NullSecurityManager.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Number.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/NumberFormatException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Object.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/OutOfMemoryError.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Process.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Runtime.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/RuntimeException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/SecurityException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/SecurityManager.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Short.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/StackOverflowError.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/String.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/StringBuffer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/StringIndexOutOfBoundsException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/System.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Thread.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/ThreadDeath.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/ThreadGroup.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Throwable.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/UnknownError.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/UnsatisfiedLinkError.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/VerifyError.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/VirtualMachineError.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Void.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/Win32Process.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/reflect/Array.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/reflect/Constructor.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/reflect/Field.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/reflect/InvocationTargetException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/reflect/Method.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/lang/reflect/Modifier.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/math/BigDecimal.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/math/BigInteger.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/BindException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/ConnectException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/ContentHandler.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/DatagramPacket.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/DatagramSocket.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/DatagramSocketImpl.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/HttpURLConnection.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/InetAddress.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/InetAddressImpl.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/MalformedURLException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/MulticastSocket.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/NoRouteToHostException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/PlainDatagramSocketImpl.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/PlainSocketImpl.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/ProtocolException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/ServerSocket.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/Socket.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/SocketException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/SocketImpl.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/SocketInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/SocketOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/URL.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/URLConnection.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/URLEncoder.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/URLStreamHandler.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/UnknownContentHandler.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/UnknownHostException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/net/UnknownServiceException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/AccessException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/AlreadyBoundException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/ConnectException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/ConnectIOException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/MarshalException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/Naming.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/NoSuchObjectException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/NotBoundException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/RMISecurityException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/RMISecurityManager.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/RemoteException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/ServerError.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/ServerException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/ServerRuntimeException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/StubNotFoundException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/UnexpectedException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/UnknownHostException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/UnmarshalException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/dgc/DGC.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/dgc/Lease.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/dgc/VMID.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/registry/LocateRegistry.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/registry/Registry.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/server/ExportException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/server/LogStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/server/ObjID.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/server/Operation.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/server/RMIClassLoader.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/server/RMISocketFactory.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/server/RemoteObject.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/server/RemoteRef.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/server/RemoteServer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/server/RemoteStub.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/server/ServerCloneException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/server/ServerNotActiveException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/server/ServerRef.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/server/SkeletonMismatchException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/server/SkeletonNotFoundException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/server/SocketSecurityException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/server/UID.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/rmi/server/UnicastRemoteObject.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/DigestException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/DigestInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/DigestOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/Identity.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/IdentityScope.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/InvalidKeyException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/InvalidParameterException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/Key.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/KeyException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/KeyManagementException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/KeyPair.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/KeyPairGenerator.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/MessageDigest.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/NoSuchAlgorithmException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/NoSuchProviderException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/PrivateKey.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/Provider.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/ProviderException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/PublicKey.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/SecureRandom.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/Security.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/SeedGenerator$BogusThread.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/SeedGenerator.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/Signature.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/SignatureException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/Signer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/acl/Acl.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/acl/AclEntry.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/acl/AclNotFoundException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/acl/Group.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/acl/LastOwnerException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/acl/NotOwnerException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/interfaces/DSAPrivateKey.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/security/interfaces/DSAPublicKey.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/sql/CallableStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/sql/DataTruncation.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/sql/Date.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/sql/DriverInfo.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/sql/DriverManager.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/sql/DriverPropertyInfo.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/sql/PreparedStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/sql/SQLException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/sql/SQLWarning.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/sql/Time.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/sql/Timestamp.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/sql/Types.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/BreakIterator.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/CharacterBreakData.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/CharacterIterator.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/ChoiceFormat.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/CollationElementIterator.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/CollationKey.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/CollationRules.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/Collator.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/CompactByteArray.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/CompactCharArray.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/CompactIntArray.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/CompactShortArray.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/CompactStringArray.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/DateFormat.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/DateFormatSymbols.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/DecimalFormat.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/DecimalFormatSymbols.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/DecompositionIterator.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/DigitList.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/EntryPair.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/FieldPosition.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/Format.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/LineBreakData.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/MergeCollation.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/MessageFormat.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/NumberFormat.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/ParseException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/ParsePosition.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/PatternEntry.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/RuleBasedCollator.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/SentenceBreakData.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/SimpleDateFormat.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/SimpleTextBoundary.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/SpecialMapping.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/StringCharacterIterator.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/TextBoundaryData.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/UnicodeClassMapping.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/Utility.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/WordBreakData.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/WordBreakTable.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_ar.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_be.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_bg.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_ca.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_cs.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_da.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_de.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_de_AT.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_de_CH.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_el.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_en.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_en_CA.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_en_GB.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_en_IE.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_es.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_et.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_fi.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_fr.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_fr_BE.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_fr_CA.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_fr_CH.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_hr.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_hu.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_is.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_it.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_it_CH.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_iw.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_ja.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_ko.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_lt.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_lv.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_mk.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_nl.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_nl_BE.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_no.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_no_NO_NY.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_pl.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_pt.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_ro.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_ru.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_sh.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_sk.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_sl.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_sq.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_sr.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_sv.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_th.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_tr.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_uk.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_zh.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/DateFormatZoneData_zh_TW.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleData.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_ar.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_be.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_bg.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_ca.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_cs.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_da.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_de.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_de_AT.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_de_AT_EURO.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_de_CH.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_de_DE_EURO.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_de_LU.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_de_LU_EURO.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_el.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_en.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_en_AU.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_en_CA.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_en_GB.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_en_IE.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_en_IE_EURO.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_en_NZ.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_en_ZA.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_es.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_es_AR.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_es_BO.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_es_CL.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_es_CO.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_es_CR.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_es_DO.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_es_EC.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_es_ES_EURO.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_es_GT.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_es_HN.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_es_MX.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_es_NI.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_es_PA.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_es_PE.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_es_PR.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_es_PY.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_es_SV.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_es_UY.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_es_VE.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_et.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_fi.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_fi_FI_EURO.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_fr.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_fr_BE.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_fr_BE_EURO.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_fr_CA.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_fr_CH.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_fr_FR_EURO.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_fr_LU.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_fr_LU_EURO.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_hr.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_hu.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_is.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_it.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_it_CH.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_it_IT_EURO.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_iw.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_ja.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_ko.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_lt.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_lv.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_mk.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_nl.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_nl_BE.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_nl_BE_EURO.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_nl_NL_EURO.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_no.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_no_NO_NY.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_pl.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_pt.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_pt_BR.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_pt_PT_EURO.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_ro.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_ru.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_sh.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_sk.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_sl.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_sq.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_sr.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_sv.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_th.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_tr.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_uk.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_zh.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/text/resources/LocaleElements_zh_TW.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/BitSet.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/Calendar.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/Date.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/Dictionary.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/EmptyStackException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/EventObject.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/GregorianCalendar.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/Hashtable.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/HashtableEntry.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/HashtableEnumerator.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/ListResourceBundle$1.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/ListResourceBundle.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/Locale.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/MissingResourceException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/NoSuchElementException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/Observable.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/Properties.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/PropertyResourceBundle$1.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/PropertyResourceBundle.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/Random.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/ResourceBundle.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/SimpleTimeZone.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/Stack.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/StringTokenizer.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/SystemClassLoader.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/TimeZone.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/TimeZoneData.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/TooManyListenersException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/Vector.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/VectorEnumerator.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/zip/Adler32.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/zip/CRC32.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/zip/CheckedInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/zip/CheckedOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/zip/DataFormatException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/zip/Deflater.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/zip/DeflaterOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/zip/GZIPInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/zip/GZIPOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/zip/Inflater.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/zip/InflaterInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/zip/ZipEntry.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/zip/ZipException.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/zip/ZipFile.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/zip/ZipFileInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/zip/ZipInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|java/util/zip/ZipOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletAudioClip.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletClassEntry.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletClassLoader.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletCopyright.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletEvent.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletEventMulticaster.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletIOException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletIllegalArgumentException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletImageRef.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletListener.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletMessageHandler.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletObjectInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletPanel.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletProps.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletResourceLoader.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletSecurity.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletSecurityException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletThreadGroup.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletViewer$1$AppletEventListener.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletViewer$1.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletViewer$UserActionListener.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletViewer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/AppletViewerPanel.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/HashValues.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/StdAppletViewerFactory.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/TextFrame$1$ActionEventListener.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/TextFrame$1.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/TextFrame.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/applet/resources/MsgAppletViewer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/audio/AudioData.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/audio/AudioDataStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/audio/AudioDevice.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/audio/AudioPlayer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/audio/AudioStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/audio/AudioStreamSequence.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/audio/AudioTranslatorStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/audio/ContinuousAudioDataStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/audio/InvalidAudioFormatException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/audio/NativeAudioStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/AWTFinalizer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/CharToByteSymbol.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/CharsetString.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/EmbeddedFrame.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/FocusingTextField.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/FontDescriptor.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/HorizBagLayout.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/OrientableFlowLayout.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/PlatformFont.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/ScreenUpdater.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/ScreenUpdaterEntry.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/SunToolkit.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/VariableGridLayout.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/VerticalBagLayout.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/Win32DrawingSurface.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/im/InputContext.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/im/InputMethod.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/im/InputMethodAdapter.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/im/InputMethodContext.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/image/ByteArrayImageSource.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/image/FileImageSource.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/image/GifFrame.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/image/GifImageDecoder.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/image/Image.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/image/ImageConsumerQueue.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/image/ImageDecoder.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/image/ImageFetcher.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/image/ImageFormatException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/image/ImageRepresentation.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/image/ImageWatched.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/image/InputStreamImageSource.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/image/JPEGImageDecoder.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/image/OffScreenImageSource.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/image/PixelStore.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/image/PixelStore32.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/image/PixelStore8.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/image/URLImageSource.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/image/XbmImageDecoder.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/CharToByteWingDings.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WButtonPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WCanvasPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WCheckboxMenuItemPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WCheckboxPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WChoicePeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WClipboard.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WColor.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WComponentPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WDefaultFontCharset.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WDialogPeer$ModalLock.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WDialogPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WDrawingSurfaceInfo.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WEmbeddedFrame.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WEmbeddedFramePeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WEmbeddedGraphics.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WFileDialogPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WFontMetrics.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WFontPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WFramePeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WGraphics.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WImage.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WLabelPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WListPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WMenuBarPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WMenuItemPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WMenuPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WObjectPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WOffScreenImage.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WPanelPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WPopupMenuPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WPrintGraphics.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WPrintJob.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WScrollPanePeer$Adjustor.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WScrollPanePeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WScrollbarPeer$Adjustor.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WScrollbarPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WTextAreaPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WTextComponentPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WTextFieldPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WToolkit.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WWindowPeer$FocusOnActivate.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/awt/windows/WWindowPeer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/beans/editors/BoolEditor.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/beans/editors/ByteEditor.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/beans/editors/ColorEditor.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/beans/editors/DoubleEditor.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/beans/editors/FloatEditor.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/beans/editors/FontEditor.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/beans/editors/IntEditor.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/beans/editors/LongEditor.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/beans/editors/NumberEditor.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/beans/editors/ShortEditor.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/beans/editors/StringEditor.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/beans/infos/ComponentBeanInfo.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharASCII.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharBig5.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharConverter.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp037.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1006.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1025.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1026.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1046.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1097.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1098.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1112.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1122.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1123.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1124.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1140.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1141.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1142.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1143.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1144.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1145.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1146.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1147.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1148.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1149.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1250.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1251.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1252.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1253.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1254.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1255.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1256.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1257.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1258.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1381.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp1383.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp273.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp277.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp278.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp280.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp284.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp285.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp297.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp33722.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp420.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp424.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp437.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp500.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp737.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp775.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp838.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp850.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp852.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp855.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp856.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp857.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp858.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp860.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp861.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp862.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp863.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp864.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp865.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp866.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp868.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp869.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp870.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp871.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp874.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp875.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp918.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp921.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp922.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp923.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp930.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp933.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp935.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp937.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp939.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp942.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp942C.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp943.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp943C.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp948.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp949.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp949C.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp950.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp964.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharCp970.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharDBCS_ASCII.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharDBCS_EBCDIC.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharDefault.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharDoubleByte.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharEUC.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharEUC_CN.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharEUC_JP.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharEUC_KR.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharEUC_TW.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharGBK.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharISO2022.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharISO2022CN.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharISO2022JP.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharISO2022KR.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharISO8859_1.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharISO8859_15_FDIS.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharISO8859_2.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharISO8859_3.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharISO8859_4.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharISO8859_5.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharISO8859_6.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharISO8859_7.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharISO8859_8.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharISO8859_9.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharJIS0201.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharJIS0208.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharJIS0212.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharJISAutoDetect.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharJohab.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharKOI8_R.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharMS874.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharMS936.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharMS950.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharMacArabic.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharMacCentralEurope.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharMacCroatian.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharMacCyrillic.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharMacDingbat.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharMacGreek.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharMacHebrew.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharMacIceland.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharMacRoman.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharMacRomania.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharMacSymbol.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharMacThai.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharMacTurkish.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharMacUkraine.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharSJIS.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharSingleByte.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharTIS620.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharUTF8.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharUnicode.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharUnicodeBig.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ByteToCharUnicodeLittle.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteASCII.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteBig5.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteConverter.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp037.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1006.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1025.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1026.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1046.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1097.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1098.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1112.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1122.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1123.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1124.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1140.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1141.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1142.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1143.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1144.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1145.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1146.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1147.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1148.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1149.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1250.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1251.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1252.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1253.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1254.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1255.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1256.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1257.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1258.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1381.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp1383.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp273.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp277.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp278.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp280.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp284.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp285.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp297.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp33722.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp420.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp424.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp437.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp500.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp737.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp775.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp838.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp850.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp852.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp855.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp856.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp857.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp858.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp860.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp861.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp862.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp863.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp864.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp865.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp866.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp868.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp869.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp870.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp871.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp874.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp875.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp918.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp921.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp922.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp923.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp930.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp933.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp935.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp937.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp939.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp942.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp942C.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp943.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp943C.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp948.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp949.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp949C.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp950.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp964.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteCp970.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteDBCS_ASCII.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteDBCS_EBCDIC.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteDefault.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteDoubleByte.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteEUC.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteEUC_CN.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteEUC_JP.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteEUC_KR.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteEUC_TW.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteGBK.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteISO2022.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteISO2022CN_CNS.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteISO2022CN_GB.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteISO2022JP.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteISO2022KR.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteISO8859_1.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteISO8859_15_FDIS.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteISO8859_2.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteISO8859_3.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteISO8859_4.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteISO8859_5.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteISO8859_6.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteISO8859_7.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteISO8859_8.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteISO8859_9.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteJIS0201.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteJIS0208.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteJIS0212.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteJohab.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteKOI8_R.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteMS874.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteMS936.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteMS950.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteMacArabic.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteMacCentralEurope.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteMacCroatian.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteMacCyrillic.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteMacDingbat.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteMacGreek.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteMacHebrew.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteMacIceland.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteMacRoman.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteMacRomania.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteMacSymbol.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteMacThai.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteMacTurkish.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteMacUkraine.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteSJIS.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteSingleByte.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteTIS620.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteUTF8.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteUnicode.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteUnicodeBig.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteUnicodeBigUnmarked.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteUnicodeLittle.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharToByteUnicodeLittleUnmarked.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/CharacterEncoding.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/ConversionBufferFullException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/MalformedInputException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/io/UnknownCharacterException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbc.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbcBoundCol.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbcBoundParam.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbcCallableStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbcConnection.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbcConnectionInterface.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbcDatabaseMetaData.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbcDriver.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbcDriverAttribute.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbcDriverInterface.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbcInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbcLimits.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbcObject.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbcPreparedStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbcPseudoCol.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbcResultSet.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbcResultSetInterface.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbcResultSetMetaData.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbcSQLWarning.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbcStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/JdbcOdbcTypeInfo.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/jdbc/odbc/OdbcDef.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/BASE64Decoder.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/BASE64Encoder.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/CEFormatException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/CEStreamExhausted.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/CRC16.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/Cache.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/CacheEntry.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/CacheEnumerator.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/CharacterDecoder.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/CharacterEncoder.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/ConditionLock.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/FIFOQueueEnumerator.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/HexDumpEncoder.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/LIFOQueueEnumerator.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/Lock.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/MessageUtils.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/Queue.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/QueueElement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/REException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/Ref.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/Regexp.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/RegexpNode.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/RegexpPool.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/Request.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/RequestProcessor.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/SelfTest.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/Sort.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/Timer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/TimerThread.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/TimerTickThread.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/UCDecoder.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/UCEncoder.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/UUDecoder.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/UUEncoder.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/VM.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/misc/VMNotifierThread.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/NetworkClient.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/NetworkServer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/ProgressData.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/ProgressEntry.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/TelnetInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/TelnetOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/TelnetProtocolException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/TransferProtocolClient.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/URLCanonicalizer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/ftp/FtpClient.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/ftp/FtpInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/ftp/FtpLoginException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/ftp/FtpProtocolException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/ftp/IftpClient.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/nntp/NewsgroupInfo.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/nntp/NntpClient.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/nntp/NntpInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/nntp/NntpProtocolException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/nntp/UnknownNewsgroupException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/smtp/SmtpClient.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/smtp/SmtpPrintStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/smtp/SmtpProtocolException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/ApplicationLaunchException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/HeaderParser.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/MessageHeader.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/MeteredStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/MimeEntry.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/MimeLauncher.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/MimeTable.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/URLConnection.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/content/image/gif.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/content/image/jpeg.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/content/image/x_xbitmap.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/content/image/x_xpixmap.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/content/text/Generic.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/content/text/PlainTextInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/content/text/plain.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/http/ClientVector.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/http/HttpClient.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/http/KeepAliveCache.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/http/KeepAliveKey.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/http/KeepAliveStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/appletresource/AppletResourceConnection.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/appletresource/Handler.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/doc/DocURLConnection.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/doc/Handler.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/file/FileURLConnection.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/file/Handler.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/file/StringCompare.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/ftp/FtpDirectoryThread.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/ftp/FtpURLConnection.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/ftp/Handler.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/gopher/GopherClient.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/gopher/GopherInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/gopher/GopherURLConnection.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/gopher/Handler.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/http/AuthenticationInfo.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/http/BasicAuthentication.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/http/EmptyInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/http/Handler.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/http/HttpURLConnection.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/mailto/Handler.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/mailto/MailToURLConnection.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/netdoc/Handler.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/systemresource/Handler.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/systemresource/ParseSystemURL.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/systemresource/SystemResourceConnection.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/systemresource/SystemResourceManager.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/verbatim/Handler.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/net/www/protocol/verbatim/VerbatimConnection.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/registry/RegistryHandler.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/registry/RegistryImpl.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/registry/RegistryImpl_Skel.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/registry/RegistryImpl_Stub.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/rmic/BatchEnvironment.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/rmic/Constants.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/rmic/Generator.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/rmic/IndentingWriter.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/rmic/Main.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/rmic/Names.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/rmic/RemoteClass$Method.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/rmic/RemoteClass.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/server/LoaderHandler.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/server/MarshalInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/server/MarshalOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/server/RMIClassLoader.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/server/RemoteProxy.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/server/UnicastRef.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/server/UnicastServerRef.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/Channel.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/ConnectionInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/ConnectionOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/DGCAckHandler.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/DGCClient$CleanRequest.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/DGCClient$CountTableEntry.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/DGCClient$LeaseRenewer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/DGCClient$LeaseTableEntry.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/DGCClient.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/DGCImpl$LeaseChecker.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/DGCImpl$LeaseInfo.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/DGCImpl.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/DGCImpl_Skel.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/DGCImpl_Stub.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/IncomingRefTableEntry.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/KeepAlive.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/LiveRef.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/LocateDGC.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/ObjectTable.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/RMIThread.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/Reaper.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/SequenceEntry.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/StreamRemoteCall.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/Target.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/Transport.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/TransportConstants.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/UnreferencedObj.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/Utils.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/WeakRef.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/proxy/AsyncConnector.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/proxy/CGIClientException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/proxy/CGIForwardCommand.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/proxy/CGIGethostnameCommand.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/proxy/CGIHandler.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/proxy/CGIPingCommand.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/proxy/CGIServerException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/proxy/CGITryHostnameCommand.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/proxy/HttpAwareServerSocket.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/proxy/HttpInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/proxy/HttpOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/proxy/HttpReceiveSocket.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/proxy/HttpSendInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/proxy/HttpSendOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/proxy/HttpSendSocket.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/proxy/RMIDirectSocketFactory.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/proxy/RMIHttpToCGISocketFactory.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/proxy/RMIHttpToPortSocketFactory.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/proxy/RMIMasterSocketFactory.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/proxy/WrappedSocket.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/tcp/ConnectionAcceptor.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/tcp/ConnectionMultiplexer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/tcp/InEntry.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/tcp/MultiplexConnectionInfo.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/tcp/MultiplexInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/tcp/MultiplexOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/tcp/TCPChannel$Reaper.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/tcp/TCPChannel.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/tcp/TCPConnection.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/tcp/TCPEndpoint$FQDN.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/tcp/TCPEndpoint.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/rmi/transport/tcp/TCPTransport.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/acl/AclEntryImpl.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/acl/AclEnumerator.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/acl/AclImpl.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/acl/AllPermissionsImpl.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/acl/GroupImpl.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/acl/OwnerImpl.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/acl/PermissionImpl.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/acl/PrincipalImpl.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/acl/WorldGroupImpl.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/pkcs/ContentInfo.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/pkcs/EncodingException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/pkcs/PKCS10.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/pkcs/PKCS7.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/pkcs/PKCS8Key.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/pkcs/ParsingException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/pkcs/SignerInfo.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/provider/DSA.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/provider/DSAKeyPairGenerator.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/provider/DSAPrivateKey.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/provider/DSAPublicKey.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/provider/IdentityDatabase.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/provider/MD5.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/provider/Main.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/provider/SHA.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/provider/Sun.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/provider/SystemIdentity.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/provider/SystemSigner.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/util/BigInt.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/util/DerInputBuffer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/util/DerInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/util/DerOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/util/DerValue.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/util/ObjectIdentifier.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/x509/AVA.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/x509/AlgIdDSA.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/x509/AlgorithmId.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/x509/CertAndKeyGen.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/x509/CertException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/x509/CertParseError.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/x509/RDN.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/x509/X500Name.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/x509/X500Signer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/x509/X509Cert.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/security/x509/X509Key.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/asm/ArrayData.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/asm/Assembler.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/asm/CatchData.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/asm/ClassConstantData.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/asm/ConstantPool.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/asm/ConstantPoolData.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/asm/Cover.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/asm/FieldConstantData.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/asm/Instruction.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/asm/Label.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/asm/LocalVariable.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/asm/LocalVariableTable.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/asm/NameAndTypeConstantData.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/asm/NameAndTypeData.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/asm/NumberConstantData.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/asm/StringConstantData.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/asm/StringExpressionConstantData.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/asm/SwitchData.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/asm/SwitchDataEnumeration.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/asm/TryData.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/Agent.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/AgentConstants.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/AgentIn.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/AgentOutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/BreakpointHandler.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/BreakpointQueue.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/BreakpointSet.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/CommandThread.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/EmptyApp.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/Field.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/InvalidPCException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/LineNumber.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/LocalVariable.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/MainThread.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/NoSessionException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/NoSuchLineNumberException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteAgent$1.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteAgent.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteArray.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteBoolean.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteByte.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteChar.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteClass.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteDebugger.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteDouble.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteField.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteFloat.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteInt.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteLong.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteObject.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteShort.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteStackFrame.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteStackVariable.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteString.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteThread.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteThreadGroup.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/RemoteValue.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/ResponseStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/StackFrame.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/StepHandler.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/StepRequest.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/debug/ThreadList.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/jar/CRC32OutputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/jar/JarEntryVerifier.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/jar/JarException.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/jar/JarImageSource.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/jar/JarVerifierStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/jar/Main.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/jar/Manifest.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/jar/SignatureFile.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/AmbiguousClass.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/AmbiguousField.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/ArrayType.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/BinaryAttribute.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/BinaryClass.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/BinaryCode.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/BinaryConstantPool.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/BinaryExceptionHandler.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/BinaryField.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/ClassDeclaration.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/ClassDefinition.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/ClassFile.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/ClassNotFound.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/ClassPath.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/ClassPathEntry.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/ClassType.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/CompilerError.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/Constants.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/Environment.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/FieldDefinition.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/Identifier.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/IdentifierToken.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/ImportEnvironment.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/Imports.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/MethodType.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/Package.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/Parser.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/Scanner.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/ScannerInputStream.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/SyntaxError.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/java/Type.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/javac/BatchEnvironment.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/javac/BatchParser.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/javac/CompilerField.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/javac/ErrorMessage.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/javac/Main.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/javac/SourceClass.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/javac/SourceField.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/javadoc/DocumentationGenerator.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/javadoc/HTMLDocumentationGenerator.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/javadoc/Main.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/javap/JavaP.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/javap/JavaPBinaryCode.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/javap/JavaPClassPrinter$Codes.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/javap/JavaPClassPrinter.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/javap/JavaPEnvironment.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/native2ascii/Main.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/serialver/SerialVer.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/serialver/SerialVerFrame.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/AddExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/AndExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/ArrayAccessExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/ArrayExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/AssignAddExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/AssignBitAndExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/AssignBitOrExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/AssignBitXorExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/AssignDivideExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/AssignExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/AssignMultiplyExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/AssignOpExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/AssignRemainderExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/AssignShiftLeftExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/AssignShiftRightExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/AssignSubtractExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/AssignUnsignedShiftRightExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/BinaryArithmeticExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/BinaryAssignExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/BinaryBitExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/BinaryCompareExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/BinaryEqualityExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/BinaryExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/BinaryLogicalExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/BinaryShiftExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/BitAndExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/BitNotExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/BitOrExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/BitXorExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/BooleanExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/BreakStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/ByteExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/CaseStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/CastExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/CatchStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/CharExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/CheckContext.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/CodeContext.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/CommaExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/CompoundStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/ConditionVars.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/ConditionalExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/ConstantExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/Context.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/ContextEnvironment.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/ContinueStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/ConvertExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/DeclarationStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/DivRemExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/DivideExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/DoStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/DoubleExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/EqualExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/ExprExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/Expression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/ExpressionStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/FieldExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/FieldUpdater.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/FinallyStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/FloatExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/ForStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/GreaterExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/GreaterOrEqualExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/IdentifierExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/IfStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/IncDecExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/InlineMethodExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/InlineNewInstanceExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/InlineReturnStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/InstanceOfExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/IntExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/IntegerExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/LengthExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/LessExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/LessOrEqualExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/LocalField.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/LongExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/MethodExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/MultiplyExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/NaryExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/NegativeExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/NewArrayExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/NewInstanceExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/Node.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/NotEqualExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/NotExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/NullExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/OrExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/PositiveExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/PostDecExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/PostIncExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/PreDecExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/PreIncExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/RemainderExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/ReturnStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/ShiftLeftExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/ShiftRightExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/ShortExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/Statement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/StringExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/SubtractExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/SuperExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/SwitchStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/SynchronizedStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/ThisExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/ThrowStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/TryStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/TypeExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/UnaryExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/UnsignedShiftRightExpression.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/UplevelReference.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/VarDeclarationStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/Vset.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/tree/WhileStatement.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/ttydebug/TTY.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/util/ConstantPrinter.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/util/LoadEnvironment.class\n").append( 
		"path: /Compiler/lib/classes.zip|sun/tools/util/ModifierFilter.class\n").append( 
		"path: /Compiler/lib/classes.zip|sunw/io/Serializable.class\n").append( 
		"path: /Compiler/lib/classes.zip|sunw/util/EventListener.class\n").append( 
		"path: /Compiler/lib/classes.zip|sunw/util/EventObject.class\n").append( 
		"path: /Compiler/src/Base.java\n").append( 
		"path: /Compiler/src/DefaultHelloWorld.java\n").append( 
		"path: /Compiler/src/HierarchyTest.java\n").append( 
		"path: /Compiler/src/Interface1.java\n").append( 
		"path: /Compiler/src/OtherType.java\n").append( 
		"path: /Compiler/src/PrimaryType.java\n").append( 
		"path: /Compiler/src/PublicType.java\n").append( 
		"path: /Compiler/src/TypeResolve.java\n").append( 
		"path: /Compiler/src/X10.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/BooleanConstant.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ByteConstant.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/CharConstant.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/CompilationUnitResult.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/Compiler.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/CompilerOptions.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ConfigurableOption.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/Constant.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/DependencyIndexer.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/DoubleConstant.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/FloatConstant.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/IntConstant.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/InvalidInputException.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/LongConstant.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/NullConstant.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/Parser.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/Scanner.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ShortConstant.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/StringConstant.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/AND_AND_Expression.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/AbstractMethodDeclaration.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/AbstractVariableDeclaration.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/AllocationExpression.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/AnonymousLocalTypeDeclaration.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/Argument.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/ArrayAllocationExpression.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/ArrayInitializer.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/ArrayQualifiedTypeReference.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/ArrayReference.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/ArrayTypeReference.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/Assignment.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/AstNode.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/BinaryExpression.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/Block.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/BranchStatement.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/Break.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/Case.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/CastExpression.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/CharLiteral.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/ClassLiteralAccess.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/Clinit.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/CompilationUnitDeclaration.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/CompoundAssignment.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/ConditionalExpression.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/ConstructorDeclaration.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/Continue.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/DefaultCase.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/DoStatement.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/Doit.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/DoubleLiteral.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/EqualExpression.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/ExplicitConstructorCall.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/Expression.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/ExtendedStringLiteral.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/FalseLiteral.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/FieldDeclaration.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/FieldReference.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/FloatLiteral.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/ForStatement.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/IfStatement.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/ImportReference.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/Initializer.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/InnerTypeDeclaration.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/InstanceOfExpression.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/IntLiteral.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/IntLiteralMinValue.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/LabeledStatement.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/Literal.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/LocalDeclaration.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/LocalTypeDeclaration.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/LongLiteral.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/LongLiteralMinValue.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/MagicLiteral.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/MemberTypeDeclaration.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/MessageSend.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/MethodDeclaration.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/NameReference.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/NullLiteral.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/NumberLiteral.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/OR_OR_Expression.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/OperatorExpression.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/PostfixExpression.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/PrefixExpression.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/QualifiedAllocationExpression.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/QualifiedNameReference.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/QualifiedSuperReference.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/QualifiedThisReference.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/QualifiedTypeReference.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/Reference.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/ReturnStatement.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/SingleNameReference.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/SingleTypeReference.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/Statement.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/StringLiteral.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/SuperReference.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/SwitchStatement.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/SynchronizedStatement.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/ThisReference.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/ThrowStatement.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/TrueLiteral.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/TryStatement.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/TypeDeclaration.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/TypeReference.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/UnaryExpression.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/ast/WhileStatement.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ClassFile.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ClassFileAttribute.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ClassFileConstant.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ClassFileInfo.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ClassFilePrimitive.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ClassFileStruct.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ClassFormatException.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/CodeAttribute.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ConstantClass.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ConstantDouble.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ConstantFieldRef.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ConstantFloat.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ConstantInteger.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ConstantInterfaceMethodRef.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ConstantLong.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ConstantMethodRef.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ConstantNameAndType.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ConstantRef.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ConstantString.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ConstantUtf8.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ConstantValueAttribute.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/DeprecatedAttribute.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/DietClassFile.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/DietFieldInfo.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/DietInnerClassInfo.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/DietMethodInfo.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ExceptionHandler.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/ExceptionsAttribute.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/FieldInfo.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/InnerClassInfo.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/InnerClassesAttribute.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/LineNumberTableAttribute.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/LocalVariableDescription.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/LocalVariableTableAttribute.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/MethodInfo.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/SourceFileAttribute.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/SyntheticAttribute.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/classfmt/UnrecognizedAttribute.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/codegen/CaseLabel.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/codegen/CharArrayCache.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/codegen/ClassFile.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/codegen/CodeStream.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/codegen/ConstantPool.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/codegen/DoubleCache.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/codegen/ExceptionLabel.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/codegen/FieldNameAndTypeCache.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/codegen/FloatCache.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/codegen/IntegerCache.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/codegen/Label.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/codegen/LongCache.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/codegen/MethodNameAndTypeCache.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/codegen/ObjectCache.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/flow/ConditionalFlowInfo.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/flow/ExceptionHandlingFlowContext.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/flow/FinallyFlowContext.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/flow/FlowContext.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/flow/FlowInfo.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/flow/InitializationFlowContext.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/flow/InsideSubRoutineFlowContext.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/flow/LabelFlowContext.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/flow/LoopingFlowContext.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/flow/SwitchFlowContext.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/flow/UnconditionalFlowInfo.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/ArrayBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/BaseTypeBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/BinaryTypeBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/Binding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/BlockScope.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/BuilderEnvironmentAnswer.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/ClassScope.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/CompilationUnitScope.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/CompilerModifiers.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/FieldBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/ImportBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/InnerEmulationDependency.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/LocalTypeBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/LocalVariableBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/LookupEnvironment.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/MemberTypeBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/MethodBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/MethodScope.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/MethodVerifier.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/NestedTypeBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/PackageBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/ProblemBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/ProblemFieldBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/ProblemMethodBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/ProblemPackageBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/ProblemReferenceBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/ReferenceBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/Scope.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/SourceTypeBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/SyntheticAccessMethodBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/SyntheticArgumentBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/TypeBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/UnresolvedReferenceBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/namelookup/VariableBinding.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/problem/AbortCompilation.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/problem/AbortCompilationUnit.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/problem/AbortMethod.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/problem/AbortType.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/problem/Problem.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/problem/ProblemHandler.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/problem/ProblemLocalizer.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/problem/ProblemReporter.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/problem/ShouldNotImplement.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/problem/UnresolvedCompilationError.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/structure/CompilationUnit.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/util/CharOperation.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/util/HashtableOfObject.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/util/HashtableOfPackage.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/util/HashtableOfType.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/util/ObjectVector.java\n").append( 
		"path: /Compiler/src/com/ibm/compiler/java/util/SimpleNameVector.java\n").toString());
		}

