	public TypeBinding checkFieldAccess(BlockScope scope) {
	
		FieldBinding fieldBinding = (FieldBinding) binding;
		
		bits &= ~RestrictiveFlagMASK; // clear bits
		bits |= FIELD;
		if (!((FieldBinding) binding).isStatic()) {
			// must check for the static status....
			if (scope.methodScope().isStatic) {
				scope.problemReporter().staticFieldAccessToNonStaticVariable(this, fieldBinding);
				constant = NotAConstant;
				return fieldBinding.type;
			}
		}
		constant = FieldReference.getConstantFor(fieldBinding, this, true, scope);
	
		if (isFieldUseDeprecated(fieldBinding, scope, (this.bits & IsStrictlyAssignedMASK) !=0))
			scope.problemReporter().deprecatedField(fieldBinding, this);
	
		MethodScope ms = scope.methodScope();
		if ((this.bits & IsStrictlyAssignedMASK) == 0
			&& ms.enclosingSourceType() == fieldBinding.declaringClass
			&& ms.lastVisibleFieldID >= 0
			&& fieldBinding.id >= ms.lastVisibleFieldID) {
			//if the field is static and ms is not .... then it is valid
			if (!fieldBinding.isStatic() || ms.isStatic)
				scope.problemReporter().forwardReference(this, 0, scope.enclosingSourceType());
		}
		//====================================================
	
		return fieldBinding.type;
	
	}

