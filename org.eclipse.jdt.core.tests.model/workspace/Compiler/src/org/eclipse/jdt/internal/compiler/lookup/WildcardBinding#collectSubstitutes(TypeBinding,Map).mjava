	/**
	 * Collect the substitutes into a map for certain type variables inside the receiver type
	 * e.g.   Collection<T>.findSubstitute(T, Collection<List<X>>):   T --> List<X>
	 */
	public void collectSubstitutes(TypeBinding otherType, Map substitutes) {
	    switch(this.kind) {
	        case Wildcard.UNBOUND :
	            return;
	        case Wildcard.EXTENDS :
	            this.bound.collectSubstitutes(otherType, substitutes);
	            return;
	        default: // SUPER
	            this.bound.collectSubstitutes(otherType, substitutes);
	            return;
	    }
	}

