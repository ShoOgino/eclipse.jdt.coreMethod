    public void compare() {
        if (this.abortComparison) { return; }
        File[] files = getAllFiles(firstDirectory);
        if (files == null) { return; }
        File[] secondFiles = getAllFiles(secondDirectory);
        if (secondFiles == null) { return; }
        final String firstDirectoryAbsolutePath = firstDirectory
                .getAbsolutePath();
        final String secondDirectoryAbsolutePath = secondDirectory
                .getAbsolutePath();
        if (resultFile.exists()) {
            if (!resultFile.delete()) {
                System.out.println("Could not delete " + resultFile);
                return;
            }
        }
        if (secondFiles.length != files.length) {
            final String errorMessage = "Different number of jars files:\n"
                    + "\t" + secondFiles.length + " in "
                    + secondDirectoryAbsolutePath + "\n" + "\t" + files.length
                    + " in " + firstDirectoryAbsolutePath + "\n";
            logError(errorMessage);
        }
        for (int i = 0, max = files.length; i < max; i++) {
            String currentFile = files[i].getAbsolutePath();
            String firstFileName = currentFile;
            // extract the second file name
            String secondFileName = secondDirectoryAbsolutePath + File.separator
                    + currentFile
                            .substring(firstDirectoryAbsolutePath.length() + 1);
            if (new File(secondFileName).exists()) {
                if (firstFileName.toLowerCase().endsWith(".jar")) {
                    new JarFileComparator(new String[] { firstFileName,
                            secondFileName, resultFile.getAbsolutePath() })
                                    .compare();
                } else {
                    // do a binary compare byte per byte
                    File firstFile = new File(firstFileName);
                    File secondFile = new File(secondFileName);
                    byte[] contentsFile1 = getBytes(firstFile);
                    byte[] contentsFile2 = getBytes(secondFile);
                    if (!equals(contentsFile1, contentsFile2)) {
                        logError("DIFFERENT CONTENTS: " + firstFile.getName()
                                + "\n");
                    }
                }
            } else {
                logError(secondFileName + " doesn't exist");
            }
        }
        System.out.println("DONE. Check the file "
                + resultFile.getAbsolutePath() + " to see the result.");
        if (this.writer != null) {
            try {
                writer.flush();
                writer.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

