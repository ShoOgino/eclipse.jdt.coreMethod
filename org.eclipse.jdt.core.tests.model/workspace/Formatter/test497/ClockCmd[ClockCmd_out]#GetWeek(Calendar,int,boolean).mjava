    /**
     *-----------------------------------------------------------------------------
     *
     * GetWeek --
     *
     *      Returns the week_of_year of the given date.
     *	The weekday considered as start of the week is given as argument.
     *	Specify iso as true to get the week_of_year accourding to ISO.
     *
     * Results:
     *      Day of the week .
     *
     * Side effects:
     *      The interpreter will contain the formatted string as result.
     *
     *-----------------------------------------------------------------------------
     */

    private int GetWeek(Calendar calendar, // Calendar containing Date.
            int firstDayOfWeek, // this day starts a week (MONDAY/SUNDAY).
            boolean iso) // evaluate according to ISO?
    {
        if (iso)
            {
                firstDayOfWeek = Calendar.MONDAY;
            }

        // After changing the firstDayOfWeek, we have to set the time value anew,
        // so that the fields of the calendar are recalculated.

        calendar.setFirstDayOfWeek(firstDayOfWeek);
        calendar.setMinimalDaysInFirstWeek(iso ? 4 : 7);
        calendar.setTime(calendar.getTime());
        int week = calendar.get(Calendar.WEEK_OF_YEAR);

        if (!iso)
            {
                // The week for the first days of the year may be 52 or 53.
                // But here we have to return 0, if we don't compute ISO week.
                // So any bigger than 50th week in January will become 00.

                if (calendar.get(Calendar.MONTH) == Calendar.JANUARY
                        && week > 50)
                    {
                        week = 0;
                    }
            }

        return week;
    }

