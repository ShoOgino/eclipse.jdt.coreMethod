    /**
     *-----------------------------------------------------------------------------
     *
     * ParseTrek --
     *
     *      Parse a Stardate and sets the Calendar.
     *	A Stardate is valid, if it confirms to the following yacc rule:
     *	iso     : tSTARDATE tUNUMBER '.' tUNUMBER
     *		;
     *
     * Results:
     *      True, if a Stardate was read (parsePos was incremented
     *	and calendar was set according to the read point); false otherwise.
     *
     * Side effects:
     *      None.
     *
     *-----------------------------------------------------------------------------
     */

    private boolean ParseTrek(ClockToken[] dt, // Input as scanned array of tokens
            ParsePosition parsePos, // Current position in input
            GregorianCalendar calendar) // calendar object to set
    {
        int pos = parsePos.getIndex();

        if (pos + 3 < dt.length && dt[pos].is(ClockToken.STARDATE)
                && dt[pos + 1].isUNumber() && dt[pos + 2].is('.')
                && dt[pos + 3].isUNumber())
            {
                int trekYear = dt[pos + 1].getInt() / 1000 + 2323 - 377;
                int trekDay = 1 + ((dt[pos + 1].getInt() % 1000) * (calendar
                        .isLeapYear(trekYear) ? 366 : 365)) / 1000;
                int trekSeconds = dt[pos + 3].getInt() * 144 * 60;
                calendar.set(Calendar.YEAR, trekYear);
                calendar.set(Calendar.DAY_OF_YEAR, trekDay);
                calendar.set(Calendar.SECOND, trekSeconds);
                parsePos.setIndex(pos + 4);
                return true;
            }
        return false;
    }

