/**
 * Ensures that saving a working copy doesn't change the underlying resource.
 * (only commit should do so)
 */
public void testSaveWorkingCopy() throws CoreException {
	ICompilationUnit copy = null;
	try {
		this.createJavaProject("P", new String[] {""}, "");
		this.createFile("P/X.java",
			"public class X {\n" +
			"}");
		ICompilationUnit unit = this.getCompilationUnit("P", "", "", "X.java");
		copy = (ICompilationUnit)unit.getWorkingCopy(null, null, null);
		copy.getType("X").createMethod("void foo() {}", null, true, null);
		this.startDeltas();
		copy.save(null, true);
		assertEquals(
			"Unexpected delta after saving working copy", 
			"", 
			this.getDeltas());
		copy.commit(true, null);
		assertEquals(
			"Unexpected delta after committing working copy", 
			"P[*]: {CHILDREN}\n" +
			"	[project root][*]: {CHILDREN}\n" +
			"		[default][*]: {CHILDREN}\n" +
			"			X.java[*]: {CHILDREN | FINE GRAINED}\n" +
			"				X[*]: {CHILDREN | FINE GRAINED}\n" +
			"					foo[+]: {}", 
			this.getDeltas());
	} finally {
		this.stopDeltas();
		if (copy != null) copy.destroy();
		this.deleteProject("P");
	}
}

