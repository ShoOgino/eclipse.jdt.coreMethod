	// Test shared index location functionality
	public void testSharedIndexLocation() throws CoreException, IOException {
		// Create temporary testing folder
		String sharedIndexDir = Files.createTempDirectory("shared_index").toFile().getCanonicalPath();
		// enable shared index
		ClasspathEntry.setSharedIndexLocation(sharedIndexDir, getClass());
		// path of library must be platform neutral
		String jarFilePath = Path.fromOSString(Paths.get(sharedIndexDir, "Test.jar").toString()).toPortableString();
		// compute index file
		CRC32 checksumCalculator = new CRC32();
		checksumCalculator.update(jarFilePath.getBytes());
		String fileName = Long.toString(checksumCalculator.getValue()) + ".index";
		String indexFilePath = Paths.get(sharedIndexDir, fileName).toString();
		try {
			createJar(new String[] {
					"pkg/Test.java",
					"package pkg;\n" +
					"public class Test {\n" +
					"  protected Test(int i) {}\n" +
					"}"}, jarFilePath);

			JavaIndexer.generateIndexForJar(jarFilePath, indexFilePath);
			assertTrue(new File(indexFilePath).exists());
			long modified = new File(indexFilePath).lastModified();

			IJavaProject p = createJavaProject("P");
			Path libPath = new Path(jarFilePath);
			IClasspathEntry entry = JavaCore.newLibraryEntry(libPath, null, null, null, null, false);
			setClasspath(p, new IClasspathEntry[] { entry });

			waitUntilIndexesReady();

			// Test that search works properly
			search("Test", TYPE, DECLARATIONS, EXACT_RULE,
					SearchEngine.createJavaSearchScope(new IJavaElement[] { p }));
			assertSearchResults(Paths.get(sharedIndexDir, "Test.jar").toString() + " pkg.Test");

			// Test that specified index file is really used
			java.io.File indexFile = JavaModelManager.getIndexManager().getIndex(libPath, false, false).getIndexFile();
			assertEquals("Specified index file is not being used", indexFilePath, indexFile.toString());

			// Ensure that the index file is not modified
			assertEquals(modified, new File(indexFilePath).lastModified());
		} finally {
			deleteProject("P");
			new File(indexFilePath).delete();
			new File(jarFilePath).delete();
			new File(sharedIndexDir).delete();
			ClasspathEntry.setSharedIndexLocation(null, getClass());
		}
	}

