	/**
	 * @bug 297825: [search] Rename refactoring doesn't update enclosing type
	 * @test Search for references for enclosing type's subclass should return a match. The inner type is parameterized.
	 * @see "https://bugs.eclipse.org/bugs/show_bug.cgi?id=297825"
	 */
	public void testBug297825d() throws CoreException {
		try {
			IJavaProject p = createJavaProject("P", new String[] { "src" },
					new String[] {"JCL_LIB"}, "bin");
			createFolder("/P/src/b297825");
			createFile("/P/src/b297825/_Foo.java",
					"package b297825;\n" +
					"public class _Foo {\n" +
					"	public static class Bar<T> {\n" +
					"	}\n" +
					"}"
					);
			createFile("/P/src/b297825/Foo.java",
					"package b297825;\n" +
					"public class Foo extends _Foo {\n" +
					"}\n"
					);
			createFile("/P/src/b297825/Main.java",
					"package b297825;\n" +
					"public class Main {\n" +
					"	public static void main(String[] args) {\n" +
					"		new Foo.Bar<String>();\n" +
					"	}\n" +
					"}"
					);
			waitUntilIndexesReady();
			IType type = getCompilationUnit("/P/src/b297825/Foo.java").getType("Foo");
			IJavaSearchScope scope = SearchEngine
					.createJavaSearchScope(new IJavaElement[] { p }, IJavaSearchScope.SOURCES);

			search(type, REFERENCES, scope, this.resultCollector);

			assertSearchResults("src/b297825/Main.java void b297825.Main.main(String[]) [Foo] EXACT_MATCH");
		} finally {
			deleteProject("P");
		}
	}

