/**
 * Ensures that a binary method cannot be deleted.
 */
public void testDeleteBinaryMethod() throws CoreException {
	try {
		createJavaProject("P1", new String[] {}, new String[] {"lib"}, "");
		
		/* Evaluate the following in a scrapbook:
			org.eclipse.jdt.core.tests.model.ModifyingResourceTests.generateClassFile(
				"X",
				"public class X {\n" +
				"  public void foo() {\n" +
				"  }\n" +
				"}")
		*/
		byte[] bytes = new byte[] {
			-54, -2, -70, -66, 0, 3, 0, 45, 0, 14, 1, 0, 1, 88, 7, 0, 1, 1, 0, 16, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 7, 0, 3, 1, 0, 6, 60, 105, 110, 105, 116, 62, 1, 0, 3, 40, 41, 86, 1, 0, 4, 67, 111, 100, 101, 12, 0, 5, 0, 6, 10, 0, 4, 0, 8, 1, 0, 15, 76, 105, 110, 101, 78, 117, 
			109, 98, 101, 114, 84, 97, 98, 108, 101, 1, 0, 3, 102, 111, 111, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 6, 88, 46, 106, 97, 118, 97, 0, 33, 0, 2, 0, 4, 0, 0, 0, 0, 0, 2, 0, 1, 0, 5, 0, 6, 0, 1, 0, 7, 0, 0, 0, 29, 0, 1, 0, 1, 0, 0, 0, 5, 42, -73, 0, 9, -79, 0, 0, 0, 1, 
			0, 10, 0, 0, 0, 6, 0, 1, 0, 0, 0, 1, 0, 1, 0, 11, 0, 6, 0, 1, 0, 7, 0, 0, 0, 25, 0, 0, 0, 1, 0, 0, 0, 1, -79, 0, 0, 0, 1, 0, 10, 0, 0, 0, 6, 0, 1, 0, 0, 0, 3, 0, 1, 0, 12, 0, 0, 0, 2, 0, 13, 
		};
		this.createFile("P1/lib/X.class", new String(bytes));
		
		IClassFile cf = getClassFile("P1/lib/X.class");
		IMethod method = cf.getType().getMethod("foo", new String[] {});
		
		try {
			method.delete(false, null);
		} catch (JavaModelException e) {
			assertTrue("Should be read-only", e.getStatus().getCode() == IJavaModelStatusConstants.READ_ONLY);
			return;
		}
		assertTrue("Should not be able to delete a binary method", false);
	} finally {
		deleteProject("P1");
	}
}

