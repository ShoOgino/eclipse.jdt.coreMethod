/*
 * Ensures that root paths are correctly detected when attaching an external source folder that contains a META-INF folder to an external library folder.
 * (regression test for https://bugs.eclipse.org/bugs/show_bug.cgi?id=228639 )
 */
public void testExternalFolder5() throws Exception {
	try {
		String externalFolder = getExternalFolder();
		String[] pathsAndContents =
			new String[] {
				"p/X.java",
				"package p;\n" +
				"public class X {\n" +
				"}"
			};
		org.eclipse.jdt.core.tests.util.Util.createSourceDir(pathsAndContents, externalFolder + "/src228639/src");

		createExternalFolder("externalFolder/src228639/META-INF");
		createExternalFolder("externalFolder/lib/META-INF");

		String externalLib = externalFolder + "/lib";
		IJavaProject javaProject = null;
		try {
			javaProject = createJavaProject("P", new String[0], new String[] {externalLib}, "");
		}
		catch (Exception e) {
			IFolder folder = getFolder(externalLib);
			System.out.println("----------  This information is logged for debugging purposes as this test fails sporadically.---------");
			System.out.println("Failing when creating Link folder for: " + externalFolder);
			System.out.println("Existing? " + folder.exists());
			IProject externalFolderProject = JavaModelManager.getExternalManager().getExternalFoldersProject();
			IFile externalProjectFile = externalFolderProject.getFile(".project");
			if (externalProjectFile.exists()) {
				System.out.println("External Folder Project exists with following content:");
				BufferedInputStream bs = new BufferedInputStream(externalProjectFile.getContents());
				int available = 0;
				while ((available = bs.available()) > 0) {
					byte[] contents = new byte[available];
					bs.read(contents);
					System.out.println(new String(contents));
				}
				bs.close();
			}
			else {
				System.out.println("External folders project doesn't exist.");
			}
			System.out.println("----------  Debug information ends ---------");
			throw e;
		}
		IPackageFragmentRoot root = javaProject.getPackageFragmentRoot(externalLib);
		attachSource(root, externalFolder + "/src228639", "");
		IType type = root.getPackageFragment("p").getClassFile("X.class").getType();
		assertSourceEquals(
			"Unexpected source",
			"public class X {\n" +
			"}",
			type.getSource());
	} finally {
		deleteExternalResource("externalFolder/src228639");
		deleteExternalResource("externalFolder/lib/META-INF");
		deleteProject("P");
	}
}

