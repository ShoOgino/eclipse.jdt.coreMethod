/**
 * Member type reference test.
 */
public void testMemberTypeReference() throws CoreException {
	// references to second level member type
	JavaSearchResultCollector resultCollector = new JavaSearchResultCollector();
	resultCollector.showAccuracy = true;
	new SearchEngine().search(
		getWorkspace(), 
		"BMember",
		TYPE,
		REFERENCES, 
		getJavaSearchScope(), 
		resultCollector);
	assertSearchResults(
		"References to type BMember",
		"src/MemberTypeReference/Azz.java MemberTypeReference.Azz.poo() -> void [BMember] EXACT_MATCH\n" +
		"src/MemberTypeReference/Azz.java MemberTypeReference.Azz$AzzMember [BMember] EXACT_MATCH\n" +
		"src/MemberTypeReference/Azz.java MemberTypeReference.X.val [BMember] EXACT_MATCH\n" +
		"src/MemberTypeReference/B.java MemberTypeReference.B.foo() -> void [BMember] EXACT_MATCH",
		resultCollector);

	// references to first level member type
	resultCollector = new JavaSearchResultCollector();
	resultCollector.showAccuracy = true;
	new SearchEngine().search(
		getWorkspace(), 
		"AzzMember",
		TYPE,
		REFERENCES, 
		getJavaSearchScope(), 
		resultCollector);
	assertSearchResults(
		"References to type AzzMember",
		"src/MemberTypeReference/Azz.java MemberTypeReference.X.val [AzzMember] EXACT_MATCH\n" +
		"src/MemberTypeReference/B.java MemberTypeReference.B.foo() -> void [AzzMember] EXACT_MATCH",
		resultCollector);

	// no reference to a field with same name as member type
	resultCollector = new JavaSearchResultCollector();
	resultCollector.showAccuracy = true;
	new SearchEngine().search(
		getWorkspace(), 
		"BMember",
		FIELD,
		REFERENCES, 
		getJavaSearchScope(), 
		resultCollector);
	assertSearchResults(
		"References to field BMember",
		"",
		resultCollector);
}

