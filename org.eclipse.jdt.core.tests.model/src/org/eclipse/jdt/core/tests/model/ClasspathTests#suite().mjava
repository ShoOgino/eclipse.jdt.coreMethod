public static Test suite() {
	// hack to guarantee the test order
	TestSuite suite = new Suite(ClasspathTests.class.getName());
	suite.addTest(new ClasspathTests("test124117"));
	suite.addTest(new ClasspathTests("test232816"));
	suite.addTest(new ClasspathTests("test232816a"));
	suite.addTest(new ClasspathTests("test232816b"));
	suite.addTest(new ClasspathTests("test232816c"));
	suite.addTest(new ClasspathTests("test232816d"));
	suite.addTest(new ClasspathTests("test232816e"));
	suite.addTest(new ClasspathTests("test232816f"));
	suite.addTest(new ClasspathTests("testAddExternalLibFolder1"));
	suite.addTest(new ClasspathTests("testAddExternalLibFolder2"));
	suite.addTest(new ClasspathTests("testAddExternalLibFolder3"));
	suite.addTest(new ClasspathTests("testAddExternalLibFolder4"));
	suite.addTest(new ClasspathTests("testAddExternalLibFolder5"));
	suite.addTest(new ClasspathTests("testAddExternalLibFolder6"));
	suite.addTest(new ClasspathTests("testAddExternalLibFolder7"));
	suite.addTest(new ClasspathTests("testAddZIPArchive1"));
	suite.addTest(new ClasspathTests("testAddZIPArchive2"));
	suite.addTest(new ClasspathTests("testAddZIPArchive3"));
	suite.addTest(new ClasspathTests("testAddZIPArchive4"));
	suite.addTest(new ClasspathTests("testAddZIPArchive5"));
	suite.addTest(new ClasspathTests("testAddZIPArchive6"));
	suite.addTest(new ClasspathTests("testAddZIPArchive7"));
	suite.addTest(new ClasspathTests("testAddProjectToContainer"));
	suite.addTest(new ClasspathTests("testAddRoot1"));
	suite.addTest(new ClasspathTests("testAddRoot2"));
	suite.addTest(new ClasspathTests("testChangeRawButNotResolvedClasspath"));
	suite.addTest(new ClasspathTests("testClasspathChangeExternalResources"));
	suite.addTest(new ClasspathTests("testClasspathCorruption"));
	suite.addTest(new ClasspathTests("testClasspathFileRead"));
	suite.addTest(new ClasspathTests("testClasspathForceReload"));
	suite.addTest(new ClasspathTests("testClasspathCreateLibraryEntry"));
	suite.addTest(new ClasspathTests("testClasspathCreateLocalJarLibraryEntry"));
	suite.addTest(new ClasspathTests("testClasspathCrossProject"));
	suite.addTest(new ClasspathTests("testClasspathDeleteNestedRoot"));
	suite.addTest(new ClasspathTests("testClasspathDiamond"));
	suite.addTest(new ClasspathTests("testClasspathDeleteNestedRootParent"));
	suite.addTest(new ClasspathTests("testExternalize1"));
	suite.addTest(new ClasspathTests("testExternalize2"));
	suite.addTest(new ClasspathTests("testClasspathMoveNestedRoot"));
	suite.addTest(new ClasspathTests("testClasspathMoveNestedRootParent"));
	suite.addTest(new ClasspathTests("testClasspathNoChanges"));
	suite.addTest(new ClasspathTests("testClasspathReordering"));
	suite.addTest(new ClasspathTests("testClasspathValidation01"));
	suite.addTest(new ClasspathTests("testClasspathValidation02"));
	suite.addTest(new ClasspathTests("testClasspathValidation03"));
	suite.addTest(new ClasspathTests("testClasspathValidation04"));
	suite.addTest(new ClasspathTests("testClasspathValidation05"));
	suite.addTest(new ClasspathTests("testClasspathValidation06"));
	suite.addTest(new ClasspathTests("testClasspathValidation07"));
	suite.addTest(new ClasspathTests("testClasspathValidation08"));
	suite.addTest(new ClasspathTests("testClasspathValidation09"));
	suite.addTest(new ClasspathTests("testClasspathValidation10"));
	suite.addTest(new ClasspathTests("testClasspathValidation11"));
	suite.addTest(new ClasspathTests("testClasspathValidation12"));
	suite.addTest(new ClasspathTests("testClasspathValidation13"));
	suite.addTest(new ClasspathTests("testClasspathValidation14"));
	suite.addTest(new ClasspathTests("testClasspathValidation15"));
	suite.addTest(new ClasspathTests("testClasspathValidation16"));
	suite.addTest(new ClasspathTests("testClasspathValidation17"));
	suite.addTest(new ClasspathTests("testClasspathValidation18"));
	suite.addTest(new ClasspathTests("testClasspathValidation19"));
	suite.addTest(new ClasspathTests("testClasspathValidation20"));
	suite.addTest(new ClasspathTests("testClasspathValidation21"));
	suite.addTest(new ClasspathTests("testClasspathValidation22"));
	suite.addTest(new ClasspathTests("testClasspathValidation23"));
	suite.addTest(new ClasspathTests("testClasspathValidation24"));
	suite.addTest(new ClasspathTests("testClasspathValidation25"));
	suite.addTest(new ClasspathTests("testClasspathValidation26"));
	suite.addTest(new ClasspathTests("testClasspathValidation27"));
	suite.addTest(new ClasspathTests("testClasspathValidation27_Bug159325_project"));
	suite.addTest(new ClasspathTests("testClasspathValidation27_Bug159325_lib"));
	suite.addTest(new ClasspathTests("testClasspathValidation28"));
	suite.addTest(new ClasspathTests("testClasspathValidation29"));
	suite.addTest(new ClasspathTests("testClasspathValidation30"));
	suite.addTest(new ClasspathTests("testClasspathValidation31"));
	suite.addTest(new ClasspathTests("testClasspathValidation32"));
	suite.addTest(new ClasspathTests("testClasspathValidation33"));
	suite.addTest(new ClasspathTests("testClasspathValidation34"));
	suite.addTest(new ClasspathTests("testClasspathValidation35"));
	suite.addTest(new ClasspathTests("testClasspathValidation36"));
	suite.addTest(new ClasspathTests("testClasspathValidation37"));
	suite.addTest(new ClasspathTests("testClasspathValidation38"));
	suite.addTest(new ClasspathTests("testClasspathValidation39"));
	suite.addTest(new ClasspathTests("testClasspathValidation40"));
	suite.addTest(new ClasspathTests("testClasspathValidation41"));
	suite.addTest(new ClasspathTests("testClasspathValidation42"));
	suite.addTest(new ClasspathTests("testClasspathWithDuplicateEntries"));
	suite.addTest(new ClasspathTests("testClasspathDuplicateExtraAttribute1"));
	suite.addTest(new ClasspathTests("testClasspathDuplicateExtraAttribute2"));
	suite.addTest(new ClasspathTests("testClasspathDuplicateExtraAttribute3"));
	suite.addTest(new ClasspathTests("testClasspathDuplicateExtraAttribute4"));
	suite.addTest(new ClasspathTests("testClasspathDuplicateExtraAttribute5"));
	suite.addTest(new ClasspathTests("testClasspathWithNonExistentLibraryEntry"));
	suite.addTest(new ClasspathTests("testClasspathWithNonExistentProjectEntry"));
	suite.addTest(new ClasspathTests("testClasspathWithNonExistentSourceEntry"));
	suite.addTest(new ClasspathTests("testCycleReport"));
	suite.addTest(new ClasspathTests("testDefaultClasspathAndOutputLocation"));
	suite.addTest(new ClasspathTests("testDotDotContainerEntry1"));
	suite.addTest(new ClasspathTests("testDotDotContainerEntry2"));
	suite.addTest(new ClasspathTests("testDotDotLibraryEntry1"));
	suite.addTest(new ClasspathTests("testDotDotLibraryEntry2"));
	suite.addTest(new ClasspathTests("testDotDotLibraryEntry3"));
	suite.addTest(new ClasspathTests("testDotDotLibraryEntry4"));
	suite.addTest(new ClasspathTests("testDotDotLibraryEntry5"));
	suite.addTest(new ClasspathTests("testDotDotLibraryEntry6"));
	suite.addTest(new ClasspathTests("testDotDotLibraryEntry7"));
	suite.addTest(new ClasspathTests("testDotDotLibraryEntry8"));
	suite.addTest(new ClasspathTests("testDotDotVariableEntry1"));
	suite.addTest(new ClasspathTests("testDotDotVariableEntry2"));
	suite.addTest(new ClasspathTests("testEmptyClasspath"));
	suite.addTest(new ClasspathTests("testEncoding1"));
	suite.addTest(new ClasspathTests("testEncoding2"));
	suite.addTest(new ClasspathTests("testEncodeDecodeEntry01"));
	suite.addTest(new ClasspathTests("testEncodeDecodeEntry02"));
	suite.addTest(new ClasspathTests("testEncodeDecodeEntry03"));
	suite.addTest(new ClasspathTests("testEncodeDecodeEntry04"));
	suite.addTest(new ClasspathTests("testEncodeDecodeEntry05"));
	suite.addTest(new ClasspathTests("testEmptyContainer"));
	suite.addTest(new ClasspathTests("testEmptyInclusionPattern"));
	suite.addTest(new ClasspathTests("testExportContainer"));
	suite.addTest(new ClasspathTests("testExternalJarAdd"));
	suite.addTest(new ClasspathTests("testExternalJarRemove"));
	suite.addTest(new ClasspathTests("testExtraAttributes1"));
	suite.addTest(new ClasspathTests("testExtraAttributes2"));
	suite.addTest(new ClasspathTests("testExtraAttributes3"));
	suite.addTest(new ClasspathTests("testExtraAttributes4"));
	suite.addTest(new ClasspathTests("testExtraLibraries01"));
	suite.addTest(new ClasspathTests("testExtraLibraries02"));
	suite.addTest(new ClasspathTests("testExtraLibraries03"));
	suite.addTest(new ClasspathTests("testExtraLibraries04"));
	suite.addTest(new ClasspathTests("testExtraLibraries05"));
	suite.addTest(new ClasspathTests("testExtraLibraries06"));
	suite.addTest(new ClasspathTests("testExtraLibraries07"));
	suite.addTest(new ClasspathTests("testExtraLibraries08"));
	suite.addTest(new ClasspathTests("testExtraLibraries09"));
	suite.addTest(new ClasspathTests("testExtraLibraries10"));
	suite.addTest(new ClasspathTests("testExtraLibraries11"));
	suite.addTest(new ClasspathTests("testExtraLibraries12"));
	suite.addTest(new ClasspathTests("testExtraLibraries13"));
	suite.addTest(new ClasspathTests("testExtraLibraries14"));
	suite.addTest(new ClasspathTests("testExtraLibraries15"));
	suite.addTest(new ClasspathTests("testExtraLibraries16"));
	suite.addTest(new ClasspathTests("testExtraLibraries17"));
	suite.addTest(new ClasspathTests("testFixClasspath1"));
	suite.addTest(new ClasspathTests("testFixClasspath2"));
	suite.addTest(new ClasspathTests("testHasClasspathCycle"));
	suite.addTest(new ClasspathTests("testInvalidClasspath1"));
	suite.addTest(new ClasspathTests("testInvalidClasspath2"));
	suite.addTest(new ClasspathTests("testInvalidExternalClassFolder"));
	suite.addTest(new ClasspathTests("testInvalidExternalJar"));
	suite.addTest(new ClasspathTests("testTransitionFromInvalidToValidJar"));
	suite.addTest(new ClasspathTests("testInvalidInternalJar1"));
	suite.addTest(new ClasspathTests("testInvalidInternalJar2"));
	suite.addTest(new ClasspathTests("testInvalidSourceFolder"));
	suite.addTest(new ClasspathTests("testMissingClasspath"));
	suite.addTest(new ClasspathTests("testMissingPrereq1"));
	suite.addTest(new ClasspathTests("testMissingPrereq2"));
	suite.addTest(new ClasspathTests("testMissingPrereq3"));
	suite.addTest(new ClasspathTests("testMissingPrereq4"));
	suite.addTest(new ClasspathTests("testNullClasspath"));
	suite.addTest(new ClasspathTests("testPessimisticProvider"));
	suite.addTest(new ClasspathTests("testReadEmptyCustomOutput"));
	suite.addTest(new ClasspathTests("testReadOnly"));
	suite.addTest(new ClasspathTests("testCombineAccessRules1"));
	suite.addTest(new ClasspathTests("testCombineAccessRules2"));
	suite.addTest(new ClasspathTests("testCombineAccessRules3"));
	suite.addTest(new ClasspathTests("testCombineAccessRules4"));
	suite.addTest(new ClasspathTests("testCombineAccessRules5"));
	suite.addTest(new ClasspathTests("testCycleDetection"));
	suite.addTest(new ClasspathTests("testCycleDetectionThroughVariables"));
	suite.addTest(new ClasspathTests("testCycleDetectionThroughContainers"));
	suite.addTest(new ClasspathTests("testCycleDetectionThroughContainerVariants"));
	suite.addTest(new ClasspathTests("testCycleDetection2"));
	suite.addTest(new ClasspathTests("testCycleDetection3"));
	suite.addTest(new ClasspathTests("testCycleDetection4"));
	suite.addTest(new ClasspathTests("testPerfDenseCycleDetection1"));
	suite.addTest(new ClasspathTests("testPerfDenseCycleDetection2"));
	suite.addTest(new ClasspathTests("testPerfDenseCycleDetection3"));
	suite.addTest(new ClasspathTests("testNoCycleDetection1"));
	suite.addTest(new ClasspathTests("testNoCycleDetection2"));
	suite.addTest(new ClasspathTests("testNoResourceChange01"));
	suite.addTest(new ClasspathTests("testNoResourceChange02"));
	suite.addTest(new ClasspathTests("testNoResourceChange03"));
	suite.addTest(new ClasspathTests("testNoResourceChange04"));
	suite.addTest(new ClasspathTests("testNoResourceChange05"));
	suite.addTest(new ClasspathTests("testNoResourceChange06"));
	suite.addTest(new ClasspathTests("testDuplicateEntries1"));
	suite.addTest(new ClasspathTests("testDuplicateEntries2"));
	suite.addTest(new ClasspathTests("testDuplicateEntries3"));
	suite.addTest(new ClasspathTests("testNestedSourceFolders"));
	suite.addTest(new ClasspathTests("testOptionalEntry1"));
	suite.addTest(new ClasspathTests("testOptionalEntry2"));
	suite.addTest(new ClasspathTests("testOptionalEntry3"));
	suite.addTest(new ClasspathTests("testOutputFolder1"));
	suite.addTest(new ClasspathTests("testReplaceProject"));
	suite.addTest(new ClasspathTests("testRemoveExternalLibFolder1"));
	suite.addTest(new ClasspathTests("testRemoveExternalLibFolder2"));
	suite.addTest(new ClasspathTests("testRemoveExternalLibFolder3"));
	suite.addTest(new ClasspathTests("testRemoveExternalLibFolder4"));
	suite.addTest(new ClasspathTests("testRemoveZIPArchive1"));
	suite.addTest(new ClasspathTests("testRemoveZIPArchive2"));
	suite.addTest(new ClasspathTests("testRemoveZIPArchive3"));
	suite.addTest(new ClasspathTests("testRemoveZIPArchive4"));
	suite.addTest(new ClasspathTests("testRemoveZIPArchive5"));
	suite.addTest(new ClasspathTests("testRemoveZIPArchive6"));
	suite.addTest(new ClasspathTests("testRenameJar"));
	suite.addTest(new ClasspathTests("testUpdateProjectReferences"));
	suite.addTest(new ClasspathTests("testUnknownAttributes"));
	suite.addTest(new ClasspathTests("testUnknownElements1"));
	suite.addTest(new ClasspathTests("testUnknownElements2"));
	suite.addTest(new ClasspathTests("testBug55992a"));
	suite.addTest(new ClasspathTests("testBug55992b"));
	suite.addTest(new ClasspathTests("testRemoveDuplicates"));
	suite.addTest(new ClasspathTests("testForceNullArgumentsToEmptySet"));
	suite.addTest(new ClasspathTests("testForceNullArgumentsToEmptySet2"));
	suite.addTest(new ClasspathTests("testForceNullArgumentsToEmptySet3"));
	suite.addTest(new ClasspathTests("testForceNullArgumentsToEmptySet4"));
	suite.addTest(new ClasspathTests("testForceNullArgumentsToEmptySet5"));
	suite.addTest(new ClasspathTests("testBug276373"));
	suite.addTest(new ClasspathTests("testBug248661"));
	suite.addTest(new ClasspathTests("testBug300136"));
	suite.addTest(new ClasspathTests("testBug300136a"));
	suite.addTest(new ClasspathTests("testBug294360a"));
	suite.addTest(new ClasspathTests("testBug252341a"));
	suite.addTest(new ClasspathTests("testBug252341b"));
	suite.addTest(new ClasspathTests("testBug252341c"));
	suite.addTest(new ClasspathTests("testBug304081"));
	suite.addTest(new ClasspathTests("testBug304081a"));
	suite.addTest(new ClasspathTests("testBug305122"));
	suite.addTest(new ClasspathTests("testBug308150"));
	suite.addTest(new ClasspathTests("testBug305037"));
	suite.addTest(new ClasspathTests("testBug313965"));
	suite.addTest(new ClasspathTests("testBug313965a"));
	suite.addTest(new ClasspathTests("testBug321170"));
	suite.addTest(new ClasspathTests("testBug229042"));
	suite.addTest(new ClasspathTests("testBug274737"));
	suite.addTest(new ClasspathTests("testBug357425"));
	suite.addTest(new ClasspathTests("testBug287164"));
	return suite;
}

