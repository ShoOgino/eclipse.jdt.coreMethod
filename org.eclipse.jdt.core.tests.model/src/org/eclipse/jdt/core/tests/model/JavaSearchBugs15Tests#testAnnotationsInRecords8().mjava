		public void testAnnotationsInRecords8() throws CoreException {
			this.workingCopies = new ICompilationUnit[1];

			String contents =  "package test1;\n" +
					 "import java.lang.annotation.Target;\n" +
					 "public record X() {\n" +
					 "	public static void main(String[] args) {\n" +
					 "		Outer outer = new Outer();\n" +
					 "		Outer.@Marker1 Inner first = outer.new Inner();\n" +
					 "		Outer.@Marker2 Inner second = outer.new Inner() ;\n" +
					 "		Outer.Inner.@Marker1 Deeper deeper = second.new Deeper();\n" +
					 "		Outer.Inner.Deeper deeper2 =  second.new Deeper();\n" +
					 "	}\n" + "}\n" + "class Outer {\n" +
					 "	public class Inner {\n" +
					 "		public class Deeper {\n" +
					 "		}\n" +
					 "	}\n" +
					 "}\n" +
					 "@Target (java.lang.annotation.ElementType.TYPE_USE)\n" +
					 "@interface Marker {}\n" +
					 "@Target (java.lang.annotation.ElementType.TYPE_USE)\n" +
					 "@interface Marker1 {}\n" +
					 "@Target (java.lang.annotation.ElementType.TYPE_USE)\n" +
					 "@interface Marker2 {}\n";
			this.workingCopies[0] = getWorkingCopy("/JavaSearchBugs/src/X.java",contents);
			IJavaProject javaProject = this.workingCopies[0].getJavaProject(); //assuming single project for all working copies
			String old = javaProject.getOption(JavaCore.COMPILER_PB_ENABLE_PREVIEW_FEATURES, true);
			try {
				javaProject.setOption(JavaCore.COMPILER_PB_ENABLE_PREVIEW_FEATURES, JavaCore.ENABLED);
				search("Marker1", ANNOTATION_TYPE, REFERENCES);
				assertSearchResults(
						"src/X.java void X.main(String[]) [Marker1] EXACT_MATCH\n" +
						"src/X.java void X.main(String[]) [Marker1] EXACT_MATCH");
			} finally {
				javaProject.setOption(JavaCore.COMPILER_PB_ENABLE_PREVIEW_FEATURES, old);
			}

	 	}

