public void testBug542559_003() throws CoreException {
	this.workingCopies = new ICompilationUnit[1];
	this.workingCopies[0] = getWorkingCopy("/JavaSearchBugs/src/X.java",
			"public class X {\n" +
			"        int switch_expr_field = 10; \n" +
			"        int twice(int i) throws Exception {      \n" +
			"                int tw = switch (i) {   \n" +
			"                        case 0 -> { break switch_expr_field; }  \n" +
			"                        case 4 -> throw new MyException();  \n" +
			"                        default -> 3;           \n" +
			"                };      \n" +
			"                return tw;              \n" +
			"        }               \n" +
			"        public static void main(String[] args) {\n" +
			"                try {\n" +
			"                                       System.out.print(new X().twice(3));\n" +
			"                               } catch (Exception e) {\n" +
			"                                       // TODO Auto-generated catch block\n" +
			"                                       e.printStackTrace();\n" +
			"                               }\n" +
			"        }               \n" +
			"}\n" +
			"class MyException extends Exception {\n" +
			"       private static final long serialVersionUID = 3461899582505930474L;\n" +
			"       \n" +
			"}\n"
			);
	IJavaProject javaProject = this.workingCopies[0].getJavaProject(); //assuming single project for all working copies
	String old = javaProject.getOption(JavaCore.COMPILER_PB_ENABLE_PREVIEW_FEATURES, true);
	try {
		javaProject.setOption(JavaCore.COMPILER_PB_ENABLE_PREVIEW_FEATURES, JavaCore.ENABLED);
		IType type = this.workingCopies[0].getType("MyException");
		search(type, REFERENCES);
		assertSearchResults(
				"src/X.java int X.twice(int) [MyException] EXACT_MATCH"
		);
	} finally {
		javaProject.setOption(JavaCore.COMPILER_PB_ENABLE_PREVIEW_FEATURES, old);
	}
}

