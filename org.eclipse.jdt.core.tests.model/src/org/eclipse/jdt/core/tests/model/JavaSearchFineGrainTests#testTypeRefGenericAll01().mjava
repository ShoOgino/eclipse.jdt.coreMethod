public void testTypeRefGenericAll01() throws CoreException {
	setUpTypeRefGeneric01();
	search("*", TYPE, REFERENCES, getJavaSearchWorkingCopiesScope());
	assertSearchResults(
		"src/test01/Generic.java [import �|java.io.Serializable|�;@23] EXACT_MATCH\n" + 
		"src/test01/Generic.java [import �|type.def.Types|�;@52] EXACT_MATCH\n" + 
		"src/test01/Generic.java test01.Generic [public class Generic<T extends �|Types|�, U extends Types & Comparable<Types> & Serializable, V extends A<? super Types>> {@99] EXACT_MATCH\n" + 
		"src/test01/Generic.java test01.Generic [public class Generic<T extends Types, U extends �|Types|� & Comparable<Types> & Serializable, V extends A<? super Types>> {@116] EXACT_MATCH\n" + 
		"src/test01/Generic.java test01.Generic [public class Generic<T extends Types, U extends Types & �|Comparable|�<Types> & Serializable, V extends A<? super Types>> {@124] EXACT_MATCH\n" + 
		"src/test01/Generic.java test01.Generic [public class Generic<T extends Types, U extends Types & Comparable<�|Types|�> & Serializable, V extends A<? super Types>> {@135] EXACT_MATCH\n" + 
		"src/test01/Generic.java test01.Generic [public class Generic<T extends Types, U extends Types & Comparable<Types> & �|Serializable|�, V extends A<? super Types>> {@144] EXACT_MATCH\n" + 
		"src/test01/Generic.java test01.Generic [public class Generic<T extends Types, U extends Types & Comparable<Types> & Serializable, V extends �|A|�<? super Types>> {@168] EXACT_MATCH\n" + 
		"src/test01/Generic.java test01.Generic [public class Generic<T extends Types, U extends Types & Comparable<Types> & Serializable, V extends A<? super �|Types|�>> {@178] EXACT_MATCH\n" + 
		"src/test01/Generic.java test01.Generic.field [	�|Generic|�<? extends Types, ?, ?> field;@189] EXACT_MATCH\n" + 
		"src/test01/Generic.java test01.Generic.field [	Generic<? extends �|Types|�, ?, ?> field;@207] EXACT_MATCH\n" + 
		"src/test01/Generic.java test01.Generic.comp [	�|Comparable|�<String> comp;@228] EXACT_MATCH\n" + 
		"src/test01/Generic.java test01.Generic.comp [	Comparable<�|String|�> comp;@239] EXACT_MATCH\n" + 
		"src/test01/Generic.java test01.Generic.clazz [	�|Class|�<? extends Exception> clazz;@254] EXACT_MATCH\n" + 
		"src/test01/Generic.java test01.Generic.clazz [	Class<? extends �|Exception|�> clazz;@270] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java [import �|java.io.Serializable|�;@23] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java [import �|type.def.Types|�;@52] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java test01.TestGeneric [public class TestGeneric<T> extends �|Generic|�<Types, UClass, VClass> {@104] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java test01.TestGeneric [public class TestGeneric<T> extends Generic<�|Types|�, UClass, VClass> {@112] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java test01.TestGeneric [public class TestGeneric<T> extends Generic<Types, �|UClass|�, VClass> {@119] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java test01.TestGeneric [public class TestGeneric<T> extends Generic<Types, UClass, �|VClass|�> {@127] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java test01.TestGeneric.test [	�|TestGeneric|�<Types> test;@138] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java test01.TestGeneric.test [	TestGeneric<�|Types|�> test;@150] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java TestGeneric<String> test01.TestGeneric.foo(TestGeneric<Types>, Comparable<String>) [	�|TestGeneric|�<String> foo(TestGeneric<Types> param1, Comparable<String> param2) {@164] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java TestGeneric<String> test01.TestGeneric.foo(TestGeneric<Types>, Comparable<String>) [	TestGeneric<�|String|�> foo(TestGeneric<Types> param1, Comparable<String> param2) {@176] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java TestGeneric<String> test01.TestGeneric.foo(TestGeneric<Types>, Comparable<String>) [	TestGeneric<String> foo(�|TestGeneric|�<Types> param1, Comparable<String> param2) {@188] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java TestGeneric<String> test01.TestGeneric.foo(TestGeneric<Types>, Comparable<String>) [	TestGeneric<String> foo(TestGeneric<�|Types|�> param1, Comparable<String> param2) {@200] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java TestGeneric<String> test01.TestGeneric.foo(TestGeneric<Types>, Comparable<String>) [	TestGeneric<String> foo(TestGeneric<Types> param1, �|Comparable|�<String> param2) {@215] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java TestGeneric<String> test01.TestGeneric.foo(TestGeneric<Types>, Comparable<String>) [	TestGeneric<String> foo(TestGeneric<Types> param1, Comparable<�|String|�> param2) {@226] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java Comparable<TestGeneric<Types>> test01.TestGeneric.bar() [	�|Comparable|�<TestGeneric<Types>> bar() {@264] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java Comparable<TestGeneric<Types>> test01.TestGeneric.bar() [	Comparable<�|TestGeneric|�<Types>> bar() {@275] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java Comparable<TestGeneric<Types>> test01.TestGeneric.bar() [	Comparable<TestGeneric<�|Types|�>> bar() {@287] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java test01.UClass [class UClass extends �|Types|� implements Comparable<Types>, Serializable {@345] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java test01.UClass [class UClass extends Types implements �|Comparable|�<Types>, Serializable {@362] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java test01.UClass [class UClass extends Types implements Comparable<�|Types|�>, Serializable {@373] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java test01.UClass [class UClass extends Types implements Comparable<Types>, �|Serializable|� {@381] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java test01.UClass.serialVersionUID [	private static final �|long|� serialVersionUID = 1L;@418] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java int test01.UClass.compareTo(Types) [	public �|int|� compareTo(Types o) {@454] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java int test01.UClass.compareTo(Types) [	public int compareTo(�|Types|� o) {@468] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java test01.VClass [class VClass extends �|A|�<Types> {}@517] EXACT_MATCH\n" + 
		"src/test01/TestGeneric.java test01.VClass [class VClass extends A<�|Types|�> {}@519] EXACT_MATCH"
	);
}

