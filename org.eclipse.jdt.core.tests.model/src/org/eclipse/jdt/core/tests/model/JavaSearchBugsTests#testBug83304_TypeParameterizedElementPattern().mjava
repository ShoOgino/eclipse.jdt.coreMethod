public void testBug83304_TypeParameterizedElementPattern() throws CoreException {
	resultCollector.showRule = true;
	workingCopies = new ICompilationUnit[1];
	workingCopies[0] = getWorkingCopy("/JavaSearchBugs/src/b83304/Types.java",
		"package b83304;\n" + 
		"import g1.t.s.def.Generic;\n" + 
		"public class Types {\n" + 
		"	public Generic gen;\n" + 
		"	public Generic<Object> gen_obj;\n" + 
		"	public Generic<Exception> gen_exc;\n" + 
		"	public Generic<?> gen_wld;\n" + 
		"	public Generic<? extends Throwable> gen_thr;\n" + 
		"	public Generic<? super RuntimeException> gen_run;\n" + 
		"}\n"
		);
	IType type = selectType(workingCopies[0], "Generic", 4);
	search(type, REFERENCES, ERASURE_RULE);
	discard = false; // use working copy for next test
	assertSearchResults(
		"src/b83304/Types.java [g1.t.s.def.Generic] EQUIVALENT_RAW_MATCH\n" + 
		"src/b83304/Types.java b83304.Types.gen [Generic] EQUIVALENT_RAW_MATCH\n" + 
		"src/b83304/Types.java b83304.Types.gen_obj [Generic] ERASURE_MATCH\n" + 
		"src/b83304/Types.java b83304.Types.gen_exc [Generic] EXACT_MATCH\n" + 
		"src/b83304/Types.java b83304.Types.gen_wld [Generic] EQUIVALENT_MATCH\n" + 
		"src/b83304/Types.java b83304.Types.gen_thr [Generic] EQUIVALENT_MATCH\n" + 
		"src/b83304/Types.java b83304.Types.gen_run [Generic] EQUIVALENT_MATCH\n" + 
		"lib/JavaSearch15.jar g1.t.s.def.Generic<T> g1.t.s.def.Generic.foo() ERASURE_MATCH"
	);
}

