	// Search for DBCS package name from a jar also should report the match
	public void testBug376673e() throws CoreException, IOException {
	try {
		if ("macosx".equals(System.getProperty("osgi.os"))) {
			return;
		}
		String os = Platform.getOS();
		if (!Platform.OS_WIN32.equals(os)) {
			// on Windows we have Windows-1252 as default, *nix should use UTF-8
			assertUTF8Encoding();
		}
		IJavaProject p = createJavaProject("P", new String[] {}, new String[] { "/P/lib376673.jar", "JCL17_LIB" }, "", "1.7");
		IPath jarPath = p.getProject().getLocation().append("lib376673.jar");

		org.eclipse.jdt.core.tests.util.Util.createJar(
						new String[] {
						"p\uD842\uDF9F/i\uD842\uDF9F/Test.java",
						"package p\uD842\uDF9F.i\uD842\uDF9F;\n" +
						"public class Test{}\n" },
						jarPath.toOSString(),
						"1.7");
		refresh(p);
		waitForAutoBuild();
		waitUntilIndexesReady();
		int mask = IJavaSearchScope.APPLICATION_LIBRARIES | IJavaSearchScope.SOURCES;
		IJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] { p }, mask);
		search("Test", TYPE, DECLARATIONS, scope, this.resultCollector);

		try {
			if (this.resultCollector.count == 0) {
				System.out.println("Test " + getName() + " about to fail, listing extra debug info");
				System.out.println("LANG env variable: " + System.getenv("LANG"));
				System.out.println("Listing markers of test project");
				IMarker[] markers = p.getProject().findMarkers(null, true, IResource.DEPTH_INFINITE);
				for (IMarker marker : markers) {
					System.out.println(marker.getAttribute(IMarker.SEVERITY) + ":" + marker.getAttribute(IMarker.MESSAGE));
				}
				System.out.println("Resolved classpath entries for test project:");
				for (IClasspathEntry e : p.getResolvedClasspath(false)) {
					System.out.println(e);
				}
				System.out.println("All classpath entries for test project:");
				for (IClasspathEntry e : p.getResolvedClasspath(true)) {
					System.out.println(e);
				}
				printJavaElements(p, System.out);
				String jarFilePath = jarPath.toOSString();
				printZipContents(new File(jarFilePath), System.out);
			}
		} catch (Throwable t) {
			System.out.println("Exception occurred while printing extra infos for test " + getName());
			t.printStackTrace(System.out);
		}

		assertSearchResults("lib376673.jar p\uD842\uDF9F.i\uD842\uDF9F.Test [No source] EXACT_MATCH");
	} finally {
		deleteProject("P");
	}
	}

