private void sortUnit(ICompilationUnit unit, String expectedResult, boolean testPositions) throws CoreException {
	char[] initialSource = unit.getSource().toCharArray();
	int[] positions = null;
	if (testPositions) {
		positions = new int[initialSource.length];
		for (int i = 0; i < initialSource.length; i++) {
			positions[i] = i;
		}
	}
	IJavaElement element = unit.getWorkingCopy();
	CompilationUnitSorter.sort(new IJavaElement[] { element }, new int[][] { positions }, new DefaultJavaElementComparator(1,2,3,4,5,6,7,8,9), new NullProgressMonitor());
	String sortedSource = ((ICompilationUnit) element).getBuffer().getContents();
	assertEquals("Different output", sortedSource, expectedResult); //$NON-NLS-1$
	if (testPositions) {
		for (int i = 0, max = positions.length; i < max; i++) {
			assertEquals("wrong mapped positions at " + i + " <-> " + positions[i], initialSource[i], expectedResult.charAt(positions[i])); //$NON-NLS-1$ //$NON-NLS-2$
		}
	}
}

