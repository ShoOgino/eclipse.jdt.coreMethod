private void sortUnit(ICompilationUnit unit, String expectedResult, boolean testPositions) throws CoreException {
	debug(unit, "BEFORE");
	if (testPositions) {
		char[] initialSource = unit.getSource().toCharArray();
		int[] positions = new int[initialSource.length];
		for (int i = 0; i < initialSource.length; i++) {
			positions[i] = i;
		}
		CompilationUnitSorter.sort(new ICompilationUnit[] { unit }, new int[][] { positions }, new DefaultJavaElementComparator(1,2,3,4,5,6,7,8,9), new NullProgressMonitor());
		String sortedSource = unit.getBuffer().getContents();
		assertEquals("Different output", sortedSource, expectedResult);
		for (int i = 0, max = positions.length; i < max; i++) {
			assertEquals("wrong mapped positions at " + i + " <-> " + positions[i], initialSource[i], expectedResult.charAt(positions[i]));
		}
	} else {
		CompilationUnitSorter.sort(new ICompilationUnit[] { unit }, null, new DefaultJavaElementComparator(1,2,3,4,5,6,7,8,9), new NullProgressMonitor());
		String sortedSource = unit.getBuffer().getContents();
		if (expectedResult == null || expectedResult.length() == 0) {
			System.out.println(sortedSource);
		} else {
			assertEquals("Different output", sortedSource, expectedResult);
		}
	}
	debug(unit, "AFTER");
}

