public static Test suite() {
	
	if (false) {
		TestSuite suite = new Suite(JavaProjectTests.class.getName());
		suite.addTest(new JavaProjectTests("testPackageFragmentRootRawEntryWhenDuplicate"));
		return suite;
	}
	TestSuite suite = new Suite(JavaProjectTests.class.getName());
	suite.addTest(new JavaProjectTests("testPackageFragmentRootRawEntry"));
	suite.addTest(new JavaProjectTests("testPackageFragmentRootRawEntryWhenDuplicate"));
	suite.addTest(new JavaProjectTests("testProjectGetChildren"));
	suite.addTest(new JavaProjectTests("testProjectGetPackageFragments"));
	suite.addTest(new JavaProjectTests("testRootGetPackageFragments"));
	suite.addTest(new JavaProjectTests("testRootGetPackageFragments2"));
	suite.addTest(new JavaProjectTests("testInternalArchiveCorrespondingResource"));
	suite.addTest(new JavaProjectTests("testExternalArchiveCorrespondingResource"));
	suite.addTest(new JavaProjectTests("testProjectCorrespondingResource"));
	suite.addTest(new JavaProjectTests("testPackageFragmentCorrespondingResource"));
	suite.addTest(new JavaProjectTests("testPackageFragmentHasSubpackages"));
	suite.addTest(new JavaProjectTests("testIsDefaultPackage"));
	suite.addTest(new JavaProjectTests("testPackageFragmentRootCorrespondingResource"));
	suite.addTest(new JavaProjectTests("testJarPackageFragmentCorrespondingResource"));
	suite.addTest(new JavaProjectTests("testCompilationUnitCorrespondingResource"));
	suite.addTest(new JavaProjectTests("testClassFileCorrespondingResource"));
	suite.addTest(new JavaProjectTests("testArchiveClassFileCorrespondingResource"));
	suite.addTest(new JavaProjectTests("testBinaryTypeCorrespondingResource"));
	suite.addTest(new JavaProjectTests("testSourceMethodCorrespondingResource"));
	suite.addTest(new JavaProjectTests("testOutputLocationNotAddedAsPackageFragment"));
	suite.addTest(new JavaProjectTests("testOutputLocationNestedInRoot"));
	suite.addTest(new JavaProjectTests("testChangeOutputLocation"));
	suite.addTest(new JavaProjectTests("testFindElementPackage"));
	suite.addTest(new JavaProjectTests("testFindElementClassFile"));
	suite.addTest(new JavaProjectTests("testFindElementCompilationUnit"));
	suite.addTest(new JavaProjectTests("testFindElementCompilationUnitDefaultPackage"));
	suite.addTest(new JavaProjectTests("testFindElementInvalidPath"));
	suite.addTest(new JavaProjectTests("testFindElementPrereqSimpleProject"));
	suite.addTest(new JavaProjectTests("testProjectClose"));
	suite.addTest(new JavaProjectTests("testPackageFragmentRenameAndCreate"));
	suite.addTest(new JavaProjectTests("testFolderWithDotName"));
	suite.addTest(new JavaProjectTests("testPackageFragmentNonJavaResources"));
	suite.addTest(new JavaProjectTests("testPackageFragmentRootNonJavaResources"));
	suite.addTest(new JavaProjectTests("testAddNonJavaResourcePackageFragmentRoot"));
	suite.addTest(new JavaProjectTests("testFindPackageFragmentRootFromClasspathEntry"));
	suite.addTest(new JavaProjectTests("testGetClasspathOnClosedProject"));
	suite.addTest(new JavaProjectTests("testGetRequiredProjectNames"));
	suite.addTest(new JavaProjectTests("testGetNonJavaResources1"));
	suite.addTest(new JavaProjectTests("testGetNonJavaResources2"));
	suite.addTest(new JavaProjectTests("testGetNonJavaResources3"));
	suite.addTest(new JavaProjectTests("testGetNonJavaResources4"));
	suite.addTest(new JavaProjectTests("testSourceFolderWithJarName"));
	suite.addTest(new JavaProjectTests("testJdkLevelRoot"));
	
	// The following test must be at the end as it deletes a package and this would have side effects
	// on other tests
	suite.addTest(new JavaProjectTests("testDeletePackageWithAutobuild"));
	return suite;
}

