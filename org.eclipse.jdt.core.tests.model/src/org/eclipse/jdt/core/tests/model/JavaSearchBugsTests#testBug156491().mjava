/**
 * Bug 156491: [1.5][search] interfaces and annotations could be found with only one requets of searchAllTypeName
 * @see "https://bugs.eclipse.org/bugs/show_bug.cgi?id=156491"
 */
public void testBug156491() throws CoreException {
	resultCollector.showRule = true;
	workingCopies = new ICompilationUnit[5];
	workingCopies[0] = getWorkingCopy("/JavaSearchBugs/src/pack/I.java",
		"package pack;\n" + 
		"public interface I {}\n"
	);
	workingCopies[1] = getWorkingCopy("/JavaSearchBugs/src/pack/X.java",
		"package pack;\n" + 
		"public class X {\n" + 
		"	public String toString() {\n" + 
		"		return \"X\";\n" + 
		"	}\n" + 
		"}\n"
	);
	workingCopies[2] = getWorkingCopy("/JavaSearchBugs/src/pack/Sub.java",
		"package pack;\n" + 
		"public class Sub extends X {}\n"
	);
	workingCopies[3] = getWorkingCopy("/JavaSearchBugs/src/pack/Y.java",
		"package pack;\n" + 
		"public class Y {\n" + 
		"	public String toString() {\n" + 
		"		return \"Y\";\n" + 
		"	}\n" + 
		"}\n"
	);
	workingCopies[4] = getWorkingCopy("/JavaSearchBugs/src/pack/Test.java",
		"package pack;\n" + 
		"public class Test {\n" + 
		"	void noMatch(Y y) {\n" + 
		"		y.toString();\n" + 
		"		toString();\n" + 
		"	}\n" + 
		"	void validMatches(X x) {\n" + 
		"		x.toString();\n" + 
		"	}\n" + 
		"	void overriddenSuper(Object o) {\n" + 
		"		o.toString();\n" + 
		"	}\n" + 
		"	void overriddenPotential(I i) {\n" + 
		"		i.toString();\n" + 
		"	}\n" + 
		"	void overriddenSub(Sub s) {\n" + 
		"		s.toString();\n" + 
		"	}\n" + 
		"}\n"
	);
	IMethod method = workingCopies[1].getType("X").getMethod("toString", new String[0]);
	this.resultCollector.showFlavors = PatternLocator.OVERRIDDEN_FLAVOR;
	search(method, REFERENCES);
	assertSearchResults(
		"src/pack/Test.java void pack.Test.validMatches(X) [toString()] EXACT_MATCH\n" + 
		"src/pack/Test.java void pack.Test.overriddenSuper(Object) [toString()] EXACT_MATCH OVERRIDDEN\n" + 
		"src/pack/Test.java void pack.Test.overriddenSub(Sub) [toString()] EXACT_MATCH"
	);
}

