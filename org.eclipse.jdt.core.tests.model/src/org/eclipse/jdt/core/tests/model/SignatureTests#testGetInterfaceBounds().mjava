/**
 * @see Signature
 * @since 3.0
 */
public void testGetInterfaceBounds() {
	// tests with 1.5-specific elements
	String formalTypeParameterSignature = "Hello:";
	assertTrue("Signature#getInterfaceBounds is not correct1", Signature.getInterfaceBounds(formalTypeParameterSignature).length == 0);
	formalTypeParameterSignature = "Hello::Qi1;:Qi2;";
	assertTrue("Signature#getInterfaceBounds is not correct2", Signature.getInterfaceBounds(formalTypeParameterSignature).length == 2);
	assertEquals("Signature#getInterfaceBounds is not correct2a", Signature.getInterfaceBounds(formalTypeParameterSignature)[0], "Qi1;");
	assertEquals("Signature#getInterfaceBounds is not correct2b", Signature.getInterfaceBounds(formalTypeParameterSignature)[1], "Qi2;");
	formalTypeParameterSignature = "Hello:Qlist<Qstring;>;:Qi1;:Qi2;";
	assertTrue("Signature#getInterfaceBounds is not correct3", Signature.getInterfaceBounds(formalTypeParameterSignature).length == 2);
	assertEquals("Signature#getInterfaceBounds is not correct3a", Signature.getInterfaceBounds(formalTypeParameterSignature)[0], "Qi1;");
	assertEquals("Signature#getInterfaceBounds is not correct3b", Signature.getInterfaceBounds(formalTypeParameterSignature)[1], "Qi2;");
	try {
		Signature.getInterfaceBounds("");
		assertTrue("Signature#getInterfaceBounds is not correct: exception", false);
	} catch (IllegalArgumentException iae) {
		// do nothing
	}
}

