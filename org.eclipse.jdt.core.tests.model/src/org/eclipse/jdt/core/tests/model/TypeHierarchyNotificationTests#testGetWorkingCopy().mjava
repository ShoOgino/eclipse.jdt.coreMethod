/*
 * Ensures that getting a non-primary working copy does NOT trigger
 * a type hierarchy notification for the concerned hierarchy. 
 * See https://bugs.eclipse.org/bugs/show_bug.cgi?id=275805
 */
public void testGetWorkingCopy() throws CoreException {
	ITypeHierarchy h = null;
	ICompilationUnit superCopy = null;
	ICompilationUnit aWorkingCopy = null;
	try {
		
		createJavaProject("P");
		createFolder("/P/p");
		createFile(
			"/P/p/IX.java",
			"package p;\n" +
			"public interface IX {\n" +
			"}"
		);
		
		createFile(
				"/P/p/X.java",
				"package p;\n" +
				"public class X implements IX{\n" +
				"}"
			);

		superCopy = getCompilationUnit("/P/p/IX.java");
		superCopy.becomeWorkingCopy(null/*no progress*/);
		h = superCopy.getType("IX").newTypeHierarchy(null);		
		h.addTypeHierarchyChangedListener(this);
		
		aWorkingCopy = getCompilationUnit("P/p/X.java").getWorkingCopy(null);
		
		assertTrue("Should receive NO change", !this.changeReceived);
	} finally {
		if (h != null)
			h.removeTypeHierarchyChangedListener(this);
		if (aWorkingCopy != null)
			aWorkingCopy.discardWorkingCopy();
		if (superCopy!= null)
			superCopy.discardWorkingCopy();
		
		deleteProject("P");
	}
}

