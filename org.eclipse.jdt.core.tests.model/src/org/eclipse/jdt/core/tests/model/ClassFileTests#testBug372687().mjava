	/*
	 * https://bugs.eclipse.org/bugs/show_bug.cgi?id=372687
	 * Ensures that if more than one thread try to open a class file at the same time, the children are correct.
	 */
	public void testBug372687() throws CoreException {
		String expected = "X.class\n" + 
						  "  class X\n" + 
						  "    X()\n" + 
						  "    void foo()";
		class GetClassThread extends Thread {
			public String childString;
			public void run(){
				IOrdinaryClassFile clazz = ClassFileTests.this.jarRoot.getPackageFragment("workingcopy").getOrdinaryClassFile("X.class");
				try {
					this.childString = expandAll(clazz);
				} catch (CoreException e) {
					e.printStackTrace();
				}
			}
		}
		for (int i = 0; i < 10; i++) {
			GetClassThread th1 = new GetClassThread();
			GetClassThread th2 = new GetClassThread();
			GetClassThread th3 = new GetClassThread();
			th1.start();
			th2.start();
			th3.start();
			try {
				th1.join();
				th2.join();
				th3.join();
			} catch (InterruptedException e) {
				// ignore
			}
			assertEquals("Unexpected children", expected, th1.childString);
			assertEquals("Unexpected children", expected, th2.childString);
			assertEquals("Unexpected children", expected, th3.childString);
			IOrdinaryClassFile clazz = ClassFileTests.this.jarRoot.getPackageFragment("workingcopy").getOrdinaryClassFile("X.class");
			clazz.close();
		}
	}

