public void testBug97606b() throws CoreException {
	workingCopies = new ICompilationUnit[4];
	workingCopies[0] = getWorkingCopy("/JavaSearchBugs/src/b97606/pack/def/L.java",
		"package b97606.pack.def;\n" + 
		"public interface L<E> {}\n"
	);
	workingCopies[1] = getWorkingCopy("/JavaSearchBugs/src/b97606/pack/def/LL.java",
		"package b97606.pack.def;\n" + 
		"public class LL<E> implements L<E> {\n" + 
		"	public Object clone() {\n" + 
		"		return null;\n" + 
		"	}\n" + 
		"}\n"
	);
	workingCopies[2] = getWorkingCopy("/JavaSearchBugs/src/b97606/pack/ref/K.java",
		"package b97606.pack.ref;\n" + 
		"public interface K {}\n"
	);
	workingCopies[3] = getWorkingCopy("/JavaSearchBugs/src/b97606/pack/ref/X.java",
		"package b97606.pack.ref;\n" + 
		"import b97606.pack.def.*;\n" + 
		"public class X implements K {\n" + 
		"	private LL sg;\n" + 
		"	protected synchronized L<K> getSG() {\n" + 
		"		return (sg != null) \n" + 
		"			? (L) sg.clone()\n" + 
		"			: null;\n" + 
		"	}\n" + 
		"}\n"
	);
	IPath rootPath = new Path("/JavaSearchBugs/src/b97606");
	IPath pathDef = rootPath.append("pack").append("def");
	IPath pathRef = rootPath.append("pack").append("ref");
	try {
		createFolder(pathDef);
		createFolder(pathRef);
		workingCopies[0].commitWorkingCopy(true, null);
		workingCopies[1].commitWorkingCopy(true, null);
		workingCopies[2].commitWorkingCopy(true, null);
		workingCopies[3].commitWorkingCopy(true, null);
		this.resultCollector.showRule = true;
		IType type = workingCopies[0].getType("L");
		search(type, REFERENCES, SearchPattern.R_ERASURE_MATCH);
		assertSearchResults(
			"src/b97606/pack/def/LL.java b97606.pack.def.LL [L] ERASURE_MATCH\n" + 
			"src/b97606/pack/ref/X.java L<K> b97606.pack.ref.X.getSG() [L] ERASURE_MATCH\n" + 
			"src/b97606/pack/ref/X.java L<K> b97606.pack.ref.X.getSG() [L] ERASURE_RAW_MATCH"
		);
	}
	finally {
		deleteFolder(rootPath);
	}
}

