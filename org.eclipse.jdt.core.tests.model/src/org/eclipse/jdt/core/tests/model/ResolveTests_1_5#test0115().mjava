//https://bugs.eclipse.org/bugs/show_bug.cgi?id=238534
public void test0115() throws Exception {
	this.workingCopies = new ICompilationUnit[1];
	this.workingCopies[0] = getWorkingCopy(
			"/Resolve/src/test/X.java",
			"package test;\n" +
			"\n" +
			"import java.io.IOException;\n" +
			"\n" +
			"interface TreeVisitor<T, U> {\n" +
			"        public T visit(U location);\n" +
			"}\n" +
			"\n" +
			"interface TreeVisitable<U> {\n" +
			"        public <T> T visit(TreeVisitor<T, U> visitor) throws IOException;\n" +
			"}\n" +
			"\n" +
			"abstract class Param implements TreeVisitable<Param> {\n" +
			"        public final Param lookforParam(final String name) {\n" +
			"                TreeVisitor<Param, Param> visitor = new TreeVisitor<Param,Param>() {\n" +
			"                        public Param visit(Param location) {\n" +
			"                                return null;\n" +
			"                        }\n" +
			"                };\n" +
			"                return visit(visitor); // SELECT #visit(...)\n" +
			"        }\n" +
			"\n" +
			"        public abstract <T> T visit(TreeVisitor<T, Param> visitor);\n" +
			"}\n" +
			"\n" +
			"class StructParam extends Param {\n" +
			"        public <T> T visit(TreeVisitor<T, Param> visitor) {\n" +
			"                return null;\n" +
			"        }\n" +
			"}\n" +
			"\n" +
			"public class X {\n" +
			"        public static void main(String[] args) {\n" +
			"                StructParam p = new StructParam();\n" +
			"                p.lookforParam(\"abc\");\n" +
			"                System.out.println(\"done\");\n" +
			"        }\n" +
			"\n" +
			"}");

	String str = this.workingCopies[0].getSource();
	int start = str.lastIndexOf("visit(visitor); // SELECT #visit(...)");
	int length = "visit".length();
	IJavaElement[] elements =  this.workingCopies[0].codeSelect(start, length, this.wcOwner);

	assertElementsEqual(
			"Unexpected elements",
			"visit(TreeVisitor<T,Param>) [in Param [in [Working copy] X.java [in test [in src [in Resolve]]]]]",
			elements
		);
}

