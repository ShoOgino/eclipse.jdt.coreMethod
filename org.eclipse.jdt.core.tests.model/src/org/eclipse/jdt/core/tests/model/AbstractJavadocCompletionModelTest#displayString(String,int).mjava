	/* (non-Javadoc)
	 * @see org.eclipse.jdt.core.tests.model.AbstractJavaModelTests#displayString(java.lang.String, int)
	 */
	protected String displayString(String toPrint, int indent) {
		String toDisplay = super.displayString(toPrint, indent);
		int openBracket = toDisplay.indexOf(", [");
		if (openBracket > 0) {
			StringBuffer buffer = new StringBuffer();
			int closeBracket = 0;
			while (openBracket > 0) {
				buffer.append(toDisplay.substring(closeBracket, openBracket+2));
				closeBracket = toDisplay.indexOf("], ", openBracket+3);
				if (closeBracket < 0) break; // invalid
				closeBracket += 3;
				buffer.append("\"+this.positions+");
				int i=0;
				while (toDisplay.charAt(closeBracket+i) != '}') i++;
				try {
					int relevance = Integer.parseInt(toDisplay.substring(closeBracket, closeBracket+i));
					switch (relevance) {
						case JAVADOC_RELEVANCE:
							buffer.append("JAVADOC_RELEVANCE+\"");
							break;
						case JAVADOC_RELEVANCE+R_INLINE_TAG:
							buffer.append("(JAVADOC_RELEVANCE+R_INLINE_TAG)+\"");
							break;
						default:
							if (relevance >= 55) {
								buffer.append("("+(relevance-R_INLINE_TAG)+"+R_INLINE_TAG)+\"");
							} else {
								buffer.append('"');
								buffer.append(relevance);
							}
							break;
					}
//					buffer.append('}');
					closeBracket += i;
				}
				catch (NumberFormatException nfe) {
					System.err.println(nfe.getMessage()+" should not occur!");
				}
				openBracket = toDisplay.indexOf(", [", closeBracket);
			}
			if (closeBracket > 0) {
				buffer.append(toDisplay.substring(closeBracket, toDisplay.length()));
				toDisplay = buffer.toString();
			}
		}
		return toDisplay.replaceAll(", 8}", ", \"+JAVADOC_RELEVANCE+\"}");
	}

