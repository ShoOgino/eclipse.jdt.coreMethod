/*
 * Ensure that warning are suppressed by an @SuppressWarning annotation.
 */
// TODO (jerome or philippe) reenable when this test is no longer failing
public void _testSuppressWarnings1() throws JavaModelException {
	ICompilationUnit otherCopy = null;
	try {
		WorkingCopyOwner owner = new WorkingCopyOwner() {};
		otherCopy = getWorkingCopy(
			"/Reconciler15/src/X.java",
	        "@Deprecated\n" + 
	        "public class X {\n" + 
	        "   void foo(){}\n" +
	        "}\n",
			owner,
			false/*don't compute problems*/);
		setUp15WorkingCopy("/Reconciler15/src/Y.java", owner);
		setWorkingCopyContents(
	        "public class Y extends X {\n" + 
	        "  @SuppressWarnings(\"all\")\n" +
	        "   void foo(){ super.foo(); }\n" +
	        "   Zork z;\n" +
	        "}\n"
		);
		this.workingCopy.reconcile(ICompilationUnit.NO_AST, false, null, null);
		assertProblems(
			"Unexpected problems",
			"----------\n" + 
			"1. WARNING in /Reconciler15/src/Y.java (at line 1)\n" + 
			"	public class Y extends X {\n" + 
			"	             ^\n" + 
			"The constructor X() is deprecated\n" + 
			"----------\n" + 
			"2. ERROR in /Reconciler15/src/Y.java (at line 4)\n" + 
			"	Zork z;\n" + 
			"	^^^^\n" + 
			"Zork cannot be resolved to a type\n" + 
			"----------\n"
		);
	} finally {
		if (otherCopy != null)
			otherCopy.discardWorkingCopy();
	}
}

