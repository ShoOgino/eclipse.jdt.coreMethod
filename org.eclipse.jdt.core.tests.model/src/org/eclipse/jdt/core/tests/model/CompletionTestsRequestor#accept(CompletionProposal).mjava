	public void accept(CompletionProposal proposal) {
		char[] typeName = null;
		switch(proposal.getKind()) {
			case CompletionProposal.ANONYMOUS_CLASS_DECLARATION :
				typeName = Signature.getSignatureSimpleName(proposal.getDeclarationSignature());
				elements.addElement(new String(typeName));
				this.acceptCommon(proposal);
				if (debug)
					System.out.println("anonymous type " + new String(typeName));
				break;
				
			case CompletionProposal.TYPE_REF :
				if((proposal.getFlags() & Flags.AccEnum) != 0) {
					
				} else if((proposal.getFlags() & Flags.AccInterface) != 0) {
					typeName = Signature.getSignatureSimpleName(proposal.getSignature());
					elements.addElement(new String(typeName));
					this.acceptCommon(proposal);
					if (debug)
						System.out.println("Interface " + new String(typeName));
				} else {
					typeName = Signature.getSignatureSimpleName(proposal.getSignature());
					elements.addElement(new String(typeName));
					this.acceptCommon(proposal);
					if (debug) {
						if(Signature.getTypeSignatureKind(proposal.getSignature()) == Signature.TYPE_VARIABLE_SIGNATURE) {
							System.out.println("type parameter " + new String(typeName));
						} else {
							System.out.println("Class " + new String(typeName));
						}
					}
				}
				break;
				
			case CompletionProposal.FIELD_REF :
				elements.addElement(new String(proposal.getName()));
				this.acceptCommon(proposal);
				if (debug)
					System.out.println("Field " + new String(proposal.getName()));
				break;
				
			case CompletionProposal.KEYWORD:
				elements.addElement(new String(proposal.getName()));
				this.acceptCommon(proposal);
				if (debug)
					System.out.println("Keyword " + new String(proposal.getName()));
				break;
				
			case CompletionProposal.LABEL_REF:
				elements.addElement(new String(proposal.getName()));
				this.acceptCommon(proposal);
				if (debug)
					System.out.println("Label " + new String(proposal.getName()));
				break;
				
			case CompletionProposal.LOCAL_VARIABLE_REF:
				elements.addElement(new String(proposal.getName()));
				this.acceptCommon(proposal);
				if (debug)
					System.out.println("Local variable " + new String(proposal.getName()));
				break;
				
			case CompletionProposal.METHOD_REF:
				elements.addElement(new String(proposal.getName()));
				this.acceptCommon(proposal);
				if (debug)
					System.out.println("method " + new String(proposal.getName()));
				break;
				
			case CompletionProposal.METHOD_DECLARATION:
				elements.addElement(new String(proposal.getName()));
				this.acceptCommon(proposal);
				if (debug)
					System.out.println("method declaration " + new String(proposal.getName()));
				break;
				
			case CompletionProposal.PACKAGE_REF:
				elements.addElement(new String(proposal.getDeclarationSignature()));
				this.acceptCommon(proposal);
				if (debug)
					System.out.println("package " + new String(proposal.getDeclarationSignature()));
				break;
				
			case CompletionProposal.VARIABLE_DECLARATION:
				elements.addElement(new String(proposal.getName()));
				this.acceptCommon(proposal);
				if (debug)
					System.out.println("variable name " + new String(proposal.getName()));
				break;
		}

	}

