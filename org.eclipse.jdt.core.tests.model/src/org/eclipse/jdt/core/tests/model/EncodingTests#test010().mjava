	/**
	 * Get class file with an associated source written in UTF-8 charset using no specific encoding.
	 * Verification is done by comparing source with file contents read directly with ASCII encoding...
	 */
	// TODO (frederic) put back assertions when failure on linux platform will be fixed
	public void test010() throws JavaModelException, CoreException {

		// Get class file and compare source
		this.utf8Source = getClassFile("Encoding" , "bins", "testUTF8", "Test.class"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$
		assertNotNull(this.utf8Source);
		String source = this.utf8Source.getSource();
		assertNotNull(source);
		String encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, "ASCII"));
//		assertFalse("Workspace encoding: "+getWorkspaceRoot().getDefaultCharset()+" should be different than ASCII!", "ASCII".equals(getWorkspaceRoot().getDefaultCharset()));
//		assertFalse("Sources should not be the same as they were decoded with different encoding!", encodedContents.equals(source));
		System.out.println("Encoding tests010:");
		System.out.println("  - file encoding: "+this.utf8File.getCharset());
		System.out.println("  - project encoding: "+this.encodingProject.getDefaultCharset());
		System.out.println("  - workspace encoding: "+getWorkspaceRoot().getDefaultCharset());
		if (encodedContents.equals(source)) {
//			System.out.println("  => FAIL: Sources should not be the same as they were decoded with different encoding!");
		} else {
			System.out.println("  => SUCCESS: sources are different");
		}
	}

