public void testTypeRefGenericAll02_WildcardBound() throws CoreException {
	setUpTypeRefGeneric02();
	search("*", TYPE, WILDCARD_BOUND_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());
	assertSearchResults(
		"src/test02/Test.java test02.Test.field [	Test<A, ? extends �|B|�, ? super C> field = new Test<A, Z<String>, X<String>> () {@65] EXACT_MATCH\n" + 
		"src/test02/Test.java test02.Test.field [	Test<A, ? extends B, ? super �|C|�> field = new Test<A, Z<String>, X<String>> () {@76] EXACT_MATCH\n" + 
		"src/test02/Test.java Test<? super A,B,? extends C> test02.Test.foo(Test<? extends A,? super B,C>) [	Test<? super �|A|�, B, ? extends C> foo(Test<? extends A, ? super B, C> param) {@303] EXACT_MATCH\n" + 
		"src/test02/Test.java Test<? super A,B,? extends C> test02.Test.foo(Test<? extends A,? super B,C>) [	Test<? super A, B, ? extends �|C|�> foo(Test<? extends A, ? super B, C> param) {@319] EXACT_MATCH\n" + 
		"src/test02/Test.java Test<? super A,B,? extends C> test02.Test.foo(Test<? extends A,? super B,C>) [	Test<? super A, B, ? extends C> foo(Test<? extends �|A|�, ? super B, C> param) {@341] EXACT_MATCH\n" + 
		"src/test02/Test.java Test<? super A,B,? extends C> test02.Test.foo(Test<? extends A,? super B,C>) [	Test<? super A, B, ? extends C> foo(Test<? extends A, ? super �|B|�, C> param) {@352] EXACT_MATCH"
	);
}

