/*
 * Ensures that a type hierarchy on a region that contains a type with a missing super class is correct
 * (regression test for https://bugs.eclipse.org/bugs/show_bug.cgi?id=154865 )
 */
public void testRegion5() throws Exception {
	try {
		createJavaProject("P", new String[] {""}, new String[] {"JCL_LIB"}, "");
		createFolder("/P/p");
		createFile(
			"/P/p/X.java",
			"package p;\n" + 
			"public class X {\n" + 
			"}\n" + 
			"class Y extends X {\n" + 
			"}"
		);
		createFile(
			"/P/p/Z.java",
			"package p;\n" + 
			"public class Z extends Unknown {\n" + 
			"}"
		);
		IPackageFragment pkg = getPackage("/P/p");
		IRegion region = JavaCore.newRegion();
		region.add(pkg);
		ITypeHierarchy h = pkg.getJavaProject().newTypeHierarchy(region, null);
		assertHierarchyEquals(
			"Focus: <NONE>\n" + 
			"Super types of root classes:\n" + 
			"  Object [in Object.class [in java.lang [in "+ getExternalJCLPathString() + "]]]\n" + 
			"  Z [in Z.java [in p [in <project root> [in P]]]]\n" + 
			"Sub types of root classes:\n" + 
			"  Object [in Object.class [in java.lang [in "+ getExternalJCLPathString() + "]]]\n" + 
			"    X [in X.java [in p [in <project root> [in P]]]]\n" + 
			"      Y [in X.java [in p [in <project root> [in P]]]]\n" + 
			"  Z [in Z.java [in p [in <project root> [in P]]]]\n",
			h);
	} finally {
		deleteProject("P");
	}
}

