// Bug 300576 - NPE Computing type hierarchy when compliance doesn't match libraries
// test that a missing java.lang.Enum doesn't cause NPE
public void testBug300576() throws CoreException {
	IJavaProject prj = null;
	try {
		prj = createJavaProject("Bug300576", new String[] {"src"}, new String[] {"JCL_LIB"}, "bin", "1.5");
		createFolder("/Bug300576/src/p");
		createFile("/Bug300576/src/p/Outer.java",
				"package p;\n" +
				"class Outer {\n" +
				"    enum A {\n" +
				"        GREEN, DARK_GREEN, BLACK;\n" +
				"        /** Javadoc of getNext() */\n" +
				"        A getNext() {\n" +
				"            switch (this) {\n" +
				"                case GREEN : return DARK_GREEN;\n" +
				"                case DARK_GREEN : return BLACK;\n" +
				"                case BLACK : return GREEN;\n" +
				"                default : return null;\n" +
				"            }\n" +
				"        }\n" +
				"    }\n" +
				"    {\n" +
				"        A a= A.GREEN.getNext();\n" +
				"    }\n" +
				"}\n");
		IType a = getCompilationUnit("Bug300576", "src", "p", "Outer.java").getType("Outer").getType("A");
		IRegion region = JavaCore.newRegion();
		region.add(getPackageFragmentRoot("Bug300576", "src"));
		ITypeHierarchy hierarchy = prj.newTypeHierarchy(a, region, new NullProgressMonitor());
		assertHierarchyEquals(
				"Focus: A [in Outer [in Outer.java [in p [in src [in Bug300576]]]]]\n" +
				"Super types:\n" +
				"Sub types:\n",
				hierarchy);
	} finally {
		if (prj != null)
			deleteProject(prj);
	}
}

