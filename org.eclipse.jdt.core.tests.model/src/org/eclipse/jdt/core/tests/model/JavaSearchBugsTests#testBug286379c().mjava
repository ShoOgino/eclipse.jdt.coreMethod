/**
 * If any javaLikeNames are added, this ensures that such files can get searched 
 * atleast on the restart of the workspace. 
 * If any javaLikeNames are deleted, this ensures that the index file is regenerated.
 * 
 */	
public void testBug286379c() throws CoreException {
	IContentType javaContentType = Platform.getContentTypeManager().getContentType(JavaCore.JAVA_SOURCE_CONTENT_TYPE);
	try {
		IJavaProject proj = createJavaProject("P");
		IPath projPath = proj.getPath();
		createFolder("/P/p");			
		createFile(
			"/P/p/Xtorem.torem",
			"package p;\n" +
			"public class Xtorem {\n" +
			"}"
		);
		waitUntilIndexesReady();
		
		assertNotNull("We should have got a Java Source a content type!", javaContentType);
		javaContentType.addFileSpec("torem", IContentType.FILE_EXTENSION_SPEC);
		TypeNameMatchCollector collector = new TypeNameMatchCollector();
		new SearchEngine().searchAllTypeNames(
				null,
				new char[][] {"Xtorem".toCharArray()},
				SearchEngine.createWorkspaceScope(),
				collector,
				IJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,
				null);
		// Actually it would be great if we could get the file in the search result, 
		// but currently this doesn't happen as we don't get the appropriate delta
		// events from the platform. We should change the test if this is fixed.
		// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=118619
		assertSearchResults("No search results expected", "", collector);  
		
		// Restarting should make the search to succeed. 
		simulateExit();
		simulateRestart();		
		collector = new TypeNameMatchCollector();
		new SearchEngine().searchAllTypeNames(
				null,
				new char[][] {"Xtorem".toCharArray()},
				SearchEngine.createWorkspaceScope(),
				collector,
				IJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,
				null);
		String expected = "Xtorem (not open) [in Xtorem.torem [in p [in <project root> [in P]]]]";
		assertSearchResults(expected, collector);
		javaContentType.removeFileSpec("torem", IContentType.FILE_EXTENSION_SPEC);
		
		// Get the time stamp of the index file
		IndexManager manager = JavaModelManager.getIndexManager();
		Index index = manager.getIndex(projPath, true, false);
		File indexFile = index.getIndexFile();
		long lastModified = indexFile.lastModified();
		
		// Restarting should update the index file to remove the references of any .torem files
		simulateExit();		
		simulateRestart();		
		
		waitUntilIndexesReady();
		Index newIndex = manager.getIndex(projPath , true, false);
		assertTrue("Index file should be changed!!!", newIndex.getIndexFile().lastModified() - lastModified != 0);
		
	} finally {
		if (javaContentType != null)
			javaContentType.removeFileSpec("torem", IContentType.FILE_EXTENSION_SPEC);
		deleteProject("P");
	}
}

