	public void test018e() throws JavaModelException {
		this.workingCopies = new ICompilationUnit[1];
		this.workingCopies[0] = getWorkingCopy(
				"/Completion/src/X.java",
				"import org.eclipse.jdt.annotation.*;\n" + 
				"interface IN0 {} \n" + 
				"interface IN1 extends IN0 {} \n" + 
				"interface IN2 extends IN0 {}\n" + 
				"public class X {\n" + 
				"	@NonNull IN1 n_1() { return new IN1() {}; } \n" + 
				"	IN2 n_2() { return null; } \n" + 
				"	<M> void m(@NonNull Supplier<@NonNull M> m2) { } \n" + 
				"	void testSw(int i) { \n" + 
				"		m(switch(i) { \n" + 
				"			case 1 -> this::n_1; \n" + 
				"			case 2 -> () -> n_; \n" + 
				"	}\n" + 
				"}\n" +
				"interface Supplier<T> {\n" + 
				"    T get();\n" + 
				"}");
		CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);
		requestor.allowAllRequiredProposals();
		String str = this.workingCopies[0].getSource();
		String completeBehind = "() -> n_";
		int cursorLocation = str.indexOf(completeBehind) + completeBehind.length();
		this.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);
		assertResults(
				"n_1[LOCAL_VARIABLE_REF]{n_1, null, Ljava.lang.Object;, n_1, null, 51}\n" + 
				"n_1[METHOD_REF]{n_1(), LX;, ()LIN1;, n_1, null, 52}\n" + 
				"n_2[METHOD_REF]{n_2(), LX;, ()LIN2;, n_2, null, 52}",
						requestor.getResults());
	}

