/**
 * Bug 73336: [1.5][search] Search Engine does not find type references of actual generic type parameters
 * @see "http://bugs.eclipse.org/bugs/show_bug.cgi?id=73336"
 */
public void testBug73336() throws CoreException {
	workingCopies = new ICompilationUnit[6];
	WorkingCopyOwner owner = new WorkingCopyOwner() {};
	workingCopies[0] = getWorkingCopy("/JavaSearchBugs/src/b73336/A.java",
		"package b73336;\n" + 
		"public class A {}\n",
		owner,
		true);
	workingCopies[1] = getWorkingCopy("/JavaSearchBugs/src/b73336/AA.java",
		"package b73336;\n" + 
		"public class AA extends A {}\n",
		owner,
		true);
	workingCopies[2] = getWorkingCopy("/JavaSearchBugs/src/b73336/B.java",
		"package b73336;\n" + 
		"public class B extends X<A, A> {\n" + 
		"	<T> void foo(T t) {}\n" + 
		"}\n",
		owner,
		true);
	workingCopies[3] = getWorkingCopy("/JavaSearchBugs/src/b73336/C.java",
		"package b73336;\n" + 
		"public class C implements I<A> {\n" + 
		"	public void foo() {\n" + 
		"		B b = new B();\n" + 
		"		b.<A>foo(new A());\n" + 
		"	}\n" + 
		"}\n",
		owner,
		true	);
	workingCopies[4] = getWorkingCopy("/JavaSearchBugs/src/b73336/I.java",
		"package b73336;\n" + 
		"public interface I<T>  {\n" + 
		"	public void foo();\n" + 
		"}\n",
		owner,
		true	);
	workingCopies[5] = getWorkingCopy("/JavaSearchBugs/src/b73336/X.java",
		"package b73336;\n" + 
		"public class X<T, U> {\n" + 
		"	<V> void foo(V v) {}\n" + 
		"	class Member<T> {\n" + 
		"		void foo() {}\n" + 
		"	}\n" + 
		"}\n",
		owner,
		true	);
	// search for first and second method should both return 2 inaccurate matches
	IType type = workingCopies[0].getType("A");
	search(type, REFERENCES); //, getJavaSearchScopeBugs("b73336", false));
	assertSearchResults(
		"src/b73336/AA.java b73336.AA [A] EXACT_MATCH\n" + 
		"src/b73336/B.java b73336.B [A] EXACT_MATCH\n" + 
		"src/b73336/B.java b73336.B [A] EXACT_MATCH\n" + 
		"src/b73336/C.java b73336.C [A] EXACT_MATCH\n" + 
		"src/b73336/C.java void b73336.C.foo() [A] EXACT_MATCH\n" + 
		"src/b73336/C.java void b73336.C.foo() [A] EXACT_MATCH"
	);
}

