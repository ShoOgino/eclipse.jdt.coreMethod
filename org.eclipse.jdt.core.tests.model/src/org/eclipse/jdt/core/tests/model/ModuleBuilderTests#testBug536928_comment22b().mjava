	public void testBug536928_comment22b() throws CoreException, IOException {
		try {
			IJavaProject project = createJava9Project("ztest", new String[] { "src" });
			createFolder("/ztest/lib");
			Util.createJar(new String[] {
					"javax/xml/transform/Transformer.java",
					"package javax.xml.transform;\n" +
					"public class Transformer {}\n",
					"javax/xml/transform/Result.java",
					"package javax.xml.transform;\n" +
					"public class Result {}\n"
				},
				project.getProject().getLocation().toString() + "/lib/xml-apis.jar",
				"1.8");
			project.getProject().refreshLocal(IResource.DEPTH_INFINITE, null);
			IClasspathEntry libraryEntry = JavaCore.newLibraryEntry(new Path("/ztest/lib/xml-apis.jar"), null, null);
			addClasspathEntry(project, libraryEntry, 2); // DIFFERENCE HERE: place xml-apis.jar AFTER jrt-fs.jar
			
			String testSource =
					"package com.ztest;\n" + 
					"import javax.xml.transform.Transformer;\n" + 
					"\n" + 
					"public class TestApp {\n" +
					"	Transformer ts;\n" +
					"	javax.xml.transform.Result result;\n" + 
					"}\n";
			createFolder("/ztest/src/com/ztest");
			createFile("/ztest/src/com/ztest/TestApp.java", testSource);
			String test2Source =
					"package com.ztest;\n" +
					"import javax.xml.transform.*;\n" +
					"public class Test2 {\n" +
					"	Transformer ts;\n" +
					"}\n";
			createFile("/ztest/src/com/ztest/Test2.java", test2Source);
			getWorkspace().build(IncrementalProjectBuilder.FULL_BUILD, null);
			IMarker[] markers = project.getProject().findMarkers(null, true, IResource.DEPTH_INFINITE);
			sortMarkers(markers);
			assertMarkers("Unexpected Markers",
					"The package javax.xml.transform is accessible from more than one module: <unnamed>, java.xml\n" +
					"The package javax.xml.transform is accessible from more than one module: <unnamed>, java.xml\n" +
					"Transformer cannot be resolved to a type\n" +
					"Transformer cannot be resolved to a type\n" +
					"The package javax.xml.transform is accessible from more than one module: <unnamed>, java.xml",
					markers);
			
			char[] sourceChars = testSource.toCharArray();
			this.problemRequestor.initialize(sourceChars);
			getCompilationUnit("/ztest/src/com/ztest/TestApp.java").getWorkingCopy(this.wcOwner, null);
			assertProblems(
					"Unexpected problems",
					"----------\n" + 
					"1. ERROR in /ztest/src/com/ztest/TestApp.java (at line 2)\n" + 
					"	import javax.xml.transform.Transformer;\n" + 
					"	       ^^^^^^^^^^^^^^^^^^^\n" + 
					"The package javax.xml.transform is accessible from more than one module: <unnamed>, java.xml\n" + 
					"----------\n" + 
					"2. ERROR in /ztest/src/com/ztest/TestApp.java (at line 5)\n" + 
					"	Transformer ts;\n" + 
					"	^^^^^^^^^^^\n" + 
					"Transformer cannot be resolved to a type\n" + 
					"----------\n" + 
					"3. ERROR in /ztest/src/com/ztest/TestApp.java (at line 6)\n" + 
					"	javax.xml.transform.Result result;\n" + 
					"	^^^^^^^^^^^^^^^^^^^\n" + 
					"The package javax.xml.transform is accessible from more than one module: <unnamed>, java.xml\n" + 
					"----------\n",
					this.problemRequestor);

			sourceChars = test2Source.toCharArray();
			this.problemRequestor.initialize(sourceChars);
			getCompilationUnit("/ztest/src/com/ztest/Test2.java").getWorkingCopy(this.wcOwner, null);
			assertProblems(
					"Unexpected problems",
					"----------\n" + 
					"1. ERROR in /ztest/src/com/ztest/Test2.java (at line 2)\n" + 
					"	import javax.xml.transform.*;\n" + 
					"	       ^^^^^^^^^^^^^^^^^^^\n" + 
					"The package javax.xml.transform is accessible from more than one module: <unnamed>, java.xml\n" + 
					"----------\n" + 
					"2. ERROR in /ztest/src/com/ztest/Test2.java (at line 4)\n" + 
					"	Transformer ts;\n" + 
					"	^^^^^^^^^^^\n" + 
					"Transformer cannot be resolved to a type\n" + 
					"----------\n",
					this.problemRequestor);
		} finally {
			deleteProject("ztest");
		}
	}

