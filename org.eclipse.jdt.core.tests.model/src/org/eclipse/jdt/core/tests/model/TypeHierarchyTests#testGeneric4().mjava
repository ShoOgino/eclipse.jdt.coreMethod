/*
 * Ensures that a super type hierarchy on a generic type can be opened
 * (regression test for bug 72348 [1.5][Type Hierarchy] Super type hierarchy of class extending generic type is empty)
 */
public void testGeneric4() throws JavaModelException {
	IType type = getCompilationUnit("/TypeHierarchy15/src/X.java").getType("X");
	ITypeHierarchy hierarchy = type.newSupertypeHierarchy(null);
	assertHierarchyEquals(
		"Focus: X [in X.java [in <default> [in src [in TypeHierarchy15]]]]\n" + 
		"Super types:\n" + 
		"  List {key=Lutil/List<TE;>;} [in List.class [in util [in lib15.jar [in TypeHierarchy15]]]]\n" + 
		"  ArrayList {key=Lutil/ArrayList<TE;>;} [in ArrayList.class [in util [in lib15.jar [in TypeHierarchy15]]]]\n" + 
		"    List {key=Lutil/List<TE;>;} [in List.class [in util [in lib15.jar [in TypeHierarchy15]]]]\n" + 
		"    AbstractList {key=Lutil/AbstractList<TE;>;} [in AbstractList.class [in util [in lib15.jar [in TypeHierarchy15]]]]\n" + 
		"      Object {key=Ljava/lang/Object;} [in Object.class [in java.lang [in "+ getExternalJCLPathString("1.5") + " [in TypeHierarchy15]]]]\n" + 
		"Sub types:\n",
		hierarchy
	);
}

