	// Test sealed types for reconciler
	public void test009() throws Exception {
		try {
			IJavaProject project = createJavaProject("SealedTypes");
			project.open(null);
			String fileContent =  "package p;\n" +
					"sealed interface I permits p.X {}\n";
			createFolder("/SealedTypes/src/p");
			createFile(	"/SealedTypes/src/p/I.java", fileContent);
			fileContent =  "package p;\n" +
					"public non-sealed class X {}\n";
			createFile(	"/SealedTypes/src/p/X.java", fileContent);

			this.workingCopies = new ICompilationUnit[1];
			char[] sourceChars = fileContent.toCharArray();
			this.problemRequestor.initialize(sourceChars);
			this.workingCopies[0] = getCompilationUnit("/SealedTypes/src/p/X.java").getWorkingCopy(this.wcOwner, null);
			assertProblems(
					"Unexpected problems",
					"----------\n" +
							"1. ERROR in /SealedTypes/src/p/X.java (at line 2)\n" +
							"	public non-sealed class X {}\n" +
							"	                        ^\n" +
							"A class X declared as non-sealed should have either a sealed direct superclass or a sealed direct superinterface\n" +
							"----------\n",
							this.problemRequestor);
		}
		finally {
			deleteProject("SealedTypes");
		}
	}

