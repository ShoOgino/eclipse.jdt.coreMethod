public void testBug454411_001() throws CoreException {
	this.workingCopies = new ICompilationUnit[1];
	String content =
			"package com.test;\n" +
			"interface Function<T, R> { \n"+
			"    R apply(T t); \n"+
			"} \n"+
			"interface I<T> extends Function<T, T> { \n"+
			"    static <T> I<T> identity() { \n"+
			"        return t -> t; \n"+
			"    } \n"+
			"} \n"+
			" \n"+
			"public class X { \n"+
			"	private static class Multiplier { \n"+
			"		private final long mMul; \n"+
			" \n"+
			"		public Multiplier(long iMul) { \n"+
			"			this.mMul = iMul; \n"+
			"		} \n"+
			"		public <T, V> Long mul(Long iItem) { \n"+
			"			return iItem * mMul; \n"+
			"		} \n"+
			"	} \n"+
			" \n"+
			"	private static void test(I<Long> iFn) { \n"+
			"	} \n"+
			" \n"+
			"	public static <T, V> void main(String[] args) { \n"+
			"		I<Long> mul/* here */ = (new Multiplier(3))::<T, V> mul; \n"+
			"		X.test((new Multiplier(3))::<T, V> mul); \n"+
			"	} \n"+
			"}\n";
	this.workingCopies[0] = getWorkingCopy("/JavaSearchBugs/src/b454411/X.java", content);
	int start = content.indexOf("mul/* here */");
	IJavaElement[] elements = this.workingCopies[0].codeSelect(start, "mul".length());
	SearchPattern pattern = SearchPattern.createPattern(elements[0], DECLARATIONS);
	try {
		new SearchEngine(this.workingCopies).search(pattern,
				new SearchParticipant[] {SearchEngine.getDefaultSearchParticipant()},
				getJavaSearchWorkingCopiesScope(),
				this.resultCollector,
				null);
		assertSearchResults("src/b454411/X.java void b454411.X.main(String[]).mul [mul] EXACT_MATCH");
	} catch (NullPointerException e) {
		e.printStackTrace();
		assertFalse("Test Failed", true);
	}
}

