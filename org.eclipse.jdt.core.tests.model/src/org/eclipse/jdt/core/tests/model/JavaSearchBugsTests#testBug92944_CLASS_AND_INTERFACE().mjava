public void testBug92944_CLASS_AND_INTERFACE() throws CoreException {
	resultCollector.showRule = true;
	assertNotNull("There should be working copies!", workingCopies);
	assertEquals("Invalid number of working copies kept between tests!", 1, workingCopies.length);
	this.discard = false;
	TypeNameRequestor requestor =  new SearchTests.SearchTypeNameRequestor();
	new SearchEngine(this.workingCopies).searchAllTypeNames(
		null,
		null,
		SearchPattern.R_PATTERN_MATCH, // case insensitive
		CLASS_AND_INTERFACE,
		getJavaSearchScopeBugs(),
		requestor,
		IJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,
		null
	);
	// Remove enum and annotation
	assertSearchResults(
		"Unexpected all type names",
		"Test\n" + 
		"Test$Inner\n" + 
		"TestPrefix\n" + 
		"b108088.A108088\n" + 
		"b108088.B108088\n" + 
		"b108088.Test108088\n" + 
		"b81556.a.A81556\n" + 
		"b81556.a.B81556\n" + 
		"b81556.a.X81556\n" + 
		"b81556.b.XX81556\n" + 
		"b87627.Collection\n" + 
		"b87627.List\n" + 
		"b89848.Test\n" + 
		"b89848.X\n" + 
		"b92944.B92944\n" + 
		//"b92944.B92944_A\n" + 
		//"b92944.B92944_E\n" + 
		"b92944.B92944_I\n" + 
		"b95794.Test\n" + 
		"g1.t.s.def.Generic\n" + 
		"g1.t.s.def.Generic$Member\n" + 
		"g1.t.s.def.Generic$MemberGeneric\n" + 
		"g1.t.s.def.NonGeneric\n" + 
		"g1.t.s.def.NonGeneric$GenericMember\n" + 
		"g5.c.def.Multiple\n" + 
		"g5.c.def.Single\n" + 
		"g5.m.def.Multiple\n" + 
		"g5.m.def.Single\n" + 
		"java.io.Serializable\n" + 
		"java.lang.CharSequence\n" + 
		"java.lang.Class\n" + 
		"java.lang.CloneNotSupportedException\n" + 
		"java.lang.Comparable\n" + 
		"java.lang.Enum\n" +  // Enum is not an enum in java.lang
		"java.lang.Error\n" + 
		"java.lang.Exception\n" + 
		"java.lang.IllegalMonitorStateException\n" + 
		"java.lang.InterruptedException\n" + 
		"java.lang.Object\n" + 
		"java.lang.RuntimeException\n" + 
		"java.lang.String\n" + 
		"java.lang.Throwable\n" +
		"java.lang.annotation.Annotation", // Annotation is an interface in java.lang
		requestor);
}

