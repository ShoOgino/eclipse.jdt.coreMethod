	public FileModificationValidator getFileModificationValidator2() {
		return new FileModificationValidator() {
			public IStatus validateEdit(final IFile[] files, FileModificationValidationContext context) {
				if (TestPessimisticProvider.markWritableOnEdit) {
					try {
						ResourcesPlugin.getWorkspace().run(
							new IWorkspaceRunnable() {
								public void run(IProgressMonitor monitor)	{
									for (int i = 0, length = files.length; i < length; i++) {
										try {
											setReadOnly(files[i], false);
										} catch (CoreException e) {
											e.printStackTrace();
										}
									}
								}
							},
							null);
					} catch (CoreException e) {
						e.printStackTrace();
						return e.getStatus();
					}
				} 
				return Status.OK_STATUS;
			}
		
			public IStatus validateSave(IFile file) {
				if (TestPessimisticProvider.markWritableOnSave) {
					try {
						setReadOnly(file, false);
					} catch (CoreException e) {
						e.printStackTrace();
						return e.getStatus();
					}
				}
				return Status.OK_STATUS;
			}
		
			void setReadOnly(IResource resource, boolean readOnly) throws CoreException {
				if (Util.isReadOnlySupported()) {
					ResourceAttributes resourceAttributes = resource.getResourceAttributes();
					if (resourceAttributes != null) {
						resourceAttributes.setReadOnly(readOnly);
						resource.setResourceAttributes(resourceAttributes);
					}		
				}
			}
		};
	}

