	public void testBug483650_005() throws Exception {
		try {
			IJavaProject p = createJavaProject("P", new String[] {}, new String[] { "/P/lib478042.jar", "JCL15_LIB" }, "", "1.5");
			createJar(new String[] {
				"p478042/AllMethodDeclarations02.java",
				"package p478042;\n" +
				"class X {}\n" +
				"class Y<T>{}\n" +
				"public class AllMethodDeclarations02 {\n" +
				"  public Y<X> foo01(Y<X> t) { return null;}\n" +
				"  public int foo02(Object o) {return 0;}\n" +
				"  public char foo03(Object o, String s) {return '0';}\n" +
				"}",
				"p478042/AllMethodDeclarations02b.java",
				"package p478042;\n" +
				"class AllMethodDeclarations02b {\n" +
				"  public void fooInt() {}\n" +
				"}"
			}, p.getProject().getLocation().append("lib478042.jar").toOSString(),
				new String[] { p.getProject().getLocation().append("lib478042.jar").toOSString() },
				"1.5");
			refresh(p);

			MethodNameMatchCollector collector = new MethodNameMatchCollector() {
				@Override
				public String toString() {
					return toFullyQualifiedNamesString();
				}
			};
			IJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] { p }, IJavaSearchScope.SOURCES|IJavaSearchScope.APPLICATION_LIBRARIES);
			searchAllMethodNames("*", SearchPattern.R_PATTERN_MATCH, "foo", SearchPattern.R_PREFIX_MATCH, scope, collector);
			assertSearchResults(
					"/P/lib478042.jar p478042.Y p478042.AllMethodDeclarations02.foo01(p478042.Y t)\n" +
					"/P/lib478042.jar void p478042.AllMethodDeclarations02b.fooInt()\n" +
					"/P/lib478042.jar int p478042.AllMethodDeclarations02.foo02(java.lang.Object o)\n" +
					"/P/lib478042.jar char p478042.AllMethodDeclarations02.foo03(java.lang.Object o,java.lang.String s)",
					collector
			);
		} finally {
			deleteProject("P");
		}
	}

