/*
 * Regression test for bug 87929 Wrong decoding of type signature with wildcards
 */
public void test0095() throws JavaModelException {
	IJavaElement[] elements = select(
			"/Resolve/src2/test0095/X.java",
			"package test0095;\n" +
			"public class X {\n" +
			"	Y<?, ? extends Z<? super Exception>> y;\n" +
			"}\n" +
			"class Y<K, V> {\n" +
			"}\n" +
			"class Z<T> {\n" +
			"}",
			"Y<?, ? extends Z<? super Exception>>");

	assertElementsEqual(
		"Unexpected elements",
		"Y {key=Ltest0095/X~Y<Ltest0095/X~Y;{0}*Ltest0095/X~Y;{1}+Ltest0095/X~Z<Ltest0095/X~Z;{0}-Ljava/lang/Exception;>;>;} [in [Working copy] X.java [in test0095 [in src2 [in Resolve]]]]",
		elements,
		true/*show key*/
	);

	String key = ((IType) elements[0]).getKey();
	String signature = new BindingKey(key).toSignature();
	String[] typeArguments = Signature.getTypeArguments(signature);
	assertStringsEqual(
		"Unexpected type arguments",
		"*\n" +
		"+Ltest0095.Z<-Ljava.lang.Exception;>;\n",
		typeArguments);
}

