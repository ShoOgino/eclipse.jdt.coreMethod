/*	static class ReconcileParticipant2 extends CompilationParticipant {
		IJavaElementDelta delta;
		org.eclipse.jdt.core.dom.CompilationUnit ast;
		ReconcileParticipant2() {
			TestCompilationParticipant.PARTICIPANT = this;
		}
		public boolean isActive(IJavaProject project) {
			return true;
		}
		public void reconcile(ReconcileContext context) {
			this.delta = context.getDelta();
			try {
				this.ast = context.getAST3();
				assertTrue("Context should have statement recovery enabled", context.hasStatementRecovery());
				assertTrue("Context should have ignore method body enabled", context.hasIgnoreMethodBodies());
			} catch (JavaModelException e) {
				assertNull("Unexpected exception", e);
			}
		}
	}

	static class ReconcileParticipant3 extends CompilationParticipant {
		IJavaElementDelta delta;
		org.eclipse.jdt.core.dom.CompilationUnit ast;
		ReconcileParticipant3() {
			TestCompilationParticipant.PARTICIPANT = this;
		}
		public boolean isActive(IJavaProject project) {
			return true;
		}
		public void reconcile(ReconcileContext context) {
			this.delta = context.getDelta();
			try {
				this.ast = context.getAST3();
				assertFalse("Context should have statement recovery enabled", context.hasStatementRecovery());
				assertTrue("Context should have ignore method body enabled", context.hasIgnoreMethodBodies());
			} catch (JavaModelException e) {
				assertNull("Unexpected exception", e);
			}
		}
	}*/
/**
 */
public ReconcilerTests(String name) {
	super(name);
}

