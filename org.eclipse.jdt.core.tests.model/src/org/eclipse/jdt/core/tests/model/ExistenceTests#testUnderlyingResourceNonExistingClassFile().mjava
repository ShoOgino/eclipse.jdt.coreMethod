/*
 * Ensures that one cannot get the underlying resource of a non-existing class file.
 */
public void testUnderlyingResourceNonExistingClassFile() throws CoreException {
	try {
		this.createJavaProject("P", new String[] {"src"}, new String[] {"lib"}, "bin");
		IClassFile classFile = this.getClassFile("/P/lib/X.class");
		assertUnderlyingResourceFails(classFile);
	} finally {
		this.deleteProject("P");
	}
}

