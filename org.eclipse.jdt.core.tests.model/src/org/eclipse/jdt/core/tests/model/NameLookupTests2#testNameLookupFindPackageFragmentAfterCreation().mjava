/*
 * Creates a package fragment and finds it in a dependent project in a batch operation
 * (regression test for bug 144776 JavaProject.resetCaches() needs to reset dependent projects
 */
public void testNameLookupFindPackageFragmentAfterCreation() throws CoreException {
	try {
		final IJavaProject p1 = createJavaProject("P1");
		final JavaProject p2 = (JavaProject) createJavaProject("P2", new String[] {""}, new String[0], new String[] {"/P1"}, "");

		// populate namelookup for p2
		getNameLookup(p2);

		IWorkspaceRunnable runnable = new IWorkspaceRunnable(){
			public void run(IProgressMonitor monitor) throws CoreException {
				p1.getPackageFragmentRoot(p1.getProject()).createPackageFragment("pkg", false/*don't force*/, monitor);
				IPackageFragment[] pkgs = getNameLookup(p2).findPackageFragments("pkg", false/*exact match*/);
				assertElementsEqual(
					"Unexpected package fragments",
					"pkg [in <project root> [in P1]]",
					pkgs);
			}
		};
		JavaCore.run(runnable, null/*no progress*/);
	} finally {
		deleteProject("P1");
		deleteProject("P2");
	}
}

