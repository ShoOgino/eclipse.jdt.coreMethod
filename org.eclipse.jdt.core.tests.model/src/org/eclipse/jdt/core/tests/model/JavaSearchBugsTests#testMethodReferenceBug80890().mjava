	/**
	 * bug 80890: [search] Strange search engine behaviour
	 */
	public void testMethodReferenceBug80890() throws CoreException, JavaModelException {
		ICompilationUnit workingCopy = null;
		try {
			workingCopy = getWorkingCopy("/JavaSearchBugs/src/bugs/A.java",
				"package bugs;\n" + 
				"public class A {\n" + 
				"	protected void foo(Exception e) {}\n" + 
				"	protected void foo(String s) {}\n" + 
				"}\n" + 
				"class B1 extends A {\n" + 
				"	public void bar1() {\n" + 
				"		foo(null);\n" + 
				"	}\n" + 
				"}\n" + 
				"class B2 extends A {\n" + 
				"	public void bar2() {\n" + 
				"		foo(null);\n" + 
				"	}\n" + 
				"}\n"
				);
			workingCopy.commitWorkingCopy(true, null);	// need to commit to index file
			IJavaSearchScope scope = SearchEngine.createJavaSearchScope(new ICompilationUnit[] { workingCopy });
			// search for first and second method should both return 2 inaccurate matches
			IMethod method = workingCopy.getType("A").getMethods()[0];
			search(method, REFERENCES, scope, this.resultCollector);
			method = workingCopy.getType("A").getMethods()[1];
			search(method, REFERENCES, scope, this.resultCollector);
			assertSearchResults(
				"src/bugs/A.java void bugs.B1.bar1() [foo(null)] POTENTIAL_MATCH\n" + 
				"src/bugs/A.java void bugs.B2.bar2() [foo(null)] POTENTIAL_MATCH\n" + 
				"src/bugs/A.java void bugs.B1.bar1() [foo(null)] POTENTIAL_MATCH\n" + 
				"src/bugs/A.java void bugs.B2.bar2() [foo(null)] POTENTIAL_MATCH",
				this.resultCollector);
		}
		finally {
			if (workingCopy != null)
				workingCopy.discardWorkingCopy();
		}
	}

