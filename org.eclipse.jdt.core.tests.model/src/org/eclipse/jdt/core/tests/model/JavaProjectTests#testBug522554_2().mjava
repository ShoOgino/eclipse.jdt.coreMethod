// unnamed module adds without limiting
public void testBug522554_2() throws CoreException {
	if (!isJRE9) return;
	IJavaProject prj = null;
	try {
		IClasspathAttribute[] jreAttributes = {
			JavaCore.newClasspathAttribute(IClasspathAttribute.ADD_EXPORTS, "java.activation/com.sun.activation.registries=ALL-UNNAMED"),
			JavaCore.newClasspathAttribute(IClasspathAttribute.LIMIT_MODULES, DEFAULT_MODULES + ",java.activation")
		};
		prj = createJava9ProjectWithJREAttributes("unnamed", new String[] {"src" }, jreAttributes);
		createFolder("/unnamed/src/modify");
		createFile("/unnamed/src/modify/Test.java",
				"package modify;\n" + 
				"\n" + 
				"import com.sun.activation.registries.*; \n" + 
				"\n" + 
				"public class Test {\n" + 
				"	LogSupport logger;\n" + 
				"}\n");
		prj.getProject().getWorkspace().build(IncrementalProjectBuilder.AUTO_BUILD, null);
		IMarker[] markers = prj.getProject().findMarkers(null, true, IResource.DEPTH_INFINITE);
		assertMarkers("Unexpected markers", "",  markers);

		IClasspathEntry systemLibrary = prj.getRawClasspath()[1];
		assertEquals("Should be system library", getJRE9Path(), systemLibrary.getPath());
		String argLine = JavaModelAccess.getModuleCLIOptions(prj, systemLibrary);
		assertEquals("Unexpected CLI options",
				"--add-exports java.activation/com.sun.activation.registries=ALL-UNNAMED " +
				"--add-modules java.activation",
				argLine);
	} finally {
		if (prj != null)
			deleteProject(prj);
	}
}

