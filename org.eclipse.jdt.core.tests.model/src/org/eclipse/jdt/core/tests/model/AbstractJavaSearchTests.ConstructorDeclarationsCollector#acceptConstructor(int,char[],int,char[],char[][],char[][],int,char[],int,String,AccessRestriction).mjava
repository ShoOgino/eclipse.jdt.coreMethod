		public void acceptConstructor(
				int modifiers,
				char[] simpleTypeName,
				int parameterCount,
				char[] signature,
				char[][] parameterTypes,
				char[][] parameterNames,
				int typeModifiers,
				char[] packageName,
				int extraFlags,
				String path,
				AccessRestriction access) {
			StringBuffer buffer = new StringBuffer();

			boolean isMemberType = (extraFlags & ExtraFlags.IsMemberType) != 0;

			buffer.append(packageName == null ? CharOperation.NO_CHAR : packageName);
			if (isMemberType) {
				buffer.append('.');
				buffer.append('?'); // enclosing type names are not stored in the indexes
				buffer.append('?');
				buffer.append('?');
			}
			buffer.append('.');
			buffer.append(simpleTypeName);
			buffer.append('#');
			buffer.append(simpleTypeName);
			buffer.append('(');

			parameterTypes = signature == null ? parameterTypes : Signature.getParameterTypes(signature);

			for (int i = 0; i < parameterCount; i++) {
				if (i != 0) buffer.append(',');

				if (parameterTypes != null) {
					char[] parameterType;
					if (signature != null) {
						parameterType = Signature.toCharArray(parameterTypes[i]);
						CharOperation.replace(parameterType, '/', '.');
					} else {
						parameterType = parameterTypes[i];
					}
					buffer.append(parameterType);
				} else {
					buffer.append('?'); // parameter type names are not stored in the indexes
					buffer.append('?');
					buffer.append('?');
				}
				buffer.append(' ');
				if (parameterNames != null) {
					buffer.append(parameterNames[i]);
				} else {
					buffer.append("arg"+i);
				}
			}
			buffer.append(')');

			if (parameterCount < 0) {
				buffer.append('*');
			}

			this.results.add(buffer.toString());
		}

