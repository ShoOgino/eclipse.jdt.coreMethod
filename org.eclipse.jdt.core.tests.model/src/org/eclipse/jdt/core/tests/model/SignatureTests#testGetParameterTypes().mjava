/**
 * @see Signature
 */
public void testGetParameterTypes() {
	String methodSig = "(QString;QObject;I)I";
	String[] types= Signature.getParameterTypes(methodSig);
	assertTrue("Signature#getParameterTypes is not correct1", types.length == 3);
	assertTrue("Signature#getParameterTypes is not correct2", types[1].equals("QObject;"));
	try {
		Signature.getParameterTypes("");
		assertTrue("Signature#getParameterTypes is not correct: exception", false);
	} catch (IllegalArgumentException iae) {
		// do nothing
	}

	// tests with 1.5-specific elements
	methodSig = "<X:Qlist<Qstring;>;>(IQlist;Tww;)Qlist<Qxxx;>;^Qexception;^Qerror;";
	assertTrue("Signature#getParameterTypes is not correct3", Signature.getParameterTypes(methodSig).length == 3);
	assertEquals("Signature#getParameterTypes is not correct3a", Signature.getParameterTypes(methodSig)[0], "I");
	assertEquals("Signature#getParameterTypes is not correct3b", Signature.getParameterTypes(methodSig)[1], "Qlist;");
	assertEquals("Signature#getParameterTypes is not correct3c", Signature.getParameterTypes(methodSig)[2], "Tww;");
//	methodSig = "<X:Qlist<Qstring;>;>(IQlist<Qstring;>;Tww;)Qlist<Qxxx;>;^Qexception;^Qerror;";
//	assertTrue("Signature#getParameterTypes is not correct3", Signature.getParameterTypes(methodSig).length == 3);
//	assertEquals("Signature#getParameterTypes is not correct3a", Signature.getParameterTypes(methodSig)[0], "I");
//	assertEquals("Signature#getParameterTypes is not correct3b", Signature.getParameterTypes(methodSig)[1], "Qlist;");
//	assertEquals("Signature#getParameterTypes is not correct3c", Signature.getParameterTypes(methodSig)[2], "Tww;");
}

