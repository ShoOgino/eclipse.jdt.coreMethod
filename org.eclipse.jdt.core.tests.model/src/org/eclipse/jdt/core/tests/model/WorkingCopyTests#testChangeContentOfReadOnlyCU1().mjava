/*
 * Ensures that one cannot commit the contents of a working copy on a read only cu. 
 */
public void testChangeContentOfReadOnlyCU1() throws CoreException {
	IResource resource = this.cu.getUnderlyingResource();
	boolean readOnlyFlag = isReadOnly(resource);
	boolean didComplain = false;
	try {
		setReadOnly(resource, true);
		this.copy.getBuffer().setContents("invalid");
		this.copy.commitWorkingCopy(true, null);
	} catch(JavaModelException e){
		didComplain = true;
	} finally {
		setReadOnly(resource, readOnlyFlag);
	}
	assertTrue("Should have complained about modifying a read-only unit:", didComplain);
	assertTrue("ReadOnly buffer got modified:", !this.cu.getBuffer().getContents().equals("invalid"));
}

