	/**
	 * Get compilation unit source on a file written in UTF-8 charset using no specific encoding.
	 * Verification is done by comparing source with file contents read directly with no specific encoding...
	 */
	public void test006() throws JavaModelException, CoreException, UnsupportedEncodingException {

		// Get compilation unit and compare source
		this.utf8Source = getCompilationUnit(this.utf8File.getFullPath().toString());
		String source = this.utf8Source.getSource();
		String encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File));
		assertEquals("Encoded UTF-8 source should have been decoded the same way!", encodedContents, source);
			
		// Now compare bytes array
		byte[] sourceBytes = source.getBytes(systemEncoding);
		byte[] encodedBytes = Util.getResourceContentsAsByteArray(this.utf8File);
		assertEquals("Wrong size of encoded string", encodedBytes.length, sourceBytes.length);
		// Do not compare arrays contents if system encoding is ASCII (meaningful bytes are destroyed during convertion...)
		if (!"ASCII".equals(systemEncoding)) {
			for (int i = 0, max = sourceBytes.length; i < max; i++) {
				assertTrue("Wrong size of encoded character at " + i, sourceBytes[i] == encodedBytes[i]);
			}
		}
	}

