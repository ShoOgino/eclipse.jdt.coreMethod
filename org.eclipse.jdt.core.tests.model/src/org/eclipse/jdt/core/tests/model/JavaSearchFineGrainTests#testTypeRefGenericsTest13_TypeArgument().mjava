public void testTypeRefGenericsTest13_TypeArgument() throws CoreException {
	this.workingCopies = new ICompilationUnit[1];
	this.workingCopies[0] = getWorkingCopy("/JavaSearch15/src/test13/Test.java",
		"package test13;\n" +
		"public class Test<T> extends S<Exception> {\n" +
		"	void foo(Test<Exception> test) {\n" +
		"		this.<X<Exception>>foo(null);\n" +
		"		super.<X<X<Exception>>>foo(null);\n" +
		"		foo(null);\n" +
		"		test.<X<X<X<RuntimeException>>>>foo(null);\n" +
		"	}\n" +
		"	void fred(Test<String> test) {\n" +
		"		this.<X<Object>, Exception, Test<Exception>>bar(null);\n" +
		"		super.<X<X<Object>>, RuntimeException, Test<X<Exception>>>bar(null);\n" +
		"		bar(null);\n" +
		"		test.<X<X<X<Object>>>, RuntimeException, Test<X<X<Exception>>>>bar(null);\n" +
		"	}\n" +
		"}\n" +
		"class S<R> {\n" +
		"	<T> T foo(T t) { return t; }\n" +
		"	<T, U extends Exception, V extends S<R>>void bar(S s) {}\n" +
		"}\n" +
		"class X<T> {}\n"
	);
	IType type = this.workingCopies[0].getType("Test");
	IJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] { type });
	search("*", TYPE, WILDCARD_BOUND_TYPE_REFERENCE | TYPE_ARGUMENT_TYPE_REFERENCE, SearchPattern.R_ERASURE_MATCH, scope);
	assertSearchResults(
		"src/test13/Test.java test13.Test [public class Test<T> extends S<�|Exception|�> {@47] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.foo(Test<Exception>) [	void foo(Test<�|Exception|�> test) {@75] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.foo(Test<Exception>) [		this.<�|X|�<Exception>>foo(null);@102] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.foo(Test<Exception>) [		this.<X<�|Exception|�>>foo(null);@104] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.foo(Test<Exception>) [		super.<�|X|�<X<Exception>>>foo(null);@135] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.foo(Test<Exception>) [		super.<X<�|X|�<Exception>>>foo(null);@137] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.foo(Test<Exception>) [		super.<X<X<�|Exception|�>>>foo(null);@139] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.foo(Test<Exception>) [		test.<�|X|�<X<X<RuntimeException>>>>foo(null);@183] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.foo(Test<Exception>) [		test.<X<�|X|�<X<RuntimeException>>>>foo(null);@185] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.foo(Test<Exception>) [		test.<X<X<�|X|�<RuntimeException>>>>foo(null);@187] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.foo(Test<Exception>) [		test.<X<X<X<�|RuntimeException|�>>>>foo(null);@189] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [	void fred(Test<�|String|�> test) {@239] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		this.<�|X|�<Object>, Exception, Test<Exception>>bar(null);@263] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		this.<X<�|Object|�>, Exception, Test<Exception>>bar(null);@265] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		this.<X<Object>, �|Exception|�, Test<Exception>>bar(null);@274] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		this.<X<Object>, Exception, �|Test|�<Exception>>bar(null);@285] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		this.<X<Object>, Exception, Test<�|Exception|�>>bar(null);@290] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		super.<�|X|�<X<Object>>, RuntimeException, Test<X<Exception>>>bar(null);@321] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		super.<X<�|X|�<Object>>, RuntimeException, Test<X<Exception>>>bar(null);@323] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		super.<X<X<�|Object|�>>, RuntimeException, Test<X<Exception>>>bar(null);@325] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		super.<X<X<Object>>, �|RuntimeException|�, Test<X<Exception>>>bar(null);@335] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		super.<X<X<Object>>, RuntimeException, �|Test|�<X<Exception>>>bar(null);@353] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		super.<X<X<Object>>, RuntimeException, Test<�|X|�<Exception>>>bar(null);@358] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		super.<X<X<Object>>, RuntimeException, Test<X<�|Exception|�>>>bar(null);@360] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		test.<�|X|�<X<X<Object>>>, RuntimeException, Test<X<X<Exception>>>>bar(null);@404] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		test.<X<�|X|�<X<Object>>>, RuntimeException, Test<X<X<Exception>>>>bar(null);@406] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		test.<X<X<�|X|�<Object>>>, RuntimeException, Test<X<X<Exception>>>>bar(null);@408] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		test.<X<X<X<�|Object|�>>>, RuntimeException, Test<X<X<Exception>>>>bar(null);@410] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		test.<X<X<X<Object>>>, �|RuntimeException|�, Test<X<X<Exception>>>>bar(null);@421] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		test.<X<X<X<Object>>>, RuntimeException, �|Test|�<X<X<Exception>>>>bar(null);@439] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		test.<X<X<X<Object>>>, RuntimeException, Test<�|X|�<X<Exception>>>>bar(null);@444] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		test.<X<X<X<Object>>>, RuntimeException, Test<X<�|X|�<Exception>>>>bar(null);@446] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.Test.fred(Test<String>) [		test.<X<X<X<Object>>>, RuntimeException, Test<X<X<�|Exception|�>>>>bar(null);@448] EXACT_MATCH\n" +
		"src/test13/Test.java void test13.S.bar(S) [	<T, U extends Exception, V extends S<�|R|�>>void bar(S s) {}@558] EXACT_MATCH"
	);
}

