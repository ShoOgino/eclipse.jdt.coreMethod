	public void test002() throws Exception {
		try {
			IJavaProject project = createJavaProject("Java9Elements", new String[] {"src"}, new String[] {"JCL18_LIB"}, "bin", "1.9");
			project.open(null);
				String fileContent =  "module my.mod{\n" +
						 "	exports p.q.r;" +
						 "	exports a.b.c;\n" +
						 "	requires java.sql;\n" +
						 "	requires public java.desktop;\n" +
						 "}";
				createFile(	"/Java9Elements/src/module-info.java",	fileContent);

				ICompilationUnit unit = getCompilationUnit("/Java9Elements/src/module-info.java");
				IModuleDescription mod = unit.getModule();
				assertNotNull("Module should not be null", mod);
				IPackageExport[] exportedPackages = mod.getExportedPackages();
				assertNotNull("should not be null", exportedPackages);
				assertEquals("Incorrect no of exports", 2, exportedPackages.length);
				IPackageExport export = exportedPackages[0];
				assertEquals("Incorrect package name", "p.q.r", export.getPackageName());
				export = exportedPackages[1];
				assertEquals("Incorrect package name", "a.b.c", export.getPackageName());
				IModuleReference[] requiredModules = mod.getRequiredModules();
				assertNotNull("should not be null", requiredModules);
				assertEquals("Incorrect no of required modules", 2, requiredModules.length);
				IModuleReference ref = requiredModules[0];
				assertEquals("Incorrect package name", "java.sql", ref.getModuleName());
				assertFalse("Module requires should not be public", ref.isPublic());
				ref = requiredModules[1];
				assertEquals("Incorrect package name", "java.desktop", ref.getModuleName());
				assertTrue("Module requires should be public", ref.isPublic());
		}
		finally {
			deleteProject("Java9Elements");
		}
	}

