/**
 * @bug 265065: [search] java.lang.ClassCastException while running "Refactor...Extract Class"
 * @test Ensure that no CCE occurs while using an OrPattern made of VariablePattern
 * @see "https://bugs.eclipse.org/bugs/show_bug.cgi?id=265065"
 */
public void testBug265065() throws CoreException {
	this.workingCopies = new ICompilationUnit[1];
	this.workingCopies[0] = getWorkingCopy("/JavaSearchBugs/src/MyClass.java",
		"public class MyClass {\n" + 
		"    class MyPrivateClass {\n" + 
		"            public String type = TYPE_A;\n" + 
		"            public Object value = null;\n" + 
		"            public MyPrivateClass(String type, Object value) {\n" + 
		"                    this.type = type;\n" + 
		"                    this.value = value;\n" + 
		"            }\n" + 
		"    }\n" + 
		"\n" + 
		"    private static final String TYPE_A = \"A\";\n" + 
		"    private static final String TYPE_B = \"B\";\n" + 
		"    private static final String TYPE_C = \"C\";\n" + 
		"\n" + 
		"    void foo (Object value) {\n" + 
		"		MyPrivateClass mpc = new MyPrivateClass(TYPE_B, value);\n" + 
		"		if (mpc.value == null) {\n" + 
		"			mpc.type = TYPE_C;\n" + 
		"		}\n" + 
		"	}\n" + 
		"}\n"
	);
	this.resultCollector.showRule();
	this.resultCollector.showAccess();
	SearchPattern leftPattern = SearchPattern.createPattern("MyClass.MyPrivateClass.value Object", FIELD, ALL_OCCURRENCES, SearchPattern.R_EXACT_MATCH | SearchPattern.R_CASE_SENSITIVE);
	SearchPattern rightPattern = SearchPattern.createPattern("MyClass.MyPrivateClass.type String", FIELD, ALL_OCCURRENCES, SearchPattern.R_EXACT_MATCH | SearchPattern.R_CASE_SENSITIVE);
	new SearchEngine(this.workingCopies).search(
		SearchPattern.createOrPattern(leftPattern, rightPattern),
		new SearchParticipant[] {SearchEngine.getDefaultSearchParticipant()},
		getJavaSearchWorkingCopiesScope(),
		this.resultCollector,
		null);
	assertSearchResults(
		"src/MyClass.java void MyClass.foo(Object) [value] EXACT_MATCH READ ACCESS\n" + 
		"src/MyClass.java void MyClass.foo(Object) [type] EXACT_MATCH READ ACCESS\n" + 
		"src/MyClass.java MyClass$MyPrivateClass.type [type] EXACT_MATCH\n" + 
		"src/MyClass.java MyClass$MyPrivateClass.value [value] EXACT_MATCH\n" + 
		"src/MyClass.java MyClass$MyPrivateClass(String, Object) [type] EXACT_MATCH WRITE ACCESS\n" + 
		"src/MyClass.java MyClass$MyPrivateClass(String, Object) [value] EXACT_MATCH WRITE ACCESS"
	);
}

