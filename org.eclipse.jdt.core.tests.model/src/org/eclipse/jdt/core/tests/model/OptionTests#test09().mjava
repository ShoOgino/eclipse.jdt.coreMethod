	/**
	 * Custom options must replace existing ones completely without loosing property listeners
	 * http://bugs.eclipse.org/bugs/show_bug.cgi?id=59258
	 * http://bugs.eclipse.org/bugs/show_bug.cgi?id=60896
	 */
	public void test09() throws CoreException {
		try {
			this.eventCount = 0;
			JavaProject projectA = (JavaProject) this.createJavaProject("A", new String[] {}, "");
	//		Preferences preferences = projectA.getPreferences();
	//		preferences.addPropertyChangeListener(new TestPropertyListener());
			IEclipsePreferences eclipsePreferences = projectA.getEclipsePreferences();
			eclipsePreferences.addPreferenceChangeListener(new TestPropertyListener());
		
			Hashtable options = new Hashtable();
			options.put(JavaCore.COMPILER_PB_DEPRECATION_IN_DEPRECATED_CODE, JavaCore.ENABLED);
			options.put(JavaCore.COMPILER_COMPLIANCE, "10.0");
			projectA.setOptions(options);
	
			// check project A custom options		
			assertEquals("projA:unexpected custom value for deprecation option", JavaCore.ENABLED, projectA.getOptions(true).get(JavaCore.COMPILER_PB_DEPRECATION_IN_DEPRECATED_CODE));
			assertEquals("projA:unexpected custom value for compliance option", "10.0", projectA.getOptions(true).get(JavaCore.COMPILER_COMPLIANCE));
			assertTrue("projA:preferences should not be reset", eclipsePreferences == projectA.getEclipsePreferences());
			assertEquals("projA:preferences property listener has been lost", 2, eventCount);
		
			// delete/create project A and verify that options are well reset
			this.deleteProject("A");
			projectA = (JavaProject) this.createJavaProject("A", new String[] {}, "");
			assertEquals("projA:unexpected custom value for deprecation option", JavaCore.getOption(JavaCore.COMPILER_PB_DEPRECATION_IN_DEPRECATED_CODE), projectA.getOptions(true).get(JavaCore.COMPILER_PB_DEPRECATION_IN_DEPRECATED_CODE));
			assertEquals("projA:unexpected custom value for compliance option", JavaCore.getOption(JavaCore.COMPILER_COMPLIANCE), projectA.getOptions(true).get(JavaCore.COMPILER_COMPLIANCE));
			assertTrue("projA:preferences should not be reset", eclipsePreferences != projectA.getEclipsePreferences());
		} finally {
			this.deleteProject("A");
		}
	}

