public void testModule2b() throws CoreException, IOException {
	if (!isJRE9) {
		System.err.println(this.getClass().getName()+'.'+getName()+" needs a Java 9 JRE - skipped");
		return;
	}
	try {
		// create project with incomplete source attachment:
		String javaHome = System.getProperty("java.home") + File.separator;
		Path bootModPath = new Path(javaHome +"/lib/jrt-fs.jar");
		createSourceZip(
				new String[] {
					"java.base/module-info.java",
					"module java.base {}\n",
					"java.se.ee/module-info.java",
					"module java.se.ee {}\n"
				},
				getWorkspacePath()+"/Test/src.zip");
		Path sourceAttachment = new Path("/Test/src.zip");
		IClasspathEntry jrtEntry;
		jrtEntry = JavaCore.newLibraryEntry(bootModPath, sourceAttachment, null, null, null, false);
		IJavaProject project = this.createJavaProject("Test", new String[] {"src"}, new String[0],
				new String[0], "bin", "9");
		IClasspathEntry[] old = project.getRawClasspath();
		IClasspathEntry[] newPath = new IClasspathEntry[old.length +1];
		System.arraycopy(old, 0, newPath, 0, old.length);
		newPath[old.length] = jrtEntry;
		project.setRawClasspath(newPath, null);
		//
		String moduleSrc =
			"module test {\n" +
			"	requires java.desktop;\n" +
			"}\n";
		createFile("/Test/src/module-info.java", moduleSrc);
		ICompilationUnit unit = getCompilationUnit("/Test/src/module-info.java");
		int start = moduleSrc.indexOf("java.desktop");
		int length = "java.desktop".length();
		IJavaElement[] elements = unit.codeSelect(start, length);
		assertEquals("expected #elements", 1, elements.length);

		IModuleDescription javaDesktop = (IModuleDescription) elements[0];
		IModularClassFile cf = (IModularClassFile) javaDesktop.getClassFile();
		assertSourceEquals(
			"Unexpected source for class file java.desktop/module-info.class",
			null,
			cf.getSource());
		ISourceRange javadocRange = javaDesktop.getJavadocRange();
		assertEquals("javadoc from source", null, javadocRange);
	} finally {
		deleteProject("Test");
	}
}

