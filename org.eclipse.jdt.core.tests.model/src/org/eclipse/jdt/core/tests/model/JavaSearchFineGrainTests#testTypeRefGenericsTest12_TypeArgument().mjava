public void testTypeRefGenericsTest12_TypeArgument() throws CoreException {
	this.workingCopies = new ICompilationUnit[1];
	this.workingCopies[0] = getWorkingCopy("/JavaSearch15/src/test12/Test.java",
		"package test12;\n" +
		"public class Test extends S<Exception> {\n" +
		"	void foo(Test test) {\n" +
		"		this.<Exception>foo(null);\n" +
		"		super.<Exception>foo(null);\n" +
		"		foo(null);\n" +
		"		test.<RuntimeException>foo(null);\n" +
		"	}\n" +
		"	void bar(Test test) {\n" +
		"		this.<Object, RuntimeException, Test>bar(null);\n" +
		"		super.<Object, RuntimeException, Test>bar(null);\n" +
		"		bar(null);\n" +
		"		test.<Object, RuntimeException, Test>bar(null);\n" +
		"	}\n" +
		"}\n" +
		"class S<R> {\n" +
		"	<T> T foo(T t) { return t; }\n" +
		"	<T, U extends Exception, V extends S<R>>void bar(S s) {}\n" +
		"}\n" +
		"class X<T> {}\n"
	);
	IType type = this.workingCopies[0].getType("Test");
	IJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] { type });
	search("*", TYPE, WILDCARD_BOUND_TYPE_REFERENCE | TYPE_ARGUMENT_TYPE_REFERENCE, SearchPattern.R_ERASURE_MATCH, scope);
	assertSearchResults(
		"src/test12/Test.java test12.Test [public class Test extends S<�|Exception|�> {@44] EXACT_MATCH\n" +
		"src/test12/Test.java void test12.Test.foo(Test) [		this.<�|Exception|�>foo(null);@88] EXACT_MATCH\n" +
		"src/test12/Test.java void test12.Test.foo(Test) [		super.<�|Exception|�>foo(null);@118] EXACT_MATCH\n" +
		"src/test12/Test.java void test12.Test.foo(Test) [		test.<�|RuntimeException|�>foo(null);@160] EXACT_MATCH\n" +
		"src/test12/Test.java void test12.Test.bar(Test) [		this.<�|Object|�, RuntimeException, Test>bar(null);@222] EXACT_MATCH\n" +
		"src/test12/Test.java void test12.Test.bar(Test) [		this.<Object, �|RuntimeException|�, Test>bar(null);@230] EXACT_MATCH\n" +
		"src/test12/Test.java void test12.Test.bar(Test) [		this.<Object, RuntimeException, �|Test|�>bar(null);@248] EXACT_MATCH\n" +
		"src/test12/Test.java void test12.Test.bar(Test) [		super.<�|Object|�, RuntimeException, Test>bar(null);@273] EXACT_MATCH\n" +
		"src/test12/Test.java void test12.Test.bar(Test) [		super.<Object, �|RuntimeException|�, Test>bar(null);@281] EXACT_MATCH\n" +
		"src/test12/Test.java void test12.Test.bar(Test) [		super.<Object, RuntimeException, �|Test|�>bar(null);@299] EXACT_MATCH\n" +
		"src/test12/Test.java void test12.Test.bar(Test) [		test.<�|Object|�, RuntimeException, Test>bar(null);@336] EXACT_MATCH\n" +
		"src/test12/Test.java void test12.Test.bar(Test) [		test.<Object, �|RuntimeException|�, Test>bar(null);@344] EXACT_MATCH\n" +
		"src/test12/Test.java void test12.Test.bar(Test) [		test.<Object, RuntimeException, �|Test|�>bar(null);@362] EXACT_MATCH\n" +
		"src/test12/Test.java void test12.S.bar(S) [	<T, U extends Exception, V extends S<�|R|�>>void bar(S s) {}@464] EXACT_MATCH"
	);
}

