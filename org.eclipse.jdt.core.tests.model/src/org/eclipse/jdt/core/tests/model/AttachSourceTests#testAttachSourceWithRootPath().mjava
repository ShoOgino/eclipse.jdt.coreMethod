/**
 * Attaches a source zip to the Minimal.zip jar.  The source zip has
 * a nested root structure and exists as a resource.  Tests that
 * the attachment is persisted as a server property for the jar.
 */
public void testAttachSourceWithRootPath() throws JavaModelException {
	try {
		IJavaProject project = getJavaProject("AttachSourceTests");
		IFile jar = (IFile) project.getProject().findMember("attach2.jar");
		IFile srcZip=(IFile) project.getProject().findMember("attach2src.zip");
		JarPackageFragmentRoot jarRoot = (JarPackageFragmentRoot) project.getPackageFragmentRoot(jar);
		jarRoot.attachSource(srcZip.getFullPath(), new Path("src/nested"), null);

		IClassFile cf = jarRoot.getPackageFragment("x.y").getClassFile("B.class");
		assertTrue("source code does not exist for the entire attached compilation unit", cf.getSource() != null);
		jarRoot.close();
		cf = jarRoot.getPackageFragment("x.y").getClassFile("B.class");
		assertTrue("source code does not exist for the entire attached compilation unit", cf.getSource() != null);

		IPath rootSAPath= jarRoot.getSourceAttachmentRootPath();
		assertEquals("Unexpected source attachment root path for " + jarRoot.getPath(), "src/nested", rootSAPath.toString());

		IPath saPath= jarRoot.getSourceAttachmentPath();
		assertEquals("Unexpected source attachment path for " + jarRoot.getPath(), "/AttachSourceTests/attach2src.zip", saPath.toString());
		
		jarRoot.close();
	} catch (JavaModelException jme) {
		fail("Attach source operation creation failed");
	}
}

