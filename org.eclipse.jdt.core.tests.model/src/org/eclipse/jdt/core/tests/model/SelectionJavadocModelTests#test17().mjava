	public void test17() throws JavaModelException {
		setUnit("Test.java",
			"/**\n" + 
			" * @see Test.Field#foo\n" + 
			" */\n" + 
			"public class Test {\n" + 
			"	/**\n" + 
			"	 * @see Field#foo\n" + 
			"	 */\n" + 
			"	class Field {\n" + 
			"		/**\n" + 
			"		 * @see #foo\n" + 
			"		 * @see Field#foo\n" + 
			"		 * @see Test.Field#foo\n" + 
			"		 */\n" + 
			"		int foo;\n" + 
			"	}\n" + 
			"}\n"
		);
		IJavaElement[] elements = new IJavaElement[11];
		elements[0] = selectType(this.workingCopies[0], "Test", 2);
		elements[1] = selectType(this.workingCopies[0], "Field");
		elements[2] = selectField(this.workingCopies[0], "foo");
		elements[3] = selectType(this.workingCopies[0], "Field", 2);
		elements[4] = selectField(this.workingCopies[0], "foo", 2);
		elements[5] = selectField(this.workingCopies[0], "foo", 3);
		elements[6] = selectType(this.workingCopies[0], "Field", 4);
		elements[7] = selectField(this.workingCopies[0], "foo", 4);
		elements[8] = selectType(this.workingCopies[0], "Test", 3);
		elements[9] = selectType(this.workingCopies[0], "Field", 5);
		elements[10] = selectField(this.workingCopies[0], "foo", 5);
		assertElementsEqual("Invalid selection(s)",
			"Test [in [Working copy] Test.java [in <default> [in src [in Tests]]]]\n" + 
			"Field {key=LTest$Field;} [in Test [in [Working copy] Test.java [in <default> [in src [in Tests]]]]]\n" + 
			"foo {key=LTest$Field;.foo} [in Field [in Test [in [Working copy] Test.java [in <default> [in src [in Tests]]]]]]\n" + 
			"Field {key=LTest$Field;} [in Test [in [Working copy] Test.java [in <default> [in src [in Tests]]]]]\n" + 
			"foo {key=LTest$Field;.foo} [in Field [in Test [in [Working copy] Test.java [in <default> [in src [in Tests]]]]]]\n" + 
			"foo {key=LTest$Field;.foo} [in Field [in Test [in [Working copy] Test.java [in <default> [in src [in Tests]]]]]]\n" + 
			"Field {key=LTest$Field;} [in Test [in [Working copy] Test.java [in <default> [in src [in Tests]]]]]\n" + 
			"foo {key=LTest$Field;.foo} [in Field [in Test [in [Working copy] Test.java [in <default> [in src [in Tests]]]]]]\n" + 
			"Test {key=LTest;} [in [Working copy] Test.java [in <default> [in src [in Tests]]]]\n" + 
			"Field {key=LTest$Field;} [in Test [in [Working copy] Test.java [in <default> [in src [in Tests]]]]]\n" + 
			"foo {key=LTest$Field;.foo} [in Field [in Test [in [Working copy] Test.java [in <default> [in src [in Tests]]]]]]",
			elements
		);
	}

