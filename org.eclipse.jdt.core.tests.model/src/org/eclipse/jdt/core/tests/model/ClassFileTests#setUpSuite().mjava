public void setUpSuite() throws Exception {
	super.setUpSuite();
	IJavaProject javaProject = createJavaProject("P", new String[0], new String[] {"JCL15_LIB", "/P/lib"}, "", JavaCore.VERSION_1_5);
	String[] pathAndContents = new String[] {
		"nongeneric/A.java",
		"package nongeneric;\n" +
		"public class A {\n" +
		"}",
		"generic/X.java",
		"package generic;\n" +
		"public class X<T> {\n" +
		"  <U extends Exception> X<T> foo(X<T> x) throws RuntimeException, U {\n" +
		"    return null;\n" +
		"  }\n" +
		"  <K, V extends T> V foo(K key, V value) throws Exception {\n" +
		"    return value;\n" +
		"  }\n" +
		"}",
		"generic/Y.java",
		"package generic;\n" +
		"public class Y<K, L> {\n" +
		"}",
		"generic/Z.java",
		"package generic;\n" +
		"public class Z<T extends Object & I<? super T>> {\n" +
		"}",
		"generic/I.java",
		"package generic;\n" +
		"public interface I<T> {\n" +
		"}",
		"generic/W.java",
		"package generic;\n" +
		"public class W<T extends X<T> , U extends T> {\n" +
		"}",
		"generic/V.java",
		"package generic;\n" +
		"public class V extends X<Thread> implements I<String> {\n" +
		"}",
		"generic/GenericField.java",
		"package generic;\n" +
		"import java.util.Collection;\n" +
		"public class GenericField {\n" +
		"	protected Collection<String> myField;\n" + 
		"}",
		"annotated/X.java",
		"package annotated;\n" +
		"@MyOtherAnnot\n" +
		"public class X {\n" +
		"  @MyOtherAnnot\n" +
		"  Object field;\n" +
		"  @MyOtherAnnot\n" +
		"  void method() {}\n" +
		"  @MyAnnot(_int=1)\n" +
		"  void foo01() {}\n" +
		"  @MyAnnot(_byte=(byte)2)\n" +
		"  void foo02() {}\n" +
		"  @MyAnnot(_short=(short)3)\n" +
		"  void foo03() {}\n" +
		"  @MyAnnot(_char='a')\n" +
		"  void foo04() {}\n" +
		"  @MyAnnot(_float=1.2f)\n" +
		"  void foo05() {}\n" +
		"  @MyAnnot(_double=3.4)\n" +
		"  void foo06() {}\n" +
		"  @MyAnnot(_boolean=true)\n" +
		"  void foo07() {}\n" +
		"  @MyAnnot(_long=123456789L)\n" +
		"  void foo08() {}\n" +
		"  @MyAnnot(_string=\"abc\")\n" +
		"  void foo09() {}\n" +
		"  @MyAnnot(_annot=@MyOtherAnnot)\n" +
		"  void foo10() {}\n" +
		"  @MyAnnot(_class=String.class)\n" +
		"  void foo11() {}\n" +
		"  @MyAnnot(_enum=MyEnum.SECOND)\n" +
		"  void foo12() {}\n" +
		"  @MyAnnot(_array={1, 2, 3})\n" +
		"  void foo13() {}\n" +
		"  @MyAnnot(_neg_int = -2)\n" +
		"  void foo14() {}\n" +
		"  @MyAnnot(_neg_float=-2.0f)\n" +
		"  void foo15() {}\n" +
		"  @MyAnnot(_neg_double=-2.0)\n" +
		"  void foo16() {}\n" +
		"  @MyAnnot(_neg_long=-2L)\n" +
		"  void foo17() {}\n" +
		"}\n" +
		"@interface MyAnnot {\n" +
		"  int _int() default 0;\n" +
		"  byte _byte() default 0;\n" +
		"  short _short() default 0;\n" +
		"  char _char() default ' ';\n" +
		"  float _float() default 0.0f;\n" +
		"  double _double() default 0.0;\n" +
		"  boolean _boolean() default false;\n" +
		"  long _long() default 0L;\n" +
		"  String _string() default \"   \";\n" +
		"  MyOtherAnnot _annot() default @MyOtherAnnot;\n" +
		"  Class _class() default Object.class;\n" +
		"  MyEnum _enum() default MyEnum.FIRST;\n" +
		"  int[] _array() default {};\n" +
		"  int _neg_int() default -1;\n" +
		"  float _neg_float() default -1.0f;\n" +
		"  double _neg_double() default -1.0;\n" +
		"  long _neg_long() default -1L;\n" +
		"}\n" +
		"@interface MyOtherAnnot {\n" +
		"}\n" +
		"enum MyEnum {\n" +
		"  FIRST, SECOND;\n" +
		"}",
		"annotated/Y.java",
		"package annotated;\n" +
		"import java.lang.annotation.*;\n" +
		"import static java.lang.annotation.ElementType.*;\n" + 
		"import static java.lang.annotation.RetentionPolicy.*;\n" + 
		"@Deprecated\n" +
		"@Documented\n" + 
		"@Inherited\n" +
		"@Retention(SOURCE)\n" + 
		"@Target({PACKAGE, TYPE, ANNOTATION_TYPE, METHOD, CONSTRUCTOR, FIELD, LOCAL_VARIABLE, PARAMETER})\n" +
		"public @interface Y {\n" +
		"}",
		"varargs/X.java",
		"package varargs;\n" +
		"public class X {\n" +
		"  void foo(String s, Object ... others) {\n" +
		"  }\n" +
		"}",
		"workingcopy/X.java",
		"package workingcopy;\n" +
		"public class X {\n" +
		"  void foo() {\n" +
		"    System.out.println();\n" +
		"  }\n" +
		"}",
		"workingcopy/Y.java",
		"package workingcopy;\n" +
		"public class Y<W> {\n" +
		"  <T> T foo(T t, String... args) {\n" +
		"    return t;\n" +
		"  }\n" +
		"}",
		"annotated/MyAnnotation.java",
		"package annotated;\n" +
		"import java.lang.annotation.Retention;\n" +
		"import java.lang.annotation.RetentionPolicy;\n" + 
		"@Retention(value = RetentionPolicy.RUNTIME)\n" + 
		"public @interface MyAnnotation {}",
		"annotated/MyAnnotation2.java",
		"package annotated;\n" +
		"import java.lang.annotation.Retention;\n" +
		"import java.lang.annotation.RetentionPolicy;\n" + 
		"@Retention(value = RetentionPolicy.SOURCE)\n" + 
		"public @interface MyAnnotation2 {}",
		"annotated/MyAnnotation3.java",
		"package annotated;\n" +
		"import java.lang.annotation.Retention;\n" +
		"import java.lang.annotation.RetentionPolicy;\n" + 
		"@Retention(value = RetentionPolicy.CLASS)\n" + 
		"public @interface MyAnnotation3 {}",
		"test342757/X.java",
		"package test342757;\n" +
		"public class X {\n" + 
		"	class B {\n" + 
		"		public B(@Deprecated @Annot String s) {}\n" + 
		"		public void foo(@Deprecated @Annot int j) {}\n" + 
		"	}\n" + 
		"}",
		"test342757/Annot.java",
		"package test342757;\n" +
		"import java.lang.annotation.Retention;\n" + 
		"import static java.lang.annotation.RetentionPolicy.*;\n" + 
		"@Retention(CLASS)\n" + 
		"@interface Annot {}",
	};
	addLibrary(javaProject, "lib.jar", "libsrc.zip", pathAndContents, JavaCore.VERSION_1_5);
	this.jarRoot = javaProject.getPackageFragmentRoot(getFile("/P/lib.jar"));
}

