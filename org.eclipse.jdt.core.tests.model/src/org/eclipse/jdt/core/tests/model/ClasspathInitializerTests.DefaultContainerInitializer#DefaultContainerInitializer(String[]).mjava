	/*
	 * values is [<project name>, <lib path>[,<lib path>]* ]*
	 */
	public DefaultContainerInitializer(String[] values) {
		containerValues = new HashMap();
		for (int i = 0; i < values.length; i+=2) {
			final String projectName = values[i];
			final char[][] libPaths = CharOperation.splitOn(',', values[i+1].toCharArray());
			containerValues.put(
				projectName, 
				new IClasspathContainer() {
					public IClasspathEntry[] getClasspathEntries() {
						int length = libPaths.length;
						IClasspathEntry[] entries = new IClasspathEntry[length];
						for (int j = 0; j < length; j++) {
						    IPath path = new Path(new String(libPaths[j]));
						    if (path.segmentCount() == 1) {
						        entries[j] = JavaCore.newProjectEntry(path);
						    } else {
								entries[j] = JavaCore.newLibraryEntry(path, null, null);
						    }
						}
						return entries;
					}
					public String getDescription() {
						return "Test container";
					}
					public int getKind() {
						return IClasspathContainer.K_APPLICATION;
					}
					public IPath getPath() {
						return new Path("org.eclipse.jdt.core.tests.model.TEST_CONTAINER");
					}
				}
			);
		}
	}

