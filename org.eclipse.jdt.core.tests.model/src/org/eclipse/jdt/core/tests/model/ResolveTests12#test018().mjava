public void test018() throws JavaModelException {
	this.wc = getWorkingCopy("/Resolve/src/X.java",
			"import java.util.function.*;\n" +
			"interface IN0 {} \n" + 
			"interface IN1 extends IN0 {} \n" + 
			"interface IN2 extends IN0 {}\n" + 
			"public class X {\n" + 
			"	 IN1 n_1() { return new IN1() {}; } \n" + 
			"	IN2 n_2() { return null; } \n" + 
			"	<M> void m( Supplier< M> m2) { } \n" + 
			"	void testSw(int i) { \n" + 
			"		m(switch(i) { \n" + 
			"			case 1 -> this::n_1; \n" + 
			"			default -> this::n_2; }); \n" + 
			"	}\n" + 
			"}\n");
	String str = this.wc.getSource();
	String selection = "n_1";
	int start = str.lastIndexOf(selection);
	int length = selection.length();
	IJavaElement[] elements = this.wc.codeSelect(start, length);
	assertElementsEqual(
		"Unexpected elements",
		"n_1() [in X [in [Working copy] X.java [in <default> [in src [in Resolve]]]]]",
		elements
	);
}

