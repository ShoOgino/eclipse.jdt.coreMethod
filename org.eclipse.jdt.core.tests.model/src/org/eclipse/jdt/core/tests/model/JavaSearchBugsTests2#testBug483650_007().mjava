	public void testBug483650_007() throws Exception {
		try {
			IJavaProject p = createJavaProject("P", new String[] {}, new String[] { "/P/lib478042.jar", "JCL15_LIB" }, "", "1.5");
			createJar(new String[] {
				"p478042/AllMethodDeclarations01.java",
				"package p478042;\n" +
				"public class AllMethodDeclarations01 {\n" +
				"    public class Nested {\n" +
				"        public class Inner {\n" +
				"            public void foo01() {}\n" +
				"            public int foo02(Object o) {return 0;}\n" +
				"            public char foo03(Object o, String s) {return '0';}\n" +
				"        }\n" +
				"    }\n" +
				"}\n"
			}, p.getProject().getLocation().append("lib478042.jar").toOSString(),
				new String[] { p.getProject().getLocation().append("lib478042.jar").toOSString() },
				"1.5");
			refresh(p);
			
			MethodNameMatchCollector collector = new MethodNameMatchCollector() {
				@Override
				public String toString() {
					return toFullyQualifiedNamesString();
				}
			};
			IJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] { p }, IJavaSearchScope.SOURCES|IJavaSearchScope.APPLICATION_LIBRARIES);
			searchAllMethodNames(
					"*Inner", SearchPattern.R_PATTERN_MATCH,
					"foo", SearchPattern.R_PREFIX_MATCH, scope, collector);
			assertSearchResults(
					"/P/lib478042.jar void p478042.AllMethodDeclarations01.Nested.Inner.foo01()\n" + 
					"/P/lib478042.jar int p478042.AllMethodDeclarations01.Nested.Inner.foo02(java.lang.Object o)\n" + 
					"/P/lib478042.jar char p478042.AllMethodDeclarations01.Nested.Inner.foo03(java.lang.Object o,java.lang.String s)",
					collector
			);
		} finally {
			deleteProject("P");
		}
	}

