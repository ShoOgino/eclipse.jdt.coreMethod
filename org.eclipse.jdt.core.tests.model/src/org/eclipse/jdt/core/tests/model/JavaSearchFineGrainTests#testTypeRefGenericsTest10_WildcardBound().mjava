public void testTypeRefGenericsTest10_WildcardBound() throws CoreException {
	workingCopies = new ICompilationUnit[1];
	workingCopies[0] = getWorkingCopy("/JavaSearch15/src/test10/Test.java",
		"package test10;\n" + 
		"public class Test {\n" + 
		"	Y<Y<? extends Exception>> y1;\n" + 
		"	Y<X<? extends Object, ? super String, ? extends Exception>> y2;\n" + 
		"	X<Y<? super Object>, Y<? extends String>, Y<? super Exception>> x1;\n" + 
		"	X<X<? extends Object, ? extends Object, ? extends Object>, X<? super String, ? super String, ? super String>, X<? extends Exception, ? super Exception, ? extends Exception>> x2;\n" + 
		"}\n" + 
		"class X<R, S, T> {}\n" + 
		"class Y<U> {}"
	);
	IType type = workingCopies[0].getType("Test");
	IJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[] { type });
	search("*", TYPE, WILDCARD_BOUND_TYPE_REFERENCE, SearchPattern.R_ERASURE_MATCH, scope);
	assertSearchResults(
		"src/test10/Test.java test10.Test.y1 [	Y<Y<? extends �|Exception|�>> y1;@51] EXACT_MATCH\n" + 
		"src/test10/Test.java test10.Test.y2 [	Y<X<? extends �|Object|�, ? super String, ? extends Exception>> y2;@82] EXACT_MATCH\n" + 
		"src/test10/Test.java test10.Test.y2 [	Y<X<? extends Object, ? super �|String|�, ? extends Exception>> y2;@98] EXACT_MATCH\n" + 
		"src/test10/Test.java test10.Test.y2 [	Y<X<? extends Object, ? super String, ? extends �|Exception|�>> y2;@116] EXACT_MATCH\n" + 
		"src/test10/Test.java test10.Test.x1 [	X<Y<? super �|Object|�>, Y<? extends String>, Y<? super Exception>> x1;@145] EXACT_MATCH\n" + 
		"src/test10/Test.java test10.Test.x1 [	X<Y<? super Object>, Y<? extends �|String|�>, Y<? super Exception>> x1;@166] EXACT_MATCH\n" + 
		"src/test10/Test.java test10.Test.x1 [	X<Y<? super Object>, Y<? extends String>, Y<? super �|Exception|�>> x1;@185] EXACT_MATCH\n" + 
		"src/test10/Test.java test10.Test.x2 [	X<X<? extends �|Object|�, ? extends Object, ? extends Object>, X<? super String, ? super String, ? super String>, X<? extends Exception, ? super Exception, ? extends Exception>> x2;@216] EXACT_MATCH\n" + 
		"src/test10/Test.java test10.Test.x2 [	X<X<? extends Object, ? extends �|Object|�, ? extends Object>, X<? super String, ? super String, ? super String>, X<? extends Exception, ? super Exception, ? extends Exception>> x2;@234] EXACT_MATCH\n" + 
		"src/test10/Test.java test10.Test.x2 [	X<X<? extends Object, ? extends Object, ? extends �|Object|�>, X<? super String, ? super String, ? super String>, X<? extends Exception, ? super Exception, ? extends Exception>> x2;@252] EXACT_MATCH\n" + 
		"src/test10/Test.java test10.Test.x2 [	X<X<? extends Object, ? extends Object, ? extends Object>, X<? super �|String|�, ? super String, ? super String>, X<? extends Exception, ? super Exception, ? extends Exception>> x2;@271] EXACT_MATCH\n" + 
		"src/test10/Test.java test10.Test.x2 [	X<X<? extends Object, ? extends Object, ? extends Object>, X<? super String, ? super �|String|�, ? super String>, X<? extends Exception, ? super Exception, ? extends Exception>> x2;@287] EXACT_MATCH\n" + 
		"src/test10/Test.java test10.Test.x2 [	X<X<? extends Object, ? extends Object, ? extends Object>, X<? super String, ? super String, ? super �|String|�>, X<? extends Exception, ? super Exception, ? extends Exception>> x2;@303] EXACT_MATCH\n" + 
		"src/test10/Test.java test10.Test.x2 [	X<X<? extends Object, ? extends Object, ? extends Object>, X<? super String, ? super String, ? super String>, X<? extends �|Exception|�, ? super Exception, ? extends Exception>> x2;@324] EXACT_MATCH\n" + 
		"src/test10/Test.java test10.Test.x2 [	X<X<? extends Object, ? extends Object, ? extends Object>, X<? super String, ? super String, ? super String>, X<? extends Exception, ? super �|Exception|�, ? extends Exception>> x2;@343] EXACT_MATCH\n" + 
		"src/test10/Test.java test10.Test.x2 [	X<X<? extends Object, ? extends Object, ? extends Object>, X<? super String, ? super String, ? super String>, X<? extends Exception, ? super Exception, ? extends �|Exception|�>> x2;@364] EXACT_MATCH"
	);
}

