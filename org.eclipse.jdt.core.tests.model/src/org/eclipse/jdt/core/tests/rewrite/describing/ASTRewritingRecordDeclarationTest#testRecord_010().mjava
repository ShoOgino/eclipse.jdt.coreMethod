	public void testRecord_010() throws Exception {
		if (checkAPILevel()) {
			return;
		}
		IPackageFragment pack1= this.sourceFolder.createPackageFragment("test1", false, null);
		StringBuffer buf= new StringBuffer();
		buf.append("package test1;\n");
		buf.append("/** javadoc comment */\n");
		buf.append("public record C() {\n");
		buf.append("\n");
		buf.append("}\n");
		ICompilationUnit cu= pack1.createCompilationUnit("C.java", buf.toString(), false, null);

		CompilationUnit astRoot= createAST(cu);
		ASTRewrite rewrite= ASTRewrite.create(astRoot.getAST());


		assertTrue("Parse errors", (astRoot.getFlags() & ASTNode.MALFORMED) == 0);
		AbstractTypeDeclaration type= findAbstractTypeDeclaration(astRoot, "C");
		assertTrue("Not a record", type instanceof RecordDeclaration);
		{ // remove java doc
			rewrite.remove(type.getJavadoc(), null);
		}

		{ // remove modifier
			rewrite.remove((ASTNode) type.modifiers().get(0), null);
		}

		String preview= evaluateRewrite(cu, rewrite);

		buf= new StringBuffer();
		buf.append("package test1;\n");
		buf.append("record C() {\n");
		buf.append("\n");
		buf.append("}\n");

		assertEqualString(preview, buf.toString());

	}

