	/*
	 * https://bugs.eclipse.org/bugs/show_bug.cgi?id=306524
	 * To test that when types are removed, only the comments in the extended source range are
	 * removed, and the rest are left untouched.
	 */
	public void test0012() throws Exception {
		IPackageFragment pack1= this.sourceFolder.createPackageFragment("test0012", false, null);
		StringBuffer buf= new StringBuffer();
		buf.append("package test0012;\n");
		buf.append("public class X {\n");
		buf.append("\n");
		buf.append("    // one line comment1\n");
		buf.append("\n");
		buf.append("    /*\n");
		buf.append("     * comment2\n");
		buf.append("     */\n");
		buf.append("\n");
		buf.append("    // one line comment3\n");
		buf.append("    class X1{\n");
		buf.append("    }\n");
		buf.append("    // one line comment4\n");
		buf.append("\n");
		buf.append("\n");
		buf.append("    // one line comment5\n");
		buf.append("\n");
		buf.append("    /*\n");
		buf.append("     * comment6\n");
		buf.append("     */\n");
		buf.append("\n");
		buf.append("\n");
		buf.append("    /*\n");
		buf.append("     * comment7\n");
		buf.append("     */\n");
		buf.append("\n");
		buf.append("    // one line comment8\n");
		buf.append("    // one line comment9\n");
		buf.append("    class X2{\n");
		buf.append("    }\n");
		buf.append("    /*\n");
		buf.append("     * comment10\n");
		buf.append("     */\n");
		buf.append("\n");
		buf.append("    // one line comment11\n");
		buf.append("    // one line comment12\n");
		buf.append("}\n");
		ICompilationUnit cu= pack1.createCompilationUnit("X.java", buf.toString(), false, null);

		CompilationUnit astRoot= createCU(cu, false);

		astRoot.recordModifications();

		List types = astRoot.types();
		TypeDeclaration typeDeclaration = (TypeDeclaration)types.get(0);
		TypeDeclaration [] members = typeDeclaration.getTypes();
		typeDeclaration.bodyDeclarations().remove(members[0]);
		typeDeclaration.bodyDeclarations().remove(members[1]);

		String preview = evaluateRewrite(cu, astRoot);

		buf= new StringBuffer();
		buf.append("package test0012;\n");
		buf.append("public class X {\n");
		buf.append("\n");
		buf.append("    // one line comment1\n");
		buf.append("\n");
		buf.append("    /*\n");
		buf.append("     * comment2\n");
		buf.append("     */\n");
		buf.append("\n");
		buf.append("    \n");
		buf.append("\n");
		buf.append("\n");
		buf.append("    // one line comment5\n");
		buf.append("\n");
		buf.append("    /*\n");
		buf.append("     * comment6\n");
		buf.append("     */\n");
		buf.append("\n");
		buf.append("\n");
		buf.append("    /*\n");
		buf.append("     * comment7\n");
		buf.append("     */\n");
		buf.append("\n");
		buf.append("    \n");
		buf.append("\n");
		buf.append("    // one line comment11\n");
		buf.append("    // one line comment12\n");
		buf.append("}\n");
		assertEqualString(preview, buf.toString());
	}

