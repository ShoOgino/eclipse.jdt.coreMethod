	public void testRemove() throws Exception {

		IPackageFragment pack1= this.sourceFolder.createPackageFragment("test1", false, null);

		StringBuffer buf= new StringBuffer();
		buf.append("package test1;//comment Y\n");
		buf.append("public class E//comment Y\n");
		buf.append("{//comment Y\n");
		buf.append("}//comment Y");
		String contents= buf.toString();
		ICompilationUnit cu= pack1.createCompilationUnit("E.java", contents, false, null);

		CompilationUnit astRoot= createAST3(cu);

		LineCommentEndOffsets offsets= new LineCommentEndOffsets(astRoot.getCommentList());

		int p1= contents.indexOf('Y') + 1;
		int p2= contents.indexOf('Y', p1) + 1;
		int p3= contents.indexOf('Y', p2) + 1;
		int p4= contents.indexOf('Y', p3) + 1;

		assertFalse(offsets.isEndOfLineComment(0));
		assertTrue(offsets.isEndOfLineComment(p1));
		assertTrue(offsets.isEndOfLineComment(p2));
		assertTrue(offsets.isEndOfLineComment(p3));
		assertTrue(offsets.isEndOfLineComment(p4));

		boolean res= offsets.remove(p2);
		assertTrue(res);

		res= offsets.remove(p2);
		assertFalse(res);

		assertFalse(offsets.isEndOfLineComment(0));
		assertTrue(offsets.isEndOfLineComment(p1));
		assertFalse(offsets.isEndOfLineComment(p2));
		assertTrue(offsets.isEndOfLineComment(p3));
		assertTrue(offsets.isEndOfLineComment(p4));

		res= offsets.remove(p4);
		assertTrue(res);

		assertFalse(offsets.isEndOfLineComment(0));
		assertTrue(offsets.isEndOfLineComment(p1));
		assertFalse(offsets.isEndOfLineComment(p2));
		assertTrue(offsets.isEndOfLineComment(p3));
		assertFalse(offsets.isEndOfLineComment(p4));

		res= offsets.remove(p1);
		assertTrue(res);

		assertFalse(offsets.isEndOfLineComment(0));
		assertFalse(offsets.isEndOfLineComment(p1));
		assertFalse(offsets.isEndOfLineComment(p2));
		assertTrue(offsets.isEndOfLineComment(p3));
		assertFalse(offsets.isEndOfLineComment(p4));
	}

