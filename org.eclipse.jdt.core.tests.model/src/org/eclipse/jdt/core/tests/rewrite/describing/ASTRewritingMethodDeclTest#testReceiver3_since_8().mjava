	public void testReceiver3_since_8() throws Exception {
		IPackageFragment pack1 = this.sourceFolder.createPackageFragment("test1", false, null);
		StringBuffer buf = new StringBuffer();
		buf.append("package test1;\n");
		buf.append("class X {\n");
		buf.append("    public void foo(X this) {}\n");
		buf.append("    public void foo() {}\n");
		buf.append("    public void foo(X this,/*comment*/ int i) {}\n");
		buf.append("    public void foo(int i, int j) {}\n");
		buf.append("    public void foo(X this) {}\n");
		buf.append("    public void foo(X this, float f1, float f2) {}\n");
		buf.append("    public void foo(X this, int i) {}\n");
		buf.append("    public void foo(X this, float f) {}\n");
		buf.append("    public void foo1(X this, float f) {}\n");
		buf.append("}\n");
		ICompilationUnit cu= pack1.createCompilationUnit("X.java", buf.toString(), false, null);
		CompilationUnit astRoot = createAST(cu);
		AST ast = astRoot.getAST();
		ASTRewrite rewrite = ASTRewrite.create(astRoot.getAST());
		TypeDeclaration type = findTypeDeclaration(astRoot, "X");
		MethodDeclaration method1 = (MethodDeclaration) type.bodyDeclarations().get(0);
		MethodDeclaration method2 = (MethodDeclaration) type.bodyDeclarations().get(1);
		MethodDeclaration method3 = (MethodDeclaration) type.bodyDeclarations().get(2);
		MethodDeclaration method4 = (MethodDeclaration) type.bodyDeclarations().get(3);
		MethodDeclaration method5 = (MethodDeclaration) type.bodyDeclarations().get(4);
		MethodDeclaration method6 = (MethodDeclaration) type.bodyDeclarations().get(5);
		MethodDeclaration method7 = (MethodDeclaration) type.bodyDeclarations().get(6);
		MethodDeclaration method8 = (MethodDeclaration) type.bodyDeclarations().get(7);
		MethodDeclaration method9 = (MethodDeclaration) type.bodyDeclarations().get(8);

		SimpleType receiver1 = (SimpleType) method1.getReceiverType();
		SimpleType receiver3 = (SimpleType) method3.getReceiverType();
		SimpleType receiver5 = (SimpleType) method5.getReceiverType();
		SimpleType receiver6 = (SimpleType) method6.getReceiverType();
		SimpleType receiver8 = (SimpleType) method8.getReceiverType();
		SimpleType receiver9 = (SimpleType) method9.getReceiverType();

		SimpleType receiverCopy = (SimpleType) rewrite.createCopyTarget(receiver1);
		rewrite.set(method2, MethodDeclaration.RECEIVER_TYPE_PROPERTY, receiverCopy, null);
		rewrite.remove(receiver1, null);

		receiverCopy = (SimpleType) rewrite.createCopyTarget(receiver3);
		rewrite.set(method4, MethodDeclaration.RECEIVER_TYPE_PROPERTY, receiverCopy, null);
		rewrite.remove(receiver3, null);

		ListRewrite listRewrite = rewrite.getListRewrite(method3, MethodDeclaration.MODIFIERS2_PROPERTY);
		listRewrite.insertLast(ast.newModifier(Modifier.ModifierKeyword.FINAL_KEYWORD), null);

		receiverCopy = ast.newSimpleType(ast.newSimpleName("XY"));
		rewrite.replace(receiver5, receiverCopy, null);

		receiverCopy = ast.newSimpleType(ast.newSimpleName("XY"));
		rewrite.replace(receiver6, receiverCopy, null);
		SingleVariableDeclaration paramCopy = (SingleVariableDeclaration) rewrite.createCopyTarget((SingleVariableDeclaration) method6.parameters().get(0));
		rewrite.remove((SingleVariableDeclaration) method6.parameters().get(0), null);

		listRewrite = rewrite.getListRewrite(method7, MethodDeclaration.PARAMETERS_PROPERTY);
		listRewrite.insertLast(paramCopy, null);

		rewrite.remove(receiver8, null);
		rewrite.remove((SingleVariableDeclaration) method8.parameters().get(0), null);

		rewrite.remove(receiver9, null);
		rewrite.remove((SingleVariableDeclaration) method9.parameters().get(0), null);

		String preview = evaluateRewrite(cu, rewrite);
		buf = new StringBuffer();
		buf.append("package test1;\n");
		buf.append("class X {\n");
		buf.append("    public void foo() {}\n");
		buf.append("    public void foo(X this) {}\n");
		buf.append("    public final void foo(/*comment*/ int i) {}\n");
		buf.append("    public void foo(X this, int i, int j) {}\n");
		buf.append("    public void foo(XY this) {}\n");
		buf.append("    public void foo(XY this, float f2) {}\n");
		buf.append("    public void foo(X this, int i, float f1) {}\n");
		buf.append("    public void foo() {}\n");
		buf.append("    public void foo1() {}\n");
		buf.append("}\n");
		assertEqualString(preview, buf.toString());
	}

