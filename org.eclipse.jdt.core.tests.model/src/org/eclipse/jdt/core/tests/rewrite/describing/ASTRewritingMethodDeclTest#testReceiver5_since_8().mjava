	public void testReceiver5_since_8() throws Exception {
		IPackageFragment pack1 = this.sourceFolder.createPackageFragment("test1", false, null);
		StringBuffer buf = new StringBuffer();
		buf.append("package test1;\n");
		buf.append("class XYZ {\n");
		buf.append("	class Y {\n");
		buf.append("    	public Y(@A Y Y.this, @B int i) {}\n");
		buf.append("    	public Y(@A XYZ this, @B int i, @C int j) {}\n");
		buf.append("    	public Y(@A XYZ Y.this, @B float e) {}\n");
		buf.append("    	public Y(@A XYZ Y.this, @B float e, @C float f) {}\n");
		buf.append("    }\n");
		buf.append("}\n");
		ICompilationUnit cu = pack1.createCompilationUnit("XYZ.java", buf.toString(), false, null);
		CompilationUnit astRoot = createAST(cu);
		ASTRewrite rewrite = ASTRewrite.create(astRoot.getAST());
		AST ast = astRoot.getAST();
		TypeDeclaration type = (TypeDeclaration) findTypeDeclaration(astRoot, "XYZ").bodyDeclarations().get(0);
		MethodDeclaration method1 = (MethodDeclaration) type.bodyDeclarations().get(0); // Change receiver type's child/children
		MethodDeclaration method2 = (MethodDeclaration) type.bodyDeclarations().get(1); // Insert receiver qualifier
		MethodDeclaration method3 = (MethodDeclaration) type.bodyDeclarations().get(2); // Replace receiver qualifier
		MethodDeclaration method4 = (MethodDeclaration) type.bodyDeclarations().get(3); // Change receiver qualifier's children

		Name newName = ast.newSimpleName("XYZ");
		rewrite.replace(((SimpleType) method1.getReceiverType()).getName(), newName, null);
		rewrite.replace(method1.getReceiverQualifier(), newName, null);
		rewrite.set(method2, MethodDeclaration.RECEIVER_QUALIFIER_PROPERTY, newName, null);
		rewrite.replace(method3.getReceiverQualifier(), newName, null);
		SimpleName qualifier = method4.getReceiverQualifier();
		rewrite.set(qualifier, SimpleName.IDENTIFIER_PROPERTY, "XYZ", null);

		String preview = evaluateRewrite(cu, rewrite);
		buf = new StringBuffer();
		buf.append("package test1;\n");
		buf.append("class XYZ {\n");
		buf.append("	class Y {\n");
		buf.append("    	public Y(@A XYZ XYZ.this, @B int i) {}\n");
		buf.append("    	public Y(@A XYZ XYZ.this, @B int i, @C int j) {}\n");
		buf.append("    	public Y(@A XYZ XYZ.this, @B float e) {}\n");
		buf.append("    	public Y(@A XYZ XYZ.this, @B float e, @C float f) {}\n");
		buf.append("    }\n");
		buf.append("}\n");
		assertEqualString(preview, buf.toString());
	}

