String runFormatter(CodeFormatter codeFormatter, String source, int kind, int indentationLevel, int offset, int length, String lineSeparator) {
	TextEdit edit = codeFormatter.format(kind, source, offset, length, indentationLevel, lineSeparator);//$NON-NLS-1$
	if (edit == null) return null;
	String result = org.eclipse.jdt.internal.core.util.Util.editedString(source, edit);

	int count = 1;
	if (length == source.length()) {
		while (count++ < FORMAT_REPEAT) {
			edit = codeFormatter.format(kind, result, 0, result.length(), indentationLevel, lineSeparator);//$NON-NLS-1$
			if (edit == null) return null;
			String newResult = org.eclipse.jdt.internal.core.util.Util.editedString(result, edit);
			if (!result.equals(newResult)) {
				String counterString = counterString(count);
				if (IGNORE_WHITESPACES) {
					String trimmedResult = ModelTestsUtil.removeWhiteSpace(result);
					String trimmedNewResult = ModelTestsUtil.removeWhiteSpace(newResult);
					if (trimmedResult.equals(trimmedNewResult)) {
						this.whitespacesFailures.add(this.path);
						this.hasSpaceFailure = true;
						return result;
					}
				} else if (IGNORE_LINES_LEADING_WHITESPACES) {
					String trimmedResult = ModelTestsUtil.trimLinesLeadingWhitespaces(result);
					String trimmedNewResult = ModelTestsUtil.trimLinesLeadingWhitespaces(newResult);
					if (trimmedResult.equals(trimmedNewResult)) {
						this.leadingWhitespacesFailures.add(this.path);
						this.hasSpaceFailure = true;
						return result;
					}
					String compressedResult = ModelTestsUtil.removeWhiteSpace(result);
					String compressedNewResult = ModelTestsUtil.removeWhiteSpace(newResult);
					if (compressedResult.equals(compressedNewResult)) {
						this.whitespacesFailures.add(this.path);
						this.hasSpaceFailure = true;
						return result;
					}
				}
				if (!isExpectedFailure()) {
					assertSourceEquals(counterString+" formatting is different from first one!", Util.convertToIndependantLineDelimiter(result), Util.convertToIndependantLineDelimiter(newResult));
				}
			}
		}
	}
	return result;
}

