	public void test109636() {
		Map options = DefaultCodeFormatterConstants.getEclipseDefaultSettings();

		String input =
				"/**" + DELIMITER + 
				" * <code>" + DELIMITER + 
				" * <pre>" + DELIMITER + 
				" * setLeadingComment(\"/&#42; traditional comment &#42;/\");  // correct" + DELIMITER + 
				" * setLeadingComment(\"missing comment delimiters\");  // wrong" + DELIMITER + 
				" * setLeadingComment(\"/&#42; unterminated traditional comment \");  // wrong" + DELIMITER + 
				" * setLeadingComment(\"/&#42; broken\\n traditional comment &#42;/\");  // correct" + DELIMITER + 
				" * setLeadingComment(\"// end-of-line comment\\n\");  // correct" + DELIMITER + 
				" * setLeadingComment(\"// end-of-line comment without line terminator\");  // correct" + DELIMITER + 
				" * setLeadingComment(\"// broken\\n end-of-line comment\\n\");  // wrong" + DELIMITER + 
				" * </pre>" + DELIMITER + 
				" * </code>" + DELIMITER + 
				" */";
		
		String expected = DefaultCodeFormatter.ENABLE_NEW_COMMENTS_FORMAT
			? input // do not change as <code> is an immutable tag
			:	"/**" + DELIMITER + 
				" * <code>" + DELIMITER + 
				" * <pre>" + DELIMITER + 
				" * setLeadingComment(&quot;/* traditional comment &#42;/&quot;); // correct" + DELIMITER + 
				" * setLeadingComment(&quot;missing comment delimiters&quot;); // wrong" + DELIMITER + 
				" * setLeadingComment(&quot;/* unterminated traditional comment &quot;); // wrong" + DELIMITER + 
				" * setLeadingComment(&quot;/* broken\\n traditional comment &#42;/&quot;); // correct" + DELIMITER + 
				" * setLeadingComment(&quot;// end-of-line comment\\n&quot;); // correct" + DELIMITER + 
				" * setLeadingComment(&quot;// end-of-line comment without line terminator&quot;); // correct" + DELIMITER + 
				" * setLeadingComment(&quot;// broken\\n end-of-line comment\\n&quot;); // wrong" + DELIMITER + 
				" * </pre>" + DELIMITER + 
				" * </code>" + DELIMITER + 
				" */";
		String result=testFormat(input, options);
		assertEquals(expected, result);
	}

