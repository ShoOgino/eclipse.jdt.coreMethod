public void testBug260381_wksp2_07() throws JavaModelException {
	String source = 
		"package wksp2;\n" + 
		"\n" + 
		"public interface I07 {\n" + 
		"\n" + 
		"  /**\n" + 
		"   * Constructs a new, empty multiset, sorted according to the specified\n" + 
		"   * comparator. All elements inserted into the multiset must be <i>mutually\n" + 
		"   * comparable</i> by the specified comparator: {@code comparator.compare(e1,\n" + 
		"   * e2)} must not throw a {@code ClassCastException} for any elements {@code\n" + 
		"   * e1} and {@code e2} in the multiset. If the user attempts to add an element\n" + 
		"   * to the multiset that violates this constraint, the {@code add(Object)} call\n" + 
		"   * will throw a {@code ClassCastException}.\n" + 
		"   *\n" + 
		"   * @param comparator the comparator that will be used to sort this multiset. A\n" + 
		"   *     null value indicates that the elements\' <i>natural ordering</i> should\n" + 
		"   *     be used.\n" + 
		"   */\n" + 
		"  void foo();\n" + 
		"}\n";
	formatSource(source,
		"package wksp2;\n" + 
		"\n" + 
		"public interface I07 {\n" + 
		"\n" + 
		"	/**\n" + 
		"	 * Constructs a new, empty multiset, sorted according to the specified\n" + 
		"	 * comparator. All elements inserted into the multiset must be <i>mutually\n" + 
		"	 * comparable</i> by the specified comparator: {@code comparator.compare(e1,\n" + 
		"	 * e2)} must not throw a {@code ClassCastException} for any elements\n" + 
		"	 * {@code e1} and {@code e2} in the multiset. If the user attempts to add an\n" + 
		"	 * element to the multiset that violates this constraint, the\n" + 
		"	 * {@code add(Object)} call will throw a {@code ClassCastException}.\n" + 
		"	 *\n" + 
		"	 * @param comparator\n" + 
		"	 *            the comparator that will be used to sort this multiset. A null\n" + 
		"	 *            value indicates that the elements\' <i>natural ordering</i>\n" + 
		"	 *            should be used.\n" + 
		"	 */\n" + 
		"	void foo();\n" + 
		"}\n"
	);
}

