public void testBug260381_wksp2_01() throws JavaModelException {
	useOldJavadocTagsFormatting();
	String source = 
		"package wksp2;\n" + 
		"public interface I01 {\n" + 
		"	/**\n" + 
		"	 * Returns the composition of two functions. For {@code f: A->B} and\n" + 
		"	 * {@code g: B->C}, composition is defined as the function h such that\n" + 
		"	 * {@code h(a) == g(f(a))} for each {@code a}.\n" + 
		"	 *\n" + 
		"	 * @see <a href=\"//en.wikipedia.org/wiki/Function_composition\">\n" + 
		"	 * function composition</a>\n" + 
		"	 *\n" + 
		"	 * @param g the second function to apply\n" + 
		"	 * @param f the first function to apply\n" + 
		"	 * @return the composition of {@code f} and {@code g}\n" + 
		"	 */\n" + 
		"	void foo();\n" + 
		"}\n";
	formatSource(source,
		"package wksp2;\n" + 
		"\n" + 
		"public interface I01 {\n" + 
		"	/**\n" + 
		"	 * Returns the composition of two functions. For {@code f: A->B} and\n" + 
		"	 * {@code g: B->C}, composition is defined as the function h such that\n" + 
		"	 * {@code h(a) == g(f(a))} for each {@code a}.\n" + 
		"	 *\n" + 
		"	 * @see <a href=\"//en.wikipedia.org/wiki/Function_composition\"> function\n" + 
		"	 *      composition</a>\n" + 
		"	 *\n" + 
		"	 * @param g\n" + 
		"	 *            the second function to apply\n" + 
		"	 * @param f\n" + 
		"	 *            the first function to apply\n" + 
		"	 * @return the composition of {@code f} and {@code g}\n" + 
		"	 */\n" + 
		"	void foo();\n" + 
		"}\n"
	);
}

