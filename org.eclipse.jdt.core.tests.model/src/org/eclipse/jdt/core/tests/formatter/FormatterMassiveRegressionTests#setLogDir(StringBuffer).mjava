private static void setLogDir(StringBuffer buffer) throws CoreException {

	// Compute log dir
//	IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
//	IProject project = root.getProject("Bugs");
//	IFolder rootFolder = project.getFolder("Formatter");
	File logDir = new File(System.getProperty("logDir"));
	if (!logDir.exists()) {
		return;
	}

	// Compute log sub-directories depending on profiles
	logDir = new File(logDir, ECLIPSE_VERSION);
//	IFolder folder = rootFolder.getFolder(ECLIPSE_VERSION);
//	if (!folder.exists()) folder.create(true, true, null);
	if (PATCH_BUG != null) {
		logDir = new File(logDir, "tests");
		logDir = new File(logDir, PATCH_BUG);
		logDir = new File(logDir, PATCH_VERSION);
//		folder = folder.getFolder("tests");
//		if (!folder.exists()) folder.create(true, true, null);
//		folder = folder.getFolder(PATCH_BUG);
//		if (!folder.exists()) folder.create(true, true, null);
//		folder = folder.getFolder(PATCH_VERSION);
//		if (!folder.exists()) folder.create(true, true, null);
	} else if (JDT_CORE_HEAD) {
		logDir = new File(logDir, "HEAD");
//		folder = folder.getFolder("HEAD");
//		if (!folder.exists()) folder.create(true, true, null);
	} else {
		logDir = new File(logDir, ECLIPSE_MILESTONE);
		logDir = new File(logDir, JDT_CORE_VERSION);
//		folder = folder.getFolder(ECLIPSE_MILESTONE);
//		if (!folder.exists()) folder.create(true, true, null);
//		folder = folder.getFolder(JDT_CORE_VERSION);
//		if (!folder.exists()) folder.create(true, true, null);
	}
	if (NO_COMMENTS || BRACES != null || JOIN_LINES != null) {
		logDir = new File(logDir, "profiles");
//		folder = folder.getFolder("profiles");
//		if (!folder.exists()) folder.create(true, true, null);
		if (JOIN_LINES != null) {
			logDir = new File(new File(logDir, "join_lines"), JOIN_LINES);
//			folder = folder.getFolder("join_lines");
//			if (!folder.exists()) folder.create(true, true, null);
//			folder = folder.getFolder(JOIN_LINES);
//			if (!folder.exists()) folder.create(true, true, null);
		}
		if (NO_COMMENTS) {
			logDir = new File(logDir, "no_comments");
//			folder = folder.getFolder("no_comments");
//			if (!folder.exists()) folder.create(true, true, null);
		}
		if (BRACES != null) {
			logDir = new File(new File(logDir, "braces"), BRACES);
//			folder = folder.getFolder("braces");
//			if (!folder.exists()) folder.create(true, true, null);
//			folder = folder.getFolder(BRACES);
//			if (!folder.exists()) folder.create(true, true, null);
		}
	}
	
	// Create log stream
	logDir.mkdirs();
	String filePrefix = INPUT_DIR.getName().replaceAll("\\.", "");
	String logFileName = filePrefix+".txt";
	LOG_FILE = new File(logDir, logFileName);
	if (LOG_FILE.exists()) {
		File saveDir = new File(logDir, "save");
		saveDir.mkdir();
		int i=0;
		while (true) {
			String newFileName = filePrefix+"_";
			if (i<10) newFileName += "0";
			newFileName += i+".txt";
			File renamedFile = new File(saveDir, newFileName);
			if (LOG_FILE.renameTo(renamedFile)) break;
			i++;
		}
	}
//	LOG_RESOURCE = folder.getFile(logFileName);
	buffer.append("Log file  : ");
	buffer.append(LOG_FILE);
//	buffer.append(LOG_RESOURCE.getFullPath());
	buffer.append(LINE_SEPARATOR);
	try {
		LOG_STREAM = new PrintStream(new BufferedOutputStream(new FileOutputStream(LOG_FILE)));
		LOG_STREAM.flush();
	}
	catch (FileNotFoundException fnfe) {
		System.err.println("Can't create log file"+LOG_FILE); //$NON-NLS-1$
	}
//	if (LOG_RESOURCE.exists()) {
//		Util.delete(LOG_RESOURCE);
//	}
//	LOG_BUFFER = new StringBuffer();
}

