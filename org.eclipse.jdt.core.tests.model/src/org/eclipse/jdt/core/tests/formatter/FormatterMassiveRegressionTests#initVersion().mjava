/*
 * Read JDT/Core build notes file to see what version is currently running.
 */
private static void initVersion() {
	BufferedReader buildnotesReader;
    try {
		URL platformURL = Platform.getBundle("org.eclipse.jdt.core").getEntry("/");
		String path = new File(FileLocator.toFileURL(platformURL).getFile(), "buildnotes_jdt-core.html").getAbsolutePath();
	    buildnotesReader = new BufferedReader(new InputStreamReader(new FileInputStream(path)));
    } catch (IOException ioe) {
	    ioe.printStackTrace();
	    return;
    }
	String line;
	String version = null;
	String patch = null;
	boolean closed = false;
	try {
		while ((line = buildnotesReader.readLine()) != null) {
			if (line.startsWith("<a name=\"")) {
				boolean first = version == null;
				version = line.substring(line.indexOf('"')+1, line.lastIndexOf('"'));
				if (!first) break;
			} else if (line.startsWith("Eclipse SDK ")) {
				closed = line.indexOf("%date%") < 0;
				ECLIPSE_VERSION = "v"+line.substring(12, 13)+line.substring(14, 15);
			} else if (line.startsWith("<h2>What's new")) {
				line = buildnotesReader.readLine();
				if (line.startsWith("Patch")) {
					patch = line;
				}
				if (closed) break;
			}
		}
	} catch (Exception e) {
		try {
	        buildnotesReader.close();
        } catch (IOException ioe) {
	        ioe.printStackTrace();
        }
	}
	System.out.print("Version   : ");
	if (patch != null) {
		System.out.print(patch);
		System.out.print(" applied on ");
	}
	if (!closed) {
		System.out.print("HEAD on top of ");
	}
	System.out.println(version);
}

