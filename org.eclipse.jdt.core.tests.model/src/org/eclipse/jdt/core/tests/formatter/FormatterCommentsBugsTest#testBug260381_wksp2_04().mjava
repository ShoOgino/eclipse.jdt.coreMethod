public void testBug260381_wksp2_04() throws JavaModelException {
	String source = 
		"package wksp2;\n" + 
		"\n" + 
		"public interface I04 {\n" + 
		"\n" + 
		"  /**\n" + 
		"   * Returns an immutable multiset containing the given elements.\n" + 
		"   * \n" + 
		"   * <p>The multiset is ordered by the first occurrence of each element. For\n" + 
		"   * example, {@code ImmutableMultiset.copyOf(Arrays.asList(2, 3, 1, 3))} yields\n" + 
		"   * a multiset with elements in the order {@code 2, 3, 3, 1}.\n" + 
		"   *\n" + 
		"   * <p>Note that if {@code c} is a {@code Collection<String>}, then {@code\n" + 
		"   * ImmutableMultiset.copyOf(c)} returns an {@code ImmutableMultiset<String>}\n" + 
		"   * containing each of the strings in {@code c}, while\n" + 
		"   * {@code ImmutableMultiset.of(c)} returns an\n" + 
		"   * {@code ImmutableMultiset<Collection<String>>} containing one element\n" + 
		"   * (the given collection itself).\n" + 
		"   *\n" + 
		"   * <p><b>Note:</b> Despite what the method name suggests, if {@code elements}\n" + 
		"   * is an {@code ImmutableMultiset}, no copy will actually be performed, and\n" + 
		"   * the given multiset itself will be returned.\n" + 
		"   *\n" + 
		"   * @throws NullPointerException if any of {@code elements} is null\n" + 
		"   */\n" + 
		"  void foo();\n" + 
		"}\n";
	formatSource(source,
		"package wksp2;\n" + 
		"\n" + 
		"public interface I04 {\n" + 
		"\n" + 
		"	/**\n" + 
		"	 * Returns an immutable multiset containing the given elements.\n" + 
		"	 * \n" + 
		"	 * <p>\n" + 
		"	 * The multiset is ordered by the first occurrence of each element. For\n" + 
		"	 * example, {@code ImmutableMultiset.copyOf(Arrays.asList(2, 3, 1, 3))}\n" + 
		"	 * yields a multiset with elements in the order {@code 2, 3, 3, 1}.\n" + 
		"	 *\n" + 
		"	 * <p>\n" + 
		"	 * Note that if {@code c} is a {@code Collection<String>}, then {@code\n" + 
		"	 * ImmutableMultiset.copyOf(c)} returns an {@code ImmutableMultiset<String>}\n" + 
		"	 * containing each of the strings in {@code c}, while\n" + 
		"	 * {@code ImmutableMultiset.of(c)} returns an\n" + 
		"	 * {@code ImmutableMultiset<Collection<String>>} containing one element (the\n" + 
		"	 * given collection itself).\n" + 
		"	 *\n" + 
		"	 * <p>\n" + 
		"	 * <b>Note:</b> Despite what the method name suggests, if {@code elements}\n" + 
		"	 * is an {@code ImmutableMultiset}, no copy will actually be performed, and\n" + 
		"	 * the given multiset itself will be returned.\n" + 
		"	 *\n" + 
		"	 * @throws NullPointerException\n" + 
		"	 *             if any of {@code elements} is null\n" + 
		"	 */\n" + 
		"	void foo();\n" + 
		"}\n"
	);
}

