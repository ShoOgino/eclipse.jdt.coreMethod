private static void setOutputDir(File inputDir, String dir, int profiles) {

	// Find the root of the output directory
	OUTPUT_DIR = new File(dir);
	if (OUTPUT_DIR.getName().equals(inputDir.getName())) {
		OUTPUT_DIR = OUTPUT_DIR.getParentFile();
	}
	if (OUTPUT_DIR.getName().equals(ECLIPSE_VERSION)) {
		OUTPUT_DIR = OUTPUT_DIR.getParentFile();
	}

	// Add the temporary output if any
	if (TEMP_OUTPUT != null) {
		StringTokenizer tokenizer = new StringTokenizer(TEMP_OUTPUT, "/");
		while (tokenizer.hasMoreTokens()) {
			OUTPUT_DIR = new File(OUTPUT_DIR, tokenizer.nextToken());
		}
	}

	// Compute output sub-directories depending on profiles
	if (profiles > 0) {
		OUTPUT_DIR = new File(OUTPUT_DIR, "profiles");
		OUTPUT_DIR = setProfilesDir(profiles, OUTPUT_DIR);
	}

	// Compute the final output dir
	File parent = new File(OUTPUT_DIR, ECLIPSE_VERSION);
	if (MAINTENANCE) {
		try {
			int version = Integer.parseInt(ECLIPSE_VERSION.substring(1));
			File maintenance = new File(OUTPUT_DIR, "v"+(version-1));
			if (maintenance.exists()) {
				parent = maintenance;
			}
		}
		catch (NumberFormatException nfe) {
			// skip
		}
	}
	OUTPUT_DIR = new File(parent, inputDir.getName());
}

