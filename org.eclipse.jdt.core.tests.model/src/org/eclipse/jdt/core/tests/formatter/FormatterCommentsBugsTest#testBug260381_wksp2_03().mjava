public void testBug260381_wksp2_03() throws JavaModelException {
	String source = 
		"package wksp2;\n" + 
		"\n" + 
		"public interface I03 {\n" + 
		"  /**\n" + 
		"   * A builder for creating immutable bimap instances, especially {@code public\n" + 
		"   * static final} bimaps (\"constant bimaps\"). Example: <pre>   {@code\n" + 
		"   *\n" + 
		"   *   static final ImmutableBiMap<String, Integer> WORD_TO_INT =\n" + 
		"   *       new ImmutableBiMap.Builder<String, Integer>()\n" + 
		"   *           .put(\"one\", 1)\n" + 
		"   *           .put(\"two\", 2)\n" + 
		"   *           .put(\"three\", 3)\n" + 
		"   *           .build();}</pre>\n" + 
		"   *\n" + 
		"   * For <i>small</i> immutable bimaps, the {@code ImmutableBiMap.of()} methods\n" + 
		"   * are even more convenient.\n" + 
		"   *\n" + 
		"   * <p>Builder instances can be reused - it is safe to call {@link #build}\n" + 
		"   * multiple times to build multiple bimaps in series. Each bimap is a superset\n" + 
		"   * of the bimaps created before it.\n" + 
		"   */\n" + 
		"  void foo();\n" + 
		"}\n";
	formatSource(source,
		"package wksp2;\n" + 
		"\n" + 
		"public interface I03 {\n" + 
		"	/**\n" + 
		"	 * A builder for creating immutable bimap instances, especially\n" + 
		"	 * {@code public\n" + 
		"	 * static final} bimaps (\"constant bimaps\"). Example:\n" + 
		"	 * \n" + 
		"	 * <pre>\n" + 
		"	 * {\n" + 
		"	 * 	&#064;code\n" + 
		"	 * 	static final ImmutableBiMap&lt;String, Integer&gt; WORD_TO_INT = new ImmutableBiMap.Builder&lt;String, Integer&gt;()\n" + 
		"	 * 			.put(&quot;one&quot;, 1).put(&quot;two&quot;, 2).put(&quot;three&quot;, 3).build();\n" + 
		"	 * }\n" + 
		"	 * </pre>\n" + 
		"	 * \n" + 
		"	 * For <i>small</i> immutable bimaps, the {@code ImmutableBiMap.of()}\n" + 
		"	 * methods are even more convenient.\n" + 
		"	 * \n" + 
		"	 * <p>\n" + 
		"	 * Builder instances can be reused - it is safe to call {@link #build}\n" + 
		"	 * multiple times to build multiple bimaps in series. Each bimap is a\n" + 
		"	 * superset of the bimaps created before it.\n" + 
		"	 */\n" + 
		"	void foo();\n" + 
		"}\n"
	);
}

