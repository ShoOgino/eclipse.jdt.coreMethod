	/**
	 * Tests removal of a chunk from the free space trie when the node being
	 * removed was part of the embedded trie and it has a non-empty list of
	 * other nodes of the same size.
	 */
	public void testRemoveFreeSpaceNodeFromTrieWithDuplicates() throws Exception {
		long chunk1 = mallocChunks(1);
		mallocChunks(1);
		long chunk3 = mallocChunks(1);
		long chunk4 = mallocChunks(1);
		mallocChunks(1);

		int chunkCount = this.db.getChunkCount();

		free(chunk3);
		free(chunk1);
		// At this point chunks 1 and 3 should be in the same linked list. Chunk
		// 3 contains the embedded trie.

		free(chunk4);
		// Should merge with chunk3, causing it to be removed from the list

		// Verify that we can allocate the merged chunk 3+4
		mallocChunks(2);

		assertEquals("Chunks 3 and 4 should have been merged", chunkCount, this.db.getChunkCount());
	}

