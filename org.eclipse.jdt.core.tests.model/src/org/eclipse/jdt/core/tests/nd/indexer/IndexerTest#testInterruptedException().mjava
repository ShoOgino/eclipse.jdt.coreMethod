	/**
	 * Verifies that if the index fails a read due to call to {@link Thread#interrupt()}, subsequent reads will
	 * still succeed.
	 */
	public void testInterruptedException() throws Exception {
		createJavaProject(PROJECT_NAME, new String[] {"src"}, new String[] {"JCL18_FULL"}, "bin", "1.8", true);
		// Create an indexfa
		IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
		Indexer indexer = new Indexer(index.getNd(), root);
		indexer.rescan(SubMonitor.convert(null));
		// Ensure we're starting with an empty page cache by creating a new
		// Index accessor object on the same database
		JavaIndex testIndex = JavaIndex
				.getIndex(JavaIndex.createNd(index.getNd().getDB().getLocation(), new ChunkCache()));

		Semaphore semaphore = new Semaphore(0);

		boolean[] wasInterrupted = new boolean[1];
		Thread newThread = new Thread(() -> {
			try (IReader reader = testIndex.getNd().acquireReadLock()) {
				Thread.currentThread().interrupt();
				testIndex.findType("Ljava/util/List;".toCharArray());
			} catch (OperationCanceledException e) {
				wasInterrupted[0] = true;
			} finally {
				semaphore.release();
			}
		});

		newThread.start();

		semaphore.acquire();

		assertTrue(wasInterrupted[0]);
		try (IReader reader = testIndex.getNd().acquireReadLock()) {
			NdTypeId type = testIndex.findType("Ljava/util/List;".toCharArray());
			assertNotNull(type);
		}
	}

