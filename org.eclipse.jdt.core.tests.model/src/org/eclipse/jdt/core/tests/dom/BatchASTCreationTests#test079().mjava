//https://bugs.eclipse.org/bugs/show_bug.cgi?id=152060
public void test079() throws CoreException, IOException {
	try {
		IJavaProject project = createJavaProject("P079", new String[] {"src"}, Util.getJavaClassLibs(), "bin", "1.5");
		createFolder("/P079/src/test");
		createFile("/P079/src/test/Test.java",
				"package test;\n" +
				"import java.util.*;\n" +
				"interface ExtraIterator<T> extends Iterator {\n" +
				"        public void extra();\n" +
				"}\n" +
				"public class Test<T> implements ExtraIterator<T> {\n" +
				"    public boolean hasNext() {\n" +
				"        return false;\n" +
				"    }\n" +
				"    public T next() {\n" +
				"        return null;\n" +
				"    }\n" +
				"    public void remove() {\n" +
				"    }\n" +
				"    public void extra() {\n" +
				"    }\n" +
				"}");
		ICompilationUnit compilationUnits[] = new ICompilationUnit[1];
		compilationUnits[0] = getCompilationUnit("P079", "src", "test", "Test.java");
		ASTParser parser = ASTParser.newParser(JLS3_INTERNAL);
		parser.setResolveBindings(true);
		parser.setProject(project);
		final IBinding[] bindings = new IBinding[1];
		final String key = "Ltest/Test~ExtraIterator<>;";
		parser.createASTs(
				compilationUnits,
				new String[] {
						key
				},
				new ASTRequestor() {
					public void acceptAST(ICompilationUnit source, CompilationUnit localAst) {
						// do nothing
					}
					public void acceptBinding(String bindingKey, IBinding binding) {
						if (key.equals(bindingKey)) {
							bindings[0] = binding;
						}
					}
				},
				null);
		IBinding binding = bindings[0];
		assertNotNull("Should not be null", binding);
		assertEquals("Not a type binding", IBinding.TYPE, binding.getKind());
		ITypeBinding typeBinding = (ITypeBinding) binding;
		assertEquals("Wrong type", "test.ExtraIterator", typeBinding.getQualifiedName());
	} finally {
		deleteProject("P079");
	}
}

