	/**
	 * Ensures that we don't create internally inconsistent wildcard
	 * bindings of the form '? extends <null>' or '? super <null>'
	 * @see "https://bugs.eclipse.org/bugs/show_bug.cgi?id=157847" 
	 */
	public void test157847b() throws CoreException {
		String filePath = "/P/src/Bug157847B.java";
		try {
			String contents =
				"public class Bug157847B<T> {\n" +
				"	void add(Y<? super T> l) {}\n" +
				"}\n"+
                "interface Y<T> {}\n";
			createFile(filePath, contents);

			BindingRequestor requestor = new BindingRequestor();
			String[] bindingKeys = new String[] {"LBug157847B~Y<LBug157847B~Y;{0}-!LBug157847B;{0}*54;>;"};
			resolveASTs(
				new ICompilationUnit[] {},
				bindingKeys,
				requestor,
				getJavaProject("P"),
				this.workingCopy.getOwner()
			);
			IBinding[] bindings = requestor.getBindings(bindingKeys);
			assertTrue("Constructed bogus wildcard", bindings.length == 0);
		} finally {
			deleteFile(filePath);
		}
	}

