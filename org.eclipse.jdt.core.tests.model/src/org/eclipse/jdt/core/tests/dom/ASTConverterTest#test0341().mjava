	/**
	 * http://dev.eclipse.org/bugs/show_bug.cgi?id=15804
	 */
	public void test0341() throws JavaModelException {
		ICompilationUnit sourceUnit = getCompilationUnit("Converter" , "", "test0341", "A.java");
		char[] source = sourceUnit.getSource().toCharArray();
		ASTNode result = runConversion(sourceUnit, true);
		assertNotNull("No compilation unit", result);
		assertTrue("result is not a compilation unit", result instanceof CompilationUnit);
		CompilationUnit compilationUnit = (CompilationUnit) result;
		assertEquals("errors found", 0, compilationUnit.getMessages().length);
		ASTNode node = getASTNode(compilationUnit, 0, 1, 0);
		assertNotNull("not null", node);
		assertTrue("Not an if statement", node.getNodeType() == ASTNode.IF_STATEMENT);
		String expectedSource = 
				"if (field != null) {\n" +
				"			throw new IOException();\n" +
				"		} else if (field == null) {\n" +
				"			throw new MalformedURLException();\n" +
				"		} else if (field == null) {\n" +
				"			throw new InterruptedIOException();\n" +
				"		} else {\n" +
				"			throw new UnsupportedEncodingException();\n" +
				"		}";
		checkSourceRange(node, expectedSource, source);
		IfStatement ifStatement = (IfStatement) node;
		Statement thenStatement = ifStatement.getThenStatement();
		expectedSource = 
				"{\n" +
				"			throw new IOException();\n" +
				"		}";
		checkSourceRange(thenStatement, expectedSource, source);
		Statement elseStatement = ifStatement.getElseStatement();
		expectedSource = 
				"if (field == null) {\n" +
				"			throw new MalformedURLException();\n" +
				"		} else if (field == null) {\n" +
				"			throw new InterruptedIOException();\n" +
				"		} else {\n" +
				"			throw new UnsupportedEncodingException();\n" +
				"		}";
		checkSourceRange(elseStatement, expectedSource, source);
		assertTrue("Not a if statement", elseStatement.getNodeType() == ASTNode.IF_STATEMENT);
		ifStatement = (IfStatement) elseStatement;
		thenStatement = ifStatement.getThenStatement();
		expectedSource = 
				"{\n" +
				"			throw new MalformedURLException();\n" +
				"		}";
		checkSourceRange(thenStatement, expectedSource, source);
		elseStatement = ifStatement.getElseStatement();
		expectedSource = 
				"if (field == null) {\n" +
				"			throw new InterruptedIOException();\n" +
				"		} else {\n" +
				"			throw new UnsupportedEncodingException();\n" +
				"		}";
		checkSourceRange(elseStatement, expectedSource, source);
		assertTrue("Not a if statement", elseStatement.getNodeType() == ASTNode.IF_STATEMENT);
		ifStatement = (IfStatement) elseStatement;
		thenStatement = ifStatement.getThenStatement();
		expectedSource = 
				"{\n" +
				"			throw new InterruptedIOException();\n" +
				"		}";
		checkSourceRange(thenStatement, expectedSource, source);
		elseStatement = ifStatement.getElseStatement();
		expectedSource = 
				"{\n" +
				"			throw new UnsupportedEncodingException();\n" +
				"		}";
		checkSourceRange(elseStatement, expectedSource, source);
	}	

