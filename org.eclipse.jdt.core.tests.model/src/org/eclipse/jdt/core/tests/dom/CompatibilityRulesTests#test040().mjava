	/*
	 * Ensures that a method with different paramter types is not a subsignature of its super method.
	 * (regression test for bug 111093 More problems with IMethodBinding#isSubsignature(..))
	 */
	public void test040() throws JavaModelException {
		IMethodBinding[] bindings = createMethodBindings(
			new String[] {
				"/P/p1/A.java",
				"package p1;\n" +
				"public class A<S> {\n" + 
				"  public <X, Y> void tp1_xoo3(X x, Y y) {\n" + 
				"  }\n" + 
				"}\n" +
				"class B extends A<String> {\n" + 
				"  @Override\n" + 
				"  public <W, V> void tp1_xoo3(V x, W y) {\n" + 
				"  }\n" + 
				"}",
			},
			new String[] {
				"Lp1/A;.tp1_xoo3<X:Ljava/lang/Object;Y:Ljava/lang/Object;>(TX;TY;)V",
				"Lp1/A~B;.tp1_xoo3<W:Ljava/lang/Object;V:Ljava/lang/Object;>(TV;TW;)V"
			});	
		assertFalse("B#tp1_xoo3() should not be a subsignature of A#tp1_xoo3()", bindings[1].isSubsignature(bindings[0]));
	}

