	/*
	 * Ensures that the IJavaElement of an IBinding representing an annotation is correct.
	 */
	public void testAnnotation4() throws JavaModelException {
		ICompilationUnit myAnnot = null;
		ICompilationUnit packageInfo = null;
		try {
			WorkingCopyOwner owner = this.workingCopy.getOwner();
			myAnnot = getCompilationUnit("/P/src/pkg/MyAnnot.java").getWorkingCopy(owner, null);
			myAnnot.getBuffer().setContents(
				"package pkg;\n" +
				"public @interface MyAnnot {\n" +
				"}"
			);
			myAnnot.makeConsistent(null);
			packageInfo = getCompilationUnit("/P/src/pkg/package-info.java").getWorkingCopy(owner, null);
			ASTNode node = buildAST(
				"/*start*/@MyAnnot/*end*/\n" +
				"package pkg;",
				packageInfo
			);
			IBinding binding = ((Annotation) node).resolveAnnotationBinding();
			IJavaElement element = binding.getJavaElement();
			assertElementExists(
				"Unexpected Java element",
				"@MyAnnot [in package pkg [in [Working copy] package-info.java [in pkg [in src [in P]]]]]",
				element
			);
		} finally {
			if (myAnnot != null)
				myAnnot.discardWorkingCopy();
			if (packageInfo != null)
				packageInfo.discardWorkingCopy();
		}
	}

