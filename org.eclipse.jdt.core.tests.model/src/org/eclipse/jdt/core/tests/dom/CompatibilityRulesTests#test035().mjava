	/*
	 * Ensures that a method with different paramter types is not a subsignature of its super method.
	 * (regression test for bug 111093 More problems with IMethodBinding#isSubsignature(..))
	 */
	public void test035() throws JavaModelException {
		IMethodBinding[] bindings = createMethodBindings(
			new String[] {
				"/P/p1/A.java",
				"package p1;\n" +
				"public class A<T> {\n" +
				"  public void o1_xoo2(A<?> s) {\n" +
				"  }\n" +
				"}\n" +
				"class B<S> extends A<S> {\n" +
				"  @Override\n" +
				"  public void o1_xoo2(A<Object> s) {\n" +
				"  }\n" +
				"}",
			},
			new String[] {
				"Lp1/A;.o1_xoo2(Lp1/A<*>;)V",
				"Lp1/A~B;.o1_xoo2(Lp1/A<Ljava/lang/Object;>;)V"
			});
		assertFalse("B#o1_xoo2() should not be a subsignature of A#o1_xoo2()", bindings[1].isSubsignature(bindings[0]));
	}

