/**
 * @bug 213509: [dom] IMethodBinding.getParameterAnnotations returns annotations for wrong parameter
 * @test Ensures that all parameter annotations of a the method binding are correctly  returned
 * @see "https://bugs.eclipse.org/bugs/show_bug.cgi?id=213509"
 */
public void testBug213509() throws CoreException, IOException {
	this.workingCopies = new ICompilationUnit[1];
	this.workingCopies[0] = getWorkingCopy("/Converter15/src/Test.java",
		"public class Test {\n" +
		"	void m(@Foo @Bar @Annot String str, @Bar @Foo Object obj, @Annot int x) {}\n" +
		"}\n" +
		"@interface Foo {}\n" +
		"@interface Bar {}\n" +
		"@interface Annot {}\n"
	);

	CompilationUnit unit = (CompilationUnit) runConversion(this.workingCopies[0], true/*bindings*/, false/*no statement recovery*/, true/*bindings recovery*/);
	MethodDeclaration methodDeclaration = (MethodDeclaration) getASTNode(unit, 0, 0);
	checkParameterAnnotations(methodDeclaration+" has invalid parameter annotations!",
		"----- param 1-----\n" +
		"@LTest~Foo;\n" +
		"@LTest~Bar;\n" +
		"@LTest~Annot;\n" +
		"----- param 2-----\n" +
		"@LTest~Bar;\n" +
		"@LTest~Foo;\n" +
		"----- param 3-----\n" +
		"@LTest~Annot;\n",
		methodDeclaration.resolveBinding()
	);
}

