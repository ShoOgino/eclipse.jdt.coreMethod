	/*
	 * Verify that objects of Javadoc tag structure match their source positions
	 */
	protected void assertMatchPositions(TagElement tagElement, char[] source) {
		// Verify tag name
		String tagName = tagElement.getTagName();
		if (tagName != null) {
			assertEquals("Misplaced tag name at "+tagElement.getStartPosition(), tagName, new String(source, tagElement.getStartPosition(), tagName.length()));
		}
		// Verify each fragment
		Iterator elements = tagElement.fragments().listIterator();
		while (elements.hasNext()) {
			ASTNode fragment = (ASTNode) elements.next();
			String text = null;
			if (fragment.getNodeType() == ASTNode.TEXT_ELEMENT) {
				text = new String(source, fragment.getStartPosition(), fragment.getLength());
				assertEquals("Misplaced or wrong text element at "+fragment.getStartPosition(), text, ((TextElement) fragment).getText());
			} else if (fragment.getNodeType() == ASTNode.TAG_ELEMENT) {
				assertMatchPositions((TagElement) fragment, source);
			} else if (fragment.getNodeType() == ASTNode.MEMBER_REF) {
				MemberRef memberRef = (MemberRef) fragment;
				ASTNode node = memberRef.getQualifier();
				if (node != null) {
					text = new String(source, node.getStartPosition(), node.getLength());
					assertEquals("Misplaced or wrong member ref container at "+node.getStartPosition(), text, node.toString());
				}
				if (memberRef.getName() != null) {
					node = memberRef.getName();
					text = new String(source, node.getStartPosition(), node.getLength());
					assertEquals("Misplaced or wrong member ref name at "+node.getStartPosition(), text, node.toString());
				}
			} else if (fragment.getNodeType() == ASTNode.METHOD_REF) {
				MethodRef methodRef = (MethodRef) fragment;
				ASTNode node = methodRef.getQualifier();
				if (node != null) {
					text = new String(source, node.getStartPosition(), node.getLength());
					assertEquals("Misplaced or wrong method ref container at "+node.getStartPosition(), text, node.toString());
				}
				node = methodRef.getName();
				text = new String(source, node.getStartPosition(), node.getLength());
				assertEquals("Misplaced or wrong method ref name at "+node.getStartPosition(), text, node.toString());
				Iterator parameters = methodRef.parameters().listIterator();
				while (parameters.hasNext()) {
					MethodRefParameter param = (MethodRefParameter) parameters.next();
					node = param.getName();
					if (node != null) {
						text = new String(source, node.getStartPosition(), node.getLength());
						assertEquals("Misplaced or wrong method ref parameter name at "+node.getStartPosition(), text, node.toString());
					}
					node = param.getType();
					text = new String(source, node.getStartPosition(), node.getLength());
					assertEquals("Misplaced or wrong method ref parameter type at "+node.getStartPosition(), text, node.toString());
				}
			}
		}
	}

