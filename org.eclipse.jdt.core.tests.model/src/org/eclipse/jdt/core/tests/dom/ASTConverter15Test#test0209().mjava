	public void test0209() throws JavaModelException {
		this.workingCopy = getWorkingCopy("/Converter15/src/test/V.java", true/*resolve*/);
		String contents =
			"package test;\n" + 
			"import pack.*;\n" + 
			"public class V {\n" + 
			"	void bar() {\n" + 
			"	}\n" + 
			"	void foo() {\n" + 
			"		@A3(\n" + 
			"			annot = @A2(\n" + 
			"				annot = @A1(value = E.CV, list = new E[] { E.CAV, E.CAV}, clazz = E.class),\n" + 
			"				value = E.CV,\n" + 
			"				list = new E[] { E.CAV, E.CAV},\n" + 
			"				clazz = E.class),\n" + 
			"			value = E.CV,\n" + 
			"			list = new E[] { E.CAV, E.CAV},\n" + 
			"			clazz = E.class)\n" + 
			"		int x = 0;\n" + 
			"		System.out.println(x);\n" + 
			"		System.out.println(x + 1);\n" + 
			"	}\n" + 
			"}";
		ASTNode node = buildAST(
				contents,
				this.workingCopy,
				false);
		assertNotNull("No node", node);
		assertEquals("Not a compilation unit", ASTNode.COMPILATION_UNIT, node.getNodeType());
		CompilationUnit compilationUnit = (CompilationUnit) node;
		String problems =
			"The value for annotation attribute A1.list must be an array initializer\n" + 
			"The value for annotation attribute A2.list must be an array initializer\n" + 
			"The value for annotation attribute A3.list must be an array initializer";
		assertProblemsSize(compilationUnit, 3, problems);
		List imports = compilationUnit.imports();
		assertEquals("wrong size", 1, imports.size());
		ImportDeclaration importDeclaration = (ImportDeclaration) imports.get(0);
		Name name = importDeclaration.getName();
		assertEquals("Not a simple name", ASTNode.SIMPLE_NAME, name.getNodeType());
		SimpleName simpleName = (SimpleName) name;
		IBinding binding = simpleName.resolveBinding();
		assertNotNull("No binding", binding);
		assertEquals("Wrong type", IBinding.PACKAGE, binding.getKind());
	}

