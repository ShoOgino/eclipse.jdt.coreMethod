	// Test ParameterizedSingleTypeReference with arrays.
	public void test0008() throws JavaModelException {
		String contents =
			"public class X<T> {\n" +
		    "    class Y<R> {\n" +
			"        class Z<Q> {\n" +
		    "        }\n" +
			"    }\n" +
			"    Object o = (@One X<String> [] @Two [][]@Three []) null;\n" +
			
			"    @java.lang.annotation.Target (java.lang.annotation.ElementType.TYPE_USE)\n" +
			"    @interface Marker {\n" +
			"    }\n" +
			"}\n";
		this.workingCopy = getWorkingCopy("/Converter18/src/X.java", true/*resolve*/);
		ASTNode node = buildAST(
			contents,
			this.workingCopy, false);
		String expectedOutput = 
				"public class X<T> {\n" + 
				"class Y<R> {\n" + 
				"class Z<Q> {\n" + 
				"    }\n" + 
				"  }\n" + 
				"  Object o=(@One X<String>[] @Two [][] @Three [])null;\n" + 
				"  @java.lang.annotation.Target(java.lang.annotation.ElementType.TYPE_USE) @interface Marker {}\n" + 
				"}\n";
		assertASTNodeEquals(expectedOutput, node);
	}

