	// Test ParameterizedQualifiedTypeReference
	public void test0002() throws JavaModelException {
		String contents =
			"public class X {\n" +
		    "    class Y {\n" +
			"        class Z<T> {\n" +
		    "        }\n" +
			"    }\n" +
			"    Object o = (@Marker X. @Marker Y.@Marker Z<String>) null;\n" +

			"    @java.lang.annotation.Target (java.lang.annotation.ElementType.TYPE_USE)\n" +
			"    @interface Marker {\n" +
			"    }\n" +
			"}\n";
		this.workingCopy = getWorkingCopy("/Converter18/src/X.java", true/*resolve*/);
		ASTNode node = buildAST(
			contents,
			this.workingCopy);
		String expectedOutput =
				"public class X {\n" +
				"class Y {\n" +
				"class Z<T> {\n" +
				"    }\n" +
				"  }\n" +
				"  Object o=(@Marker X.@Marker Y.@Marker Z<String>)null;\n" +
				"  @java.lang.annotation.Target(java.lang.annotation.ElementType.TYPE_USE) @interface Marker {}\n" +
				"}\n";
		assertASTNodeEquals(expectedOutput, node);
	}

