	/**
	 * @bug 125676: [javadoc] @category should not read beyond end of line
	 * @see "https://bugs.eclipse.org/bugs/show_bug.cgi?id=125676"
	 */
	public void testBug125676() throws JavaModelException {
		this.workingCopies = new ICompilationUnit[3];
		this.astLevel = getJLS3();
		this.workingCopies[0] = getWorkingCopy("/Converter15/src/javadoc/b125676/A.java",
			"package javadoc.b125676;\n" +
			"public class A {\n" +
			"        /**\n" +
			"         * @category \n" +
			"         * When searching for field matches, it will exclusively find read accesses, as\n" +
			"         * opposed to write accesses. Note that some expressions are considered both\n" +
			"         * as field read/write accesses: for example, x++; x+= 1;\n" +
			"         * \n" +
			"         * @since 2.0\n" +
			"         */\n" +
			"        int READ_ACCESSES = 4;\n" +
			"}\n"
		);
		this.workingCopies[1] = getWorkingCopy("/Converter15/src/javadoc/b125676/B.java",
			"package javadoc.b125676;\n" +
			"public class B {\n" +
			"        /**\n" +
			"         * @category test\n" +
			"         */\n" +
			"        int field1;\n" +
			"        /**\n" +
			"         * @category     test\n" +
			"         */\n" +
			"        int field2;\n" +
			"        /**\n" +
			"         * @category test    \n" +
			"         */\n" +
			"        int field3;\n" +
			"        /**\n" +
			"         * @category    test    \n" +
			"         */\n" +
			"        int field4;\n" +
			"        /** @category test */\n" +
			"        int field5;\n" +
			"\n" +
			"}\n"
		);
		this.workingCopies[2] = getWorkingCopy("/Converter15/src/javadoc/b125676/C.java",
			"package javadoc.b125676;\n" +
			"public class C { \n" +
			"        /**\n" +
			"         * @category test mutli ids\n" +
			"         */\n" +
			"        int field1;\n" +
			"        /**\n" +
			"         * @category    test    mutli    ids   \n" +
			"         */\n" +
			"        int field2;\n" +
			"        /** @category    test    mutli    ids*/\n" +
			"        int field3;\n" +
			"}\n"
		);
		verifyWorkingCopiesComments();
	}

