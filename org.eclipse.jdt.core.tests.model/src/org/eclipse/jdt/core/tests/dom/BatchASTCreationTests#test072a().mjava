	//https://bugs.eclipse.org/bugs/show_bug.cgi?id=152060
	public void test072a() throws CoreException, IOException {
		try {
			IJavaProject project = createJavaProject("P072a", new String[] {"src"}, Util.getJavaClassLibs(), "bin", "1.5");
			createFile("/P072a/src/X.java",
					"public class X {\n" +
					"    void m() {\n" +
					"        Object o;\n" +
					"    }\n" +
					"}");
			final ICompilationUnit compilationUnits[] = new ICompilationUnit[1];
			compilationUnits[0] = getCompilationUnit("P072a", "src", "", "X.java");
			ASTParser parser = ASTParser.newParser(AST.JLS3);
			parser.setResolveBindings(true);
			parser.setProject(project);
			final String[] keys = new String[] { "LX;.m()V#o" };
			final ASTNode[] nodes = new ASTNode[1];
			BindingRequestor bindingRequestor = new BindingRequestor() {
				public void acceptAST(ICompilationUnit source, CompilationUnit ast) {
					if (compilationUnits[0].equals(source)) {
						nodes[0] = ast;
					}
				}
			};
			parser.createASTs(
					compilationUnits,
					keys,
					bindingRequestor,
					null);
			IBinding[] bindings = bindingRequestor.getBindings(keys);
			IBinding binding = bindings[0];
			assertNotNull("Should not be null", binding);
			assertEquals("Not a type binding", IBinding.VARIABLE, binding.getKind());
			MethodDeclaration declaration = ((TypeDeclaration)((CompilationUnit) nodes[0]).types().get(0)).getMethods()[0];
			VariableDeclarationFragment fragment = (VariableDeclarationFragment) ((VariableDeclarationStatement) declaration.getBody().statements().get(0)).fragments().get(0);
			IVariableBinding resolveBinding = fragment.resolveBinding();
			assertTrue("Not equals", binding.isEqualTo(resolveBinding));
			assertNotNull("No java element", resolveBinding.getJavaElement());
			assertNotNull("No java element", binding.getJavaElement());
		} finally {
			deleteProject("P072a");
		}
	}

