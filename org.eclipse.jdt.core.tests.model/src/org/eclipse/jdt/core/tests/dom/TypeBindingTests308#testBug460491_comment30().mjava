	public void testBug460491_comment30() throws CoreException {
		// placed in this suite because we need type annotations enabled
		IPackageFragmentRoot srcRoot = this.currentProject.getPackageFragmentRoots()[0];
		assertFalse(srcRoot.isReadOnly());
		createFolder(srcRoot.getPath().append("test"));
		IPackageFragment testPackage = srcRoot.getPackageFragment("test");
		
		testPackage.createCompilationUnit("Generic.java", 
				"package test;\n" + 
				"\n" + 
				"public class Generic<T> {\n" + 
				"	public static class NestedStatic {\n" + 
				"		public static final String X = \"x\";\n" + 
				"	}\n" + 
				"}\n",
				true,
				null);
		String contents =
				"package test;\n" + 
				"\n" + 
				"public class Usage {\n" + 
				"	String f() {\n" + 
				"		return Generic.NestedStatic.X;\n" + 
				"	}\n" + 
				"}\n";
		ICompilationUnit cu = testPackage.createCompilationUnit("Usage.java", contents, true, null);
		ASTNode node = buildAST(contents, cu, false);
		assertEquals("Not a compilation unit", ASTNode.COMPILATION_UNIT, node.getNodeType());
		CompilationUnit compilationUnit = (CompilationUnit) node;

		List types = compilationUnit.types();
		assertEquals(1, types.size());
		List methods = ((TypeDeclaration) types.get(0)).bodyDeclarations();
		assertEquals(1, methods.size());
		List statements = ((MethodDeclaration) methods.get(0)).getBody().statements();
		assertEquals(1, statements.size());
		
		Expression expression = ((ReturnStatement) statements.get(0)).getExpression();
		IBinding binding = ((QualifiedName) expression).getQualifier().resolveBinding();
		assertNotNull(binding);
	}

