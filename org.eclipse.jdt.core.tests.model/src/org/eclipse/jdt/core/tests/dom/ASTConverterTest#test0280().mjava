	/**
	 * http://dev.eclipse.org/bugs/show_bug.cgi?id=10865
	 * Check well known types
	 */
	public void test0280() throws JavaModelException {
		ICompilationUnit sourceUnit = getCompilationUnit("Converter" , "", "test0280", "Test.java");
		ASTNode result = runConversion(sourceUnit, true);
		assertNotNull("No compilation unit", result);
		assertTrue("result is not a compilation unit", result instanceof CompilationUnit);
		AST ast = result.getAST();
		ITypeBinding typeBinding = ast.resolveWellKnownType("boolean");
		assertNotNull("No typeBinding", typeBinding);
		assertEquals("Wrong name", "boolean", typeBinding.getName());
		typeBinding = ast.resolveWellKnownType("char");
		assertNotNull("No typeBinding", typeBinding);
		assertEquals("Wrong name", "char", typeBinding.getName());
		typeBinding = ast.resolveWellKnownType("byte");
		assertNotNull("No typeBinding", typeBinding);
		assertEquals("Wrong name", "byte", typeBinding.getName());
		typeBinding = ast.resolveWellKnownType("short");
		assertNotNull("No typeBinding", typeBinding);
		assertEquals("Wrong name", "short", typeBinding.getName());
		typeBinding = ast.resolveWellKnownType("int");
		assertNotNull("No typeBinding", typeBinding);
		assertEquals("Wrong name", "int", typeBinding.getName());
		typeBinding = ast.resolveWellKnownType("long");
		assertNotNull("No typeBinding", typeBinding);
		assertEquals("Wrong name", "long", typeBinding.getName());
		typeBinding = ast.resolveWellKnownType("float");
		assertNotNull("No typeBinding", typeBinding);
		assertEquals("Wrong name", "float", typeBinding.getName());
		typeBinding = ast.resolveWellKnownType("double");
		assertNotNull("No typeBinding", typeBinding);
		assertEquals("Wrong name", "double", typeBinding.getName());
		typeBinding = ast.resolveWellKnownType("void");
		assertNotNull("No typeBinding", typeBinding);
		assertEquals("Wrong name", "void", typeBinding.getName());
		typeBinding = ast.resolveWellKnownType("java.lang.Object");
		assertNotNull("No typeBinding", typeBinding);
		assertEquals("Wrong name", "Object", typeBinding.getName());
		typeBinding = ast.resolveWellKnownType("java.lang.String");
		assertNotNull("No typeBinding", typeBinding);
		assertEquals("Wrong name", "String", typeBinding.getName());
		typeBinding = ast.resolveWellKnownType("java.lang.StringBuffer");
		assertNotNull("No typeBinding", typeBinding);
		assertEquals("Wrong name", "StringBuffer", typeBinding.getName());
		typeBinding = ast.resolveWellKnownType("java.lang.Throwable");
		assertNotNull("No typeBinding", typeBinding);
		assertEquals("Wrong name", "Throwable", typeBinding.getName());
		typeBinding = ast.resolveWellKnownType("java.lang.Exception");
		assertNotNull("No typeBinding", typeBinding);
		assertEquals("Wrong name", "Exception", typeBinding.getName());
		typeBinding = ast.resolveWellKnownType("java.lang.RuntimeException");
		assertNotNull("No typeBinding", typeBinding);
		assertEquals("Wrong name", "RuntimeException", typeBinding.getName());
		typeBinding = ast.resolveWellKnownType("java.lang.Error");
		assertNotNull("No typeBinding", typeBinding);
		assertEquals("Wrong name", "Error", typeBinding.getName());
		typeBinding = ast.resolveWellKnownType("java.lang.Class");
		assertNotNull("No typeBinding", typeBinding);
		assertEquals("Wrong name", "Class", typeBinding.getName());
		typeBinding = ast.resolveWellKnownType("java.lang.Runnable");
		assertNull("typeBinding not null", typeBinding);
	}

