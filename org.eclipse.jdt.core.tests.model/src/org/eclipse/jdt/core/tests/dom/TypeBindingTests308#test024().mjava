	public void test024() throws Exception {
		String contents = 
				"public class X {\n" +
				"    void foo() throws @Marker NullPointerException, @Marker2 ArrayIndexOutOfBoundsException {}\n" +
				"}\n" +
				"@java.lang.annotation.Target (java.lang.annotation.ElementType.TYPE_USE)\n" +
				"@interface Marker {}\n" +
				"@java.lang.annotation.Target (java.lang.annotation.ElementType.TYPE_USE)\n" +
				"@interface Marker2 {}\n";

		this.workingCopy = getWorkingCopy("/Converter18/src/X.java", true);
		ASTNode node = buildAST(contents, this.workingCopy);
		assertEquals("Not a compilation unit", ASTNode.COMPILATION_UNIT, node.getNodeType());
		CompilationUnit compilationUnit = (CompilationUnit) node;
		assertProblemsSize(compilationUnit, 0);
		List types = compilationUnit.types();
		assertEquals("Incorrect no of types", 3, types.size());
		TypeDeclaration typeDecl = (TypeDeclaration) types.get(0);
		MethodDeclaration method = typeDecl.getMethods()[0];
		List thrownTypes = method.thrownExceptionTypes();
		assertEquals("Incorrect no of thrown exceptions", 2, thrownTypes.size());
		Type type = (Type) thrownTypes.get(0);
		verifyAnnotationOnType(type, new String[]{"@Marker()"});
		type = (Type) thrownTypes.get(1);
		verifyAnnotationOnType(type, new String[]{"@Marker2()"});
	}

