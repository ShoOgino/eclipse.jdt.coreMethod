	/*
	 * Ensures that we can create a binding for an IJavaElement representing a type parameter (binary method)
	 * Bug 466279 - [hovering] IAE on hover when annotation-based null analysis is enabled
	 */
	public void testTypeParameter4() throws CoreException {
		try {
			createFolder("P/lib");
			createClassFile("/P/lib", "A.class",
				"package lib;\n" +
				"public interface A {\n" +
				"  public <T,Z> T foo(int i, Z s);\n" +
				"}");
			IJavaProject javaProject = getJavaProject("P");
			IMethod method = javaProject.findType("lib.A").getMethod("foo", new String[] { "I", "TZ;" });
			IJavaElement[] elements = new IJavaElement[] {
					method,
					method.getTypeParameters()[0],
					method.getTypeParameters()[1]
				};
			ASTParser parser = ASTParser.newParser(getJLS8());
			parser.setProject(javaProject);
			IBinding[] bindings = parser.createBindings(elements, null);
			assertBindingsEqual(
				"Llib/A;.foo<T:Ljava/lang/Object;Z:Ljava/lang/Object;>(ITZ;)TT;\n" +
				"Llib/A;.foo<T:Ljava/lang/Object;Z:Ljava/lang/Object;>(ITZ;)TT;:TT;\n" +
				"Llib/A;.foo<T:Ljava/lang/Object;Z:Ljava/lang/Object;>(ITZ;)TT;:TZ;",
				bindings);
		} finally {
			deleteFile("/P/lib/A.class");
			deleteFolder("/P/lib");
		}
	}

