public void testBug213509_invocation() throws CoreException, IOException {
	workingCopies = new ICompilationUnit[2];
	workingCopies[0] = getWorkingCopy("/Converter15/src/Test.java",
		"public class Test {\n" + 
		"	void m(@Foo @Bar @Annot String str, @Bar @Foo Object obj, @Annot int x) {}\n" + 
		"}\n" + 
		"@interface Foo {}\n" + 
		"@interface Bar {}\n" + 
		"@interface Annot {}\n"
	);
	workingCopies[1] = getWorkingCopy("/Converter15/src/X.java",
		"public class X {\n" + 
		"public X(Test test) {\n" + 
		"	test.m(\"\", null, 7);\n" + 
		"}\n" + 
		"}"
	);

	CompilationUnit unit = (CompilationUnit) runConversion(workingCopies[1], true/*bindings*/, false/*no statement recovery*/, true/*bindings recovery*/);
	MethodDeclaration methodDeclaration = (MethodDeclaration) getASTNode(unit, 0, 0);
	MethodInvocation methodInvocation = (MethodInvocation) ((ExpressionStatement) methodDeclaration.getBody().statements().get(0)).getExpression();
	checkParameterAnnotations(methodInvocation+" has invalid parameter annotations!",
		"----- param 1-----\n" + 
		"@LTest~Foo;\n" + 
		"@LTest~Bar;\n" + 
		"@LTest~Annot;\n" + 
		"----- param 2-----\n" + 
		"@LTest~Bar;\n" + 
		"@LTest~Foo;\n" + 
		"----- param 3-----\n" + 
		"@LTest~Annot;\n",
		methodInvocation.resolveMethodBinding()
	);
}

