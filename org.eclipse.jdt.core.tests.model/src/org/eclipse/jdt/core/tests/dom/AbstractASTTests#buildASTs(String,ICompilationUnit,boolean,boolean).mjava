	protected ASTNode[] buildASTs(String newContents, ICompilationUnit cu, boolean reportErrors, boolean enableStatementRecovery) throws JavaModelException {
		MarkerInfo markerInfo;
		if (newContents == null) {
			markerInfo = new MarkerInfo(cu.getSource());
			newContents = markerInfo.source;
			cu.getBuffer().setContents(newContents);
			cu.makeConsistent(null);
		} else {
			markerInfo = new MarkerInfo(newContents);
			newContents = markerInfo.source;
			cu.getBuffer().setContents(newContents);
		}
		CompilationUnit unit;
		if (cu.isWorkingCopy()) 
			unit = cu.reconcile(AST.JLS3, reportErrors, enableStatementRecovery, null, null);
		else {
			ASTParser parser = ASTParser.newParser(AST.JLS3);
			parser.setSource(cu);
			parser.setResolveBindings(true);
			parser.setStatementsRecovery(enableStatementRecovery);
			unit = (CompilationUnit) parser.createAST(null);
		}
		
		if (reportErrors) {
			StringBuffer buffer = new StringBuffer();
			IProblem[] problems = unit.getProblems();
			for (int i = 0, length = problems.length; i < length; i++)
				Util.appendProblem(buffer, problems[i], newContents.toCharArray(), i+1);
			if (buffer.length() > 0)
				System.err.println(buffer.toString());
		}

		ASTNode[] nodes = findNodes(unit, markerInfo);
		if (nodes.length == 0)
			return new ASTNode[] {unit};
		return nodes;
	}

