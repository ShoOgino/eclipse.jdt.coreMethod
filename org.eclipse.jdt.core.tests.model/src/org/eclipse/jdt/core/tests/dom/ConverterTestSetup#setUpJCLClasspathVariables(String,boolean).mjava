	public void setUpJCLClasspathVariables(String compliance, boolean useFullJCL) throws JavaModelException, IOException {
		if (useFullJCL) {
			 super.setUpJCLClasspathVariables(compliance, useFullJCL);
			 return;
		}
		if ("1.5".equals(compliance)
				|| "1.6".equals(compliance)) {
			if (JavaCore.getClasspathVariable("CONVERTER_JCL15_LIB") == null) {
				setupExternalJCL("converterJclMin1.5");
				JavaCore.setClasspathVariables(
					new String[] {"CONVERTER_JCL15_LIB", "CONVERTER_JCL15_SRC", "CONVERTER_JCL15_SRCROOT"},
					new IPath[] {getConverterJCLPath(compliance), getConverterJCLSourcePath(compliance), getConverterJCLRootSourcePath()},
					null);
			}
		} else if ("1.7".equals(compliance)) {
			if (JavaCore.getClasspathVariable("CONVERTER_JCL17_LIB") == null) {
				setupExternalJCL("converterJclMin1.7");
				JavaCore.setClasspathVariables(
					new String[] {"CONVERTER_JCL17_LIB", "CONVERTER_JCL17_SRC", "CONVERTER_JCL17_SRCROOT"},
					new IPath[] {getConverterJCLPath("1.7"), getConverterJCLSourcePath("1.7"), getConverterJCLRootSourcePath()},
					null);
			}
		} else if ("1.8".equals(compliance)) {
			if (JavaCore.getClasspathVariable("CONVERTER_JCL18_LIB") == null) {
				setupExternalJCL("converterJclMin1.8");
				JavaCore.setClasspathVariables(
					new String[] {"CONVERTER_JCL18_LIB", "CONVERTER_JCL18_SRC", "CONVERTER_JCL18_SRCROOT"},
					new IPath[] {getConverterJCLPath("1.8"), getConverterJCLSourcePath("1.8"), getConverterJCLRootSourcePath()},
					null);
			}
		} else if ("9".equals(compliance)) {
			if (JavaCore.getClasspathVariable("CONVERTER_JCL9_LIB") == null) {
				setupExternalJCL("converterJclMin9");
				JavaCore.setClasspathVariables(
						new String[] {"CONVERTER_JCL9_LIB", "CONVERTER_JCL9_SRC", "CONVERTER_JCL9_SRCROOT"},
						new IPath[] {getConverterJCLPath("9"), getConverterJCLSourcePath("9"), getConverterJCLRootSourcePath()},
						null);
			}
		} else if ("10".equals(compliance)) {
			if (JavaCore.getClasspathVariable("CONVERTER_JCL10_LIB") == null) {
				setupExternalJCL("converterJclMin10");
				JavaCore.setClasspathVariables(
						new String[] {"CONVERTER_JCL10_LIB", "CONVERTER_JCL10_SRC", "CONVERTER_JCL10_SRCROOT"},
						new IPath[] {getConverterJCLPath("10"), getConverterJCLSourcePath("10"), getConverterJCLRootSourcePath()},
						null);
			}
		} else if ("11".equals(compliance)) {
			if (JavaCore.getClasspathVariable("CONVERTER_JCL11_LIB") == null) {
				setupExternalJCL("converterJclMin11");
				JavaCore.setClasspathVariables(
						new String[] {"CONVERTER_JCL11_LIB", "CONVERTER_JCL11_SRC", "CONVERTER_JCL11_SRCROOT"},
						new IPath[] {getConverterJCLPath("11"), getConverterJCLSourcePath("11"), getConverterJCLRootSourcePath()},
						null);
			}
		} else if ("12".equals(compliance)) {
			if (JavaCore.getClasspathVariable("CONVERTER_JCL12_LIB") == null) {
				setupExternalJCL("converterJclMin12");
				JavaCore.setClasspathVariables(
						new String[] {"CONVERTER_JCL12_LIB", "CONVERTER_JCL12_SRC", "CONVERTER_JCL12_SRCROOT"},
						new IPath[] {getConverterJCLPath("12"), getConverterJCLSourcePath("12"), getConverterJCLRootSourcePath()},
						null);
			}
		} else if ("13".equals(compliance)) {
			if (JavaCore.getClasspathVariable("CONVERTER_JCL13_LIB") == null) {
				setupExternalJCL("converterJclMin13");
				JavaCore.setClasspathVariables(
						new String[] {"CONVERTER_JCL13_LIB", "CONVERTER_JCL13_SRC", "CONVERTER_JCL13_SRCROOT"},
						new IPath[] {getConverterJCLPath("13"), getConverterJCLSourcePath("13"), getConverterJCLRootSourcePath()},
						null);
			}
		} else if (JavaCore.getClasspathVariable("CONVERTER_JCL_LIB") == null) {
			setupExternalJCL("converterJclMin");
			JavaCore.setClasspathVariables(
				new String[] {"CONVERTER_JCL_LIB", "CONVERTER_JCL_SRC", "CONVERTER_JCL_SRCROOT"},
				new IPath[] {getConverterJCLPath(), getConverterJCLSourcePath(), getConverterJCLRootSourcePath()},
				null);
		}
	}

