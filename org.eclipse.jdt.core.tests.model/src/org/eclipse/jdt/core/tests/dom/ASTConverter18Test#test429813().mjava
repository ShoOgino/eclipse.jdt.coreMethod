/**
 * https://bugs.eclipse.org/bugs/show_bug.cgi?id=429813
 * 
 * @throws JavaModelException
 */
public void test429813() throws JavaModelException {
	this.workingCopy = getWorkingCopy("/Converter18/src/test429813/Snippet.java",
			true/* resolve */);
	String contents = "package test429813;"
			+ "public class Snippet {\n"
			+ "		Function<Integer, int[]> m1L = n -> new int[n];\n"
			+ "}"
			+ "interface Function<T, R> {\n"
			+ "   public R apply(T t);\n"
			+ "}\n";
	CompilationUnit cu = (CompilationUnit) buildAST(contents, this.workingCopy);
	TypeDeclaration typedeclaration = (TypeDeclaration) getASTNode(cu, 0);
	FieldDeclaration fieldDeclaration = (FieldDeclaration) typedeclaration.bodyDeclarations().get(0);
	VariableDeclarationFragment fragment = (VariableDeclarationFragment)fieldDeclaration.fragments().get(0);
	Expression expression = fragment.getInitializer();
	assertTrue(expression instanceof LambdaExpression);
	LambdaExpression lambdaExpression = (LambdaExpression)expression;
	IMethodBinding binding = lambdaExpression.resolveMethodBinding();
	IJavaElement element = binding.getJavaElement();
	assertEquals("Not a method", IJavaElement.METHOD, element.getElementType());
	assertFalse("Should not be a synthetic", binding.isSynthetic());
}

