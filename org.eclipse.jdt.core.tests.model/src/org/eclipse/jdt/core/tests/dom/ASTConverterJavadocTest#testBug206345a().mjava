	/**
	 * @bug 206345: [javadoc] compiler should not interpret contents of {@literal}
	 * @see "https://bugs.eclipse.org/bugs/show_bug.cgi?id=206345"
	 * @deprecated
	 */
	public void testBug206345a() throws JavaModelException {
		this.workingCopies = new ICompilationUnit[1];
		this.astLevel = AST.JLS3;
		this.workingCopies[0] = getWorkingCopy("/Converter15/src/javadoc/b206345/X.java",
			"package javadoc.b206345;\n" +
			"\n" +
			"public class X extends Object {\n" +
			"	/**\n" +
			"	 * This is {@literal raw text:\n" +
			"	 * 			{@link BadLink} is just text}\n" +
			"	 */\n" +
			"	public String toString() { \n" +
			"		return \"foo\";\n" +
			"	}\n" +
			"}\n"
		);
		CompilationUnit compilUnit = (CompilationUnit) runConversion(this.workingCopies[0], true);
		verifyWorkingCopiesComments();
		if (this.docCommentSupport.equals(JavaCore.ENABLED)) {
			// Verify comment type
			List unitComments = compilUnit.getCommentList();
			assertEquals("Wrong number of comments", 1, unitComments.size());
			Comment comment = (Comment) unitComments.get(0);
			assertEquals("Comment should be javadoc", comment.getNodeType(), ASTNode.JAVADOC);
			Javadoc docComment = (Javadoc) compilUnit.getCommentList().get(0);
			assumeEquals(this.prefix+"Wrong number of tags", 1, docComment.tags().size());
			TagElement tagElement = (TagElement) docComment.tags().get(0);
			assumeNull(this.prefix+"Wrong type of tag ["+tagElement+"]", tagElement.getTagName());
			assumeEquals(this.prefix+"Wrong number of fragments in tag ["+tagElement+"]", 3, tagElement.fragments().size());
			ASTNode fragment = (ASTNode) tagElement.fragments().get(0);
			assumeEquals(this.prefix+"Invalid type for fragment ["+fragment+"]", ASTNode.TEXT_ELEMENT, fragment.getNodeType());
			fragment = (ASTNode) tagElement.fragments().get(1);
			assumeEquals(this.prefix+"Invalid type for fragment ["+fragment+"]", ASTNode.TAG_ELEMENT, fragment.getNodeType());
			TagElement inlineTag = (TagElement) fragment;
			assumeEquals(this.prefix+"Wrong number of fragments in tag ["+inlineTag+"]", 1, inlineTag.fragments().size());
			fragment = (ASTNode) inlineTag.fragments().get(0);
			assumeEquals(this.prefix+"Invalid type for fragment ["+fragment+"]", ASTNode.TEXT_ELEMENT, fragment.getNodeType());
			fragment = (ASTNode) tagElement.fragments().get(2);
			assumeEquals(this.prefix+"Invalid type for fragment ["+fragment+"]", ASTNode.TEXT_ELEMENT, fragment.getNodeType());
			TextElement textElement = (TextElement) fragment;
			assumeEquals(this.prefix+"Invalid content for text element ", "{@link BadLink} is just text}", textElement.getText());
		}
	}

