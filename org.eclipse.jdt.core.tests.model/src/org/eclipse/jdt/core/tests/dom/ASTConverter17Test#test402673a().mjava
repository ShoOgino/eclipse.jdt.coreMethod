	/**
     * https://bugs.eclipse.org/bugs/show_bug.cgi?id=402673
     *
     * @throws JavaModelException
     */
    public void test402673a() throws JavaModelException {
            String contents = "package test402673;"
                    + "public class X {\n"
                    + "    Runnable r = () -> System.out.println(\"hi\");\n"
                    +"}\n";
        	this.workingCopy = getWorkingCopy("/Converter/src/test402673/X.java", true/* resolve */);
        	this.workingCopy.getBuffer().setContents(contents);
        	ASTNode node = runConversion(this.workingCopy, true);
        	assertTrue(node != null);
    		assertEquals("Not a compilation unit", ASTNode.COMPILATION_UNIT, node.getNodeType());
    		CompilationUnit unit = (CompilationUnit) node;
    		assertProblemsSize(unit, 1, "Lambda expressions are allowed only at source level 1.8 or above");
    		TypeDeclaration type = (TypeDeclaration) getASTNode(unit, 0);
    		assertTrue((type.getFlags() & ASTNode.MALFORMED) != 0);
    		node = getASTNode(unit, 0, 0);
    		assertEquals("Not a field declaration", ASTNode.FIELD_DECLARATION, node.getNodeType());
    		FieldDeclaration fieldDeclaration = (FieldDeclaration) node;
    		final List fragments = fieldDeclaration.fragments();
    		assertEquals("Wrong size", 1, fragments.size());
    		VariableDeclarationFragment fragment = (VariableDeclarationFragment) fragments.get(0);
    		final Expression initializer = fragment.getInitializer();
    		assertEquals("Not a null literal", ASTNode.NULL_LITERAL, initializer.getNodeType());
    		NullLiteral nullLiteral = (NullLiteral) initializer;
    		assertTrue((nullLiteral.getFlags() & ASTNode.MALFORMED) != 0);
    }

