	/*
	 * Resolves the given cus as a batch. 
	 * On the first accept, create a binding with the expected key.
	 * Ensures that the returned binding corresponds to the expected key.
	 */
	private void assertBindingCreated(final String expectedKey) throws JavaModelException {
		class Requestor extends TestASTRequestor {
			String createdBindingKey;
			public void acceptAST(CompilationUnit cu, ICompilationUnit source) {
				super.acceptAST(cu, source);
				IBinding[] bindings = createBindings(new String[] {expectedKey});
				if (bindings != null && bindings.length > 0 && bindings[0] != null)
					this.createdBindingKey = bindings[0].getKey();
			}
		};
		Requestor requestor = new Requestor();
		ICompilationUnit[] workingCopies = null;
		try {
			workingCopies = createWorkingCopies(new String[] {
				"/P/Test.java",
				"public class Test {\n" +
				"}"
			});
			resolveASTs(workingCopies, new String[] {}, requestor);
		} finally {
			discardWorkingCopies(workingCopies);
		}
		
		if (!expectedKey.equals(requestor.createdBindingKey))
			System.out.println(Util.displayString(expectedKey, 3));
		assertEquals("Unexpected created binding", expectedKey, requestor.createdBindingKey);
	}

