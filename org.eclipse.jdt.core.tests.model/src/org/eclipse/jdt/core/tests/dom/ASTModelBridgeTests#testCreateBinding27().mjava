	/*
	 * Ensures that the correct IBindings are created for a given set of IJavaElement
	 * (invocation of a generic method - binary)
	 */
	public void testCreateBinding27() throws Exception {
		createClassFile("/P/lib", "p/A.class",
				"package p;\n" +
				"public class A {\n" +
				"  public static <T> T foo(T[] arg) { return arg[0]; }\n" +
				"}");
		this.workingCopies = new ICompilationUnit[1];
		String xSource = "public class X {\n" +
						"  public String test(String[] args) {\n" +
						"    return p.A.foo(args);\n" +
						"  }\n" +
						"}";
		this.workingCopies[0] = getWorkingCopy(
			"/P/src/X.java",
			xSource,
			this.wcOwner
		);

		IJavaElement elem= this.workingCopies[0].codeSelect(xSource.indexOf("foo"), 0)[0];
		ASTParser parser = ASTParser.newParser(getJLS8());
		parser.setProject(getJavaProject("P"));
		IBinding[] bindings = parser.createBindings(new IJavaElement[]{ elem }, null);
		assertBindingsEqual(
			"Lp/A;.foo<T:Ljava/lang/Object;>([TT;)TT;%<Ljava/lang/String;>",
			bindings);
		IMethodBinding method = (IMethodBinding) bindings[0];
		assertBindingsEqual(
			"[Ljava/lang/String;",
			method.getParameterTypes());
			assertBindingsEqual(
				"Ljava/lang/String;",
				new IBinding[] {method.getReturnType()});
	}

