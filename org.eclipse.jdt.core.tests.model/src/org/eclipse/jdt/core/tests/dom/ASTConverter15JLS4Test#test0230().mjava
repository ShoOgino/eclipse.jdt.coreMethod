	/*
	 * https://bugs.eclipse.org/bugs/show_bug.cgi?id=156352
	 */
	public void test0230() throws JavaModelException {
		ICompilationUnit sourceUnit = getCompilationUnit("Converter15" , "src", "test0230", "Test3.java"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$
		IType type = sourceUnit.getType("Test3");//$NON-NLS-1$

		assertNotNull("Should not be null", type);
		ASTParser parser= ASTParser.newParser(getJLS4());
		parser.setProject(type.getJavaProject());
		IBinding[] bindings= parser.createBindings(new IJavaElement[] { type }, null);
		if (bindings.length == 1 && bindings[0] instanceof ITypeBinding) {
			ITypeBinding typeBinding= (ITypeBinding) bindings[0];
			StringBuffer buffer = new StringBuffer();
			while (typeBinding != null) {
				buffer.append(typeBinding.getAnnotations().length);
				typeBinding= typeBinding.getSuperclass();
			}
			// the right outcome would be "020", but depending on the strategy when exactly
			// annotations are resolved the annotations on Test2 are (not) present when
			// traversing the super-class chain.
			// The patch in https://bugs.eclipse.org/186342#c196 produced "020" but
			// the previous behavior ("000") was restored in https://bugs.eclipse.org/365387
			// (see the change in SourceTypeBinding.resolveTypesFor(..))
			assertEquals("Wrong number of annotations", "000", String.valueOf(buffer));
		}
	}

