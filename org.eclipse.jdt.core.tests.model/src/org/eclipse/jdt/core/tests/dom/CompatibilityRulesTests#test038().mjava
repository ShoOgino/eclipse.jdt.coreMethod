	/*
	 * Ensures that a method with different paramter types is not a subsignature of its super method.
	 * (regression test for bug 111093 More problems with IMethodBinding#isSubsignature(..))
	 */
	public void test038() throws JavaModelException {
		IMethodBinding[] bindings = createMethodBindings(
			new String[] {
				"/P/p1/A.java",
				"package p1;\n" +
				"public class A {\n" + 
				"  public void o3_xoo1(List t) {\n" + 
				"  }\n" + 
				"}\n" +
				"class B extends A {\n" + 
				"  @Override\n" + 
				"  public void o3_xoo1(List<Object> t) {\n" + 
				"  }\n" + 
				"}\n" + 
				"class List<T> {\n" +
				"}",
			},
			new String[] {
				"Lp1/A;.o3_xoo1(Lp1/List;)V",
				"Lp1/A~B;.o3_xoo1(Lp1/List<Ljava/lang/Object;>;)V"
			});	
		assertFalse("B#o3_xoo1() should not be a subsignature of A#o3_xoo1()", bindings[1].isSubsignature(bindings[0]));
	}

