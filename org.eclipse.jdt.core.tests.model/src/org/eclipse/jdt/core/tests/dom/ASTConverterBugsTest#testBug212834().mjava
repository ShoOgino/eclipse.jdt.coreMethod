/**
 * @bug 212834: [dom] IMethodBinding.getParameterAnnotations does not return annotations
 * @test Ensures that the method binding get the parameter annotations even on method invocation
 * @see "https://bugs.eclipse.org/bugs/show_bug.cgi?id=212834"
 */
public void testBug212834() throws CoreException, IOException {
	this.workingCopies = new ICompilationUnit[3];
	this.workingCopies[0] = getWorkingCopy("/Converter15/src/Baz.java",
		"public @interface Baz {\n" +
		"}\n"
	);
	this.workingCopies[1] = getWorkingCopy("/Converter15/src/C.java",
		"public class C {\n" +
		"public C(D d) {\n" +
		"	foo(5);\n" +
		"	d.bar(7);\n" +
		"}\n" +
		"@Baz\n" +
		"public void foo(@Baz int x) { }\n" +
		"\n" +
		"}"
	);
	this.workingCopies[2] = getWorkingCopy("/Converter15/src/D.java",
		"public class D {\n" +
		"@Baz\n" +
		"public void bar(@Baz int y) { }\n" +
		"\n" +
		"}"
	);

	CompilationUnit unit = (CompilationUnit) runConversion(this.workingCopies[1], true/*bindings*/, false/*no statement recovery*/, true/*bindings recovery*/);
	MethodDeclaration methodDeclaration = (MethodDeclaration) getASTNode(unit, 0, 0);
	MethodInvocation methodInvocation = (MethodInvocation) ((ExpressionStatement) methodDeclaration.getBody().statements().get(1)).getExpression();
	IMethodBinding methodBinding = methodInvocation.resolveMethodBinding();
	assertBindingsEqual(methodInvocation+" has invalid parameter annotations!",
		"@LBaz;",
		methodBinding.getParameterAnnotations(0)
	);
}

