	/*
	 * Convert Javadoc source to match Javadoc.toString()
	 */
	void setSourceComment(char[] source) {
		this.comments = new ArrayList();
		this.allTags = new ArrayList();
		StringBuffer buffer = new StringBuffer();
		int comment = 0;
		boolean end = false;
		String tag = null;
		List tags = new ArrayList();
		for (int i=0; i<source.length; i++) {
			if (comment == 0) {
				if (source[i] == '/') {
					switch (source[i+1]) {
						case '/':
							comment = 1; // line comment
							break;
						case '*':
							if (source[i+2] == '*') {
								comment = 3; // javadoc
							} else {
								comment = 2; // block comment
							}
							break;
					}
				}
			}
			switch (comment) {
				case 1: // line comment
					if (source[i] == '\r' || source[i] == '\n') {
						comment = 0;
						this.comments.add(buffer.toString());
						this.allTags.add(tags);
						buffer = new StringBuffer();
					} else {
						buffer.append(source[i]);
					}
					break;
				case 3: // javadoc comment
					if (tag != null) {
						if (source[i] >= 'a' && source[i] <= 'z') {
							tag += source[i];
						} else {
							tags.add(tag);
							tag = null;
						}
					}
					if (source[i] == '@') {
						tag = "";
					}
				case 2: // block comment
					if (comment == 2 || source[i] != '\r') {
						buffer.append(source[i]);
					}
					if (end && source[i] == '/') {
						comment = 0;
						this.comments.add(buffer.toString());
						this.allTags.add(tags);
						buffer = new StringBuffer();
						tags = new ArrayList();
					}
					end = source[i] == '*';
					break;
				default:
					// do nothing
					break;
			}
		}
	}

