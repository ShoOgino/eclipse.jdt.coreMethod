		public void _test0011() throws CoreException {
			// saw NPE in SwitchExpression.resolveType(SwitchExpression.java:423)
			if (!isJRE13) {
				System.err.println("Test "+getName()+" requires a JRE 13");
				return;
			}
			String source =
				"public class Switch {\n" +
				"	public static void main(String[] args) {\n" +
				"		foo(Day.TUESDAY);\n" +
				"	}\n" +
				"\n" +
				"	@SuppressWarnings(\"preview\")\n" +
				"	private static void foo(Day day) {\n" +
				"		switch (day) {\n" +
				"		case SUNDAY, MONDAY, FRIDAY -> System.out.println(6);\n" +
				"		case TUESDAY -> System.out.println(7);\n" +
				"		case THURSDAY, SATURDAY -> System.out.println(8);\n" +
				"		}\n" +
				"	}\n" +
				"}\n" +
				"\n" +
				"enum Day {\n" +
				"	MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY;\n" +
				"}\n";
			this.workingCopy = getWorkingCopy("/Converter13/src/Switch.java", true/*resolve*/);
			IJavaProject javaProject = this.workingCopy.getJavaProject();
			String old = javaProject.getOption(JavaCore.COMPILER_PB_ENABLE_PREVIEW_FEATURES, true);
			try {
				javaProject.setOption(JavaCore.COMPILER_PB_ENABLE_PREVIEW_FEATURES, JavaCore.DISABLED);
				javaProject.setOption(JavaCore.COMPILER_PB_REPORT_PREVIEW_FEATURES, JavaCore.IGNORE);
				try {
				buildAST(
						source,
						this.workingCopy);
				} catch(UnsupportedOperationException e) {
					fail("Should not throw UnsupportedOperationException");
				} catch(AssertionFailedError e) {
					e.printStackTrace();
					return;
				}

				} finally {
					javaProject.setOption(JavaCore.COMPILER_PB_ENABLE_PREVIEW_FEATURES, old);
				}
		}

