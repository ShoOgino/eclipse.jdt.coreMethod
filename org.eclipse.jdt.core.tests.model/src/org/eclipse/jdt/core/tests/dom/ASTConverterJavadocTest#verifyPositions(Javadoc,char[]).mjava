	/*
	 * Verify positions of tags in source
	 */
	private void verifyPositions(Javadoc docComment, char[] source) {
		// Verify javadoc start and end position
		int start = docComment.getStartPosition();
		int end = start+docComment.getLength()-1;
		assertTrue(this.prefix+"Misplaced javadoc start", source[start++] == '/' && source[start++] == '*' && source[start++] == '*');
		// Get first meaningful character
		int tagStart = start;
		// Verify tags
		Iterator tags = docComment.tags().listIterator();
		while (tags.hasNext()) {
			while (source[tagStart] == '*' || Character.isWhitespace(source[tagStart])) {
				tagStart++; // purge non-stored characters
			}
			TagElement tagElement = (TagElement) tags.next();
			assertEquals(this.prefix+"Tag element has wrong start position", tagStart, tagElement.getStartPosition());
//			int tagEnd = tagStart+tagElement.getLength()-1;
			verifyPositions(tagElement, source);
			tagStart += tagElement.getLength();
		}
		while (source[tagStart] == '*' || Character.isWhitespace(source[tagStart])) {
			tagStart++; // purge non-stored characters
		}
		assertTrue(this.prefix+"Misplaced javadoc end", source[tagStart-1] == '*' && source[tagStart] == '/');
		assertEquals(this.prefix+"Wrong javadoc length", tagStart, end);
	}

