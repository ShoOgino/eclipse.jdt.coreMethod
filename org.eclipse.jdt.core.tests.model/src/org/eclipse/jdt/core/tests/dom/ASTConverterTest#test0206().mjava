	/**
	 * QualifiedName
	 */
	public void test0206() throws JavaModelException {
		ICompilationUnit sourceUnit = getCompilationUnit("Converter" , "", "test0206", "Test.java");
		char[] source = sourceUnit.getSource().toCharArray();
		ASTNode result = runConversion(sourceUnit, true);
		ASTNode node2 = getASTNode((CompilationUnit) result, 0, 2, 0);
		assertTrue("ReturnStatement", node2 instanceof ReturnStatement);
		ReturnStatement returnStatement = (ReturnStatement) node2;
		Expression expr = returnStatement.getExpression();
		assertTrue("Not a qualifiedName", expr instanceof QualifiedName);
		QualifiedName qualifiedName = (QualifiedName) expr;
		ITypeBinding typeBinding = expr.resolveTypeBinding();
		assertNotNull("No type binding", typeBinding);
		assertEquals("Not an int (typeBinding)", "int", typeBinding.getName());
		checkSourceRange(qualifiedName, "field.field.field.field.i", source);
		assertTrue("Not a simple name", qualifiedName.getName().isSimpleName());
		SimpleName simpleName = qualifiedName.getName();
		assertTrue("a declaration", !simpleName.isDeclaration());
		checkSourceRange(simpleName, "i", source);
		ITypeBinding typeBinding2 = simpleName.resolveTypeBinding();
		assertNotNull("No typebinding2", typeBinding2);
		assertEquals("Not an int (typeBinding2)", "int", typeBinding2.getName());
		IBinding binding = simpleName.resolveBinding();
		assertNotNull("No binding", binding);
		assertTrue("VariableBinding", binding instanceof IVariableBinding);
		IVariableBinding variableBinding = (IVariableBinding) binding;
		assertEquals("Not Test", "Test", variableBinding.getDeclaringClass().getName());
		assertEquals("Not default", Modifier.PUBLIC, variableBinding.getModifiers());
		Name qualifierName = qualifiedName.getQualifier();
		assertTrue("Not a qualified name", qualifierName.isQualifiedName());
		checkSourceRange(qualifierName, "field.field.field.field", source);
		ITypeBinding typeBinding5 = qualifierName.resolveTypeBinding();
		assertNotNull("No binding5", typeBinding5);
		assertEquals("Not Test", "Test", typeBinding5.getName());

		qualifiedName = (QualifiedName) qualifierName;
		simpleName = qualifiedName.getName();
		checkSourceRange(simpleName, "field", source);
		ITypeBinding typeBinding6 = simpleName.resolveTypeBinding();
		assertNotNull("No binding6", typeBinding6);
		assertEquals("Not Test", "Test", typeBinding6.getName());
		
		qualifierName = qualifiedName.getQualifier();
		assertTrue("Not a qualified name", qualifierName.isQualifiedName());
		checkSourceRange(qualifierName, "field.field.field", source);
		ITypeBinding typeBinding7 = qualifierName.resolveTypeBinding();
		assertNotNull("No binding7", typeBinding7);
		assertEquals("Not Test", "Test", typeBinding7.getName());
		
		qualifiedName = (QualifiedName) qualifierName;
		simpleName = qualifiedName.getName();
		checkSourceRange(simpleName, "field", source);
		qualifierName = qualifiedName.getQualifier();
		assertTrue("Not a qualified name", qualifierName.isQualifiedName());
		checkSourceRange(qualifierName, "field.field", source);
		ITypeBinding typeBinding3 = qualifierName.resolveTypeBinding();
		assertNotNull("No binding3", typeBinding3);
		assertEquals("Not Test", "Test", typeBinding3.getName());
		qualifiedName = (QualifiedName) qualifierName;
		simpleName = qualifiedName.getName();
		checkSourceRange(simpleName, "field", source);
		qualifierName = qualifiedName.getQualifier();
		assertTrue("Not a simple name", qualifierName.isSimpleName());
		assertTrue("a declaration", !((SimpleName)qualifierName).isDeclaration());
		checkSourceRange(qualifierName, "field", source);
		ITypeBinding typeBinding4 = qualifierName.resolveTypeBinding();
		assertNotNull("No binding4", typeBinding4);
		assertEquals("Not Test", "Test", typeBinding4.getName());
	}

