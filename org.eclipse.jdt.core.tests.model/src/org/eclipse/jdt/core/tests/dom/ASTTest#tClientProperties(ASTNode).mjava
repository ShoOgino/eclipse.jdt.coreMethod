	/**
	 * Exercise the client properties of a node.
	 * 
	 * @param x the node to test
	 */
	void tClientProperties(ASTNode x) {
		
		long previousCount = ast.modificationCount();
		
		// a node initially has no properties
		assertTrue(x.properties().size() == 0);
		assertTrue(x.getProperty("1") == null);

		// clearing an unset property does not add it to list of known ones
		x.setProperty("1", null);
		assertTrue(x.getProperty("1") == null);
		assertTrue(x.properties().size() == 0);

		// setting an unset property does add it to the list of known ones
		x.setProperty("1", "a1");
		assertTrue(x.getProperty("1") == "a1");
		assertTrue(x.properties().size() == 1);
		Map.Entry[] m = (Map.Entry[]) x.properties().entrySet().toArray(new Map.Entry[1]);
		assertTrue(m[0].getKey() == "1");
		assertTrue(m[0].getValue() == "a1");

		// setting an already set property just changes its value
		x.setProperty("1", "a2");
		assertTrue(x.getProperty("1") == "a2");
		assertTrue(x.properties().size() == 1);
		m = (Map.Entry[]) x.properties().entrySet().toArray(new Map.Entry[1]);
		assertTrue(m[0].getKey() == "1");
		assertTrue(m[0].getValue() == "a2");

		// clearing a set property removes it from list of known ones
		x.setProperty("1", null);
		assertTrue(x.getProperty("1") == null);
		assertTrue(x.properties().size() == 0);
		
		
		// ========= test 2 and 3 properties
		x.setProperty("1", "a1");
		x.setProperty("2", "b1");
		x.setProperty("3", "c1");
		assertTrue(x.getProperty("1") == "a1");
		assertTrue(x.getProperty("2") == "b1");
		assertTrue(x.getProperty("3") == "c1");
		assertTrue(x.properties().size() == 3);
		assertTrue(x.properties().get("1") == "a1");
		assertTrue(x.properties().get("2") == "b1");
		assertTrue(x.properties().get("3") == "c1");
		x.setProperty("1", "a2");
		x.setProperty("2", "b2");
		x.setProperty("3", "c2");
		assertTrue(x.getProperty("1") == "a2");
		assertTrue(x.getProperty("2") == "b2");
		assertTrue(x.getProperty("3") == "c2");
		assertTrue(x.properties().size() == 3);
		assertTrue(x.properties().get("1") == "a2");
		assertTrue(x.properties().get("2") == "b2");
		assertTrue(x.properties().get("3") == "c2");
		x.setProperty("2", null);
		assertTrue(x.getProperty("1") == "a2");
		assertTrue(x.getProperty("2") == null);
		assertTrue(x.getProperty("3") == "c2");
		assertTrue(x.properties().size() == 2);
		assertTrue(x.properties().get("1") == "a2");
		assertTrue(x.properties().get("2") == null);
		assertTrue(x.properties().get("3") == "c2");
		x.setProperty("1", null);
		assertTrue(x.getProperty("1") == null);
		assertTrue(x.getProperty("2") == null);
		assertTrue(x.getProperty("3") == "c2");
		assertTrue(x.properties().size() == 1);
		assertTrue(x.properties().get("1") == null);
		assertTrue(x.properties().get("2") == null);
		assertTrue(x.properties().get("3") == "c2");
		
		// none of this is considered to have affected the AST
		assertTrue(ast.modificationCount() == previousCount);
	}

