	/**
	 * Checks that the ASTNode.subtreeMatch mechanism is working
	 * for a node of a given type. 
	 */
	void basicMatch(ASTNode node) {
		int count = nodeCount(node);
		
		// check that matcher was called with right arguments
		// and that matches succeed
		TestMatcher m1 = new TestMatcher();
		Object o1 = new Object();
		m1.result = true;
		boolean result = node.subtreeMatch(m1, o1);
		assertTrue(m1.matchCalls == 1);
		assertTrue(m1.receiver == node);
		assertTrue(m1.other == o1);
		assertTrue(result == true);
		
		// check that matcher was called with right arguments
		// and that non-matches fail
		m1 = new TestMatcher();
		o1 = new Object();
		m1.result = false;
		result = node.subtreeMatch(m1, o1);
		assertTrue(m1.matchCalls == 1);
		assertTrue(m1.receiver == node);
		assertTrue(m1.other == o1);
		assertTrue(result == false);
		
		// check that ASTMatcher default implementations delegate
		m1 = new TestMatcher();
		m1.superMatch = true;
		result = node.subtreeMatch(m1, node);
		assertTrue(m1.matchCalls == count);
		assertTrue(result == true);
		
	}

