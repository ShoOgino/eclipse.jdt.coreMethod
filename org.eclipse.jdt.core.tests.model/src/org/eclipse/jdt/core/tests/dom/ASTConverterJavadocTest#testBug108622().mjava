	/**
	 * Bug 108622: [javadoc][dom] ASTNode not including javadoc
	 * @see "https://bugs.eclipse.org/bugs/show_bug.cgi?id=108622"
	 */
	public void testBug108622() throws JavaModelException {
		workingCopies = new ICompilationUnit[1];
		astLevel = AST.JLS3;
		workingCopies[0] = getWorkingCopy("/Converter15/src/javadoc/b108622/Test.java",
			"package javadoc.b108622;\n" + 
			"/**\n" + 
			" * \n" + 
			" */\n" + 
			"public abstract class Test {\n" + 
			"\n" + 
			"	/**\n" + 
			"	 * \n" + 
			"	 */\n" + 
			"	public abstract Zork getFoo();\n" + 
			"\n" + 
			"	/**\n" + 
			"	 * \n" + 
			"	 */\n" + 
			"	public abstract void setFoo(Zork dept);\n" + 
			"\n" + 
			"}"
			);
		CompilationUnit compilUnit = (CompilationUnit) runConversion(workingCopies[0], true);
		if (docCommentSupport.equals(JavaCore.ENABLED)) {
			// Verify first method
			ASTNode node = getASTNode(compilUnit, 0, 0);
			assertEquals("Invalid type for node: "+node, ASTNode.METHOD_DECLARATION, node.getNodeType());
			MethodDeclaration methodDeclaration = (MethodDeclaration) node;
			assertEquals("Invalid method name", "getFoo", methodDeclaration.getName().toString());
			Javadoc methodJavadoc = methodDeclaration.getJavadoc();
			assertNotNull("MethodDeclaration have a javadoc comment", methodJavadoc);
			int javadocStart = methodJavadoc.getStartPosition();
			assertEquals("Method declaration should include javadoc comment", methodDeclaration.getStartPosition(), javadocStart);
			// Verify second method
			node = getASTNode(compilUnit, 0, 1);
			assertEquals("Invalid type for node: "+node, ASTNode.METHOD_DECLARATION, node.getNodeType());
			methodDeclaration = (MethodDeclaration) node;
			assertEquals("Invalid method name", "setFoo", methodDeclaration.getName().toString());
			methodJavadoc = methodDeclaration.getJavadoc();
			assertNotNull("MethodDeclaration have a javadoc comment", methodJavadoc);
			javadocStart = methodJavadoc.getStartPosition();
			assertEquals("Method declaration should include javadoc comment", methodDeclaration.getStartPosition(), javadocStart);
		}
	}

