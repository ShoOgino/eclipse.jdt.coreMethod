	/*
	 * Convert Javadoc source to match Javadoc.toString()
	 */
	List[] convertSource(char[] source) {
		List comments = new ArrayList();
		List numbers = new ArrayList();
		StringBuffer buffer = new StringBuffer(source.length);
		boolean store = false;
		boolean javadoc = false;
		boolean star = false;
		boolean firstTag = true;
		int number = 0;
		for (int i=0; i<source.length; i++) {
			if (javadoc) {
				if (star) {
					if (source[i] == '/') {
						javadoc = false;
						buffer.append("\n */");
						comments.add(buffer.toString());
						numbers.add(new Integer(number));
						buffer = new StringBuffer(source.length);
						number = 0;
						break;
					} else {
						buffer.append('*');
					}
				}
			} else {
				if (source[i] == '/' && source[i+1] == '*' && source[i+2] == '*') {
					javadoc = true;
				}
			}
			if (javadoc) {
				if (source[i] == '\r' || source[i] == '\n') {
					while (source[i] == '*' || Character.isWhitespace(source[i])) {
						star = source[i++] == '*';
					}
					if (star && source[i] == '/') {
						javadoc = false;
						buffer.append("\n */");
						comments.add(buffer.toString());
						numbers.add(new Integer(number));
						buffer = new StringBuffer(source.length);
						number = 0;
						continue;
					}
					if (firstTag) {
						firstTag = false;
						buffer.append(" \n * ");
						number++;
					} else if (source[i] == '@') {
						buffer.append("\n * ");
						number++;
					}
				} else {
					star = source[i] == '*';
				}
				if (!star) buffer.append(source[i]);
			}
		}
		List[] lists = new List[2];
		lists[0] = numbers;
		lists[1] = comments;
		return lists;
	}

