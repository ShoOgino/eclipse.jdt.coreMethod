	/*
	 * Test the creation of 2 batches of ASTs (first batch refers to CU in second batch) with resolving.
	 */
	public void _test006() throws CoreException {
		ICompilationUnit[][] workingCopyBatches = new ICompilationUnit[2][];
		try {
			MarkerInfo[] firstMarkerInfos = createMarkerInfos(new String[] {
				"/P/p1/X.java",
				"package p1;\n" +
				"public class X extends /*start*/Y/*end*/ {\n" +
				"}",
			});
			workingCopyBatches[0] = createWorkingCopies(firstMarkerInfos);
			MarkerInfo[] secondMarkerInfos = createMarkerInfos(new String[] {
				"/P/p1/Y.java",
				"package p1;\n" +
				"/*start*/public class Y {\n" +
				"}/*end*/",
			});
			workingCopyBatches[1] = createWorkingCopies(secondMarkerInfos);
			
			TestASTRequestor requestor = new TestASTRequestor(workingCopyBatches);
			resolveASTs(requestor);
			assertASTNodesEqual(
				"package p1;\n" + 
				"public class X extends Y {\n" + 
				"}\n" + 
				"\n" + 
				"package p1;\n" + 
				"public class Y {\n" + 
				"}\n" + 
				"\n",
				requestor.asts
			);
			
			// compare the bindings coming from the first AST and the last AST
			Type superX = (Type) findNode((CompilationUnit) requestor.asts.get(0), firstMarkerInfos[0]);
			TypeDeclaration typeY = (TypeDeclaration) findNode((CompilationUnit) requestor.asts.get(1), secondMarkerInfos[0]);
			IBinding superXBinding = superX.resolveBinding();
			IBinding typeYBinding = typeY.resolveBinding();
			assertTrue("Super of X and Y should be the same", superXBinding == typeYBinding);
		} finally {
			discardWorkingCopies(workingCopyBatches);
		}
	}

