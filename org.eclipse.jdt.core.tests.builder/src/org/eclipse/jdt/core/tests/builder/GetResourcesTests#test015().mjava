	//https://bugs.eclipse.org/bugs/show_bug.cgi?id=6584
	public void test015() throws JavaModelException {
		IPath projectPath = env.addProject("Project"); //$NON-NLS-1$
		env.addExternalJars(projectPath, Util.getJavaClassLibs());
		fullBuild(projectPath);

		// remove old package fragment root so that names don't collide
		env.removePackageFragmentRoot(projectPath, ""); //$NON-NLS-1$

		IPath root = env.addPackageFragmentRoot(projectPath, "src", new Path[] {new Path("**/*.txt")}, null); //$NON-NLS-1$
		env.setOutputFolder(projectPath, "bin"); //$NON-NLS-1$

		env.addClass(root, "p1", "Hello", //$NON-NLS-1$ //$NON-NLS-2$
			"package p1;\n"+ //$NON-NLS-1$
			"public class Hello {\n" +
			"   public class Z {}\n"+ //$NON-NLS-1$
			"   public static void main(String args[]) {\n"+ //$NON-NLS-1$
			"      System.out.println(\"Hello world\");\n"+ //$NON-NLS-1$
			"   }\n"+ //$NON-NLS-1$
			"}\n" //$NON-NLS-1$
		);

		incrementalBuild(projectPath);

		IJavaProject project = env.getJavaProject(projectPath);
		IRegion region = JavaCore.newRegion();
		region.add(project);
		IResource[] resources = JavaCore.getGeneratedResources(region, true);
		assertEquals("Wrong size", 2, resources.length);//$NON-NLS-1$
		Arrays.sort(resources, COMPARATOR);
		String actualOutput = getResourceOuput(resources);
		String expectedOutput =
			"/Project/bin/p1/Hello.class\n" +
			"/Project/bin/p1/Hello$Z.class\n";
		assertEquals("Wrong names", Util.convertToIndependantLineDelimiter(expectedOutput), actualOutput);

		env.addFile(root, "p1/Test.txt", "This is an excluded non-java resource");
		env.addFile(root, "p1/Test.log", "This is an included non-java resource");
		incrementalBuild(projectPath);

		resources = JavaCore.getGeneratedResources(region, true);
		assertEquals("Wrong size", 3, resources.length);//$NON-NLS-1$
		Arrays.sort(resources, COMPARATOR);
		actualOutput = getResourceOuput(resources);
		expectedOutput =
			"/Project/bin/p1/Test.log\n" +
			"/Project/bin/p1/Hello.class\n" +
			"/Project/bin/p1/Hello$Z.class\n";
		assertEquals("Wrong names", Util.convertToIndependantLineDelimiter(expectedOutput), actualOutput);

		env.removeProject(projectPath);
	}

