	public void testNestedPackageProblem() throws JavaModelException {
		IPath projectPath = env.addProject("Project"); //$NON-NLS-1$
		env.addExternalJars(projectPath, Util.getJavaClassLibs());
		env.removePackageFragmentRoot(projectPath, ""); //$NON-NLS-1$
		IPath src = env.addPackageFragmentRoot(projectPath, "src"); //$NON-NLS-1$
		env.setOutputFolder(projectPath, "bin"); //$NON-NLS-1$

		IPath aPath = env.addClass(src, "p", "A", //$NON-NLS-1$ //$NON-NLS-2$
			"package p;\n"+ //$NON-NLS-1$
			"public class A {}\n" //$NON-NLS-1$
		);

		// a class in a sub-package of p.A seems to establish package p.A, too, causing a conflict indeed:
		env.addClass(src, "p.A.c", "B", //$NON-NLS-1$ //$NON-NLS-2$
			"package p.A.c;\n" +
			"public class B {}\n" //$NON-NLS-1$
		);

		fullBuild();
		expectingOnlySpecificProblemFor(aPath,
			new Problem("", "The type A collides with a package", aPath, 24, 25, CategorizedProblem.CAT_TYPE, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$
	}

