	@Test
	public void testJDTBuildAllowParallelBuildsForOtherProjects() throws CoreException {
		IProject javaProject1 = env.getProject(env.addProject(getClass().getSimpleName() + "_javaProject1"));
		addBuilder(javaProject1.getProject());
		//
		IProject javaProject2 = env.getProject(env.addProject(getClass().getSimpleName() + "_javaProject2"));
		env.addRequiredProject(javaProject2.getFullPath(), javaProject1.getFullPath());
		addBuilder(javaProject2.getProject());
		//
		IProject rawProject1 = env.getWorkspace().getRoot().getProject(getClass().getSimpleName() + System.currentTimeMillis());
		rawProject1.create(new NullProgressMonitor());
		rawProject1.open(new NullProgressMonitor());
		addBuilder(rawProject1);
		IProject rawProject2 = env.getWorkspace().getRoot().getProject(getClass().getSimpleName() + System.currentTimeMillis());
		rawProject2.create(new NullProgressMonitor());
		rawProject2.open(new NullProgressMonitor());
		addBuilder(rawProject2);
		setMaxParallelBuilds(3);

		env.fullBuild();
		// verify that rawProject could build in parallel
		assertTrue(TimeStampBuilder.start(rawProject1) < TimeStampBuilder.end(rawProject2));
		assertTrue(TimeStampBuilder.start(rawProject2) < TimeStampBuilder.end(rawProject1));
	}

