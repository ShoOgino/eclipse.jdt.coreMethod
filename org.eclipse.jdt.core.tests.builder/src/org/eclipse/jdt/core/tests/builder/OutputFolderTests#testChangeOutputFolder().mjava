	public void testChangeOutputFolder() {
		//----------------------------
		//           Step 1: Setup project and full build
		//----------------------------
		IPath projectPath = env.addProject("Project"); //$NON-NLS-1$
		env.addExternalJar(projectPath, Util.getJavaClassLib());
		
		// remove old package fragment root so that names don't collide
		env.removePackageFragmentRoot(projectPath, ""); //$NON-NLS-1$
		
		IPath root = env.addPackageFragmentRoot(projectPath, "src"); //$NON-NLS-1$
		IPath bin1 = env.setOutputFolder(projectPath, "bin1"); //$NON-NLS-1$

		env.addClass(root, "p", "Test", //$NON-NLS-1$ //$NON-NLS-2$
			"package p;\n" + //$NON-NLS-1$
			"public class Test {\n"+ //$NON-NLS-1$
			"}\n" //$NON-NLS-1$
			);
			

		fullBuild();
		expectingNoProblems();
		expectingPresenceOf(new IPath[]{
			bin1,
			bin1.append("p").append("Test.class"), //$NON-NLS-1$ //$NON-NLS-2$
		});
		
		//----------------------------
		//           Step 2: Incremental build
		//----------------------------
		/* Disabled as the incremental builder doesn't detect the change of output folder
		IPath bin2 = env.setOutputFolder(projectPath, "bin2"); //$NON-NLS-1$
		
		incrementalBuild();
		
		expectingNoProblems();
		expectingPresenceOf(new IPath[]{
			bin2,
			bin2.append("p").append("Test.class"), //$NON-NLS-1$ //$NON-NLS-2$
		});
		*/
		
		//----------------------------
		//           Step 3: Full build
		//----------------------------
		IPath bin3 = env.setOutputFolder(projectPath, "bin3"); //$NON-NLS-1$
		
		fullBuild();
		
		expectingNoProblems();
		expectingPresenceOf(new IPath[]{
			bin3,
			bin3.append("p").append("Test.class"), //$NON-NLS-1$ //$NON-NLS-2$
		});
	}

