// https://bugs.eclipse.org/bugs/show_bug.cgi?id=438923, [compiler]Type is inappropriately considered "indirectly referenced"
public void test438923() throws JavaModelException {
	//----------------------------
	//         Project1
	//----------------------------
	IPath p1 = env.addProject("P1"); //$NON-NLS-1$
	env.addExternalJars(p1, Util.getJavaClassLibs());
	// remove old package fragment root so that names don't collide
	env.removePackageFragmentRoot(p1, ""); //$NON-NLS-1$
	IPath root1 = env.addPackageFragmentRoot(p1, "src"); //$NON-NLS-1$
	env.setOutputFolder(p1, "bin"); //$NON-NLS-1$

	env.addClass(root1, "p1", "P1I0", //$NON-NLS-1$ //$NON-NLS-2$
			"package p1;\n" +
			"public interface P1I0 {\n" +
			"  interface II {/*empty*/}\n" +
			"}\n"
		);

	//----------------------------
	//         Project2
	//----------------------------
	IPath p2 = env.addProject("P2"); //$NON-NLS-1$
	env.addExternalJars(p2, Util.getJavaClassLibs());
	// remove old package fragment root so that names don't collide
	env.removePackageFragmentRoot(p2, ""); //$NON-NLS-1$
	IPath root2 = env.addPackageFragmentRoot(p2, "src"); //$NON-NLS-1$
	env.setOutputFolder(p2, "bin"); //$NON-NLS-1$

	env.addClass(root2, "p2", "P2C0", //$NON-NLS-1$ //$NON-NLS-2$
			"package p2;\n" +
			"import p1.P1I0;\n" +
			"public class P2C0 {\n" +
			"  public void z(final P1I0.II [] ii) {/*empty*/}\n" +
			"}\n"
		);

	//----------------------------
	//         Project3
	//----------------------------
	IPath p3 = env.addProject("P3"); //$NON-NLS-1$
	env.addExternalJars(p3, Util.getJavaClassLibs());
	// remove old package fragment root so that names don't collide
	env.removePackageFragmentRoot(p3, ""); //$NON-NLS-1$
	IPath root3 = env.addPackageFragmentRoot(p3, "src"); //$NON-NLS-1$
	env.setOutputFolder(p3, "bin"); //$NON-NLS-1$

	env.addClass(root3, "p3", "P3C0", //$NON-NLS-1$ //$NON-NLS-2$
			"package p3;\n" +
			"import p2.P2C0;\n" +
			"public class P3C0\n" +
			"  extends P2C0 {/*empty*/}\n"
		);

	// for Project1
	env.addRequiredProject(p2, p1);
	env.addRequiredProject(p3, p2);

	fullBuild();
	expectingNoProblems();
}

