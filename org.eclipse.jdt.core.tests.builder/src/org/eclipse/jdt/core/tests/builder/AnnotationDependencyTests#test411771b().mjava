	//https://bugs.eclipse.org/bugs/show_bug.cgi?id=411771
	//[compiler][null] Enum constants not recognized as being NonNull.
	//Distinguish between enum constant and enum type. The enum type should not
	//be marked as NonNull.
	public void test411771b() throws IOException, JavaModelException {
		setupProjectForNullAnnotations();
		String testEnumCode = "package p1;\n" +
				"enum TestEnum { FOO };\n";
		env.addClass( this.srcRoot, "p1", "TestEnum", testEnumCode );
		fullBuild( this.projectPath );
		expectingNoProblems();

		String testClass = "package p1;\n" +
				"public class X { TestEnum f; };\n";
		env.addClass( this.srcRoot, "p1", "X", testClass );
		incrementalBuild( this.projectPath );
		expectingNoProblems();

		String nullTestCode = "package p1;\n" +
				"import org.eclipse.jdt.annotation.NonNull;\n" +
				"public class NullTest {\n" +
				"  public static TestEnum bla(X x) {\n" +
				"	@NonNull final TestEnum t = x.f;\n" +
				"	return t;\n" +
				"  }\n" +
				"}\n";
		IPath test1Path = env.addClass( this.srcRoot, "p1", "NullTest", nullTestCode );
		incrementalBuild( this.projectPath );

		expectingProblemsFor(test1Path,
				"Problem : Null type safety: The expression of type TestEnum needs unchecked conversion to conform to " +
				"'@NonNull TestEnum' [ resource : </Project/src/p1/NullTest.java> range : <144,147> category : <90> severity : <1>]");

		expectingUniqueCompiledClasses(new String[] { "p1.NullTest" });
	}

