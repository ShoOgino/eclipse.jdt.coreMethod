// https://bugs.eclipse.org/bugs/show_bug.cgi?id=117092
// simplistic linked subfolder used as package, internal case (in workspace)
public void test002() throws CoreException {
	IPath projectPath = env.addProject("P");
	IPath externalProjectPath = env.addProject("EP");
	try {
		env.addExternalJars(projectPath, Util.getJavaClassLibs());
		env.removePackageFragmentRoot(projectPath, "");
		IPath src = env.addPackageFragmentRoot(projectPath, "src");
		IPath bin = env.setOutputFolder(projectPath, "bin");
		env.addClass(src, "p", "X",
			"package p;\n" +
			"public class X {\n" +
			"}\n"
			);
		IProject externalProject = env.getProject(externalProjectPath);
		IFolder externalFolder = externalProject.getFolder("q");
		externalFolder.create(false /* no need to force */, true /*local */,
				null /* no progress monitor */);
		IFolder folder = env.getWorkspace().getRoot().getFolder(src.append("p/q"));
		folder.createLink(externalFolder.getLocationURI(), 0, null);
		env.addClass(src, "p.q", "Y",
			"package p.q;\n" +
			"public class Y extends p.X {\n" +
			"}\n"
			);
		env.addClass(src, "p.q.r", "Z",
				"package p.q.r;\n" +
				"public class Z extends p.q.Y {\n" +
				"}\n"
				);
		assertTrue(new File(externalFolder.getLocation() +
				File.separator + "r" + File.separator + "Z.java").exists());
		env.incrementalBuild(projectPath);
		expectingPresenceOf(bin.append("p/q/r/Z.class"));

		expectingNoProblems();
		env.removeClass(env.getPackagePath(src, "p.q.r"), "Z");
		env.removePackage(src, "p.q.r");
		env.incrementalBuild(projectPath);
		expectingNoProblems();
	} finally {
		env.deleteTmpDirectory();
		env.removeProject(projectPath);
		env.removeProject(externalProjectPath);
	}
}

