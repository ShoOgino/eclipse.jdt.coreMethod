	public void testMoveMemberType() {
		IPath projectPath = env.addProject("Project");
		env.addExternalJar(projectPath, Util.getJavaClassLib());

		// remove old package fragment root so that names don't collide
		env.removePackageFragmentRoot(projectPath, "");

		IPath root = env.addPackageFragmentRoot(projectPath, "src");
		env.setOutputFolder(projectPath, "bin");

		env.addClass(root, "p", "AA",
			"package p; \n"+
			"public class AA {} \n"+
			"class AZ {static class M{}}");

		env.addClass(root, "p", "AB",
			"package p; \n"+
			"import p.AZ.*; \n"+
			"import p.ZA.*; \n"+
			"public class AB extends M {}");

		env.addClass(root, "p", "ZZ",
			"package p; \n"+
			"public class ZZ {} \n"+
			"class ZA {}");

		fullBuild(projectPath);
		expectingNoProblems();

		/* Move M from AA to ZZ */
		env.addClass(root, "p", "AA",
			"package p; \n"+
			"public class AA {} \n"+
			"class AZ {}");

		env.addClass(root, "p", "ZZ",
			"package p; \n"+
			"public class ZZ {} \n"+
			"class ZA {static class M{}}");

		incrementalBuild(projectPath);
		expectingNoProblems();

		/* Move M from ZZ to AA */
		env.addClass(root, "p", "AA",
			"package p; \n"+
			"public class AA {} \n"+
			"class AZ {static class M{}}");

		env.addClass(root, "p", "ZZ",
			"package p; \n"+
			"public class ZZ {} \n"+
			"class ZA {}");

		incrementalBuild(projectPath);
		expectingNoProblems();
	}

