	public void testWithProjectAsTestDependencyWithoutTestCode() throws JavaModelException {
		IPath project1Path = env.addProject("Project1"); 
		env.removePackageFragmentRoot(project1Path, "");
		IPath src1 = env.addPackageFragmentRoot(project1Path, "src", null, "bin");
		IPath tests1 = env.addTestPackageFragmentRoot(project1Path, "tests");
		env.addExternalJars(project1Path, Util.getJavaClassLibs());		
	
		env.addClass(src1, "p1", "P1Class", 
				"package p1;\n" + 
				"\n" + 
				"public class P1Class {\n"+ 
				"}\n" 
				);
		env.addClass(src1, "p1", "Production1",
				"package p1;\n" + 
				"\n" + 
				"public class Production1 {\n" + 
				"	void p1() {\n" + 
				"		new P1Class(); // ok\n" + 
				"		new T1Class(); // forbidden\n" + 
				"	}\n" + 
				"}\n" + 
				""
				);
		env.addClass(tests1, "p1", "T1Class", 
				"package p1;\n" + 
				"\n" + 
				"public class T1Class {\n"+ 
				"}\n" 
				);
		env.addClass(tests1, "p1", "Test1", 
				"package p1;\n" + 
				"\n" + 
				"public class Test1 {\n" + 
				"	void test1() {\n" + 
				"		new P1Class(); // ok\n" + 
				"		new T1Class(); // ok\n" + 
				"	}\n" + 
				"}\n" + 
				"" 
				);

		IPath project2Path = env.addProject("Project2"); 
		env.removePackageFragmentRoot(project2Path, "");
		IPath src2 = env.addPackageFragmentRoot(project2Path, "src", null, "bin");
		IPath tests2 = env.addTestPackageFragmentRoot(project2Path, "tests");
		env.addExternalJars(project2Path, Util.getJavaClassLibs());
		env.addRequiredTestProjectWithoutTestCode(project2Path, project1Path);
		env.addClass(src2, "p2", "P2Class", 
				"package p2;\n" + 
				"\n" + 
				"public class P2Class {\n"+ 
				"}\n" 
				);
		env.addClass(src2, "p2", "Production2",
				"package p2;\n" + 
				"\n" + 
				"import p1.P1Class;\n" + 
				"import p1.T1Class;\n" + 
				"\n" + 
				"public class Production2 {\n" + 
				"	void p2() {\n" + 
				"		new P1Class(); // forbidden\n" + 
				"		new P2Class(); // ok\n" + 
				"		new T1Class(); // forbidden\n" + 
				"		new T2Class(); // forbidden\n" + 
				"	}\n" + 
				"}\n" + 
				""
				);
		env.addClass(tests2, "p2", "T2Class", 
				"package p2;\n" + 
				"\n" + 
				"public class T2Class {\n"+ 
				"}\n" 
				);
		env.addClass(tests2, "p2", "Test2", 
				"package p2;\n" + 
				"\n" + 
				"import p1.P1Class;\n" + 
				"import p1.T1Class;\n" + 
				"\n" + 
				"public class Test2 {\n" + 
				"	void test2() {\n" + 
				"		new P1Class(); // ok\n" + 
				"		new P2Class(); // ok\n" + 
				"		new T1Class(); // ok\n" + 
				"		new T2Class(); // ok\n" + 
				"	}\n" + 
				"}\n" + 
				"" 
				);

		fullBuild();
		expectingProblemsFor(env.getWorkspaceRootPath(), "Problem : P1Class cannot be resolved to a type [ resource : </Project2/src/p2/Production2.java> range : <98,105> category : <40> severity : <2>]\n" + 
				"Problem : T1Class cannot be resolved to a type [ resource : </Project1/src/p1/Production1.java> range : <82,89> category : <40> severity : <2>]\n" + 
				"Problem : T1Class cannot be resolved to a type [ resource : </Project2/src/p2/Production2.java> range : <151,158> category : <40> severity : <2>]\n" +
				"Problem : T1Class cannot be resolved to a type [ resource : </Project2/tests/p2/Test2.java> range : <141,148> category : <40> severity : <2>]\n" + 
				"Problem : T2Class cannot be resolved to a type [ resource : </Project2/src/p2/Production2.java> range : <181,188> category : <40> severity : <2>]\n" + 
				"Problem : The import p1 cannot be resolved [ resource : </Project2/src/p2/Production2.java> range : <20,22> category : <30> severity : <2>]\n" + 
				"Problem : The import p1 cannot be resolved [ resource : </Project2/src/p2/Production2.java> range : <39,41> category : <30> severity : <2>]\n" +
				"Problem : The import p1.T1Class cannot be resolved [ resource : </Project2/tests/p2/Test2.java> range : <39,49> category : <30> severity : <2>]");
	}

