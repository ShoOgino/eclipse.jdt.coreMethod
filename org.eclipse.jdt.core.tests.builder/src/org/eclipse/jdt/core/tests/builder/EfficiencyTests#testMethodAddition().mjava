	public void testMethodAddition() {

		IPath projectPath = env.addProject("Project");
		env.addExternalJar(projectPath, Util.getJavaClassLib());
		fullBuild(projectPath);
		
		// remove old package fragment root so that names don't collide
		env.removePackageFragmentRoot(projectPath, "");
		
		IPath root = env.addPackageFragmentRoot(projectPath, "src");
		env.setOutputFolder(projectPath, "bin");
		
		env.addClass(root, "p1", "X",
			"package p1;\n"+
			"public class X {\n"+
			"	void foo() {	\n" +
			"	}\n" +
			"}\n"
			);
			
		env.addClass(root, "p2", "Y",
			"package p2;\n"+
			"import p1.*;\n"+
			"public class Y extends X{\n"+
			"}\n"
			);
		
		env.addClass(root, "p3", "Z",
			"package p2;\n"+
			"import p1.*;\n"+
			"public class Z{\n"+
			"}\n"
			);

		fullBuild(projectPath);
		
		env.addClass(root, "p1", "X",
			"package p1;\n"+
			"public class X {\n"+
			"	void bar(){}	\n" +
			"	void foo() {	\n" +
			"		};	\n" +
			"	}\n" +
			"}\n"
			);
			
		incrementalBuild(projectPath);

		expectingCompiledClasses(new String[]{"p1.X", "p2.Y"});
		expectingCompilingOrder(new String[]{"p1.X", "p2.Y" });
	}

