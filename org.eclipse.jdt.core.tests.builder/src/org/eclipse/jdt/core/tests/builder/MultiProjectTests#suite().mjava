	public static Test suite() {
		TestSuite suite = new TestSuite(MultiProjectTests.class.getName());
		suite.addTest(new MultiProjectTests("testCompileOnlyDependent"));
		suite.addTest(new MultiProjectTests("testCompileOnlyStructuralDependent"));
		suite.addTest(new MultiProjectTests("testRemoveField"));
		suite.addTest(new MultiProjectTests("testCompileOrder"));
		suite.addTest(new MultiProjectTests("testCycle1"));
		suite.addTest(new MultiProjectTests("testCycle2"));
		suite.addTest(new MultiProjectTests("testCycle3"));
		suite.addTest(new MultiProjectTests("testCycle4"));
		suite.addTest(new MultiProjectTests("testCycle5"));
		suite.addTest(new MultiProjectTests("testCycle6"));
		suite.addTest(new MultiProjectTests("testCycle7"));
		suite.addTest(new MultiProjectTests("testExcludePartOfAnotherProject1"));
		suite.addTest(new MultiProjectTests("testExcludePartOfAnotherProject2"));
		suite.addTest(new MultiProjectTests("testExcludePartOfAnotherProject3"));
		suite.addTest(new MultiProjectTests("testIncludePartOfAnotherProject1"));
		suite.addTest(new MultiProjectTests("testIncludePartOfAnotherProject2"));
		suite.addTest(new MultiProjectTests("testIncludePartOfAnotherProject3"));
		suite.addTest(new MultiProjectTests("testIgnoreIfBetterNonAccessibleRule1"));
		suite.addTest(new MultiProjectTests("testIgnoreIfBetterNonAccessibleRule2"));
		suite.addTest(new MultiProjectTests("testMissingRequiredBinaries"));
		suite.addTest(new MultiProjectTests("test100_class_folder_exported"));
		suite.addTest(new MultiProjectTests("test101_class_folder_non_exported"));
		suite.addTest(new MultiProjectTests("test102_missing_required_binaries"));
		suite.addTest(new MultiProjectTests("test103_missing_required_binaries"));
		return suite;
	}

