	public static Integer[] build(String[] codePointTable, Environment environment) {
		ArrayList<Integer> values = new ArrayList<>();
		for (String codePointTableEntry : codePointTable) {
			if (codePointTableEntry.length() != 0) {
				int indexOfDots = codePointTableEntry.indexOf(".."); //$NON-NLS-1$
				if (indexOfDots == -1) {
					// single value on the line
					try {
						values.add(Integer.parseInt(codePointTableEntry, 16));
					} catch (NumberFormatException e) {
						System.err.println("NumberFormatException processing : " + codePointTableEntry); //$NON-NLS-1$
						return null;
					}
				} else {
					// range of values
					try {
						int firstValue = Integer.parseInt(codePointTableEntry.substring(0, indexOfDots), 16);
						int secondValue = Integer.parseInt(codePointTableEntry.substring(indexOfDots + 2), 16);
						for (int i = firstValue; i <= secondValue; i++) {
							values.add(i);
						}
					} catch (NumberFormatException e) {
						System.err.println("NumberFormatException processing : " + codePointTableEntry); //$NON-NLS-1$
						return null;
					}
				}
			}
		}
		Collections.sort(values);
		printDistribution(values, 0x10000);
		return values.toArray(new Integer[values.size()]);
	}

