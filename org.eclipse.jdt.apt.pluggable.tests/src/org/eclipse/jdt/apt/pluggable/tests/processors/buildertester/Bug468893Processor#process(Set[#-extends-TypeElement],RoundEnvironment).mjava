	@Override
	public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {
		if (roundEnv.processingOver()) {
			count++;
			processingEnv.getMessager().printMessage(Kind.WARNING, "Processing over...");
			try {
				FileObject resource = processingEnv.getFiler().createSourceFile("generated.TypeIndex");
				BufferedWriter w = new BufferedWriter(resource.openWriter());
				try {
					w.append("package generated;");
					w.newLine();
					w.append("public interface TypeIndex {");
					w.newLine();
					w.append("\tpublic static final String ANNOTATED = null;");
					w.newLine();
					w.append("}");
					w.newLine();
				} finally {
					w.close();
				}
			} catch (IOException e) {
				processingEnv.getMessager().printMessage(Kind.ERROR, "Could not create output " + e.getMessage());
				throw new RuntimeException(e);
			}
		}
		return false;
	}

