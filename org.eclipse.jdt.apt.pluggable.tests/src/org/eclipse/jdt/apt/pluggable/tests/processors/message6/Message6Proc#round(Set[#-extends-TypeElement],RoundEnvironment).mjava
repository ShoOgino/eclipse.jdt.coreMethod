	/**
	 * Perform a round of processing
	 */
	private void round(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {
		TypeElement genClassAnno = annotations.iterator().next();
		Set<? extends Element> annotatedEls = roundEnv.getElementsAnnotatedWith(genClassAnno);
		for (Element annotatedEl : annotatedEls) {
			Message6 messageMirror = annotatedEl.getAnnotation(Message6.class);
			Diagnostic.Kind kind = Diagnostic.Kind.OTHER;
			String text = null;
			try {
				kind = messageMirror.value();
				text = messageMirror.text();
			} catch (Exception e) {
				// Do nothing: compiler will have put up a syntax error on the annotation already
				return;
			}
			if (kind != Diagnostic.Kind.OTHER) {
				_messager.printMessage(kind, text, annotatedEl);
			}
		}
	}

