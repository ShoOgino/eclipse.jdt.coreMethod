	/**
	 * Call ModelTester8Proc.testMethodParameters(), which checks the type of a method
	 */
	public void testMethodParameters() throws Throwable {
		if (!canRunJava8()) {
			return;
		}
		ProcessorTestStatus.reset();
		IJavaProject jproj = createJava8Project(_projectName);
		jproj.setOption(CompilerOptions.OPTION_LocalVariableAttribute, CompilerOptions.DO_NOT_GENERATE);
		jproj.setOption(CompilerOptions.OPTION_MethodParametersAttribute, CompilerOptions.GENERATE);
		disableJava5Factories(jproj);
		IProject proj = jproj.getProject();
		IPath projPath = proj.getFullPath();

		env.addClass(projPath.append("src"),
				ModelTester8Proc.TEST_METHOD_PARAMETERS_TYPE1_PKG,
				ModelTester8Proc.TEST_METHOD_PARAMETERS_TYPE1_CLASS,
				ModelTester8Proc.TEST_METHOD_PARAMETERS_TYPE1_SOURCE);
		env.addClass(projPath.append("src"),
				ModelTester8Proc.TEST_METHOD_PARAMETERS_TYPE2_PKG,
				ModelTester8Proc.TEST_METHOD_PARAMETERS_TYPE2_CLASS,
				ModelTester8Proc.TEST_METHOD_PARAMETERS_TYPE2_SOURCE);
		fullBuild();
		expectingNoProblems();
		assertFalse("Processor ran too early", ProcessorTestStatus.processorRan());

		keepBinaryOnly(jproj,
				ModelTester8Proc.TEST_METHOD_PARAMETERS_TYPE1_PKG,
				ModelTester8Proc.TEST_METHOD_PARAMETERS_TYPE1_CLASS);

		keepBinaryOnly(jproj,
				ModelTester8Proc.TEST_METHOD_PARAMETERS_TYPE2_PKG,
				ModelTester8Proc.TEST_METHOD_PARAMETERS_TYPE2_CLASS);

		fullBuild();

		env.addClass(projPath.append("src"),
				ModelTester8Proc.TEST_METHOD_PARAMETERS_TYPE3_PKG,
				ModelTester8Proc.TEST_METHOD_PARAMETERS_TYPE3_CLASS,
				ModelTester8Proc.TEST_METHOD_PARAMETERS_TYPE3_SOURCE);

		AptConfig.setEnabled(jproj, true);

		fullBuild();
		expectingNoProblems();
		assertTrue("Processor did not run", ProcessorTestStatus.processorRan());
		assertEquals("Processor reported errors", ProcessorTestStatus.NO_ERRORS, ProcessorTestStatus.getErrors());
	}

