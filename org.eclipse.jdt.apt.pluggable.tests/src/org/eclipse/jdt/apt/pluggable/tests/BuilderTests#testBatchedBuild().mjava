	public void testBatchedBuild() throws Throwable {
		int old = AbstractImageBuilder.MAX_AT_ONCE;
		IJavaProject jproj = createJavaProject(_projectName);
		disableJava5Factories(jproj);
		IProject proj = jproj.getProject();
		IPath projPath = proj.getFullPath();
		IPath root = projPath.append("src");
		IPath packagePath = root.append("test");
		try {
			// Force the build to be batched
			AbstractImageBuilder.MAX_AT_ONCE = 1;
			ProcessorTestStatus.reset();

			env.addClass(root, "test", "Foo",
					"package test;\n" +
					"import org.eclipse.jdt.apt.pluggable.tests.annotations.GenClass6;\n" +
			        "@GenClass6(name = \"FooGen\", pkg = \"test\")\n" +
				    "public class Foo {\n" +
			        "    public Bar bar;\n" +
				    "}");
			env.addClass(root, "test", "Bar",
					"package test;\n" +
					"import org.eclipse.jdt.apt.pluggable.tests.annotations.GenClass6;\n" +
			        "@GenClass6(name = \"BarGen\", pkg = \"test\")\n" +
				    "public class Bar {\n" +
			        "    public Foo foo;\n" +
				    "}");
			AptConfig.setEnabled(jproj, true);

			fullBuild();
			expectingNoProblems();
			expectingUniqueCompiledClasses(
					new String[] {"test.Foo", "test.Bar", "test.FooGen", "test.BarGen"});

		} finally {
			AbstractImageBuilder.MAX_AT_ONCE = old;
			env.removeClass(packagePath, "Foo");
			env.removeClass(packagePath, "Bar");
			env.removeClass(packagePath, "FooGen");
			env.removeClass(packagePath, "BarGen");

		}
	}

