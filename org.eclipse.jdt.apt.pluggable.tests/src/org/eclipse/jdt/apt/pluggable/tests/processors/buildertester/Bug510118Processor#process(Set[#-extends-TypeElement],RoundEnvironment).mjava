	@Override
	public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {
		if (!roundEnv.processingOver()) {
			TypeElement testClass = null;
			Messager messager = processingEnv.getMessager();
			try {
				Elements elements = processingEnv.getElementUtils();
				testClass = elements.getTypeElement(CLASS_NAME);

				TypeElement typeAdapterElement = elements.getTypeElement(INTERFACE_NAME);
				TypeParameterElement param = typeAdapterElement.getTypeParameters().get(0);
				DeclaredType declaredType = testClass.asType().accept(DeclaredTypeVisitor.INSTANCE, null);
				TypeMirror tm = processingEnv.getTypeUtils().asMemberOf(declaredType, param);
				if (tm != null) {
					testClass = elements.getTypeElement(TYPE_ARGUMENT_NAME);
					if (processingEnv.getTypeUtils().isSameType(tm, testClass.asType())) {
						status = true;
					}
				}
			} catch (Exception e) {
				messager.printMessage(Diagnostic.Kind.ERROR, ("Exception: " + e), testClass);
			}
		}
		return false;
	}

