	private ASTParser createParser(int kind) {
		ASTParser parser = ASTParser.newParser(AST.JLS9);

		if (kind == K_MODULE_INFO) {
			Path fakeModuleInfoPath = new Path("project/" + TypeConstants.MODULE_INFO_FILE_NAME_STRING); //$NON-NLS-1$
			IFile file = ResourcesPlugin.getWorkspace().getRoot().getFile(fakeModuleInfoPath);
			ICompilationUnit unit = JavaCore.createCompilationUnitFrom(file);
			parser.setSource(new org.eclipse.jdt.internal.core.CompilationUnit((PackageFragment) unit.getParent(),
					unit.getElementName(), unit.getOwner()) {
				@Override
				public char[] getContents() {
					return DefaultCodeFormatter.this.sourceArray;
				}
			});
		} else {
			parser.setSource(this.sourceArray);
		}
		parser.setKind(FORMAT_TO_PARSER_KIND.get(kind));

		Map<String, String> parserOptions = JavaCore.getOptions();
		parserOptions.put(CompilerOptions.OPTION_Source, this.sourceLevel);
		parserOptions.put(CompilerOptions.OPTION_DocCommentSupport, CompilerOptions.ENABLED);
		parser.setCompilerOptions(parserOptions);
		return parser;
	}

