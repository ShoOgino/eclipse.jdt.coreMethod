	/**
	 * Formats this comment line as end line having a lower border
	 * consisting of content line prefixes.
	 * 
	 * @param range last comment range of the last comment line in the
	 *                comment region
	 * @param indentation the indentation of the comment region
	 * @param length the maximal length of text in this comment region
	 *                measured in average character widths
	 */
	protected void formatLowerBorder(final CommentRange range, final String indentation, final int length) {

		final int offset= range.getOffset() + range.getLength();

		final StringBuffer buffer= new StringBuffer(length);
		final String end= getEndingPrefix();
		final String delimiter= fParent.getDelimiter();

		if (fParent.isSingleLine() && fParent.getSize() == 1)
			buffer.append(end);
		else {

			final String filler= getContentPrefix().trim();

			buffer.append(delimiter);
			buffer.append(indentation);

			if (fParent.hasBorder(BORDER_LOWER)) {

				buffer.append(' ');
				for (int character= 0; character < length; character++)
					buffer.append(filler);

				buffer.append(end.trim());

			} else
				buffer.append(end);
		}
		fParent.logEdit(buffer.toString(), offset, fParent.getLength() - offset);
	}

