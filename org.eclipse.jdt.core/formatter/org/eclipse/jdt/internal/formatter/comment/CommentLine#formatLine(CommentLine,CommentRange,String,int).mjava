	/**
	 * Formats this comment line as content line.
	 *
	 * @param predecessor the predecessor comment line in the comment region
	 * @param last the most recently processed comment range
	 * @param indentation the indentation of the comment region
	 * @param line the index of this comment line in the comment region
	 * @return the first comment range in this comment line
	 */
	protected CommentRange formatLine(final CommentLine predecessor, final CommentRange last, final String indentation, final int line) {

		int offset= 0;
		int length= 0;

		CommentRange next= last;
		CommentRange previous= null;

		final int stop= this.fRanges.size() - 1;
		final int end= this.fParent.getSize() - 1;

		for (int index= stop; index >= 0; index--) {

			previous= next;
			next= (CommentRange)this.fRanges.get(index);

			if (this.fParent.canFormat(previous, next)) {

				offset= next.getOffset() + next.getLength();
				length= previous.getOffset() - offset;

				if (index == stop && line != end)
					this.fParent.logEdit(this.fParent.getDelimiter(predecessor, this, previous, next, indentation), offset, length);
				else
					this.fParent.logEdit(this.fParent.getDelimiter(previous, next), offset, length);
			}
		}
		return next;
	}

