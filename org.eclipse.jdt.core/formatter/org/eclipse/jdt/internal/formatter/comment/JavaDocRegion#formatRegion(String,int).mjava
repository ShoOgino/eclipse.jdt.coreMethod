	/*
	 * @see org.eclipse.jdt.internal.corext.text.comment.CommentRegion#formatRegion(java.lang.String, int)
	 */
	protected final void formatRegion(final String indentation, final int width) {

		super.formatRegion(indentation, width);

		if (this.fFormatSource) {

			try {

				if (this.fCodePositions.size() > 0) {

					int begin= 0;
					int end= 0;

					Position position= null;

					final IDocument document= getDocument();

					for (int index= this.fCodePositions.size() - 1; index >= 0;) {

						position= (Position)this.fCodePositions.get(index--);
						begin= position.getOffset();

						if (index >= 0) {
							position= (Position)this.fCodePositions.get(index--);
							end= position.getOffset();
						} else {
							/*
							 * Handle missing closing tag
							 * see: https://bugs.eclipse.org/bugs/show_bug.cgi?id=57011
							 */
							position= null;
							end= getOffset() + getLength() - MultiCommentLine.MULTI_COMMENT_END_PREFIX.trim().length();
							while (end > begin && ScannerHelper.isWhitespace(document.getChar(end - 1)))
								end--;
						}

						String snippet= document.get(begin, end - begin);
						snippet= preprocessCodeSnippet(snippet);
						snippet= formatCodeSnippet(snippet);
						snippet= postprocessCodeSnippet(snippet, indentation);

						logEdit(snippet, begin - getOffset(), end - begin);
					}
				}
			} catch (BadLocationException e) {
				// Can not happen
				CommentFormatterUtil.log(e);
			}
		}
	}

