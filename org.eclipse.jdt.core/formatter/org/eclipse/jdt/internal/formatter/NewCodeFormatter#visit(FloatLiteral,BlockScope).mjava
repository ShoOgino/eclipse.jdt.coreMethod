	/**
	 * @see org.eclipse.jdt.internal.compiler.IAbstractSyntaxTreeVisitor#visit(org.eclipse.jdt.internal.compiler.ast.FloatLiteral, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
	 */
	public boolean visit(FloatLiteral floatLiteral, BlockScope scope) {

		final int numberOfParens = (floatLiteral.bits & AstNode.ParenthesizedMASK) >> AstNode.ParenthesizedSHIFT;
		if (numberOfParens > 0) manageOpeningParenthesizedExpression(floatLiteral, numberOfParens);

		Constant constant = floatLiteral.constant;
		if (constant != null && floatLiteral.constant.floatValue() < 0) {
			this.scribe.printNextToken(ITerminalSymbols.TokenNameMINUS);			
		}
		this.scribe.printNextToken(ITerminalSymbols.TokenNameFloatingPointLiteral);

		if (numberOfParens > 0) manageClosingParenthesizedExpression(floatLiteral, numberOfParens);
		return false;
	}

