	public boolean visit(AnnotationTypeDeclaration node) {
        this.scribe.printComment();
        final int line = this.scribe.line; 
        
        final List modifiers = node.modifiers();
        if (modifiers.size() != 0) {
        	this.scribe.printModifiers(modifiers, this);
        	this.scribe.space();
        }
        this.scribe.printNextToken(TerminalTokens.TokenNameAT, this.preferences.insert_space_before_at_in_annotation_type_declaration);
		this.scribe.printNextToken(TerminalTokens.TokenNameinterface, this.preferences.insert_space_after_at_in_annotation_type_declaration); 
		this.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, true); 

		String class_declaration_brace;
		boolean space_before_opening_brace;
		class_declaration_brace = this.preferences.brace_position_for_annotation_type_declaration;
		space_before_opening_brace =  this.preferences.insert_space_before_opening_brace_in_annotation_type_declaration;

		formatLeftCurlyBrace(line, class_declaration_brace);
		final List bodyDeclarations = node.bodyDeclarations();
		formatTypeOpeningBrace(class_declaration_brace, space_before_opening_brace, bodyDeclarations.size() != 0, node);
		
		// TODO (olivier) might want to add an option for annotation type
		boolean indent_body_declarations_compare_to_header = this.preferences.indent_body_declarations_compare_to_type_header;
		if (indent_body_declarations_compare_to_header) {
			this.scribe.indent();
		}
		
		formatTypeMembers(bodyDeclarations, true);
		
		if (indent_body_declarations_compare_to_header) {
			this.scribe.unIndent();
		}
		
		// TODO (olivier) might want an option for annotation type
		if (this.preferences.insert_new_line_in_empty_type_declaration) {
			this.scribe.printNewLine();
		}
		this.scribe.printNextToken(TerminalTokens.TokenNameRBRACE);
		this.scribe.printTrailingComment();
		if (class_declaration_brace.equals(DefaultCodeFormatterConstants.NEXT_LINE_SHIFTED)) {
			this.scribe.unIndent();
		}
		if (hasComments()) {
			this.scribe.printNewLine();
		}
		return false;
	}

