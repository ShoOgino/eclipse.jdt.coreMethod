	/*
	 * Preserve empty lines depending on given count and preferences.
	 */
	private String getPreserveEmptyLines(int count, int emptyLinesRules) {
		if (count == 0) {
			int currentIndentationLevel = this.indentationLevel;
			int useAlignmentBreakIndentation = useAlignmentBreakIndentation(emptyLinesRules);
			switch (useAlignmentBreakIndentation) {
				case PRESERVE_EMPTY_LINES_DO_NOT_USE_ANY_INDENTATION:
					return Util.EMPTY_STRING;
				default:
					// Return the new indented line
					StringBuffer buffer = new StringBuffer(getNewLine());
					printIndentationIfNecessary(buffer);
					if (useAlignmentBreakIndentation == PRESERVE_EMPTY_LINES_USE_TEMPORARY_INDENTATION) {
						this.indentationLevel = currentIndentationLevel;
					}
					return buffer.toString();
			}
		}
		if (this.blank_lines_between_import_groups >= 0) {
			useAlignmentBreakIndentation(emptyLinesRules);
			return getEmptyLines(this.blank_lines_between_import_groups);
		}
		if (this.formatter.preferences.number_of_empty_lines_to_preserve != 0) {
			useAlignmentBreakIndentation(emptyLinesRules);
			int linesToPreserve = Math.min(count, this.formatter.preferences.number_of_empty_lines_to_preserve);
			return getEmptyLines(linesToPreserve);
		}
		return getNewLine();
	}

