	public FormattingPreferences(Map map) {
		if (map.get(LINE_SEPARATOR) != null) {
			this.line_delimiter = (String) map.get(LINE_SEPARATOR);
		} else {
			this.line_delimiter = DEFAULT_LINE_SEPARATOR;			
		}
		if (map.get(USE_TAB) != null) { 
			this.use_tab = Boolean.valueOf((String)map.get(USE_TAB)).booleanValue();
		} else {
			this.use_tab = DEFAULT_USE_TAB;
		}
		if (map.get(TAB_SIZE) != null) { 
			this.tab_size = Integer.parseInt((String)map.get(TAB_SIZE));
		} else {
			this.tab_size = DEFAULT_TAB_SIZE;
		}
		if (map.get(PAGE_WIDTH) != null) { 
			this.page_width = Integer.parseInt((String)map.get(PAGE_WIDTH));
		} else {
			this.page_width = DEFAULT_PAGE_WIDTH;
		}
		if (map.get(BLANK_LINES_BEFORE_PACKAGE) != null) { 
			this.blank_lines_before_package = Integer.parseInt((String)map.get(BLANK_LINES_BEFORE_PACKAGE));
		} else {
			this.blank_lines_before_package = DEFAULT_BLANK_LINES_BEFORE_PACKAGE;
		}
		if (map.get(BLANK_LINES_AFTER_PACKAGE) != null) { 
			this.blank_lines_after_package = Integer.parseInt((String)map.get(BLANK_LINES_AFTER_PACKAGE));
		} else {
			this.blank_lines_after_package = DEFAULT_BLANK_LINES_AFTER_PACKAGE;
		}
		if (map.get(BLANK_LINES_BEFORE_IMPORTS) != null) { 
			this.blank_lines_before_imports = Integer.parseInt((String)map.get(BLANK_LINES_BEFORE_IMPORTS));
		} else {
			this.blank_lines_before_imports = DEFAULT_BLANK_LINES_BEFORE_IMPORTS;
		}
		if (map.get(BLANK_LINES_AFTER_IMPORTS) != null) { 
			this.blank_lines_after_imports = Integer.parseInt((String)map.get(BLANK_LINES_AFTER_IMPORTS));
		} else {
			this.blank_lines_after_imports = DEFAULT_BLANK_LINES_AFTER_IMPORTS;
		}
		if (map.get(INITIAL_INDENTATION_LEVEL) != null) { 
			this.initial_indentation_level = Integer.parseInt((String)map.get(INITIAL_INDENTATION_LEVEL));
		} else {
			this.initial_indentation_level = DEFAULT_INITIAL_INDENTATION_LEVEL;
		}
		if (map.get(CONTINUATION_INDENTATION) != null) { 
			this.continuation_indentation = Integer.parseInt((String)map.get(CONTINUATION_INDENTATION));
		} else {
			this.continuation_indentation = this.use_tab ? DEFAULT_CONTINUATION_INDENTATION : DEFAULT_CONTINUATION_INDENTATION * this.tab_size;
		}
		if (map.get(TYPE_DECLARATION_BRACE_POSITION) != null) { 
			this.type_declaration_brace_position = (String) map.get(TYPE_DECLARATION_BRACE_POSITION);
		} else {
			this.type_declaration_brace_position = DEFAULT_TYPE_DECLARATION_BRACE_POSITION;
		}
		if (map.get(METHOD_DECLARATION_BRACE_POSITION) != null) { 
			this.method_declaration_brace_position = (String) map.get(METHOD_DECLARATION_BRACE_POSITION);
		} else {
			this.method_declaration_brace_position = DEFAULT_METHOD_DECLARATION_BRACE_POSITION;
		}		
		if (map.get(INSERT_SPACE_BEFORE_METHOD_DECLARATION_OPEN_PAREN) != null) { 
			this.insert_space_before_method_declaration_open_paren = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_METHOD_DECLARATION_OPEN_PAREN)).booleanValue();
		} else {
			this.insert_space_before_method_declaration_open_paren = DEFAULT_INSERT_SPACE_BEFORE_METHOD_DECLARATION_OPEN_PAREN;
		}
		if (map.get(INSERT_SPACE_BEFORE_TYPE_OPEN_BRACE) != null) { 
			this.insert_space_before_type_open_brace = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_TYPE_OPEN_BRACE)).booleanValue();
		} else {
			this.insert_space_before_type_open_brace = DEFAULT_INSERT_SPACE_BEFORE_TYPE_OPEN_BRACE;
		}
		if (map.get(INSERT_SPACE_BEFORE_METHOD_OPEN_BRACE) != null) { 
			this.insert_space_before_method_open_brace = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_METHOD_OPEN_BRACE)).booleanValue();
		} else {
			this.insert_space_before_method_open_brace = DEFAULT_INSERT_SPACE_BEFORE_METHOD_OPEN_BRACE;
		}
		if (map.get(INSERT_SPACE_BETWEEN_EMPTY_ARGUMENTS) != null) { 
			this.insert_space_between_empty_arguments = Boolean.valueOf((String)map.get(INSERT_SPACE_BETWEEN_EMPTY_ARGUMENTS)).booleanValue();
		} else {
			this.insert_space_between_empty_arguments = DEFAULT_INSERT_SPACE_BETWEEN_EMPTY_ARGUMENTS;
		}
		if (map.get(INSERT_SPACE_BEFORE_FIRST_ARGUMENT) != null) { 
			this.insert_space_before_first_argument = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_FIRST_ARGUMENT)).booleanValue();
		} else {
			this.insert_space_before_first_argument = DEFAULT_INSERT_SPACE_BEFORE_FIRST_ARGUMENT;
		}
		if (map.get(INSERT_SPACE_BEFORE_CLOSING_PAREN) != null) { 
			this.insert_space_before_closing_paren = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_CLOSING_PAREN)).booleanValue();
		} else {
			this.insert_space_before_closing_paren = DEFAULT_INSERT_SPACE_BEFORE_CLOSING_PAREN;
		}
		if (map.get(INSERT_SPACE_AFTER_ASSIGNMENT_OPERATORS) != null) { 
			this.insert_space_after_assignment_operators = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_ASSIGNMENT_OPERATORS)).booleanValue();
		} else {
			this.insert_space_after_assignment_operators = DEFAULT_INSERT_SPACE_AFTER_ASSIGNMENT_OPERATORS;
		}
		if (map.get(INSERT_SPACE_BEFORE_ASSIGNMENT_OPERATORS) != null) { 
			this.insert_space_before_assignment_operators = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_ASSIGNMENT_OPERATORS)).booleanValue();
		} else {
			this.insert_space_before_assignment_operators = DEFAULT_INSERT_SPACE_BEFORE_ASSIGNMENT_OPERATORS;
		}								
		if (map.get(PUT_EMPTY_STATEMENT_ON_NEW_LINE) != null) { 
			this.put_empty_statement_on_new_line = Boolean.valueOf((String)map.get(PUT_EMPTY_STATEMENT_ON_NEW_LINE)).booleanValue();
		} else {
			this.put_empty_statement_on_new_line = DEFAULT_PUT_EMPTY_STATEMENT_ON_NEW_LINE;
		}								
		if (map.get(INSERT_SPACE_BEFORE_SEMICOLON) != null) { 
			this.insert_space_before_semicolon = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_SEMICOLON)).booleanValue();
		} else {
			this.insert_space_before_semicolon = DEFAULT_INSERT_SPACE_BEFORE_SEMICOLON;
		}
		if (map.get(INSERT_SPACE_WITHIN_MESSAGE_SEND) != null) { 
			this.insert_space_within_message_send = Boolean.valueOf((String)map.get(INSERT_SPACE_WITHIN_MESSAGE_SEND)).booleanValue();
		} else {
			this.insert_space_within_message_send = DEFAULT_INSERT_SPACE_WITHIN_MESSAGE_SEND;
		}
		if (map.get(INSERT_SPACE_BEFORE_MESSAGE_SEND) != null) { 
			this.insert_space_before_message_send = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_MESSAGE_SEND)).booleanValue();
		} else {
			this.insert_space_before_message_send = DEFAULT_INSERT_SPACE_BEFORE_MESSAGE_SEND;
		}
		if (map.get(INSERT_SPACE_BEFORE_FIRST_INITIALIZER) != null) { 
			this.insert_space_before_first_initializer = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_FIRST_INITIALIZER)).booleanValue();
		} else {
			this.insert_space_before_first_initializer = DEFAULT_INSERT_SPACE_BEFORE_FIRST_INITIALIZER;
		}		
		if (map.get(INSERT_SPACE_BEFORE_CLOSING_BRACE_IN_ARRAY_INITIALIZER) != null) { 
			this.insert_space_before_closing_brace_in_array_initializer = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_CLOSING_BRACE_IN_ARRAY_INITIALIZER)).booleanValue();
		} else {
			this.insert_space_before_closing_brace_in_array_initializer = DEFAULT_INSERT_SPACE_BEFORE_CLOSING_BRACE_IN_ARRAY_INITIALIZER;
		}		
		if (map.get(BLOCK_BRACE_POSITION) != null) { 
			this.block_brace_position = (String) map.get(BLOCK_BRACE_POSITION);
		} else {
			this.block_brace_position = DEFAULT_BLOCK_BRACE_POSITION;
		}
		if (map.get(INSERT_SPACE_BEFORE_BLOCK_OPEN_BRACE) != null) { 
			this.insert_space_before_block_open_brace = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_BLOCK_OPEN_BRACE)).booleanValue();
		} else {
			this.insert_space_before_block_open_brace = DEFAULT_INSERT_SPACE_BEFORE_BLOCK_OPEN_BRACE;
		}		
		if (map.get(INSERT_SPACE_BEFORE_COLON_IN_CASE) != null) { 
			this.insert_space_before_colon_in_case = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_COLON_IN_CASE)).booleanValue();
		} else {
			this.insert_space_before_colon_in_case = DEFAULT_INSERT_SPACE_BEFORE_COLON_IN_CASE;
		}		
		if (map.get(INSERT_SPACE_AFTER_OPENING_PAREN_IN_CAST) != null) { 
			this.insert_space_after_opening_paren_in_cast = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_OPENING_PAREN_IN_CAST)).booleanValue();
		} else {
			this.insert_space_after_opening_paren_in_cast = DEFAULT_INSERT_SPACE_AFTER_OPENING_PAREN_IN_CAST;
		}		
		if (map.get(INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_CAST) != null) { 
			this.insert_space_before_closing_paren_in_cast = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_CAST)).booleanValue();
		} else {
			this.insert_space_before_closing_paren_in_cast = DEFAULT_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_CAST;
		}		
		if (map.get(INSERT_SPACE_BEFORE_COLON_IN_DEFAULT) != null) { 
			this.insert_space_before_colon_in_default = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_COLON_IN_DEFAULT)).booleanValue();
		} else {
			this.insert_space_before_colon_in_default = DEFAULT_INSERT_SPACE_BEFORE_COLON_IN_DEFAULT;
		}		
		if (map.get(INSERT_SPACE_IN_WHILE_CONDITION) != null) { 
			this.insert_space_in_while_condition = Boolean.valueOf((String)map.get(INSERT_SPACE_IN_WHILE_CONDITION)).booleanValue();
		} else {
			this.insert_space_in_while_condition = DEFAULT_INSERT_SPACE_IN_WHILE_CONDITION;
		}		
		if (map.get(INSERT_SPACE_IN_IF_CONDITION) != null) { 
			this.insert_space_in_if_condition = Boolean.valueOf((String)map.get(INSERT_SPACE_IN_IF_CONDITION)).booleanValue();
		} else {
			this.insert_space_in_if_condition = DEFAULT_INSERT_SPACE_IN_IF_CONDITION;
		}		
		if (map.get(COMPACT_ELSE_IF) != null) { 
			this.compact_else_if = Boolean.valueOf((String)map.get(COMPACT_ELSE_IF)).booleanValue();
		} else {
			this.compact_else_if = DEFAULT_COMPACT_ELSE_IF;
		}		
		if (map.get(INSERT_SPACE_BEFORE_IF_CONDITION) != null) { 
			this.insert_space_before_if_condition = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_IF_CONDITION)).booleanValue();
		} else {
			this.insert_space_before_if_condition = DEFAULT_INSERT_SPACE_BEFORE_IF_CONDITION;
		}
		if (map.get(INSERT_SPACE_BEFORE_FOR_PAREN) != null) { 
			this.insert_space_before_for_paren = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_FOR_PAREN)).booleanValue();
		} else {
			this.insert_space_before_for_paren = DEFAULT_INSERT_SPACE_BEFORE_FOR_PAREN;
		}
		if (map.get(INSERT_SPACE_IN_FOR_PARENS) != null) { 
			this.insert_space_in_for_parens = Boolean.valueOf((String)map.get(INSERT_SPACE_IN_FOR_PARENS)).booleanValue();
		} else {
			this.insert_space_in_for_parens = DEFAULT_INSERT_SPACE_IN_FOR_PARENS;
		}
		if (map.get(SWITCH_BRACE_POSITION) != null) { 
			this.switch_brace_position = (String) map.get(SWITCH_BRACE_POSITION);
		} else {
			this.switch_brace_position = DEFAULT_SWITCH_BRACE_POSITION;
		}
		if (map.get(INSERT_SPACE_BEFORE_SWITCH_OPEN_BRACE) != null) { 
			this.insert_space_before_switch_open_brace = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_SWITCH_OPEN_BRACE)).booleanValue();
		} else {
			this.insert_space_before_switch_open_brace = DEFAULT_INSERT_SPACE_BEFORE_SWITCH_OPEN_BRACE;
		}		
		if (map.get(INSERT_SPACE_IN_SWITCH_CONDITION) != null) { 
			this.insert_space_in_switch_condition = Boolean.valueOf((String)map.get(INSERT_SPACE_IN_SWITCH_CONDITION)).booleanValue();
		} else {
			this.insert_space_in_switch_condition = DEFAULT_INSERT_SPACE_IN_SWITCH_CONDITION;
		}		
		if (map.get(INSERT_SPACE_BEFORE_SWITCH_CONDITION) != null) { 
			this.insert_space_before_switch_condition = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_SWITCH_CONDITION)).booleanValue();
		} else {
			this.insert_space_before_switch_condition = DEFAULT_INSERT_SPACE_BEFORE_SWITCH_CONDITION;
		}
		if (map.get(INSERT_SPACE_IN_SYNCHRONIZED_CONDITION) != null) { 
			this.insert_space_in_synchronized_condition = Boolean.valueOf((String)map.get(INSERT_SPACE_IN_SYNCHRONIZED_CONDITION)).booleanValue();
		} else {
			this.insert_space_in_synchronized_condition = DEFAULT_INSERT_SPACE_IN_SYNCHRONIZED_CONDITION;
		}		
		if (map.get(INSERT_SPACE_BEFORE_SYNCHRONIZED_CONDITION) != null) { 
			this.insert_space_before_synchronized_condition = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_SYNCHRONIZED_CONDITION)).booleanValue();
		} else {
			this.insert_space_before_synchronized_condition = DEFAULT_INSERT_SPACE_BEFORE_SYNCHRONIZED_CONDITION;
		}
		if (map.get(INSERT_SPACE_IN_CATCH_EXPRESSION) != null) { 
			this.insert_space_in_catch_expression = Boolean.valueOf((String)map.get(INSERT_SPACE_IN_CATCH_EXPRESSION)).booleanValue();
		} else {
			this.insert_space_in_catch_expression = DEFAULT_INSERT_SPACE_IN_CATCH_EXPRESSION;
		}		
		if (map.get(INSERT_SPACE_BEFORE_CATCH_EXPRESSION) != null) { 
			this.insert_space_before_catch_expression = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_CATCH_EXPRESSION)).booleanValue();
		} else {
			this.insert_space_before_catch_expression = DEFAULT_INSERT_SPACE_BEFORE_CATCH_EXPRESSION;
		}
		if (map.get(INSERT_SPACE_BEFORE_WHILE_CONDITION) != null) { 
			this.insert_space_before_while_condition = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_WHILE_CONDITION)).booleanValue();
		} else {
			this.insert_space_before_while_condition = DEFAULT_INSERT_SPACE_BEFORE_WHILE_CONDITION;
		}
		if (map.get(INSERT_NEW_LINE_IN_CONTROL_STATEMENTS) != null) { 
			this.insert_new_line_in_control_statements = Boolean.valueOf((String)map.get(INSERT_NEW_LINE_IN_CONTROL_STATEMENTS)).booleanValue();
		} else {
			this.insert_new_line_in_control_statements = DEFAULT_INSERT_NEW_LINE_IN_CONTROL_STATEMENTS;
		}
		if (map.get(INSERT_SPACE_BEFORE_BINARY_OPERATOR) != null) { 
			this.insert_space_before_binary_operator = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_BINARY_OPERATOR)).booleanValue();
		} else {
			this.insert_space_before_binary_operator = DEFAULT_INSERT_SPACE_BEFORE_BINARY_OPERATOR;
		}
		if (map.get(INSERT_SPACE_AFTER_BINARY_OPERATOR) != null) { 
			this.insert_space_after_binary_operator = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_BINARY_OPERATOR)).booleanValue();
		} else {
			this.insert_space_after_binary_operator = DEFAULT_INSERT_SPACE_AFTER_BINARY_OPERATOR;
		}
		if (map.get(INSERT_SPACE_BEFORE_UNARY_OPERATOR) != null) { 
			this.insert_space_before_unary_operator = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_UNARY_OPERATOR)).booleanValue();
		} else {
			this.insert_space_before_unary_operator = DEFAULT_INSERT_SPACE_BEFORE_UNARY_OPERATOR;
		}
		if (map.get(INSERT_SPACE_AFTER_UNARY_OPERATOR) != null) { 
			this.insert_space_after_unary_operator = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_UNARY_OPERATOR)).booleanValue();
		} else {
			this.insert_space_after_unary_operator = DEFAULT_INSERT_SPACE_AFTER_UNARY_OPERATOR;
		}
		if (map.get(INSERT_SPACE_BEFORE_COMMA_IN_MULTIPLE_FIELD_DECLARATIONS) != null) { 
			this.insert_space_before_comma_in_multiple_field_declarations = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_COMMA_IN_MULTIPLE_FIELD_DECLARATIONS)).booleanValue();
		} else {
			this.insert_space_before_comma_in_multiple_field_declarations = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_MULTIPLE_FIELD_DECLARATIONS;
		}
		if (map.get(INSERT_SPACE_AFTER_COMMA_IN_MULTIPLE_FIELD_DECLARATIONS) != null) { 
			this.insert_space_after_comma_in_multiple_field_declarations = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_COMMA_IN_MULTIPLE_FIELD_DECLARATIONS)).booleanValue();
		} else {
			this.insert_space_after_comma_in_multiple_field_declarations = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_MULTIPLE_FIELD_DECLARATIONS;
		}
		if (map.get(INSERT_SPACE_BEFORE_COMMA_IN_SUPERINTERFACES) != null) { 
			this.insert_space_before_comma_in_superinterfaces = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_COMMA_IN_SUPERINTERFACES)).booleanValue();
		} else {
			this.insert_space_before_comma_in_superinterfaces = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_SUPERINTERFACES;
		}
		if (map.get(INSERT_SPACE_AFTER_COMMA_IN_SUPERINTERFACES) != null) { 
			this.insert_space_after_comma_in_superinterfaces = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_COMMA_IN_SUPERINTERFACES)).booleanValue();
		} else {
			this.insert_space_after_comma_in_superinterfaces = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_SUPERINTERFACES;
		}
		if (map.get(INSERT_SPACE_BEFORE_COMMA_IN_ALLOCATION_EXPRESSION) != null) { 
			this.insert_space_before_comma_in_allocation_expression = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_COMMA_IN_ALLOCATION_EXPRESSION)).booleanValue();
		} else {
			this.insert_space_before_comma_in_allocation_expression = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_ALLOCATION_EXPRESSION;
		}
		if (map.get(INSERT_SPACE_AFTER_COMMA_IN_ALLOCATION_EXPRESSION) != null) { 
			this.insert_space_after_comma_in_allocation_expression = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_COMMA_IN_ALLOCATION_EXPRESSION)).booleanValue();
		} else {
			this.insert_space_after_comma_in_allocation_expression = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_ALLOCATION_EXPRESSION;
		}
		if (map.get(INSERT_SPACE_BEFORE_COMMA_IN_ARRAY_INITIALIZER) != null) { 
			this.insert_space_before_comma_in_array_initializer = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_COMMA_IN_ARRAY_INITIALIZER)).booleanValue();
		} else {
			this.insert_space_before_comma_in_array_initializer = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_ARRAY_INITIALIZER;
		}
		if (map.get(INSERT_SPACE_AFTER_COMMA_IN_ARRAY_INITIALIZER) != null) { 
			this.insert_space_after_comma_in_array_initializer = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_COMMA_IN_ARRAY_INITIALIZER)).booleanValue();
		} else {
			this.insert_space_after_comma_in_array_initializer = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_ARRAY_INITIALIZER;
		}
		if (map.get(INSERT_SPACE_BEFORE_COLON_IN_ASSERT) != null) { 
			this.insert_space_before_colon_in_assert = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_COLON_IN_ASSERT)).booleanValue();
		} else {
			this.insert_space_before_colon_in_assert = DEFAULT_INSERT_SPACE_BEFORE_COLON_IN_ASSERT;
		}
		if (map.get(INSERT_SPACE_AFTER_COLON_IN_ASSERT) != null) { 
			this.insert_space_after_colon_in_assert = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_COLON_IN_ASSERT)).booleanValue();
		} else {
			this.insert_space_after_colon_in_assert = DEFAULT_INSERT_SPACE_AFTER_COLON_IN_ASSERT;
		}
		if (map.get(INSERT_SPACE_BEFORE_QUESTION_IN_CONDITIONAL) != null) { 
			this.insert_space_before_question_in_conditional = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_QUESTION_IN_CONDITIONAL)).booleanValue();
		} else {
			this.insert_space_before_question_in_conditional = DEFAULT_INSERT_SPACE_BEFORE_QUESTION_IN_CONDITIONAL;
		}
		if (map.get(INSERT_SPACE_AFTER_QUESTION_IN_CONDITIONAL) != null) { 
			this.insert_space_after_question_in_conditional = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_QUESTION_IN_CONDITIONAL)).booleanValue();
		} else {
			this.insert_space_after_question_in_conditional = DEFAULT_INSERT_SPACE_AFTER_QUESTION_IN_CONDITIONAL;
		}
		if (map.get(INSERT_SPACE_BEFORE_COLON_IN_CONDITIONAL) != null) { 
			this.insert_space_before_colon_in_conditional = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_COLON_IN_CONDITIONAL)).booleanValue();
		} else {
			this.insert_space_before_colon_in_conditional = DEFAULT_INSERT_SPACE_BEFORE_COLON_IN_CONDITIONAL;
		}
		if (map.get(INSERT_SPACE_AFTER_COLON_IN_CONDITIONAL) != null) { 
			this.insert_space_after_colon_in_conditional = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_COLON_IN_CONDITIONAL)).booleanValue();
		} else {
			this.insert_space_after_colon_in_conditional = DEFAULT_INSERT_SPACE_AFTER_COLON_IN_CONDITIONAL;
		}
		if (map.get(INSERT_SPACE_BEFORE_COMMA_IN_CONSTRUCTOR_ARGUMENTS) != null) { 
			this.insert_space_before_comma_in_constructor_arguments = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_COMMA_IN_CONSTRUCTOR_ARGUMENTS)).booleanValue();
		} else {
			this.insert_space_before_comma_in_constructor_arguments = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_CONSTRUCTOR_ARGUMENTS;
		}
		if (map.get(INSERT_SPACE_AFTER_COMMA_IN_CONSTRUCTOR_ARGUMENTS) != null) { 
			this.insert_space_after_comma_in_constructor_arguments = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_COMMA_IN_CONSTRUCTOR_ARGUMENTS)).booleanValue();
		} else {
			this.insert_space_after_comma_in_constructor_arguments = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_CONSTRUCTOR_ARGUMENTS;
		}
		if (map.get(INSERT_SPACE_BEFORE_COMMA_IN_CONSTRUCTOR_THROWS) != null) { 
			this.insert_space_before_comma_in_constructor_throws = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_COMMA_IN_CONSTRUCTOR_THROWS)).booleanValue();
		} else {
			this.insert_space_before_comma_in_constructor_throws = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_CONSTRUCTOR_THROWS;
		}
		if (map.get(INSERT_SPACE_AFTER_COMMA_IN_CONSTRUCTOR_THROWS) != null) { 
			this.insert_space_after_comma_in_constructor_throws = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_COMMA_IN_CONSTRUCTOR_THROWS)).booleanValue();
		} else {
			this.insert_space_after_comma_in_constructor_throws = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_CONSTRUCTOR_THROWS;
		}
		if (map.get(INSERT_SPACE_BEFORE_COMMA_IN_FOR_INCREMENTS) != null) { 
			this.insert_space_before_comma_in_for_increments = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_COMMA_IN_FOR_INCREMENTS)).booleanValue();
		} else {
			this.insert_space_before_comma_in_for_increments = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_FOR_INCREMENTS;
		}
		if (map.get(INSERT_SPACE_AFTER_COMMA_IN_FOR_INCREMENTS) != null) { 
			this.insert_space_after_comma_in_for_increments = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_COMMA_IN_FOR_INCREMENTS)).booleanValue();
		} else {
			this.insert_space_after_comma_in_for_increments = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_FOR_INCREMENTS;
		}
		if (map.get(INSERT_SPACE_BEFORE_COMMA_IN_EXPLICITCONSTRUCTORCALL_ARGUMENTS) != null) { 
			this.insert_space_before_comma_in_explicitconstructorcall_arguments = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_COMMA_IN_EXPLICITCONSTRUCTORCALL_ARGUMENTS)).booleanValue();
		} else {
			this.insert_space_before_comma_in_explicitconstructorcall_arguments = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_EXPLICITCONSTRUCTORCALL_ARGUMENTS;
		}
		if (map.get(INSERT_SPACE_AFTER_COMMA_IN_EXPLICITCONSTRUCTORCALL_ARGUMENTS) != null) { 
			this.insert_space_after_comma_in_explicitconstructorcall_arguments = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_COMMA_IN_EXPLICITCONSTRUCTORCALL_ARGUMENTS)).booleanValue();
		} else {
			this.insert_space_after_comma_in_explicitconstructorcall_arguments = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_EXPLICITCONSTRUCTORCALL_ARGUMENTS;
		}
		if (map.get(INSERT_SPACE_BEFORE_COLON_IN_LABELED_STATEMENT) != null) { 
			this.insert_space_before_colon_in_labeled_statement = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_COLON_IN_LABELED_STATEMENT)).booleanValue();
		} else {
			this.insert_space_before_colon_in_labeled_statement = DEFAULT_INSERT_SPACE_BEFORE_COLON_IN_LABELED_STATEMENT;
		}
		if (map.get(INSERT_SPACE_AFTER_COLON_IN_LABELED_STATEMENT) != null) { 
			this.insert_space_after_colon_in_labeled_statement = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_COLON_IN_LABELED_STATEMENT)).booleanValue();
		} else {
			this.insert_space_after_colon_in_labeled_statement = DEFAULT_INSERT_SPACE_AFTER_COLON_IN_LABELED_STATEMENT;
		}
		if (map.get(INSERT_SPACE_BEFORE_COMMA_IN_MESSAGESEND_ARGUMENTS) != null) { 
			this.insert_space_before_comma_in_messagesend_arguments = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_COMMA_IN_MESSAGESEND_ARGUMENTS)).booleanValue();
		} else {
			this.insert_space_before_comma_in_messagesend_arguments = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_MESSAGESEND_ARGUMENTS;
		}
		if (map.get(INSERT_SPACE_AFTER_COMMA_IN_MESSAGESEND_ARGUMENTS) != null) { 
			this.insert_space_after_comma_in_messagesend_arguments = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_COMMA_IN_MESSAGESEND_ARGUMENTS)).booleanValue();
		} else {
			this.insert_space_after_comma_in_messagesend_arguments = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_MESSAGESEND_ARGUMENTS;
		}
		if (map.get(INSERT_SPACE_BEFORE_COMMA_IN_METHOD_ARGUMENTS) != null) { 
			this.insert_space_before_comma_in_method_arguments = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_COMMA_IN_METHOD_ARGUMENTS)).booleanValue();
		} else {
			this.insert_space_before_comma_in_method_arguments = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_METHOD_ARGUMENTS;
		}
		if (map.get(INSERT_SPACE_AFTER_COMMA_IN_METHOD_ARGUMENTS) != null) { 
			this.insert_space_after_comma_in_method_arguments = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_COMMA_IN_METHOD_ARGUMENTS)).booleanValue();
		} else {
			this.insert_space_after_comma_in_method_arguments = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_METHOD_ARGUMENTS;
		}
		if (map.get(INSERT_SPACE_BEFORE_COMMA_IN_METHOD_THROWS) != null) { 
			this.insert_space_before_comma_in_method_throws = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_COMMA_IN_METHOD_THROWS)).booleanValue();
		} else {
			this.insert_space_before_comma_in_method_throws = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_METHOD_THROWS;
		}
		if (map.get(INSERT_SPACE_AFTER_COMMA_IN_METHOD_THROWS) != null) { 
			this.insert_space_after_comma_in_method_throws = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_COMMA_IN_METHOD_THROWS)).booleanValue();
		} else {
			this.insert_space_after_comma_in_method_throws = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_METHOD_THROWS;
		}
		if (map.get(INSERT_SPACE_BEFORE_COMMA_IN_MULTIPLE_LOCAL_DECLARATIONS) != null) { 
			this.insert_space_before_comma_in_multiple_local_declarations = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_COMMA_IN_MULTIPLE_LOCAL_DECLARATIONS)).booleanValue();
		} else {
			this.insert_space_before_comma_in_multiple_local_declarations = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_MULTIPLE_LOCAL_DECLARATIONS;
		}
		if (map.get(INSERT_SPACE_AFTER_COMMA_IN_MULTIPLE_LOCAL_DECLARATIONS) != null) { 
			this.insert_space_after_comma_in_multiple_local_declarations = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_COMMA_IN_MULTIPLE_LOCAL_DECLARATIONS)).booleanValue();
		} else {
			this.insert_space_after_comma_in_multiple_local_declarations = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_MULTIPLE_LOCAL_DECLARATIONS;
		}
		if (map.get(INSERT_SPACE_BEFORE_COMMA_IN_FOR_INITS) != null) { 
			this.insert_space_before_comma_in_for_inits = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_COMMA_IN_FOR_INITS)).booleanValue();
		} else {
			this.insert_space_before_comma_in_for_inits = DEFAULT_INSERT_SPACE_BEFORE_COMMA_IN_FOR_INITS;
		}
		if (map.get(INSERT_SPACE_AFTER_COMMA_IN_FOR_INITS) != null) { 
			this.insert_space_after_comma_in_for_inits = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_COMMA_IN_FOR_INITS)).booleanValue();
		} else {
			this.insert_space_after_comma_in_for_inits = DEFAULT_INSERT_SPACE_AFTER_COMMA_IN_FOR_INITS;
		}
		if (map.get(INSERT_SPACE_AFTER_SEMICOLON_IN_FOR) != null) { 
			this.insert_space_after_semicolon_in_for = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_SEMICOLON_IN_FOR)).booleanValue();
		} else {
			this.insert_space_after_semicolon_in_for = DEFAULT_INSERT_SPACE_AFTER_SEMICOLON_IN_FOR;
		}
		if (map.get(INSERT_SPACE_BEFORE_POSTFIX_OPERATOR) != null) { 
			this.insert_space_before_postfix_operator = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_POSTFIX_OPERATOR)).booleanValue();
		} else {
			this.insert_space_before_postfix_operator = DEFAULT_INSERT_SPACE_BEFORE_POSTFIX_OPERATOR;
		}
		if (map.get(INSERT_SPACE_AFTER_POSTFIX_OPERATOR) != null) { 
			this.insert_space_after_postfix_operator = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_POSTFIX_OPERATOR)).booleanValue();
		} else {
			this.insert_space_after_postfix_operator = DEFAULT_INSERT_SPACE_AFTER_POSTFIX_OPERATOR;
		}
		if (map.get(INSERT_SPACE_BEFORE_PREFIX_OPERATOR) != null) { 
			this.insert_space_before_prefix_operator = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_PREFIX_OPERATOR)).booleanValue();
		} else {
			this.insert_space_before_prefix_operator = DEFAULT_INSERT_SPACE_BEFORE_PREFIX_OPERATOR;
		}
		if (map.get(INSERT_SPACE_AFTER_PREFIX_OPERATOR) != null) { 
			this.insert_space_after_prefix_operator = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_PREFIX_OPERATOR)).booleanValue();
		} else {
			this.insert_space_after_prefix_operator = DEFAULT_INSERT_SPACE_AFTER_PREFIX_OPERATOR;
		}
		if (map.get(INDENT_SWITCHSTATEMENTS_COMPARE_TO_SWITCH) != null) { 
			this.indent_switchstatements_compare_to_switch = Boolean.valueOf((String)map.get(INDENT_SWITCHSTATEMENTS_COMPARE_TO_SWITCH)).booleanValue();
		} else {
			this.indent_switchstatements_compare_to_switch = DEFAULT_INDENT_SWITCHSTATEMENTS_COMPARE_TO_SWITCH;
		}
		if (map.get(INDENT_SWITCHSTATEMENTS_COMPARE_TO_CASES) != null) { 
			this.indent_switchstatements_compare_to_cases = Boolean.valueOf((String)map.get(INDENT_SWITCHSTATEMENTS_COMPARE_TO_CASES)).booleanValue();
		} else {
			this.indent_switchstatements_compare_to_cases = DEFAULT_INDENT_SWITCHSTATEMENTS_COMPARE_TO_CASES;
		}
		if (map.get(INDENT_BREAKS_COMPARE_TO_CASES) != null) { 
			this.indent_breaks_compare_to_cases = Boolean.valueOf((String)map.get(INDENT_BREAKS_COMPARE_TO_CASES)).booleanValue();
		} else {
			this.indent_breaks_compare_to_cases = DEFAULT_INDENT_BREAKS_COMPARE_TO_CASES;
		}		
		if (map.get(ANONYMOUS_TYPE_DECLARATION_BRACE_POSITION) != null) { 
			this.anonymous_type_declaration_brace_position = (String) map.get(ANONYMOUS_TYPE_DECLARATION_BRACE_POSITION);
		} else {
			this.anonymous_type_declaration_brace_position = DEFAULT_ANONYMOUS_TYPE_DECLARATION_BRACE_POSITION;
		}
		if (map.get(INSERT_SPACE_BEFORE_ANONYMOUS_TYPE_OPEN_BRACE) != null) { 
			this.insert_space_before_anonymous_type_open_brace = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_ANONYMOUS_TYPE_OPEN_BRACE)).booleanValue();
		} else {
			this.insert_space_before_anonymous_type_open_brace = DEFAULT_INSERT_SPACE_BEFORE_ANONYMOUS_TYPE_OPEN_BRACE;
		}
		if (map.get(INDENT_BODY_DECLARATIONS_COMPARE_TO_TYPE_HEADER) != null) { 
			this.indent_body_declarations_compare_to_type_header = Boolean.valueOf((String)map.get(INDENT_BODY_DECLARATIONS_COMPARE_TO_TYPE_HEADER)).booleanValue();
		} else {
			this.indent_body_declarations_compare_to_type_header = DEFAULT_INDENT_BODY_DECLARATIONS_COMPARE_TO_TYPE_HEADER;
		}
		if (map.get(FILLING_SPACE) != null) { 
			this.filling_space = ((String)map.get(FILLING_SPACE)).charAt(0);
		} else {
			this.filling_space = DEFAULT_FILLING_SPACE;
		}
		if (map.get(INSERT_SPACE_AFTER_CLOSING_PAREN_IN_CAST) != null) { 
			this.insert_space_after_closing_paren_in_cast = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_CLOSING_PAREN_IN_CAST)).booleanValue();
		} else {
			this.insert_space_after_closing_paren_in_cast = DEFAULT_INSERT_SPACE_AFTER_CLOSING_PAREN_IN_CAST;
		}
		if (map.get(NUMBER_OF_BLANK_LINES_TO_INSERT_AT_BEGINNING_OF_METHOD_BODY) != null) { 
			this.number_of_blank_lines_to_insert_at_beginning_of_method_body = Integer.parseInt((String)map.get(NUMBER_OF_BLANK_LINES_TO_INSERT_AT_BEGINNING_OF_METHOD_BODY));
		} else {
			this.number_of_blank_lines_to_insert_at_beginning_of_method_body = DEFAULT_NUMBER_OF_BLANK_LINES_TO_INSERT_AT_BEGINNING_OF_METHOD_BODY;
		}
		if (map.get(KEEP_SIMPLE_IF_ON_ONE_LINE) != null) { 
			this.keep_simple_if_on_one_line = Boolean.valueOf((String)map.get(KEEP_SIMPLE_IF_ON_ONE_LINE)).booleanValue();
		} else {
			this.keep_simple_if_on_one_line = DEFAULT_KEEP_SIMPLE_IF_ON_ONE_LINE;
		}
		if (map.get(FORMAT_GUARDIAN_CLAUSE_ON_ONE_LINE) != null) { 
			this.format_guardian_clause_on_one_line = Boolean.valueOf((String)map.get(FORMAT_GUARDIAN_CLAUSE_ON_ONE_LINE)).booleanValue();
		} else {
			this.format_guardian_clause_on_one_line = DEFAULT_FORMAT_GUARDIAN_CLAUSE_ON_ONE_LINE;
		}
		if (map.get(INSERT_SPACE_BEFORE_OPEN_PAREN_IN_PARENTHIZED_EXPRESSION) != null) { 
			this.insert_space_before_open_paren_in_parenthesized_expression = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_OPEN_PAREN_IN_PARENTHIZED_EXPRESSION)).booleanValue();
		} else {
			this.insert_space_before_open_paren_in_parenthesized_expression = DEFAULT_INSERT_SPACE_BEFORE_OPEN_PAREN_IN_PARENTHIZED_EXPRESSION;
		}
		if (map.get(INSERT_SPACE_AFTER_OPEN_PAREN_IN_PARENTHIZED_EXPRESSION) != null) { 
			this.insert_space_after_open_paren_in_parenthesized_expression = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_OPEN_PAREN_IN_PARENTHIZED_EXPRESSION)).booleanValue();
		} else {
			this.insert_space_after_open_paren_in_parenthesized_expression = DEFAULT_INSERT_SPACE_AFTER_OPEN_PAREN_IN_PARENTHIZED_EXPRESSION;
		}
		if (map.get(INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_PARENTHIZED_EXPRESSION) != null) { 
			this.insert_space_before_closing_paren_in_parenthesized_expression = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_PARENTHIZED_EXPRESSION)).booleanValue();
		} else {
			this.insert_space_before_closing_paren_in_parenthesized_expression = DEFAULT_INSERT_SPACE_BEFORE_CLOSING_PAREN_IN_PARENTHIZED_EXPRESSION;
		}
		if (map.get(KEEP_THEN_STATEMENT_ON_SAME_LINE) != null) { 
			this.keep_then_statement_on_same_line = Boolean.valueOf((String)map.get(KEEP_THEN_STATEMENT_ON_SAME_LINE)).booleanValue();
		} else {
			this.keep_then_statement_on_same_line = DEFAULT_KEEP_THEN_STATEMENT_ON_SAME_LINE;
		}
		if (map.get(BLANK_LINES_BEFORE_NEW_CHUNK) != null) { 
			this.blank_lines_before_new_chunk = Integer.parseInt((String)map.get(BLANK_LINES_BEFORE_NEW_CHUNK));
		} else {
			this.blank_lines_before_new_chunk = DEFAULT_BLANK_LINES_BEFORE_NEW_CHUNK;
		}
		if (map.get(BLANK_LINES_BEFORE_FIELD) != null) { 
			this.blank_lines_before_field = Integer.parseInt((String)map.get(BLANK_LINES_BEFORE_FIELD));
		} else {
			this.blank_lines_before_field = DEFAULT_BLANK_LINES_BEFORE_FIELD;
		}
		if (map.get(BLANK_LINES_BEFORE_METHOD) != null) { 
			this.blank_lines_before_method = Integer.parseInt((String)map.get(BLANK_LINES_BEFORE_METHOD));
		} else {
			this.blank_lines_before_method = DEFAULT_BLANK_LINES_BEFORE_METHOD;
		}
		if (map.get(BLANK_LINES_BEFORE_MEMBER_TYPE) != null) { 
			this.blank_lines_before_member_type = Integer.parseInt((String)map.get(BLANK_LINES_BEFORE_MEMBER_TYPE));
		} else {
			this.blank_lines_before_member_type = DEFAULT_BLANK_LINES_BEFORE_MEMBER_TYPE;
		}
		if (map.get(INSERT_SPACE_AFTER_BLOCK_CLOSE_BRACE) != null) {
			this.insert_space_after_block_close_brace = Boolean.valueOf((String)map.get(INSERT_SPACE_AFTER_BLOCK_CLOSE_BRACE)).booleanValue();
		} else {
			this.insert_space_after_block_close_brace = DEFAULT_INSERT_SPACE_AFTER_BLOCK_CLOSE_BRACE;
		}
		if (map.get(KEEP_ELSE_STATEMENT_ON_SAME_LINE) != null) {
			this.keep_else_statement_on_same_line = Boolean.valueOf((String)map.get(KEEP_ELSE_STATEMENT_ON_SAME_LINE)).booleanValue();
		} else {
			this.keep_else_statement_on_same_line = DEFAULT_KEEP_ELSE_STATEMENT_ON_SAME_LINE;
		}
		if (map.get(INSERT_SPACE_BEFORE_BRACKET_IN_ARRAY_TYPE_REFERENCE) != null) {
			this.insert_space_before_bracket_in_array_type_reference = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_BRACKET_IN_ARRAY_TYPE_REFERENCE)).booleanValue();
		} else {
			this.insert_space_before_bracket_in_array_type_reference = DEFAULT_INSERT_SPACE_BEFORE_BRACKET_IN_ARRAY_TYPE_REFERENCE;
		}
		if (map.get(INSERT_SPACE_BETWEEN_BRACKETS_IN_ARRAY_TYPE_REFERENCE) != null) {
			this.insert_space_between_brackets_in_array_type_reference = Boolean.valueOf((String)map.get(INSERT_SPACE_BETWEEN_BRACKETS_IN_ARRAY_TYPE_REFERENCE)).booleanValue();
		} else {
			this.insert_space_between_brackets_in_array_type_reference = DEFAULT_INSERT_SPACE_BETWEEN_BRACKETS_IN_ARRAY_TYPE_REFERENCE;
		}
		if (map.get(COMPACT_IF_ALIGNMENT) != null) { 
			this.compact_if_alignment = Integer.parseInt((String)map.get(COMPACT_IF_ALIGNMENT));
		} else {
			this.compact_if_alignment = DEFAULT_COMPACT_IF_ALIGNMENT;
		}
		if (map.get(TYPE_DECLARATION_SUPERCLASS_ALIGNMENT) != null) { 
			this.type_declaration_superclass_alignment = Integer.parseInt((String)map.get(TYPE_DECLARATION_SUPERCLASS_ALIGNMENT));
		} else {
			this.type_declaration_superclass_alignment = DEFAULT_TYPE_DECLARATION_SUPERCLASS_ALIGNMENT;
		}
		if (map.get(TYPE_DECLARATION_SUPERINTERFACES_ALIGNMENT) != null) { 
			this.type_declaration_superinterfaces_alignment = Integer.parseInt((String)map.get(TYPE_DECLARATION_SUPERINTERFACES_ALIGNMENT));
		} else {
			this.type_declaration_superinterfaces_alignment = DEFAULT_TYPE_DECLARATION_SUPERINTERFACES_ALIGNMENT;
		}
		if (map.get(METHOD_DECLARATION_ARGUMENTS_ALIGNMENT) != null) { 
			this.method_declaration_arguments_alignment = Integer.parseInt((String)map.get(METHOD_DECLARATION_ARGUMENTS_ALIGNMENT));
		} else {
			this.method_declaration_arguments_alignment = DEFAULT_METHOD_DECLARATION_ARGUMENTS_ALIGNMENT;
		}
		if (map.get(MESSAGE_SEND_ARGUMENTS_ALIGNMENT) != null) { 
			this.message_send_arguments_alignment = Integer.parseInt((String)map.get(MESSAGE_SEND_ARGUMENTS_ALIGNMENT));
		} else {
			this.message_send_arguments_alignment = DEFAULT_MESSAGE_SEND_ARGUMENTS_ALIGNMENT;
		}
		if (map.get(MESSAGE_SEND_SELECTOR_ALIGNMENT) != null) { 
			this.message_send_selector_alignment = Integer.parseInt((String)map.get(MESSAGE_SEND_SELECTOR_ALIGNMENT));
		} else {
			this.message_send_selector_alignment = DEFAULT_MESSAGE_SEND_SELECTOR_ALIGNMENT;
		}
		if (map.get(METHOD_THROWS_CLAUSE_ALIGNMENT) != null) { 
			this.method_throws_clause_alignment = Integer.parseInt((String)map.get(METHOD_THROWS_CLAUSE_ALIGNMENT));
		} else {
			this.method_throws_clause_alignment = DEFAULT_METHOD_THROWS_CLAUSE_ALIGNMENT;
		}
		if (map.get(TYPE_MEMBER_ALIGNMENT) != null) { 
			this.type_member_alignment = Integer.parseInt((String)map.get(TYPE_MEMBER_ALIGNMENT));
		} else {
			this.type_member_alignment = DEFAULT_TYPE_MEMBER_ALIGNMENT;
		}
		if (map.get(ALLOCATION_EXPRESSION_ARGUMENTS_ALIGNMENT) != null) { 
			this.allocation_expression_arguments_alignment = Integer.parseInt((String)map.get(ALLOCATION_EXPRESSION_ARGUMENTS_ALIGNMENT));
		} else {
			this.allocation_expression_arguments_alignment = DEFAULT_ALLOCATION_EXPRESSION_ARGUMENTS_ALIGNMENT;
		}
		if (map.get(QUALIFIED_ALLOCATION_EXPRESSION_ARGUMENTS_ALIGNMENT) != null) { 
			this.qualified_allocation_expression_arguments_alignment = Integer.parseInt((String)map.get(QUALIFIED_ALLOCATION_EXPRESSION_ARGUMENTS_ALIGNMENT));
		} else {
			this.qualified_allocation_expression_arguments_alignment = DEFAULT_QUALIFIED_ALLOCATION_EXPRESSION_ARGUMENTS_ALIGNMENT;
		}
		if (map.get(ARRAY_INITIALIZER_EXPRESSIONS_ALIGNMENT) != null) { 
			this.array_initializer_expressions_alignment = Integer.parseInt((String)map.get(ARRAY_INITIALIZER_EXPRESSIONS_ALIGNMENT));
		} else {
			this.array_initializer_expressions_alignment = DEFAULT_ARRAY_INITIALIZER_EXPRESSIONS_ALIGNMENT;
		}
		if (map.get(EXPLICIT_CONSTRUCTOR_ARGUMENTS_ALIGNMENT) != null) { 
			this.explicit_constructor_arguments_alignment = Integer.parseInt((String)map.get(EXPLICIT_CONSTRUCTOR_ARGUMENTS_ALIGNMENT));
		} else {
			this.explicit_constructor_arguments_alignment = DEFAULT_EXPLICIT_CONSTRUCTOR_ARGUMENTS_ALIGNMENT;
		}
		if (map.get(CONDITIONAL_EXPRESSION_ALIGNMENT) != null) { 
			this.conditional_expression_alignment = Integer.parseInt((String)map.get(CONDITIONAL_EXPRESSION_ALIGNMENT));
		} else {
			this.conditional_expression_alignment = DEFAULT_CONDITIONAL_EXPRESSION_ALIGNMENT;
		}
		if (map.get(BINARY_EXPRESSION_ALIGNMENT) != null) { 
			this.binary_expression_alignment = Integer.parseInt((String)map.get(BINARY_EXPRESSION_ALIGNMENT));
		} else {
			this.binary_expression_alignment = DEFAULT_BINARY_EXPRESSION_ALIGNMENT;
		}
		if (map.get(INSERT_NEW_LINE_IN_EMPTY_METHOD_BODY) != null) {
			this.insert_new_line_in_empty_method_body = Boolean.valueOf((String)map.get(INSERT_NEW_LINE_IN_EMPTY_METHOD_BODY)).booleanValue();
		} else {
			this.insert_new_line_in_empty_method_body = DEFAULT_INSERT_NEW_LINE_IN_EMPTY_METHOD_BODY;
		}
		if (map.get(INSERT_NEW_LINE_IN_EMPTY_TYPE_DECLARATION) != null) {
			this.insert_new_line_in_empty_type_declaration = Boolean.valueOf((String)map.get(INSERT_NEW_LINE_IN_EMPTY_TYPE_DECLARATION)).booleanValue();
		} else {
			this.insert_new_line_in_empty_type_declaration = DEFAULT_INSERT_NEW_LINE_IN_EMPTY_TYPE_DECLARATION;
		}
		if (map.get(INSERT_NEW_LINE_IN_EMPTY_ANONYMOUS_TYPE_DECLARATION) != null) {
			this.insert_new_line_in_empty_anonymous_type_declaration = Boolean.valueOf((String)map.get(INSERT_NEW_LINE_IN_EMPTY_ANONYMOUS_TYPE_DECLARATION)).booleanValue();
		} else {
			this.insert_new_line_in_empty_anonymous_type_declaration = DEFAULT_INSERT_NEW_LINE_IN_EMPTY_ANONYMOUS_TYPE_DECLARATION;
		}
		if (map.get(INSERT_NEW_LINE_IN_EMPTY_BLOCK) != null) {
			this.insert_new_line_in_empty_block = Boolean.valueOf((String)map.get(INSERT_NEW_LINE_IN_EMPTY_BLOCK)).booleanValue();
		} else {
			this.insert_new_line_in_empty_block = DEFAULT_INSERT_NEW_LINE_IN_EMPTY_BLOCK;
		}
		if (map.get(NUMBER_OF_EMPTY_LINES_TO_PRESERVE) != null) { 
			this.number_of_empty_lines_to_preserve = Integer.parseInt((String)map.get(NUMBER_OF_EMPTY_LINES_TO_PRESERVE));
		} else {
			this.number_of_empty_lines_to_preserve = DEFAULT_NUMBER_OF_EMPTY_LINES_TO_PRESERVE;
		}
		if (map.get(INSERT_NEW_LINE_BEFORE_CLOSING_BRACE_IN_ARRAY_INITIALIZER) != null) {
			this.insert_new_line_before_closing_brace_in_array_initializer = Boolean.valueOf((String)map.get(INSERT_NEW_LINE_BEFORE_CLOSING_BRACE_IN_ARRAY_INITIALIZER)).booleanValue();
		} else {
			this.insert_new_line_before_closing_brace_in_array_initializer = DEFAULT_INSERT_NEW_LINE_BEFORE_CLOSING_BRACE_IN_ARRAY_INITIALIZER;
		}
		if (map.get(MULTIPLE_FIELDS_ALIGNMENT) != null) { 
			this.multiple_fields_alignment = Integer.parseInt((String)map.get(MULTIPLE_FIELDS_ALIGNMENT));
		} else {
			this.multiple_fields_alignment = DEFAULT_MULTIPLE_FIELDS_ALIGNMENT;
		}
		if (map.get(INSERT_SPACE_BEFORE_BRACKET_IN_ARRAY_REFERENCE) != null) {
			this.insert_space_before_bracket_in_array_reference = Boolean.valueOf((String)map.get(INSERT_SPACE_BEFORE_BRACKET_IN_ARRAY_REFERENCE)).booleanValue();
		} else {
			this.insert_space_before_bracket_in_array_reference = DEFAULT_INSERT_SPACE_BEFORE_BRACKET_IN_ARRAY_REFERENCE;
		}
		if (map.get(INSERT_SPACE_BETWEEN_BRACKETS_IN_ARRAY_REFERENCE) != null) {
			this.insert_space_between_brackets_in_array_reference = Boolean.valueOf((String)map.get(INSERT_SPACE_BETWEEN_BRACKETS_IN_ARRAY_REFERENCE)).booleanValue();
		} else {
			this.insert_space_between_brackets_in_array_reference = DEFAULT_INSERT_SPACE_BETWEEN_BRACKETS_IN_ARRAY_REFERENCE;
		}
	}

