	private void bufferIndent(Token token, int index) {
		int indent = token.getIndent();
		int additionalSpaces = 0;
		if (this.options.use_tabs_only_for_leading_indentations) {
			// use indentation of wrap-line start token and add spaces to match current token
			WrapPolicy wrapPolicy = token.getWrapPolicy();
			int wrapRootIndent = indent;
			if (index == -1) { // this means we print a line separator in a multi-line comment
				TokenManager tm2 = this.parent.tm;
				wrapRootIndent = tm2.get(tm2.findFirstTokenInLine(this.parentTokenIndex, true)).getIndent();
			} else if (wrapPolicy != null) {
				wrapRootIndent = this.tm.get(this.tm.findFirstTokenInLine(index, true)).getIndent();
			}
			additionalSpaces = indent - wrapRootIndent;
			indent = wrapRootIndent;

			if (wrapPolicy != null && wrapPolicy.isForced) {
				int extraIndent = wrapPolicy.extraIndent;
				additionalSpaces -= extraIndent;
				indent += extraIndent;
			}
		}
		appendIndentationString(this.buffer, this.options.tab_char, this.options.tab_size, indent, additionalSpaces);
	}

