/**
 * Change the value of the option corresponding to the option number
 *
 * @param optionNumber <CODE>int</CODE>
 * @param newValue <CODE>int</CODE>
 */
public void setOption(ConfigurableOption setting) {
	
	String optionID = setting.getID();
	
	if(optionID.equals(OPTION_InsertNewlineBeforeOpeningBrace)){
		setNewLineBeforeOpeningBraceMode(setting.getValueIndex() == 0);
	}else if(optionID.equals(OPTION_InsertNewlineInControlStatement)){
		setNewlineInControlStatementMode(setting.getValueIndex() == 0);
	}else if(optionID.equals(OPTION_ClearAllBlankLines)){
		setClearAllBlankLinesMode(setting.getValueIndex() == 0);
	}else if(optionID.equals(OPTION_InsertNewLineBetweenElseAndIf)){
		setCompactElseIfMode(setting.getValueIndex() == 0);
	}else if(optionID.equals(OPTION_InsertNewLineInEmptyBlock)){
		setNewLineInEmptyBlockMode(setting.getValueIndex() == 0);
	}else if(optionID.equals(OPTION_SplitLineExceedingLength)){
		try {
			setMaxLineLength(Integer.parseInt(setting.getValue()));
		} catch(NumberFormatException e){
		}
	}else if(optionID.equals(OPTION_CompactAssignment)){
		setCompactAssignmentMode(setting.getValueIndex() == 0);
	}else if(optionID.equals(OPTION_TabulationChar)){
		setIndentationUsesTab(setting.getValueIndex() == 0);
	}else if(optionID.equals(OPTION_TabulationSize)){
		try {
			setTabSize(Integer.parseInt(setting.getValue()));
		} catch(NumberFormatException e){
		}
	}
}

