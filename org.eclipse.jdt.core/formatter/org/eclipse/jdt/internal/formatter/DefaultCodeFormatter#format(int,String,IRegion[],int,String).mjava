	/**
	 * {@inheritDoc}
	 */
	public TextEdit format(int kind, String source, IRegion[] regions, int indentationLevel, String lineSeparator) {
		if (!regionsSatisfiesPreconditions(regions, source.length())) {
			throw new IllegalArgumentException();
		}

		this.codeSnippetParsingUtil = new CodeSnippetParsingUtil();
		switch(kind & K_MASK) {
			case K_CLASS_BODY_DECLARATIONS :
				return formatClassBodyDeclarations(source, indentationLevel, lineSeparator, regions);
			case K_COMPILATION_UNIT :
				boolean includeComments =  (kind & F_INCLUDE_COMMENTS) != 0 || FORCE_NEW_COMMENT_FORMAT;
				return formatCompilationUnit(source, indentationLevel, lineSeparator, regions, includeComments);
			case K_EXPRESSION :
				return formatExpression(source, indentationLevel, lineSeparator, regions);
			case K_STATEMENTS :
				return formatStatements(source, indentationLevel, lineSeparator, regions);
			case K_UNKNOWN :
				includeComments =  (kind & F_INCLUDE_COMMENTS) != 0 || FORCE_NEW_COMMENT_FORMAT;
				return probeFormatting(source, indentationLevel, lineSeparator, regions, includeComments);
			case K_JAVA_DOC :
				// https://bugs.eclipse.org/bugs/show_bug.cgi?id=102780
				if (ENABLE_NEW_JAVADOC_FORMAT) {
					return formatJavadoc(source, indentationLevel, lineSeparator, regions);
				} else if (FORCE_NEW_COMMENT_FORMAT) {
					// Skip the javadoc formatting using this constant
					return null;
				}
				// In all other cases, use the old way to format javadoc comments
				if (!PRINTED_OLD_JAVA_DOC_WARNING) {
					org.eclipse.jdt.internal.core.util.Util.log(IStatus.WARNING, WARNING_JAVADOC_COMMENTS);
					System.out.println(WARNING_JAVADOC_COMMENTS);
					PRINTED_OLD_JAVA_DOC_WARNING = true;
				}
			case K_MULTI_LINE_COMMENT :
			case K_SINGLE_LINE_COMMENT :
				//https://bugs.eclipse.org/bugs/show_bug.cgi?id=203304
				throw new IllegalArgumentException();
		}
		return null;
	}

