	public void printModifiers() {
		
		try {
			boolean firstComment = true;
			boolean isFirstModifier = true;
			int currentTokenStartPosition = this.scanner.currentPosition;
			while ((this.currentToken = this.scanner.getNextToken()) != ITerminalSymbols.TokenNameEOF) {
				switch(this.currentToken) {
					case ITerminalSymbols.TokenNamepublic :
					case ITerminalSymbols.TokenNameprotected :
					case ITerminalSymbols.TokenNameprivate :
					case ITerminalSymbols.TokenNamestatic :
					case ITerminalSymbols.TokenNameabstract :
					case ITerminalSymbols.TokenNamefinal :
					case ITerminalSymbols.TokenNamenative :
					case ITerminalSymbols.TokenNamesynchronized :
					case ITerminalSymbols.TokenNametransient :
					case ITerminalSymbols.TokenNamevolatile :
						firstComment = false;
						this.print(this.scanner.getRawTokenSource(), this.scanner.getCurrentTokenStartPosition(), !isFirstModifier);
						isFirstModifier = false;
						currentTokenStartPosition = this.scanner.getCurrentTokenStartPosition();
						break;
					case ITerminalSymbols.TokenNameCOMMENT_BLOCK :
						this.printBlockComment(this.scanner.getRawTokenSource(), this.scanner.getCurrentTokenStartPosition(), false);
						currentTokenStartPosition = this.scanner.currentPosition;
						if (firstComment) {
							this.printNewLine();
						}
						firstComment = false;
						break;
					case ITerminalSymbols.TokenNameCOMMENT_JAVADOC :
						this.printBlockComment(this.scanner.getRawTokenSource(), this.scanner.getCurrentTokenStartPosition(), true);
						currentTokenStartPosition = this.scanner.currentPosition;
						if (firstComment) {
							this.printNewLine();
						}
						firstComment = false;
						break;
					case ITerminalSymbols.TokenNameCOMMENT_LINE :
						this.printCommentLine(this.scanner.getRawTokenSource(), this.scanner.getCurrentTokenStartPosition());
						currentTokenStartPosition = this.scanner.currentPosition;
						break;
					case ITerminalSymbols.TokenNameWHITESPACE :
						// TODO add a remove edit
					    currentTokenStartPosition = this.scanner.currentPosition;
						break;
					default:
						// step back one token
						firstComment = false;
						this.scanner.resetTo(currentTokenStartPosition, this.scannerEndPosition - 1);
						return;					
				}
			}
		} catch (InvalidInputException e) {
			throw new AbortFormatting(e);
		}
	}

