	@Override
	public boolean visit(ModuleDeclaration node) {
		// using settings for type declaration and fields for now, add new settings if necessary
		breakLineBefore(node);
		handleBracedCode(node, node.getName(), this.options.brace_position_for_type_declaration,
				this.options.indent_body_declarations_compare_to_type_header,
				this.options.insert_new_line_in_empty_type_declaration);

		List<ModuleDirective> statements = node.moduleStatements();
		ModuleDirective previous = null;
		for (ModuleDirective statement : statements) {
			int blankLines = previous == null ? this.options.blank_lines_before_first_class_body_declaration
					: previous.getClass().equals(statement.getClass()) ? this.options.blank_lines_before_field
							: this.options.blank_lines_before_new_chunk;
			putBlankLinesBefore(statement, blankLines);
			previous = statement;
		}

		this.declarationModifierVisited = false;
		return true;
	}

