protected void toString(StringBuffer buffer) {
	StringBuffer indentation = new StringBuffer();
	for (int t=0; t<=this.depth; t++) indentation.append('\t');
	buffer.append(indentation);
	buffer.append("text"); //$NON-NLS-1$
	super.toString(buffer);
	buffer.append(" ("); //$NON-NLS-1$
	buffer.append(this.separatorsPtr+1).append(" sections, "); //$NON-NLS-1$
	buffer.append(this.htmlNodesPtr+1).append(" html tags, "); //$NON-NLS-1$
	buffer.append(this.depth).append(" depth, "); //$NON-NLS-1$
	buffer.append(this.linesBefore).append(" before, "); //$NON-NLS-1$
	String tagID = "no"; //$NON-NLS-1$
	switch (getHtmlTagID()) {
		case JAVADOC_TAGS_ID_MASK:
			tagID = "mask"; //$NON-NLS-1$
			break;
		case JAVADOC_SINGLE_BREAK_TAG_ID:
			tagID = "single break"; //$NON-NLS-1$
			break;
		case JAVADOC_CODE_TAGS_ID:
			tagID = "code"; //$NON-NLS-1$
			break;
		case JAVADOC_BREAK_TAGS_ID:
			tagID = "break"; //$NON-NLS-1$
			break;
		case JAVADOC_IMMUTABLE_TAGS_ID:
			tagID = "immutable"; //$NON-NLS-1$
			break;
		case JAVADOC_SEPARATOR_TAGS_ID:
			tagID = "separator"; //$NON-NLS-1$
			break;
	}
	buffer.append(tagID).append(" tag id)"); //$NON-NLS-1$
	buffer.append('\n');
}

