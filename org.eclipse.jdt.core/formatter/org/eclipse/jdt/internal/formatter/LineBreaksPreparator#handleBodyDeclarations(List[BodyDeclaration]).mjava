	private void handleBodyDeclarations(List<BodyDeclaration> bodyDeclarations) {
		BodyDeclaration previous = null;
		for (BodyDeclaration bodyDeclaration : bodyDeclarations) {
			if (previous == null) {
				this.tm.firstTokenIn(bodyDeclaration, -1).putLineBreaksBefore(
						this.options.blank_lines_before_first_class_body_declaration + 1);
			} else {
				int blankLines;
				if (bodyDeclaration instanceof FieldDeclaration)
					blankLines = this.options.blank_lines_before_field;
				else if (bodyDeclaration instanceof AbstractTypeDeclaration)
					blankLines = this.options.blank_lines_before_member_type;
				else
					blankLines = this.options.blank_lines_before_method;

				if (!sameChunk(previous, bodyDeclaration))
					blankLines = Math.max(blankLines, this.options.blank_lines_before_new_chunk);

				this.tm.firstTokenIn(bodyDeclaration, -1).putLineBreaksBefore(blankLines + 1);
			}
			previous = bodyDeclaration;
		}
	}

