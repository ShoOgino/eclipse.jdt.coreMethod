	/**
	 * @see org.eclipse.jdt.core.ICodeFormatter#format(String, int, int[], String)
	 */
	public String format(
		String source,
		int indentationLevel,
		int[] positions,
		String lineSeparator) {
		
		Map options = JavaCore.getOptions();
		// probing algorithm
		/*
		 * 1) expression
		 * 2) statements
		 * 3) classbody declarations
		 * 4) compilation unit
		 */
		Expression expression = parseExpression(source.toCharArray(), options);
		
		if (expression != null) {
			return internalFormatExpression(source, indentationLevel, positions, lineSeparator, options, expression);
		}

		ConstructorDeclaration constructorDeclaration = parseStatements(source.toCharArray(), options);
		
		if (constructorDeclaration.statements != null) {
			return internalFormatStatements(source, indentationLevel, positions, lineSeparator, options, constructorDeclaration);
		}
		
		AstNode[] bodyDeclarations = parseClassBodyDeclarations(source.toCharArray(), options);
		
		if (bodyDeclarations != null) {
			return internalFormatClassBodyDeclarations(source, indentationLevel, positions, lineSeparator, options, bodyDeclarations);
		}

		return format(K_COMPILATION_UNIT, source, indentationLevel, positions, lineSeparator, JavaCore.getOptions());
	}

