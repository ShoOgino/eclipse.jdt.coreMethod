	private boolean dumpEqualityExpression(
		BinaryExpression binaryExpression,
		int operator,
		BlockScope scope) {
	
		final int numberOfParens = (binaryExpression.bits & AstNode.ParenthesizedMASK) >> AstNode.ParenthesizedSHIFT;
	
		if (numberOfParens > 0) {
			manageOpeningParenthesizedExpression(binaryExpression, numberOfParens);
		}	
		binaryExpression.left.traverse(this, scope);
		this.scribe.printNextToken(operator, this.preferences.insert_space_before_binary_operator);
		if (this.preferences.insert_space_after_binary_operator) {
			this.scribe.space();
		}
		binaryExpression.right.traverse(this, scope);

		if (numberOfParens > 0) {
			manageClosingParenthesizedExpression(binaryExpression, numberOfParens);
		}
		return false;
	}

