	public void formatStatements(BlockScope scope, final Statement[] statements) {
		int statementsLength = statements.length;
		for (int i = 0; i < statementsLength; i++) {
			final Statement statement = statements[i];
			statement.traverse(this, scope);
			if (statement instanceof Expression) {
				this.scribe.printNextToken(ITerminalSymbols.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);
				if (i < (statementsLength - 1)) {
					/*
					 * We need to check that the next statement is a local declaration
					 */
					if (statements[i + 1] instanceof EmptyStatement) {
						this.scribe.printTrailingCommentForEmptyStatement();
					} else {
						this.scribe.printTrailingComment();
					}
				} else {
					this.scribe.printTrailingComment();
				}		
			} else if (statement instanceof LocalDeclaration) {
				LocalDeclaration currentLocal = (LocalDeclaration) statement;
				if (i < (statementsLength - 1)) {
					/* 
					 * We need to check that the next statement is a local declaration
					 */
					if (statements[i + 1] instanceof LocalDeclaration) {
						LocalDeclaration nextLocal = (LocalDeclaration) statements[i + 1];
						if (currentLocal.declarationSourceStart != nextLocal.declarationSourceStart) {
							this.scribe.printNextToken(ITerminalSymbols.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);
							this.scribe.printTrailingComment();
						}
					} else {
						this.scribe.printNextToken(ITerminalSymbols.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);
						this.scribe.printTrailingComment();
					}
				} else {
					this.scribe.printNextToken(ITerminalSymbols.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);
					this.scribe.printTrailingComment();
				}
			} else if (i < (statementsLength - 1)) {
				/*
				 * We need to check that the next statement is a local declaration
				 */
				if (statements[i + 1] instanceof EmptyStatement) {
					this.scribe.printTrailingCommentForEmptyStatement();
				} else {
					this.scribe.printTrailingComment();
				}
			} else {
				this.scribe.printTrailingComment();
			}
		}
	}

