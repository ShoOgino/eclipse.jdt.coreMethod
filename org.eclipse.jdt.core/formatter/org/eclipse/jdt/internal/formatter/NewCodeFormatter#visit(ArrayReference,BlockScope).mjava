	/**
	 * @see org.eclipse.jdt.internal.compiler.IAbstractSyntaxTreeVisitor#visit(org.eclipse.jdt.internal.compiler.ast.ArrayReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
	 */
	public boolean visit(ArrayReference arrayReference, BlockScope scope) {

		final int numberOfParens = (arrayReference.bits & AstNode.ParenthesizedMASK) >> AstNode.ParenthesizedSHIFT;
		if (numberOfParens > 0) manageOpeningParenthesizedExpression(arrayReference, numberOfParens);

		arrayReference.receiver.traverse(this, scope);
		this.scribe.printNextToken(ITerminalSymbols.TokenNameLBRACKET);
		arrayReference.position.traverse(this, scope);
		this.scribe.printNextToken(ITerminalSymbols.TokenNameRBRACKET);
		
		if (numberOfParens > 0) manageClosingParenthesizedExpression(arrayReference, numberOfParens);
		return false;
	}

