protected void toString(StringBuffer buffer) {
	boolean inlined = (this.flags & INLINED) != 0;
	if (inlined) buffer.append("	{"); //$NON-NLS-1$
	buffer.append('@');
	buffer.append(TAG_NAMES[this.tagValue]);
	super.toString(buffer);
	if (this.reference == null) {
		buffer.append('\n');
	} else {
		buffer.append(" ("); //$NON-NLS-1$
		this.reference.toString(buffer);
		buffer.append(")\n"); //$NON-NLS-1$
	}
	StringBuffer flagsBuffer = new StringBuffer();
	if (isDescription()) {
		if (flagsBuffer.length() > 0) flagsBuffer.append(',');
		flagsBuffer.append("description"); //$NON-NLS-1$
	}
	if (isFirst()) {
		if (flagsBuffer.length() > 0) flagsBuffer.append(',');
		flagsBuffer.append("first"); //$NON-NLS-1$
	}
	if (isHeaderLine()) {
		if (flagsBuffer.length() > 0) flagsBuffer.append(',');
		flagsBuffer.append("header line"); //$NON-NLS-1$
	}
	if (isImmutable()) {
		if (flagsBuffer.length() > 0) flagsBuffer.append(',');
		flagsBuffer.append("immutable"); //$NON-NLS-1$
	}
	if (isInDescription()) {
		if (flagsBuffer.length() > 0) flagsBuffer.append(',');
		flagsBuffer.append("in description"); //$NON-NLS-1$
	}
	if (isInlined()) {
		if (flagsBuffer.length() > 0) flagsBuffer.append(',');
		flagsBuffer.append("inlined"); //$NON-NLS-1$
	}
	if (isInParamTag()) {
		if (flagsBuffer.length() > 0) flagsBuffer.append(',');
		flagsBuffer.append("in param tag"); //$NON-NLS-1$
	}
	if (isOneLineTag()) {
		if (flagsBuffer.length() > 0) flagsBuffer.append(',');
		flagsBuffer.append("one line tag"); //$NON-NLS-1$
	}
	if (isParamTag()) {
		if (flagsBuffer.length() > 0) flagsBuffer.append(',');
		flagsBuffer.append("param tag"); //$NON-NLS-1$
	}
	if (flagsBuffer.length() > 0) {
		if (inlined) buffer.append('\t');
		buffer.append("	flags: "); //$NON-NLS-1$
		buffer.append(flagsBuffer);
		buffer.append('\n');
	}
	if (this.nodesPtr > -1) {
		for (int i = 0; i <= this.nodesPtr; i++) {
			if (inlined) buffer.append('\t');
			this.nodes[i].toString(buffer);
		}
	}
}

