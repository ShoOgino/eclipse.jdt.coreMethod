	void convertOldOptionsToPreferences(Map oldOptions, FormattingPreferences formattingPreferences) {
		if (oldOptions == null) {
			return;
		}
		Object[] entries = oldOptions.entrySet().toArray();
		
		for (int i = 0, max = entries.length; i < max; i++){
			Map.Entry entry = (Map.Entry)entries[i];
			if (!(entry.getKey() instanceof String)) continue;
			if (!(entry.getValue() instanceof String)) continue;
			String optionID = (String) entry.getKey();
			String optionValue = (String) entry.getValue();
			
			if(optionID.equals(JavaCore.FORMATTER_NEWLINE_OPENING_BRACE)){
				if (optionValue.equals(JavaCore.INSERT)){
					formattingPreferences.anonymous_type_declaration_brace_position = FormattingPreferences.NEXT_LINE;
					formattingPreferences.type_declaration_brace_position = FormattingPreferences.NEXT_LINE;
					formattingPreferences.method_declaration_brace_position = FormattingPreferences.NEXT_LINE;
					formattingPreferences.block_brace_position = FormattingPreferences.NEXT_LINE;
					formattingPreferences.switch_brace_position = FormattingPreferences.NEXT_LINE;
				} else if (optionValue.equals(JavaCore.DO_NOT_INSERT)){
					formattingPreferences.anonymous_type_declaration_brace_position = FormattingPreferences.END_OF_LINE;
					formattingPreferences.type_declaration_brace_position = FormattingPreferences.END_OF_LINE;
					formattingPreferences.method_declaration_brace_position = FormattingPreferences.END_OF_LINE;
					formattingPreferences.block_brace_position = FormattingPreferences.END_OF_LINE;
					formattingPreferences.switch_brace_position = FormattingPreferences.END_OF_LINE;
				}
				continue;
			}
			if(optionID.equals(JavaCore.FORMATTER_NEWLINE_CONTROL)) {
				if (optionValue.equals(JavaCore.INSERT)){
					formattingPreferences.insert_new_line_in_control_statements = true;
				} else if (optionValue.equals(JavaCore.DO_NOT_INSERT)){
					formattingPreferences.insert_new_line_in_control_statements = false;
				}
				continue;
			}
			if(optionID.equals(JavaCore.FORMATTER_CLEAR_BLANK_LINES)) {
				if (optionValue.equals(JavaCore.CLEAR_ALL)){
					formattingPreferences.number_of_empty_lines_to_preserve = 0;
				} else if (optionValue.equals(JavaCore.PRESERVE_ONE)){
					formattingPreferences.number_of_empty_lines_to_preserve = 1;
				}
				continue;
			}
			if(optionID.equals(JavaCore.FORMATTER_NEWLINE_ELSE_IF)){
				if (optionValue.equals(JavaCore.INSERT)){
					formattingPreferences.compact_else_if = false;
				} else if (optionValue.equals(JavaCore.DO_NOT_INSERT)){
					formattingPreferences.compact_else_if = true;
				}
				continue;
			}
			if(optionID.equals(JavaCore.FORMATTER_NEWLINE_EMPTY_BLOCK)){
				if (optionValue.equals(JavaCore.INSERT)){
					formattingPreferences.insert_new_line_in_empty_anonymous_type_declaration = true;
					formattingPreferences.insert_new_line_in_empty_type_declaration = true;
					formattingPreferences.insert_new_line_in_empty_method_body = true;
					formattingPreferences.insert_new_line_in_empty_block = true;
				} else if (optionValue.equals(JavaCore.DO_NOT_INSERT)){
					formattingPreferences.insert_new_line_in_empty_anonymous_type_declaration = false;
					formattingPreferences.insert_new_line_in_empty_type_declaration = false;
					formattingPreferences.insert_new_line_in_empty_method_body = false;
					formattingPreferences.insert_new_line_in_empty_block = false;
				}
				continue;
			}
			if(optionID.equals(JavaCore.FORMATTER_LINE_SPLIT)){
				try {
					int val = Integer.parseInt(optionValue);
					if (val >= 0) {
						formattingPreferences.page_width = val;
					}
				} catch(NumberFormatException e){
				}
			}
			if(optionID.equals(JavaCore.FORMATTER_COMPACT_ASSIGNMENT)){
				if (optionValue.equals(JavaCore.COMPACT)){
					formattingPreferences.insert_space_before_assignment_operators = false;
				} else if (optionValue.equals(JavaCore.NORMAL)){
					formattingPreferences.insert_space_before_assignment_operators = true;
				}
				continue;
			}
			if(optionID.equals(JavaCore.FORMATTER_TAB_CHAR)){
				if (optionValue.equals(JavaCore.TAB)){
					formattingPreferences.use_tab = true;
				} else if (optionValue.equals(JavaCore.SPACE)){
					formattingPreferences.use_tab = false;
				}
				continue;
			}
			if(optionID.equals(JavaCore.FORMATTER_TAB_SIZE)){
				try {
					int val = Integer.parseInt(optionValue);
					if (val > 0) {
						formattingPreferences.tab_size = val;
					}
				} catch(NumberFormatException e){
				}
			}
			if(optionID.equals(JavaCore.FORMATTER_SPACE_CASTEXPRESSION)){
				if (optionValue.equals(JavaCore.INSERT)){
					formattingPreferences.insert_space_after_closing_paren_in_cast = true;
				} else if (optionValue.equals(JavaCore.DO_NOT_INSERT)){
					formattingPreferences.insert_space_after_closing_paren_in_cast = false;
				}
				continue;
			}		
		}		
	}

