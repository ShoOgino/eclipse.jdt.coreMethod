	/**
	 * @see org.eclipse.jdt.internal.compiler.IAbstractSyntaxTreeVisitor#visit(org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
	 */
	public boolean visit(
		QualifiedThisReference qualifiedThisReference,
		BlockScope scope) {

		final int numberOfParens = (qualifiedThisReference.bits & AstNode.ParenthesizedMASK) >> AstNode.ParenthesizedSHIFT;
		if (numberOfParens > 0) manageOpeningParenthesizedExpression(qualifiedThisReference, numberOfParens);

		qualifiedThisReference.qualification.traverse(this, scope);
		this.scribe.printNextToken(ITerminalSymbols.TokenNameDOT);
		this.scribe.printNextToken(ITerminalSymbols.TokenNamethis);
		
		if (numberOfParens > 0) manageClosingParenthesizedExpression(qualifiedThisReference, numberOfParens);
		return false;
	}

