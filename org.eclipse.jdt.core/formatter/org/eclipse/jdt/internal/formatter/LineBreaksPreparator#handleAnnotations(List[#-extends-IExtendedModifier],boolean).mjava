	private void handleAnnotations(List<? extends IExtendedModifier> modifiers, boolean breakAfter) {
		Annotation last = null;
		int i;
		for (i = 0; i < modifiers.size(); i++) {
			if (modifiers.get(i).isModifier())
				break;
			last = (Annotation) modifiers.get(i);
		}
		if (last != null && breakAfter) {
			this.tm.lastTokenIn(last, -1).breakAfter();
		}

		if (i < modifiers.size()) {
			// any annotations following other modifiers will be associated with declaration type
			handleAnnotations(modifiers.subList(i + 1, modifiers.size()),
					this.options.insert_new_line_after_type_annotation);
		}
	}

