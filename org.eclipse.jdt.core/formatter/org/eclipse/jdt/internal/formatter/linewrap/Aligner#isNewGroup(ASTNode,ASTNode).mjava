	private boolean isNewGroup(ASTNode node, ASTNode previousNode) {
		if (previousNode == null)
			return true;
		int totalLineBreaks = 0;
		int from = this.tm.lastIndexIn(previousNode, -1);
		int to = this.tm.firstIndexIn(node, -1);
		Token previousToken = this.tm.get(from);
		for (int i = from + 1; i <= to; i++) {
			Token token = this.tm.get(i);
			int lineBreaks = Math.max(previousToken.getLineBreaksAfter(), token.getLineBreaksBefore());
			if (previousToken.isPreserveLineBreaksAfter() && token.isPreserveLineBreaksBefore()) {
				lineBreaks = Math.max(lineBreaks, Math.min(this.tm.countLineBreaksBetween(previousToken, token),
						this.options.number_of_empty_lines_to_preserve + 1));
			}
			totalLineBreaks += lineBreaks;
			previousToken = token;
		}
		return totalLineBreaks > this.options.align_fields_grouping_blank_lines;
	}

