	@Override
	public boolean visit(UnionType node) {
		List<Type> types = node.types();
		if (this.options.wrap_before_or_operator_multicatch && !types.isEmpty()) {
			for (Type type : types) {
				if (this.wrapIndexes.isEmpty()) {
					this.wrapIndexes.add(this.tm.firstIndexIn(type, -1));
				} else {
					this.wrapIndexes.add(this.tm.firstIndexBefore(type, TokenNameOR));
				}
			}
			this.wrapParentIndex = this.tm.firstIndexBefore(node, TokenNameLPAREN);
			this.wrapGroupEnd = this.tm.lastIndexIn(types.get(types.size() - 1), -1);
			handleWrap(this.options.alignment_for_union_type_in_multicatch);
		} else {
			handleArguments(types, this.options.alignment_for_union_type_in_multicatch);
		}
		return true;
	}

