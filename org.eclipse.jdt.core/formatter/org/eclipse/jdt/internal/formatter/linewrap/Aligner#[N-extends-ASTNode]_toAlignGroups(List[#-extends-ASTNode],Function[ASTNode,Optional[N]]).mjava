	private <N extends ASTNode> List<List<N>> toAlignGroups(List<? extends ASTNode> nodes,
			Function<ASTNode, Optional<N>> nodeConverter) {
		List<List<N>> result = new ArrayList<>();
		List<N> alignGroup = new ArrayList<>();
		N previous = null;
		for (ASTNode node : nodes) {
			Optional<N> converted = nodeConverter.apply(node);
			if (converted.isPresent()) {
				if (isNewGroup(node, previous)) {
					result.add(alignGroup);
					alignGroup = new ArrayList<>();
				}
				alignGroup.add(converted.get());
			}
			previous = converted.orElse(null);
		}
		result.add(alignGroup);
		result.removeIf(l -> l.size() < 2);
		return result;
	}

