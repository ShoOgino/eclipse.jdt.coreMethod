	@Override
	public boolean visit(ConditionalExpression node) {
		boolean wrapBefore = this.options.wrap_before_conditional_operator;
		List<Integer> before = wrapBefore ? this.wrapIndexes : this.secondaryWrapIndexes;
		List<Integer> after = wrapBefore ? this.secondaryWrapIndexes : this.wrapIndexes;
		before.add(this.tm.firstIndexAfter(node.getExpression(), TokenNameQUESTION));
		before.add(this.tm.firstIndexAfter(node.getThenExpression(), TokenNameCOLON));
		after.add(this.tm.firstIndexIn(node.getThenExpression(), -1));
		after.add(this.tm.firstIndexIn(node.getElseExpression(), -1));
		this.wrapParentIndex = this.tm.lastIndexIn(node.getExpression(), -1);
		this.wrapGroupEnd = this.tm.lastIndexIn(node, -1);
		handleWrap(this.options.alignment_for_conditional_expression);
		return true;
	}

