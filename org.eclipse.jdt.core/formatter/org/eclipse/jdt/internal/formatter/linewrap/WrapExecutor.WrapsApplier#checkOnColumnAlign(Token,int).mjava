		private void checkOnColumnAlign(Token token, int index) {
			// if some further tokens in a group are wrapped on column,
			// the first one should be aligned on column even if it's not wrapped
			WrapPolicy wrapPolicy = token.getWrapPolicy();
			if (wrapPolicy == null || !wrapPolicy.indentOnColumn || !wrapPolicy.isFirstInGroup)
				return;
			int positionInLine = this.tm2.getPositionInLine(index);
			if (this.tm2.toIndent(positionInLine, true) == positionInLine)
				return;

			Predicate<Token> aligner = t -> {
				WrapPolicy wp = t.getWrapPolicy();
				if (wp != null && wp.indentOnColumn && wp.wrapParentIndex == wrapPolicy.wrapParentIndex) {
					this.currentIndent = this.tm2.toIndent(positionInLine, true);
					token.setAlign(this.currentIndent);
					this.stack.push(token);
					return true;
				}
				return false;
			};

			// check all future wraps
			WrapInfo furtherWrap = this.nextWrap;
			while (furtherWrap != null) {
				if (aligner.test(this.tm2.get(furtherWrap.wrapTokenIndex)))
					return;
				furtherWrap = WrapExecutor.this.wrapSearchResults.get(furtherWrap).nextWrap;
			}
			// check all tokens that are already wrapped
			for (int i = index; i <= wrapPolicy.groupEndIndex; i++) {
				Token t = this.tm2.get(i);
				if (t.getLineBreaksBefore() > 0 && aligner.test(t))
					return;
			}
		}

