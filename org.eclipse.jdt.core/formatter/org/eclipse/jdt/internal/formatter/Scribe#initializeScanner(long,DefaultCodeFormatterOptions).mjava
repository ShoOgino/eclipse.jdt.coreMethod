	private void initializeScanner(long sourceLevel, DefaultCodeFormatterOptions preferences) {
		this.useTags = preferences.use_tags;
		this.tagsKind = 0;
		char[][] taskTags = null;
		if (this.useTags) {
			this.disablingTag = preferences.disabling_tag;
			this.enablingTag = preferences.enabling_tag;
			if (this.disablingTag == null) {
				if (this.enablingTag != null) {
					taskTags = new char[][] { this.enablingTag };
				}
			} else if (this.enablingTag == null) {
				taskTags = new char[][] { this.disablingTag };
			} else {
				taskTags = new char[][] { this.disablingTag, this.enablingTag };
			}
		}
		if (taskTags != null) {
			loop: for (int i=0,length=taskTags.length; i<length; i++) {
				if (taskTags[i].length > 2 && taskTags[i][0] == '/') {
					switch (taskTags[i][1]) {
						case '/':
							this.tagsKind = TerminalTokens.TokenNameCOMMENT_LINE;
							break loop;
						case '*':
							if (taskTags[i][2] != '*') {
								this.tagsKind = TerminalTokens.TokenNameCOMMENT_BLOCK;
								break loop;
							}
							break;
					}
				}
			}
		}
		this.scanner = new Scanner(true, true, false/*nls*/, sourceLevel/*sourceLevel*/, taskTags, null/*taskPriorities*/, true/*taskCaseSensitive*/);
		this.editsEnabled = true;
	}

