	/**
	 * @see org.eclipse.jdt.core.formatter.CodeFormatter#format(int, java.lang.String, int, int, int, java.lang.String)
	 */
	public TextEdit format(int kind, String source, int offset, int length, int indentationLevel, String lineSeparator) {
		if (offset < 0 || length < 0 || length > source.length()) {
			throw new IllegalArgumentException();
		}

		switch(kind & K_MASK) {
			case K_JAVA_DOC :
				// https://bugs.eclipse.org/bugs/show_bug.cgi?id=102780
				// use the integrated comment formatter to format comment
				if (ENABLE_NEW_JAVADOC_FORMAT) {
	                return formatJavadoc(source, indentationLevel, lineSeparator, new IRegion[] {new Region(offset, length)});
				} else if (FORCE_NEW_COMMENT_FORMAT) {
					// Skip the javadoc formatting using this constant
					return null;
				}
				// In all other cases, use the old way to format javadoc comments
				if (!PRINTED_OLD_JAVA_DOC_WARNING) {
					org.eclipse.jdt.internal.core.util.Util.log(IStatus.WARNING, WARNING_JAVADOC_COMMENTS);
					System.out.println(WARNING_JAVADOC_COMMENTS);
					PRINTED_OLD_JAVA_DOC_WARNING = true;
				}
			case K_MULTI_LINE_COMMENT :
			case K_SINGLE_LINE_COMMENT :
				if (FORCE_NEW_COMMENT_FORMAT) {
					// Skip the javadoc formatting using this constant
					return null;
				}
				this.codeSnippetParsingUtil = new CodeSnippetParsingUtil();
				return formatComment(kind, source, indentationLevel, lineSeparator, new IRegion[] {new Region(offset, length)}, false);
		}

		return format(kind, source, new IRegion[] {new Region(offset, length)}, indentationLevel, lineSeparator);
	}

