	/**
	 * @see org.eclipse.jdt.internal.compiler.ASTVisitor#visit(org.eclipse.jdt.internal.compiler.ast.Assignment, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
	 */
	public boolean visit(Assignment assignment, BlockScope scope) {

		final int numberOfParens = (assignment.bits & ASTNode.ParenthesizedMASK) >> ASTNode.ParenthesizedSHIFT;
		if (numberOfParens > 0) {
			manageOpeningParenthesizedExpression(assignment, numberOfParens);
		}
		assignment.lhs.traverse(this, scope);
		this.scribe.printNextToken(TerminalTokens.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operator);
		if (assignment.expression instanceof ArrayInitializer) {
			formatArrayInitializer((ArrayInitializer) assignment.expression, scope, this.preferences.insert_space_after_assignment_operator || this.preferences.insert_space_before_opening_brace_in_array_initializer);
		} else {
			if (this.preferences.insert_space_after_assignment_operator) {
				this.scribe.space();
			}
			assignment.expression.traverse(this, scope);
		}
		
		if (numberOfParens > 0) {
			manageClosingParenthesizedExpression(assignment, numberOfParens);
		}
		return false;
	}

