	public Alignment createAlignment(String name, int mode, int tieBreakRule, int count, int sourceRestart, int continuationIndent, boolean adjust){
		Alignment alignment = new Alignment(name, mode, tieBreakRule, this, count, sourceRestart, continuationIndent);
		// adjust break indentation
		if (adjust && this.memberAlignment != null) {
			Alignment current = this.memberAlignment;
			while (current.enclosing != null) {
				current = current.enclosing;
			}
			switch(current.chunkKind) {
				case Alignment.CHUNK_METHOD :
				case Alignment.CHUNK_TYPE :
					if ((mode & Alignment.M_INDENT_BY_ONE) != 0) {
						alignment.breakIndentationLevel = this.indentationLevel + (this.useTab ? 1 : this.tabSize);
					} else {
						alignment.breakIndentationLevel = this.indentationLevel + (continuationIndent * (this.useTab ? 1 : this.tabSize));
					}
					alignment.update();
					break;
				case Alignment.CHUNK_FIELD :
					if ((mode & Alignment.M_INDENT_BY_ONE) != 0) {
						alignment.breakIndentationLevel = current.originalIndentationLevel + (this.useTab ? 1 : this.tabSize);
					} else {
						alignment.breakIndentationLevel = current.originalIndentationLevel + (continuationIndent * (this.useTab ? 1 : this.tabSize));
					}
					alignment.update();
					break;
			}
		}
		return alignment; 
	}

