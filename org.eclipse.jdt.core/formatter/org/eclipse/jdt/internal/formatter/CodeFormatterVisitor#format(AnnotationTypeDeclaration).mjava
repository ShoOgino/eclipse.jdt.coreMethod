	private void format(AnnotationTypeDeclaration annotationTypeDeclaration) {
        /*
         * Print comments to get proper line number
         */
        this.scribe.printComment();
        final int line = this.scribe.line; 
        
        this.scribe.printModifiers(annotationTypeDeclaration.annotations, this);
		/*
		 * Type name
		 */
		this.scribe.printNextToken(TerminalTokens.TokenNameAT, this.preferences.insert_space_before_at_in_annotation_type_declaration);
		this.scribe.printNextToken(TerminalTokens.TokenNameinterface, this.preferences.insert_space_after_at_in_annotation_type_declaration); 
		this.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, true); 

		/*
		 * Type body
		 */
		String annotation_type_declaration_brace = this.preferences.brace_position_for_annotation_type_declaration;

        formatLeftCurlyBrace(line, annotation_type_declaration_brace);
		formatTypeOpeningBrace(annotation_type_declaration_brace, this.preferences.insert_space_before_opening_brace_in_annotation_type_declaration, annotationTypeDeclaration);
		
		if (this.preferences.indent_body_declarations_compare_to_type_header) {
			this.scribe.indent();
		}

		formatTypeMembers(annotationTypeDeclaration);

		this.scribe.printComment();
		
		if (this.preferences.indent_body_declarations_compare_to_type_header) {
			this.scribe.unIndent();
		}
		
		if (this.preferences.insert_new_line_in_empty_type_declaration) {
			this.scribe.printNewLine();
		}
		this.scribe.printNextToken(TerminalTokens.TokenNameRBRACE);
		this.scribe.printTrailingComment();
		if (annotation_type_declaration_brace.equals(DefaultCodeFormatterConstants.NEXT_LINE_SHIFTED)) {
			this.scribe.unIndent();
		}
		if (hasComments()) {
			this.scribe.printNewLine();
		}
	}

