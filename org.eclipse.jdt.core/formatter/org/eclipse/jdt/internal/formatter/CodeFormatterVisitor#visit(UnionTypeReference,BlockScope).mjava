	/**
	 * @see org.eclipse.jdt.internal.compiler.ASTVisitor#visit(org.eclipse.jdt.internal.compiler.ast.UnionTypeReference, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
	 */
	public boolean visit(
		UnionTypeReference unionTypeReference,
		BlockScope scope) {

		TypeReference[] typeReferences = unionTypeReference.typeReferences;
		for (int i = 0, max = typeReferences.length; i < max; i++) {
			if (i != 0) {
				this.scribe.printNextToken(TerminalTokens.TokenNameOR, true);
				this.scribe.space();
			}
			typeReferences[i].traverse(this, scope);
		}
		return false;
	}

