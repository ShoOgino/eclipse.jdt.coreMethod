	private int getCurrentCommentIndentation(int start) {
		int linePtr = -Arrays.binarySearch(this.lineEnds, start);
		int indentation = 0;
		int beginningOfLine = getLineEnd(linePtr - 1)+1;
		if (beginningOfLine == -1) {
			beginningOfLine = 0;
		}
		int currentStartPosition = start;
		char[] source = this.scanner.source;

		// find the position of the beginning of the line containing the comment
		while (beginningOfLine > currentStartPosition) {
			if (linePtr > 0) {
				beginningOfLine = getLineEnd(--linePtr)+1;
			} else {
				beginningOfLine = 0;
				break;
			}
		}
		for (int i=beginningOfLine; i < currentStartPosition ; i++) {
			char currentCharacter = source[i];
			switch (currentCharacter) {
				case '\t' :
					if (this.tabLength != 0) {
						int reminder = indentation % this.tabLength;
						if (reminder == 0) {
							indentation += this.tabLength;
						} else {
							indentation = ((indentation / this.tabLength) + 1) * this.tabLength;
						}
					}
					break;
				case '\r' :
				case '\n' :
					indentation = 0;
					break;
				default:
					indentation++;
					break;
			}
		}
		return indentation;
	}

