	public String toString(StringBuffer buffer, int level) {
		
		// Compute the indentation at the given level
		StringBuffer indentation = new StringBuffer();
		for (int i=0; i<level; i++) {
			indentation.append('\t');
		}
		
		// First line is for class and name
		buffer.append(indentation);
		buffer
			.append("<kind: ")	//$NON-NLS-1$
			.append(this.kind)
			.append("> ");	//$NON-NLS-1$
		buffer
			.append("<name: ")	//$NON-NLS-1$
			.append(this.name)
			.append(">\n");	//$NON-NLS-1$
		
		// Line for depth and break indentation
		buffer.append(indentation);
		buffer
			.append("<depth=")	//$NON-NLS-1$
			.append(depth())
			.append("><breakIndent=")	//$NON-NLS-1$
			.append(this.breakIndentationLevel)
			.append("><shiftBreakIndent=")	//$NON-NLS-1$
			.append(this.shiftBreakIndentationLevel)
			.append(">\n"); //$NON-NLS-1$

		// Line to display the location
		buffer.append(indentation);
		buffer
			.append("<location=")	//$NON-NLS-1$
			.append(this.location.toString())
			.append(">\n");	//$NON-NLS-1$

		// Lines for fragments
		buffer
			.append(indentation)
			.append("<fragments:\n");	//$NON-NLS-1$
		for (int i = 0; i < this.fragmentCount; i++){
			buffer
				.append(indentation)
				.append(" - ")	//$NON-NLS-1$
				.append(i)
				.append(": ")	//$NON-NLS-1$
				.append("<break: ")	//$NON-NLS-1$
				.append(this.fragmentBreaks[i] > 0 ? "YES" : "NO")	//$NON-NLS-1$	//$NON-NLS-2$
				.append(">")	//$NON-NLS-1$
				.append("<indent: ")	//$NON-NLS-1$
				.append(this.fragmentIndentations[i])
				.append(">\n");	//$NON-NLS-1$
		}
		buffer
			.append(indentation)
			.append(">\n"); //$NON-NLS-1$
		
		// Display enclosing
		if (this.enclosing != null && level >= 0) {
			buffer
				.append(indentation)
				.append("<enclosing assignement:\n");	//$NON-NLS-1$
			this.enclosing.toString(buffer, level+1);
			buffer
				.append(indentation)
				.append(">\n"); //$NON-NLS-1$
		}
		
		// Return the result
		return buffer.toString();
	}

