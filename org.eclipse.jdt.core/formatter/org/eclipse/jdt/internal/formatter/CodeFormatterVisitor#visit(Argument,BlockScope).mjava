	/**
	 * @see org.eclipse.jdt.internal.compiler.ASTVisitor#visit(org.eclipse.jdt.internal.compiler.ast.Argument, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
	 */
	public boolean visit(Argument argument, BlockScope scope) {

		if (argument.modifiers != NO_MODIFIERS || argument.annotations != null) {
	        this.scribe.printComment();
			this.scribe.printModifiers(argument.annotations, this, ICodeFormatterConstants.ANNOTATION_ON_PARAMETER);
			this.scribe.space();
		}

		/*
		 * Argument type
		 */
		TypeReference argumentType = argument.type;
		if (argumentType != null) {
			if (argumentType instanceof UnionTypeReference) {
				formatMultiCatchArguments(
						argument, 
						this.preferences.insert_space_before_binary_operator, 
						this.preferences.insert_space_after_binary_operator,
						this.preferences.alignment_for_union_type_in_multicatch,
						scope);
			} else {
				argumentType.traverse(this, scope);
			}
		}

		if (argument.isVarArgs()) {
			Annotation [][] annotationsOnDimensions = argumentType.getAnnotationsOnDimensions(true);
			if (annotationsOnDimensions != null) {
				Annotation [] varargAnnotations = annotationsOnDimensions[annotationsOnDimensions.length - 1];
				if (varargAnnotations != null) {
					formatInlineAnnotations(varargAnnotations, true);
				}
			}
			this.scribe.printNextToken(TerminalTokens.TokenNameELLIPSIS, this.preferences.insert_space_before_ellipsis);
			if (this.preferences.insert_space_after_ellipsis) {
				this.scribe.space();
			}
			this.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, false);
		} else {
			if (argument.isReceiver()) {
				this.scribe.space();
				NameReference qualifyingName = ((Receiver) argument).qualifyingName;
				if (qualifyingName != null) {
					qualifyingName.traverse(this, scope);
					this.scribe.printNextToken(TerminalTokens.TokenNameDOT, false);
				}
				this.scribe.printNextToken(TerminalTokens.TokenNamethis, false);
			} else {
				/*
				 * Print the argument name
				 */
				this.scribe.printNextToken(TerminalTokens.TokenNameIdentifier, argument.type != null);
			}
		}

		formatExtraDimensions(argumentType);
		return false;
	}

