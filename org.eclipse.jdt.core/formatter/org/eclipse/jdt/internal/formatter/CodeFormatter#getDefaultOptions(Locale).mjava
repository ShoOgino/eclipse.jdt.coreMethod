	/**
	 * Returns an array of descriptions for the configurable options.
	 * The descriptions may be changed and passed back to a different
	 * compiler.
	 * 
	 * @deprecated backport 1.0 internal functionality
	 */
	public static ConfigurableOption[] getDefaultOptions(Locale locale) {
		String componentName = CodeFormatter.class.getName();
		FormatterOptions options = new FormatterOptions();
		return new ConfigurableOption[] {
			new ConfigurableOption(componentName, "newline.openingBrace",  locale, options.newLineBeforeOpeningBraceMode ? 0 : 1), //$NON-NLS-1$
			new ConfigurableOption(componentName, "newline.controlStatement",  locale, options.newlineInControlStatementMode ? 0 : 1), //$NON-NLS-1$
			new ConfigurableOption(componentName, "newline.clearAll",  locale, options.clearAllBlankLinesMode ? 0 : 1), //$NON-NLS-1$
			new ConfigurableOption(componentName, "newline.elseIf",  locale, options.compactElseIfMode ? 0 : 1), //$NON-NLS-1$
			new ConfigurableOption(componentName, "newline.emptyBlock",  locale, options.newLineInEmptyBlockMode ? 0 : 1), //$NON-NLS-1$
			new ConfigurableOption(componentName, "line.split",  locale, options.maxLineLength),//$NON-NLS-1$
			new ConfigurableOption(componentName, "style.compactAssignment",  locale, options.compactAssignmentMode ? 0 : 1), //$NON-NLS-1$
			new ConfigurableOption(componentName, "tabulation.char",  locale, options.indentWithTab ? 0 : 1), //$NON-NLS-1$
			new ConfigurableOption(componentName, "tabulation.size",  locale, options.tabSize),	//$NON-NLS-1$
			new ConfigurableOption(componentName, "space.castexpression",  locale, options.spaceInCastExpression ? 0 : 1)	//$NON-NLS-1$
		};
	}

