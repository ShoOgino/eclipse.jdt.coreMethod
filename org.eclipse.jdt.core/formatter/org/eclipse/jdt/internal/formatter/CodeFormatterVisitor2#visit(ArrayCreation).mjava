	public boolean visit(ArrayCreation node) {
		this.scribe.printNextToken(TerminalTokens.TokenNamenew);
		this.scribe.space();
		final ArrayType type = node.getType();
		final List dimensions = node.dimensions();
		final int dimensionsLength = dimensions.size();

		final int arrayTypeDimensions = type.getDimensions();
		type.getElementType().accept(this);
		if (dimensionsLength != 0) {
			for (int i = 0; i < dimensionsLength; i++) {
				this.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET, this.preferences.insert_space_before_opening_bracket_in_array_allocation_expression);
				Expression dimension = (Expression) dimensions.get(i);
				if (dimension != null) {
					if (this.preferences.insert_space_after_opening_bracket_in_array_allocation_expression) {
						this.scribe.space();
					}
					dimension.accept(this);
					this.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET, this.preferences.insert_space_before_closing_bracket_in_array_allocation_expression);
				} else {
					this.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET, this.preferences.insert_space_between_empty_brackets_in_array_allocation_expression);
				}
			}
			for (int i = 0, max = arrayTypeDimensions - dimensionsLength; i < max; i++) {
				this.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET, this.preferences.insert_space_before_opening_bracket_in_array_allocation_expression);
				this.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET, this.preferences.insert_space_between_empty_brackets_in_array_allocation_expression);
			}
		} else {
			for (int i = 0; i < arrayTypeDimensions; i++) {
				this.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET, this.preferences.insert_space_before_opening_bracket_in_array_allocation_expression);
				this.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET, this.preferences.insert_space_between_empty_brackets_in_array_allocation_expression);
			}
		}
		
		final ArrayInitializer initializer = node.getInitializer();
		if (initializer != null) {
			initializer.accept(this);
		}

		return false;
	}

