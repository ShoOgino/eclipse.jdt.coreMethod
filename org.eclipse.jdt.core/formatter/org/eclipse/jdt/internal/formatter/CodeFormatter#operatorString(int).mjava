	private String operatorString(int operator) {
		switch (operator) {
			case TokenNameextends :
				return "extends";

			case TokenNameimplements :
				return "implements";

			case TokenNamethrows :
				return "throws";

			case TokenNameSEMICOLON : // ;
				return ";";

			case TokenNameCOMMA : // ,
				return ",";

			case TokenNameEQUAL : // =
				return "=";

			case TokenNameAND_AND : // && (15.22)
				return "&&";

			case TokenNameOR_OR : // || (15.23)
				return "||";

			case TokenNameQUESTION : // ? (15.24)
				return "?";

			case TokenNameCOLON : // : (15.24)
				return ":";

			case TokenNameEQUAL_EQUAL : // == (15.20, 15.20.1, 15.20.2, 15.20.3)
				return "==";

			case TokenNameNOT_EQUAL : // != (15.20, 15.20.1, 15.20.2, 15.20.3)
				return "!=";

			case TokenNameLESS : // < (15.19.1)
				return "<";

			case TokenNameLESS_EQUAL : // <= (15.19.1)
				return "<=";

			case TokenNameGREATER : // > (15.19.1)
				return ">";

			case TokenNameGREATER_EQUAL : // >= (15.19.1)
				return ">=";

			case TokenNameinstanceof : // instanceof
				return "instanceof";

			case TokenNamePLUS : // + (15.17, 15.17.2)
				return "+";

			case TokenNameMINUS : // - (15.17.2)
				return "-";

			case TokenNameMULTIPLY : // * (15.16.1)
				return "*";

			case TokenNameDIVIDE : // / (15.16.2)
				return "/";

			case TokenNameREMAINDER : // % (15.16.3)
				return "%";

			case TokenNameLEFT_SHIFT : // << (15.18)
				return "<<";

			case TokenNameRIGHT_SHIFT : // >> (15.18)
				return ">>";

			case TokenNameUNSIGNED_RIGHT_SHIFT : // >>> (15.18)
				return ">>>";

			case TokenNameAND : // & (15.21, 15.21.1, 15.21.2)
				return "&";

			case TokenNameOR : // | (15.21, 15.21.1, 15.21.2)
				return "|";

			case TokenNameXOR : // ^ (15.21, 15.21.1, 15.21.2)
				return "^";

			case TokenNameMULTIPLY_EQUAL : // *= (15.25.2)
				return "*=";

			case TokenNameDIVIDE_EQUAL : // /= (15.25.2)
				return "/=";

			case TokenNameREMAINDER_EQUAL : // %= (15.25.2)
				return "%=";

			case TokenNamePLUS_EQUAL : // += (15.25.2)
				return "+=";

			case TokenNameMINUS_EQUAL : // -= (15.25.2)
				return "-=";

			case TokenNameLEFT_SHIFT_EQUAL : // <<= (15.25.2)
				return "<<=";

			case TokenNameRIGHT_SHIFT_EQUAL : // >>= (15.25.2)
				return ">>=";

			case TokenNameUNSIGNED_RIGHT_SHIFT_EQUAL : // >>>= (15.25.2)
				return ">>>=";

			case TokenNameAND_EQUAL : // &= (15.25.2)
				return "&=";

			case TokenNameXOR_EQUAL : // ^= (15.25.2)
				return "^=";

			case TokenNameOR_EQUAL : // |= (15.25.2)
				return "|=";

			case TokenNameDOT : // .
				return ".";

			default :
				return "";
		}
	}

