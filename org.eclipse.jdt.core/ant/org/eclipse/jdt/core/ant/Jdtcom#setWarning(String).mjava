	public void setWarning(String warning){
		if(warning.equals("no"/*nonNLS*/)){
			arguments.append(" -nowarn"/*nonNLS*/);
		}
		else{
			StringTokenizer tokenizer = new StringTokenizer(warning, ","/*nonNLS*/);			
			while (tokenizer.hasMoreTokens()) {
				String token = tokenizer.nextToken();
				if (!token.equals("constructorName"/*nonNLS*/) &&
					!token.equals("packageDefaultMethod"/*nonNLS*/) &&
					!token.equals("maskedCatchBlocks"/*nonNLS*/) &&
					!token.equals("deprecation"/*nonNLS*/) &&
					!token.equals("unusedLocals"/*nonNLS*/) &&
					!token.equals("unusedArguments"/*nonNLS*/) &&
					!token.equals("syntheticAccess"/*nonNLS*/) &&
					!token.equals("nls"/*nonNLS*/))
					throw new BuildException(Util.bind("jdtcom.warning"/*nonNLS*/));
			}
			arguments.append(" -warn:"/*nonNLS*/+warning);
		}
	}

