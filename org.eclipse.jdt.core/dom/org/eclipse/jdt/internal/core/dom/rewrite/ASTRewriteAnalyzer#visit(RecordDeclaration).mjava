	@Override
	public boolean visit(RecordDeclaration node) {
		if (!hasChildrenChanges(node)) {
			return doVisitUnchangedChildren(node);
		}
		int pos= rewriteJavadoc(node, RecordDeclaration.JAVADOC_PROPERTY);

		rewriteModifiers2(node, RecordDeclaration.MODIFIERS2_PROPERTY, pos);

		// name
		pos= rewriteRequiredNode(node, RecordDeclaration.NAME_PROPERTY);

		pos= rewriteOptionalTypeParameters(node, RecordDeclaration.TYPE_PARAMETERS_PROPERTY, pos, Util.EMPTY_STRING, false, true);

		try {
			pos= getScanner().getTokenEndOffset(TerminalTokens.TokenNameLPAREN, pos);
		}catch(CoreException ex) {
				//ignore
		}


		pos= rewriteNodeList(node, RecordDeclaration.RECORD_COMPONENTS_PROPERTY, pos, Util.EMPTY_STRING, ", "); //$NON-NLS-1$

		try {
		pos= getScanner().getTokenEndOffset(TerminalTokens.TokenNameRPAREN, pos);
		}catch(CoreException ex) {
			//ignore
		}

		// extended interfaces
		ChildListPropertyDescriptor superInterfaceProperty= RecordDeclaration.SUPER_INTERFACE_TYPES_PROPERTY;

		RewriteEvent interfaceEvent= getEvent(node, superInterfaceProperty);
		if (interfaceEvent == null || interfaceEvent.getChangeKind() == RewriteEvent.UNCHANGED) {
			pos= doVisit(node, superInterfaceProperty, pos);
		} else {
			String keyword=  " implements "; //$NON-NLS-1$
			pos= rewriteNodeList(node, superInterfaceProperty, pos, keyword, ", "); //$NON-NLS-1$
		}

		// type members
		// startPos : find position after left brace of type, be aware that bracket might be missing

		int startIndent= getIndent(node.getStartPosition()) + 1;
		pos = getPosAfterRightParenthesis(pos);
		pos= getPosAfterLeftBrace(pos);
		rewriteParagraphList(node, RecordDeclaration.BODY_DECLARATIONS_PROPERTY, pos, startIndent, -1, 2);
		return false;
	}

