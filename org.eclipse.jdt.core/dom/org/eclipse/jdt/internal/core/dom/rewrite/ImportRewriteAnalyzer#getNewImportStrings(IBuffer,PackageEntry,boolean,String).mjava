	private String[] getNewImportStrings(IBuffer buffer, PackageEntry packageEntry, boolean isStatic, String lineDelim) {
		boolean isStarImportAdded = false;
		List allImports = new ArrayList();
		int nImports = packageEntry.getNumberOfImports();
		StringBuffer allComments = null;
		for (int i= 0; i < nImports; i++) {
			ImportDeclEntry curr= packageEntry.getImportAt(i);
			String simpleName = curr.getTypeQualifiedName();
			if (simpleName.indexOf('.') != -1) {
				// member type imports - we preserve it
				IRegion rangeBefore = curr.getPrecedingCommentRange();
				if (rangeBefore != null) {
					allImports.add(buffer.getText(rangeBefore.getOffset(), rangeBefore.getLength()));
				}
				IRegion rangeAfter = curr.getTrailingCommentRange();
				String trailingComment = null;
				if (rangeAfter != null) {
					trailingComment = buffer.getText(rangeAfter.getOffset(), rangeAfter.getLength());
				}
				allImports.add(getNewImportString(curr.getElementName(), isStatic, trailingComment, lineDelim));
			} else if (!isStarImportAdded) {
				String starImportString= packageEntry.getName() + ".*"; //$NON-NLS-1$
				allImports.add(getNewImportString(starImportString, isStatic, lineDelim));
				isStarImportAdded = true;
			} else {
				// collect all comments
				IRegion rangeBefore = curr.getPrecedingCommentRange();
				if (rangeBefore != null) {
					if (allComments == null) {
						allComments = new StringBuffer();
					}
					allComments.append(buffer.getText(rangeBefore.getOffset(), rangeBefore.getLength())).append(lineDelim);
				}
				IRegion rangeAfter = curr.getTrailingCommentRange();
				if (rangeAfter != null) {
					if (allComments == null) {
						allComments = new StringBuffer();
					}
					allComments.append(buffer.getText(rangeAfter.getOffset(), rangeAfter.getLength())).append(lineDelim);
				}
			}
		}
		if (allComments != null) {
			allImports.add(0, String.valueOf(allComments));
		}
		return (String[]) allImports.toArray(new String[allImports.size()]);
	}

