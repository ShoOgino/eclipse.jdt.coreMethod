	private boolean checkChild(ASTNode parent, ASTNode previous, ASTNode child) {
		if ((parent.getFlags() & (ASTNode.RECOVERED | ASTNode.MALFORMED)) != 0
				|| (child.getFlags() & (ASTNode.RECOVERED | ASTNode.MALFORMED)) != 0)
			return false; 
		if (DOMASTUtil.isRecordDeclarationSupported(child.getAST()) && child instanceof SingleVariableDeclaration) {
			if (previous != null && previous instanceof MethodDeclaration && ((MethodDeclaration)previous).isCompactConstructor()) {
				return true; // For compact constructors, do not validate for parameters
			}
		}
		
		int parentStart = parent.getStartPosition();
		int parentEnd = parentStart + parent.getLength();
		
		int childStart = child.getStartPosition();
		int childEnd = childStart + child.getLength();
		
		if (previous != null) {
			// Turn a blind eye on a known problem ... see https://bugs.eclipse.org/391894#c4
			if (child.getLocationInParent() == ArrayCreation.DIMENSIONS_PROPERTY)
				return false;
			
			int previousStart = previous.getStartPosition();
			int previousEnd = previousStart + previous.getLength();
			if (childStart < previousEnd) {
				String bug = "- parent [" + parentStart + ", " + parentEnd + "] " + parent.getClass().getName() + '\n' //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
						+ "   previous [" + previousStart + ", " + previousEnd + "] "  + previous.getClass().getName() + '\n'//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
						+ "   " + child.getLocationInParent().getId() + " [" + childStart + ", " + childEnd + "] " + child.getClass().getName() + '\n'; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$
				this.bugs.append(bug);
			}
		}
		if (!(parentStart <= childStart && childEnd <= parentEnd)) {
			String bug = "- parent [" + parentStart + ", " + parentEnd + "] " + parent.getClass().getName() + '\n' //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
					   + "   " + child.getLocationInParent().getId() + " [" + childStart + ", " + childEnd + "] " + child.getClass().getName() + '\n'; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$
			this.bugs.append(bug);
		}
		return true;
	}

