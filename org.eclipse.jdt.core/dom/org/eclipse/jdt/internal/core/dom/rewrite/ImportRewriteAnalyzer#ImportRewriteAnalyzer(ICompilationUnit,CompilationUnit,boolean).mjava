	public ImportRewriteAnalyzer(ICompilationUnit cu, CompilationUnit root, boolean restoreExistingImports) {
		this.compilationUnit= cu;
				
		this.filterImplicitImports= true;
		this.findAmbiguousImports= true; //!restoreExistingImports;
		
		this.packageEntries= new ArrayList(20);
		this.importsCreated= new ArrayList();
		this.staticImportsCreated= new ArrayList();
		this.flags= 0;
		
		this.replaceRange= evaluateReplaceRange(root);
		if (restoreExistingImports) {
			addExistingImports(root);
		}

		String[] preferenceOrder= getImportOrderPreference(cu.getJavaProject());
		PackageEntry[] order= new PackageEntry[preferenceOrder.length];
		for (int i= 0; i < order.length; i++) {
			String curr= preferenceOrder[i];
			if (curr.length() > 0 && curr.charAt(0) == '#') {
				curr= curr.substring(1);
				order[i]= new PackageEntry(curr, curr, true); // static import group
			} else {
				order[i]= new PackageEntry(curr, curr, false); // normal import group
			}
		}
		
		addPreferenceOrderHolders(order);
	}

