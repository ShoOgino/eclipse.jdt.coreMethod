	/**
	 * @see IMethodBinding#overrides(IMethodBinding)
	 */
	public boolean overrides(IMethodBinding overridenMethod) {
		org.eclipse.jdt.internal.compiler.lookup.MethodBinding overridenCompilerBinding = ((MethodBinding) overridenMethod).binding;
		if (this.binding == overridenCompilerBinding) 
			return false;
		char[] selector = this.binding.selector;
		if (!CharOperation.equals(selector, overridenCompilerBinding.selector))
			return false;
		TypeBinding match = this.binding.declaringClass.findSuperTypeWithSameErasure(overridenCompilerBinding.declaringClass);
		if (!(match instanceof ReferenceBinding)) return false;
		
		org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] superMethods = ((ReferenceBinding)match).getMethods(selector);
		for (int i = 0, length = superMethods.length; i < length; i++) {
			if (superMethods[i].original() == overridenCompilerBinding) {
				LookupEnvironment lookupEnvironment = this.resolver.lookupEnvironment();
				if (lookupEnvironment == null) return false;
				MethodVerifier methodVerifier = lookupEnvironment.methodVerifier();
				org.eclipse.jdt.internal.compiler.lookup.MethodBinding superMethod = superMethods[i];
				return !superMethod.isPrivate() 
					&& !(superMethod.isDefault() && (superMethod.declaringClass.getPackage()) != this.binding.declaringClass.getPackage())
					&& methodVerifier.doesMethodOverride(this.binding, superMethod);
			}
		}
		return false;
	}

