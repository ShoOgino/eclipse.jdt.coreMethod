	private boolean checkForParenthesis(org.eclipse.jdt.internal.compiler.ast.Expression expression) {
		/*
		 * We need to handle multiple parenthesis
		 */
		int start = expression.sourceStart;
		int end = expression.sourceEnd;
		int leftParentCount = 0;
		int rightParentCount = 0;
		scanner.resetTo(start, end);
		try {
			int token = scanner.getNextToken();
			if (token != Scanner.TokenNameLPAREN) {
				return false;
			} else {
				leftParentCount++;
			}
			boolean stop = false;
			while (!stop && ((token  = scanner.getNextToken()) != Scanner.TokenNameEOF)) {
				switch(token) {
					case Scanner.TokenNameLPAREN:
						leftParentCount++;
						break;
					case Scanner.TokenNameRPAREN:
						rightParentCount++;
						if (rightParentCount == leftParentCount) {
							// we found the matching parenthesis
							stop = true;
						}
				}
			}
			return (scanner.currentPosition >= end) && (rightParentCount == leftParentCount);
		} catch(InvalidInputException e) {
		}
		return false;
	}

