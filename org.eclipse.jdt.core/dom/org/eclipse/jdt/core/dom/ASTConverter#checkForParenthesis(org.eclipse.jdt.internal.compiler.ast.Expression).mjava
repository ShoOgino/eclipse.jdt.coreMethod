	private boolean checkForParenthesis(org.eclipse.jdt.internal.compiler.ast.Expression expression) {
		/*
		 * We need to handle multiple parenthesis
		 */
		int start = expression.sourceStart;
		int end = expression.sourceEnd;
		scanner.resetTo(start, end);
		int dangling = 0, token;
		boolean first = true;
		try {
			while (true) {
				token = scanner.getNextToken();
				switch (token) {
					case ITerminalSymbols.TokenNameLPAREN :
						dangling ++;
						break;
					case ITerminalSymbols.TokenNameRPAREN :
						if (first) return false;
						dangling --;
						break;
					case ITerminalSymbols.TokenNameEOF :
						if (first) return false;
						return dangling == 0;
					default :
						if (first) return false;
						if (dangling == 0) return false;
				}
				first = false;
			}
		} catch (InvalidInputException e){
		}
		return false;
	}

