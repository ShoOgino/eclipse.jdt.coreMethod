	/**
	 * Remove potential trailing comment by settings the source end on the closing parenthesis
	 */
	private void removeLeadingAndTrailingCommentsFromLiteral(ASTNode node) {
		int start = node.getStartPosition();
		scanner.resetTo(start, start + node.getLength());
		int token;
		int startPosition = -1;
		try {
			while((token = scanner.getNextToken()) != Scanner.TokenNameEOF)  {
				switch(token) {
					case Scanner.TokenNameIntegerLiteral :
					case Scanner.TokenNameFloatingPointLiteral :
					case Scanner.TokenNameLongLiteral :
					case Scanner.TokenNameDoubleLiteral :
					case Scanner.TokenNameCharacterLiteral :
						if (startPosition == -1) {
							startPosition = scanner.startPosition;
						}
						int end = scanner.currentPosition;
						node.setSourceRange(startPosition, end - startPosition);
						return;
					case Scanner.TokenNameMINUS :
						startPosition = scanner.startPosition;
						break;
				}
			}
		} catch(InvalidInputException e) {
		}
	}

