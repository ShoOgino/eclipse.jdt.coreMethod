	public ClassInstanceCreation convert(AnonymousLocalTypeDeclaration expression) {
		ClassInstanceCreation classInstanceCreation = this.ast.newClassInstanceCreation();
		classInstanceCreation.setName(convert(expression.allocation.type));
		if (expression.allocation.enclosingInstance != null) {
			classInstanceCreation.setExpression(convert(expression.allocation.enclosingInstance));
		}
		int declarationSourceStart = expression.allocation.sourceStart;
		classInstanceCreation.setSourceRange(declarationSourceStart, expression.bodyEnd - declarationSourceStart + 1);
		org.eclipse.jdt.internal.compiler.ast.Expression[] arguments = expression.allocation.arguments;
		if (arguments != null) {
			int length = arguments.length;
			for (int i = 0; i < length; i++) {
				classInstanceCreation.arguments().add(convert(arguments[i]));
			}
		}
		AnonymousClassDeclaration anonymousClassDeclaration = this.ast.newAnonymousClassDeclaration();
		int start = retrieveStartBlockPosition(declarationSourceStart, expression.bodyEnd);
		anonymousClassDeclaration.setSourceRange(start, expression.bodyEnd - start + 1);
		classInstanceCreation.setAnonymousClassDeclaration(anonymousClassDeclaration);
		buildBodyDeclarations(expression, anonymousClassDeclaration);
		if (this.resolveBindings) {
			recordNodes(classInstanceCreation, expression);
			recordNodes(anonymousClassDeclaration, expression);
			classInstanceCreation.resolveTypeBinding();
		}
		return classInstanceCreation;
	}

