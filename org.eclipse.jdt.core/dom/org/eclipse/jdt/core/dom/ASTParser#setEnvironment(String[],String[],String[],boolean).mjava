	/**
	 * Sets the environment to be used when no {@link IJavaProject} is available.
	 *
	 * <p>The user has to make sure that all the required types are included either in the classpath or source paths.
	 * All the paths containing binary types must be included in the <code>classpathEntries</code> whereas all paths containing
	 * source types must be included in the <code>sourcepathEntries</code>.</p>
	 * <p>All paths in the <code>classpathEntries</code> and <code>sourcepathEntries</code> are absolute paths.</p>
	 * <p>If the source paths contain units using a specific encoding (other than the platform encoding), then the
	 * given <code>encodings</code> must be set. When the <code>encodings</code> is set to non <code>null</code>, its length must
	 * match the length of <code>sourcepathEntries</code> or an IllegalArgumentException will be thrown.</p>
	 * <p>If <code>encodings</code> is not <code>null</code>, the given <code>sourcepathEntries</code> must not be <code>null</code>.</p>
	 *
	 * @param classpathEntries the given classpath entries to be used to resolve bindings
	 * @param sourcepathEntries the given sourcepath entries to be used to resolve bindings
	 * @param encodings the encodings of the corresponding sourcepath entries or <code>null</code> if the platform encoding
	 * can be used.
	 * @param includeRunningVMBootclasspath <code>true</code> if the bootclasspath of the running VM must be prepended to the
	 * given classpath and <code>false</code> if the bootclasspath of the running VM should be ignored.
	 * @throws IllegalArgumentException if the size of the given encodings is not equals to the size of the given <code>
	 * sourcepathEntries</code>
	 * @since 3.6
	 */
	public void setEnvironment(String[] classpathEntries, String[] sourcepathEntries, String[] encodings, boolean includeRunningVMBootclasspath) {
		this.classpaths = classpathEntries;
		this.sourcepaths = sourcepathEntries;
		this.sourcepathsEncodings = encodings;
		if (encodings != null) {
			if (sourcepathEntries == null || sourcepathEntries.length != encodings.length) {
				throw new IllegalArgumentException();
			}
		}
		if (includeRunningVMBootclasspath) {
			this.bits |= CompilationUnitResolver.INCLUDE_RUNNING_VM_BOOTCLASSPATH;
		}
	}

