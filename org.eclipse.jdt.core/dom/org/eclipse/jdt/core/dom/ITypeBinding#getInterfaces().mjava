	/**
	 * Returns a list of type bindings representing the direct superinterfaces
	 * of the class or interface represented by this type binding. 
	 * <p>
	 * If this type binding represents a class, the return value is an array
	 * containing type bindings representing all interfaces directly implemented
	 * by this class. The number and order of the interface objects in the array
	 * corresponds to the number and order of the interface names in the 
	 * <code>implements</code> clause of the original declaration of this class.
	 * </p>
	 * <p>
	 * If this type binding represents an interface, the array contains 
	 * type bindings representing all interfaces directly extended by this
	 * interface. The number and order of the interface objects in the array 
	 * corresponds to the number and order of the interface names in the 
	 * <code>extends</code> clause of the original declaration of this interface. 
	 * </p>
	 * <p>
	 * If the class implements no interfaces, or the interface extends no 
	 * interfaces, or if this type binding represents an array type or a
	 * primitive type, this method returns an array of length 0.
	 * </p>
	 *
	 * @return the list of type bindings for the interfaces extended by this
	 *   class, or interfaces extended by this interface, or otherwise the 
	 *   empty list
	 */
	public ITypeBinding[] getInterfaces();

