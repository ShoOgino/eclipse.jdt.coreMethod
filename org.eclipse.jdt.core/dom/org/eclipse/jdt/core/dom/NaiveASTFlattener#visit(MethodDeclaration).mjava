	/*
	 * @see ASTVisitor#visit(MethodDeclaration)
	 */
	public boolean visit(MethodDeclaration node) {
		if (node.getJavadoc() != null) {
			node.getJavadoc().accept(this);
		}
		printModifiers(node.getModifiers());
		if (!node.isConstructor()) {
			node.getReturnType().accept(this);
			buffer.append(" ");
		}
		node.getName().accept(this);
		buffer.append("(");
		for (Iterator it = node.parameters().iterator(); it.hasNext(); ) {
			SingleVariableDeclaration v = (SingleVariableDeclaration) it.next();
			v.accept(this);
			if (it.hasNext()) {
				buffer.append(",");
			}
		}
		buffer.append(")");
		if (!node.thrownExceptions().isEmpty()) {
			buffer.append(" throws ");
			for (Iterator it = node.thrownExceptions().iterator(); it.hasNext(); ) {
				Name n = (Name) it.next();
				n.accept(this);
				if (it.hasNext()) {
					buffer.append(", ");
				}
			}
			buffer.append(" ");
		}
		if (node.getBody() == null) {
			buffer.append(";");
		} else {
			node.getBody().accept(this);
		}
		return false;
	}

