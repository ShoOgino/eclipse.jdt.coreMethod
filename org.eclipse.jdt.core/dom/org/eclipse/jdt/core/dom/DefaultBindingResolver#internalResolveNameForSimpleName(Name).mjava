	private IBinding internalResolveNameForSimpleName(Name name) {
		AstNode node = (AstNode) this.newAstToOldAst.get(name);
		if (node == null) {
			ASTNode parent = name.getParent();
			if (parent instanceof QualifiedName) {
				// retrieve the qualified name and remember at which position is the simple name
				QualifiedName qualifiedName = (QualifiedName) parent;
				int index = -1;
				if (qualifiedName.getQualifier() == name) {
					index++;
				}
				while (parent instanceof QualifiedName) {
					qualifiedName = (QualifiedName) parent;
					parent = parent.getParent();
					index++;
				}
				return returnBindingForQualifiedNamePart(qualifiedName, index);
			}
		}
		if (node instanceof SingleNameReference) {
			SingleNameReference singleNameReference = (SingleNameReference) node;
			if (singleNameReference.isTypeReference()) {
				return this.getTypeBinding((ReferenceBinding)singleNameReference.binding);
			} else {
				// this is a variable or a field
				return this.getVariableBinding((org.eclipse.jdt.internal.compiler.lookup.VariableBinding)singleNameReference.binding);				
			}
		} else if (node instanceof QualifiedSuperReference) {
			QualifiedSuperReference qualifiedSuperReference = (QualifiedSuperReference) node;
			return this.getTypeBinding(qualifiedSuperReference.qualification.binding);
		}
		return null;
	}

