	/**
	 * Sets the left operand of this instanceof expression.
	 * 
	 * @param expression the left operand node
	 * @exception IllegalArgumentException if the node belongs to a different AST
	 * @exception IllegalArgumentException if the node already has a parent
	 * @exception IllegalArgumentException if a cycle in would be created
	 */ 
	public void setLeftOperand(Expression expression) {
		if (expression == null) {
			throw new IllegalArgumentException();
		}
		// an InfixExpression may occur inside a Expression - must check cycles
		replaceChild(this.leftOperand, expression, true);
		this.leftOperand = expression;
	}

