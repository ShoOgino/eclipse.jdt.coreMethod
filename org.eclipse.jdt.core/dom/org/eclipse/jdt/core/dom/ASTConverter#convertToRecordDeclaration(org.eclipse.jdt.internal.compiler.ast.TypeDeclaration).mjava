	private RecordDeclaration convertToRecordDeclaration(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration) {
		checkCanceled();
		// record declaration cannot be built if the source is not >= 14, since record is then seen as an identifier
		final RecordDeclaration recordDeclaration = new RecordDeclaration(this.ast);
		setModifiers(recordDeclaration, typeDeclaration);
		final SimpleName typeName = new SimpleName(this.ast);
		typeName.internalSetIdentifier(new String(typeDeclaration.name));
		typeName.setSourceRange(typeDeclaration.sourceStart, typeDeclaration.sourceEnd - typeDeclaration.sourceStart + 1);
		recordDeclaration.setName(typeName);
		recordDeclaration.setSourceRange(typeDeclaration.declarationSourceStart, typeDeclaration.bodyEnd - typeDeclaration.declarationSourceStart + 1);
		recordDeclaration.setRestrictedIdentifierStartPosition(typeDeclaration.restrictedIdentifierStart);
		
		org.eclipse.jdt.internal.compiler.ast.TypeReference[] superInterfaces = typeDeclaration.superInterfaces;
		if (superInterfaces != null) {
			for (int index = 0, length = superInterfaces.length; index < length; index++) {
				recordDeclaration.superInterfaceTypes().add(convertType(superInterfaces[index]));
			}
		}
		org.eclipse.jdt.internal.compiler.ast.TypeParameter[] typeParameters = typeDeclaration.typeParameters;
		if (typeParameters != null) {
			for (int index = 0, length = typeParameters.length; index < length; index++) {
				recordDeclaration.typeParameters().add(convert(typeParameters[index]));
			}
		}
		buildBodyDeclarations(typeDeclaration, recordDeclaration, false);
		if (this.resolveBindings) {
			recordNodes(recordDeclaration, typeDeclaration);
			recordNodes(typeName, typeDeclaration);
			recordDeclaration.resolveBinding();
		}
		return recordDeclaration;
	}

