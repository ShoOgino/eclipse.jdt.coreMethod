	/**
	 * This method is used to retrieve the array dimension declared after the
	 * name of a local or a field declaration.
	 * For example:
	 *    int i, j[] = null, k[][] = {{}};
	 *    It should return 0 for i, 1 for j and 2 for k.
	 * @return int the dimension found
	 */
	protected int retrieveExtraDimension(int start, int end) {
		this.scanner.resetTo(start, end);
		int dimensions = 0;
		try {
			int token, lParenCount = 0;
			boolean isAnnotation = false, foundAnnotation = false;
			while ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {
				if (foundAnnotation) {
					if (token == TerminalTokens.TokenNameLPAREN) ++lParenCount;
					else if (token == TerminalTokens.TokenNameRPAREN) {
						--lParenCount;
						continue;
					}
					if (lParenCount > 0) continue;
				}
				switch(token) {
					case TerminalTokens.TokenNameLBRACKET:
					case TerminalTokens.TokenNameCOMMENT_BLOCK:
					case TerminalTokens.TokenNameCOMMENT_JAVADOC:
					case TerminalTokens.TokenNameCOMMENT_LINE:
						isAnnotation = false;
						break;
					case TerminalTokens.TokenNameAT:
						isAnnotation = true;
						foundAnnotation = true; /* check for params */
						break;
					case TerminalTokens.TokenNameIdentifier:
						if (!isAnnotation) {
							return dimensions;
						}
						isAnnotation = false;
						break;
					case TerminalTokens.TokenNameRBRACKET://166
						isAnnotation = false;
						dimensions++;
						break;
					default:
						return dimensions;
				}
			}
		} catch(InvalidInputException e) {
			// ignore
		}
		return dimensions;
	}

