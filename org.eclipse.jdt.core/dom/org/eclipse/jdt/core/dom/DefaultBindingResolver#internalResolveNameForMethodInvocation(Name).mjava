	private IBinding internalResolveNameForMethodInvocation(Name name) {
		ASTNode parent = name.getParent();
		if (parent instanceof MethodInvocation) {
			MethodInvocation methodInvocation = (MethodInvocation) parent;
			if (name == methodInvocation.getExpression()) {
				if (name.isQualifiedName()) {
					return this.internalResolveNameForQualifiedName(name);
				} else {
					return this.internalResolveNameForSimpleName(name);
				}
			} else {
				AstNode node = (AstNode) this.newAstToOldAst.get(name);
				if (node instanceof MessageSend) {
					MessageSend messageSend = (MessageSend) node;
					return getMethodBinding(messageSend.binding);
				} else if (name.isQualifiedName()) {
					return this.internalResolveNameForQualifiedName(name);
				} else {
					return this.internalResolveNameForSimpleName(name);
				}
			}
		} else {
			SuperMethodInvocation superMethodInvocation = (SuperMethodInvocation) parent;
			if (name == superMethodInvocation.getQualifier()) {
				if (name.isQualifiedName()) {
					return this.internalResolveNameForQualifiedName(name);
				} else {
					return this.internalResolveNameForSimpleName(name);
				}
			} else {
				AstNode node = (AstNode) this.newAstToOldAst.get(name);
				if (node instanceof MessageSend) {
					MessageSend messageSend = (MessageSend) node;
					return getMethodBinding(messageSend.binding);
				} else if (name.isQualifiedName()) {
					return this.internalResolveNameForQualifiedName(name);
				} else {
					return this.internalResolveNameForSimpleName(name);
				}
			}
		}
	}

