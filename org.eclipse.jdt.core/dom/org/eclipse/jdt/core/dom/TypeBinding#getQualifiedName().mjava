	/**
	 * @see org.eclipse.jdt.core.dom.ITypeBinding#getQualifiedName()
	 */
	public String getQualifiedName() {
		if (isAnonymous() || isLocal()) {
			return NO_NAME;
		}
		
		if (isPrimitive() || isNullType() || this.isTypeVariable()) {
			return new String(this.binding.sourceName());
		}
		
		if (isArray()) {
			ITypeBinding elementType = getElementType();
			String elementTypeQualifiedName = elementType.getQualifiedName();
			if (elementTypeQualifiedName.length() != 0) {
				int dimensions = this.getDimensions();
				char[] brackets = new char[dimensions * 2];
				for (int i = dimensions * 2 - 1; i >= 0; i -= 2) {
					brackets[i] = ']';
					brackets[i - 1] = '[';
				}
				StringBuffer stringBuffer = new StringBuffer(elementTypeQualifiedName);
				stringBuffer.append(brackets);
				return stringBuffer.toString();
			} else {
				return NO_NAME;
			}
		}
		if (isTopLevel() || isMember()) {
			PackageBinding packageBinding = this.binding.getPackage();
			
			StringBuffer buffer = new StringBuffer();
			if (isWildcardType()) {
				buffer.append(TypeConstants.WILDCARD_NAME);
				WildcardBinding wildcardBinding = (WildcardBinding) this.binding;
				if (wildcardBinding.bound != null) {
					switch(wildcardBinding.kind) {
						case Wildcard.SUPER :
							buffer.append(TypeConstants.WILDCARD_SUPER);
							break;
						case Wildcard.EXTENDS :
							buffer.append(TypeConstants.WILDCARD_EXTENDS);
							break;
					}
					buffer.append(getBound().getQualifiedName());				
				}
			} else {
				if (packageBinding != null && packageBinding.compoundName != CharOperation.NO_CHAR_CHAR) {
					buffer.append(packageBinding.readableName()).append('.');
				}
				buffer.append(this.binding.qualifiedSourceName());
				if (!isRawType()) {
					// only one of the type parameters or type arguments is non-empty at the same time
					appendQualifiedTypeParameters(buffer, getTypeParameters());
					appendQualifiedTypeArguments(buffer, getTypeArguments());
				}
			}
			return String.valueOf(buffer);
		}
		return NO_NAME;
	}

