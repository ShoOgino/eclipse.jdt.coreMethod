	public IResolvedMemberValuePair[] getAllMemberValuePairs() {
		IResolvedMemberValuePair[] pairs = getDeclaredMemberValuePairs();
		ReferenceBinding typeBinding = this.internalAnnotation.getAnnotationType();
		if (typeBinding == null) return pairs;
		MethodBinding[] methods = typeBinding.methods();
		int methodLength = methods == null ? 0 : methods.length;
		if (methodLength == 0) return pairs;

		int declaredLength = pairs.length;
		if (declaredLength == methodLength)
			return pairs;

		// handle case of more methods than declared members
		Object[] names = new Object[declaredLength];
		for (int i = 0; i < declaredLength; i++)
			names[i] = pairs[i].getName();
		Comparator comparator = new Comparator() {
			public int compare(Object arg0, Object arg1) {
				return CharOperation.compareWith((char[]) arg0, (char[]) arg1);
			}
		};
		Arrays.sort(names, comparator);
		IResolvedMemberValuePair[] allPairs = new  IResolvedMemberValuePair[methodLength];
		for (int i = 0; i < methodLength; i++) {
			int index = Arrays.binarySearch(names, methods[i].selector, comparator);
			allPairs[i] = index == -1 ? new ResolvedDefaultValuePair(methods[i], this.bindingResolver) : pairs[index];
		}
		return allPairs;
	}

