	/**
	 * Sets the Java project used when resolving bindings.
	 * This method automatically sets the compiler
	 * options based on the given project:
	 * <pre>
	 * setCompilerOptions(project.getOptions(true));
	 * </pre>
	 * See {@link #setCompilerOptions(Map)} for a discussion of
	 * the pros and cons of using these options vs specifying
	 * compiler options explicitly.
	 * This setting is used in conjunction with <code>setSource(char[])</code>.
	 * For the purposes of resolving bindings, types declared in the
	 * source string will hide types by the same name available
	 * through the classpath of the given project.
	 * Defaults to none (<code>null</code>).
	 *
	 * @param project the Java project used to resolve names, or
	 *    <code>null</code> if none
	 */
	public void setProject(IJavaProject project) {
		this.project = project;
		if (project != null) {
			Map options = project.getOptions(true);
			options.remove(JavaCore.COMPILER_TASK_TAGS); // no need to parse task tags
			this.compilerOptions = options;
		}
	}

