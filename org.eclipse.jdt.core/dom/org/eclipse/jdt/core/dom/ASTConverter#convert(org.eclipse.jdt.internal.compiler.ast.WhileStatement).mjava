	public WhileStatement convert(org.eclipse.jdt.internal.compiler.ast.WhileStatement statement) {
		WhileStatement whileStatement = this.ast.newWhileStatement();
		whileStatement.setSourceRange(statement.sourceStart, statement.sourceEnd - statement.sourceStart + 1);
		whileStatement.setExpression(convert(statement.condition));
		org.eclipse.jdt.internal.compiler.ast.Statement action = statement.action;
		if (action != null) {
			whileStatement.setBody(convert(action));
			if (!(action instanceof org.eclipse.jdt.internal.compiler.ast.Block)) {
				// set the end position of the for statement on the semi-colon
				retrieveSemiColonPosition(whileStatement);
			}
		} else {
			EmptyStatement emptyStatement = this.ast.newEmptyStatement();
			retrieveSemiColonPosition(whileStatement);
			int start = retrieveStartingSemiColonPosition(statement.sourceStart, compilationUnitSource.length);
			int end = retrieveEndingSemiColonPosition(start, compilationUnitSource.length);
			emptyStatement.setSourceRange(start, end - start + 1);
			whileStatement.setBody(emptyStatement);
		}
		return whileStatement;
	}

