	private static ISearchableNameEnvironment getNameEnvironment(JavaProject project, WorkingCopyOwner owner, final IProgressMonitor monitor) throws JavaModelException {
		return new SearchableEnvironment(project, owner) {
			private void checkCanceled() {
				if (monitor != null && monitor.isCanceled()) 
					throw new AbortCompilation(true/*silent*/, new OperationCanceledException());
			}
			public void findPackages(char[] prefix, ISearchRequestor requestor) {
				checkCanceled();
				super.findPackages(prefix, requestor);
			}
			public NameEnvironmentAnswer findType(char[] name, char[][] packageName) {
				checkCanceled();
				return super.findType(name, packageName);
			}
			public NameEnvironmentAnswer findType(char[][] compoundTypeName) {
				checkCanceled();
				return super.findType(compoundTypeName);
			}
			public void findTypes(char[] prefix, ISearchRequestor storage) {
				checkCanceled();
				super.findTypes(prefix, storage);
			}
		};
	}

