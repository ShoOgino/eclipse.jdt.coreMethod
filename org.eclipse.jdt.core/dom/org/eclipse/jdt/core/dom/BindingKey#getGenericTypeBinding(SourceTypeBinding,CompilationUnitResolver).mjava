	 /*
	  * Ensures that the given generic type binding corresponds to this key.
	  * This key's scanner should be positionned on the first type parameter name token.
	  */
	 SourceTypeBinding getGenericTypeBinding(SourceTypeBinding typeBinding, CompilationUnitResolver resolver) {
	 	TypeVariableBinding[] typeVariableBindings = typeBinding.typeVariables();
	 	for (int i = 0, length = typeVariableBindings.length; i < length; i++) {
			TypeVariableBinding typeVariableBinding = typeVariableBindings[i];
		 	char[] typeVariableName = this.scanner.getTokenSource();
			if (!CharOperation.equals(typeVariableName, typeVariableBinding.sourceName()))
				return null;
	 		reset();
	 		Binding superclass = getCompilerBinding(resolver);
	 		if (superclass != typeVariableBinding.superclass()) 
	 			return null;
	 		ReferenceBinding[] superinterfaces = typeVariableBinding.superInterfaces();
	 		for (int j = 0, superinterfacesLength = superinterfaces.length; j < superinterfacesLength; j++) {
		 		reset();
		 		Binding superinterface = getCompilerBinding(resolver);
		 		if (superinterface != superinterfaces[j]) 
		 			return null;
			}
		}
	 	return typeBinding;
	 }

