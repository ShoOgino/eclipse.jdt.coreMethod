	/**
	 * Returns the live list of fragments that make up this doc 
	 * comment.
	 * <p>
	 * The fragments cover everything except the starting and ending
	 * comment delimiters, and generally omit leading whitespace 
	 * (including a leading "&ast;") and embedded line breaks.
	 * The first fragment of a typical doc comment is generally a 
	 * {@link TextElement TextElement} containing the text up to
	 * the first top-level doc tag, and each subsequent element is a 
	 * {@link TagElement TagElement} representing a top-level doc
	 * tag (e.g., "@param", "@return", "@see").
	 * If there is no text preceding the first top-level doc tag,
	 * then the first fragment represents the first top-level doc tag.
	 * When the text preceding the first top-level doc tag contains
	 * an inline tag enclosed in braces (e.g., an "@link"), then
	 * the first fragment is a {@link TagElement TagElement}
	 * with a <code>null</code> tag name with its own fragments,
	 * one of which will be a {@link TagElement TagElement}
	 * for any embedded tag located in the preamble.
	 * </p>
	 * <p>
	 * Adding and removing nodes from this list affects this node
	 * dynamically. The nodes in this list may be of various
	 * types, including {@link TextElement TextElement}, 
	 * {@link TagElement TagElement}, {@link Name Name}, 
	 * {@link MemberRef MemberRef}, and {@link MethodRef MethodRef}.
	 * Clients should assume that the list of types may grow in
	 * the future, and write their code to deal with unexpected
	 * nodes types. However, attempts to add a non-proscribed type
	 * of node will trigger an exception.
	 * </p>
	 * 
	 * @return the live list of doc elements in this doc comment
	 * @since 3.0
	 */ 
	public List fragments() {
		return fragments;
	}

