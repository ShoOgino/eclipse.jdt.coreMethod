	/**
	 * Remove whitespaces before and after the expression.
	 */	
	private void removeExtraBlanks(org.eclipse.jdt.internal.compiler.ast.Expression expression) {
		int start = expression.sourceStart;
		int end = expression.sourceEnd;
		int token;
		int trimLeftPosition = expression.sourceStart;
		int trimRigthPosition = expression.sourceEnd;
		boolean first = true;
		try {
			scanner = new Scanner(false /*comment*/, true /*whitespace*/, false /*nls*/, false /*assert*/, null /*task*/);
			scanner.setSource(this.compilationUnitSource);
			scanner.resetTo(start, end);
			while (true) {
				token = scanner.getNextToken();
				switch (token) {
					case Scanner.TokenNameWHITESPACE :
						if (first) {
							trimLeftPosition = scanner.currentPosition;
						}
						trimRigthPosition = scanner.startPosition - 1;
						break;
					case Scanner.TokenNameEOF :
						expression.sourceStart = trimLeftPosition;
						expression.sourceEnd = trimRigthPosition;
						return;
				}
				first = false;
			}
		} catch (InvalidInputException e){
		} finally {
			scanner = new Scanner(true /*comment*/, false /*whitespace*/, false /*nls*/, false /*assert*/, null /*task*/);
			scanner.setSource(this.compilationUnitSource);
		}
	}

