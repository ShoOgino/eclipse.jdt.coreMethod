	private void setTypeForVariableDeclarationExpression(LocalDeclaration localDeclaration, VariableDeclarationExpression variableDeclarationExpression, Type type, int extraDimension) {
		if (extraDimension != 0) {
			if (type.isArrayType()) {
				ArrayType arrayType = (ArrayType) type;
				int remainingDimensions = arrayType.getDimensions() - extraDimension;
				Type elementType = (Type) ASTNode.copySubtree(this.ast, arrayType.getElementType());
				if (remainingDimensions == 0)  {
					// the dimensions are after the name so the type of the fieldDeclaration is a simpleType
					variableDeclarationExpression.setType(elementType);
				} else {
					int end = retrieveEndOfExtraDimensionsPosition(localDeclaration.sourceEnd + 1, this.compilationUnitSource.length);
					ArrayType arrayType2 = this.ast.newArrayType(elementType, remainingDimensions);
					arrayType2.setSourceRange(elementType.getStartPosition(), end - elementType.getStartPosition() + 1);
					variableDeclarationExpression.setType(arrayType2);
				}
			} else {
				variableDeclarationExpression.setType(type);
			}
		} else {
			variableDeclarationExpression.setType(type);
		}
	}

