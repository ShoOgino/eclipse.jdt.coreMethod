	/**
	 * Returns the extended source length of the given node. Unlike
	 * {@link ASTNode#getStartPosition()} and {@link ASTNode#getLength()()},
	 * the extended source range may include comments and whitespace
	 * immediately before or after the normal source range for the node.
	 * 
	 * @param node the node
	 * @return a (possibly 0) length, or <code>0</code>
	 *    if no source position information is recorded for this node
	 * @see #getExtendedStartPosition(ASTNode)
	 * @since 3.0
	 */
	public int getExtendedLength(ASTNode node) {
		int lastPosition = lastPosition = node.getStartPosition() + node.getLength();
		if (this.trailingComments != null) {
			int[] range = (int[]) this.trailingComments.get(node);
			if (range != null) {
				Comment lastComment = this.comments[range[1]];
				lastPosition = lastComment.getStartPosition() + lastComment.getLength();
			}
		}
		return lastPosition - getExtendedStartPosition(node);
	}

