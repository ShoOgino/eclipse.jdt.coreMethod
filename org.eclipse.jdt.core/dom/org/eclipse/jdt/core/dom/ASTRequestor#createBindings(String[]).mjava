	/**
	 * Resolves bindings for the given binding keys.
	 * The given binding keys must have been obtained using {@link IBinding#getKey()}.
	 * <p>
	 * If a binding key cannot be resolved, <code>null</code> is put in the resulting array.
	 * </p>
	 * The resulting binding is undefined for a binding key representing a local element if the corresponding
	 * ast or another binding key in the same compilation unit was also requested by
	 * {@link ASTParser#createASTs(ICompilationUnit[], String[], ASTRequestor, IProgressMonitor)}.
	 * </p>
	 * 
	 * @param bindingKeys the keys of bindings to create
	 * @return the created bindings
	 * @see ASTParser#createASTs(ICompilationUnit[], String[], ASTRequestor, IProgressMonitor)
	 */
	public IBinding[] createBindings(String[] bindingKeys) {
		int length = bindingKeys.length;
		IBinding[] result = new IBinding[length];
		for (int i = 0; i < length; i++)
			result[i] = this.compilationUnitResolver.createBinding(bindingKeys[i]);
		return result;
	}

