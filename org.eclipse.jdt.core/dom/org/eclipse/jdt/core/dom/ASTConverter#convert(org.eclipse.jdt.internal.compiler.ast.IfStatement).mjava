	public IfStatement convert(org.eclipse.jdt.internal.compiler.ast.IfStatement statement) {
		IfStatement ifStatement = this.ast.newIfStatement();
		ifStatement.setSourceRange(statement.sourceStart, statement.sourceEnd - statement.sourceStart + 1);
		ifStatement.setExpression(convert(statement.condition));
		org.eclipse.jdt.internal.compiler.ast.Statement thenStatement = statement.thenStatement;
		org.eclipse.jdt.internal.compiler.ast.Statement elseStatement = statement.elseStatement;
		if (thenStatement != null) {
			if (thenStatement == org.eclipse.jdt.internal.compiler.ast.Block.None) {
				EmptyStatement emptyStatement = this.ast.newEmptyStatement();
				int start = retrieveStartingSemiColonPosition(statement.sourceStart, statement.sourceEnd);
				int end = retrieveEndingSemiColonPosition(start, statement.sourceEnd);
				emptyStatement.setSourceRange(start, end - start + 1);
				ifStatement.setThenStatement(emptyStatement);
			} else {
				ifStatement.setThenStatement(convert(statement.thenStatement));
			}
		}
		if (elseStatement != null) {
			if (elseStatement == org.eclipse.jdt.internal.compiler.ast.Block.None) {
				// retrieve the else position
				EmptyStatement emptyStatement = this.ast.newEmptyStatement();
				int start = retrieveElseEndingPosition(statement.sourceStart, statement.sourceEnd);
				start = retrieveStartingSemiColonPosition(statement.sourceStart, statement.sourceEnd);
				int end = retrieveEndingSemiColonPosition(start, statement.sourceEnd);
				emptyStatement.setSourceRange(start, end - start + 1);
				ifStatement.setElseStatement(emptyStatement);
			} else {
				ifStatement.setElseStatement(convert(elseStatement));
			}
		}
		return ifStatement;
	}

