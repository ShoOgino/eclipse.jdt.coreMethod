	public static int getExtraFlags(ClassFileReader reader) {
		int extraFlags = 0;

		if (reader.isNestedType()) {
			extraFlags |= ExtraFlags.IsMemberType;
		}

		if (reader.isLocal()) {
			extraFlags |= ExtraFlags.IsLocalType;
		}

		IBinaryNestedType[] memberTypes = reader.getMemberTypes();
		int memberTypeCounter = memberTypes == null ? 0 : memberTypes.length;
		if (memberTypeCounter > 0) {
			done : for (int i = 0; i < memberTypeCounter; i++) {
				int modifiers = memberTypes[i].getModifiers();
				// if the member type is static and not private
				if ((modifiers & ClassFileConstants.AccStatic) != 0 && (modifiers & ClassFileConstants.AccPrivate) == 0) {
					extraFlags |= ExtraFlags.HasNonPrivateStaticMemberTypes;
					break done;
				}
			}

		}

		return extraFlags;
	}

