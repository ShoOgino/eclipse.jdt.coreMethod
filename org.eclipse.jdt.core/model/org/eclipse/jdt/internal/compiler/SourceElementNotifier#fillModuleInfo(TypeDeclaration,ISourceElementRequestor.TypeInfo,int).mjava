private void fillModuleInfo(TypeDeclaration typeDeclaration, ISourceElementRequestor.TypeInfo typeInfo, int kind) {
	if (kind != TypeDeclaration.MODULE_DECL) return;
	ModuleDeclaration mod = (ModuleDeclaration)typeDeclaration;
	ModuleInfo modInfo = (ModuleInfo)typeInfo;
	modInfo.moduleName = mod.moduleName;
	if (mod.requiresCount > 0) {
		ISourceElementRequestor.RequiresInfo reqs[] = new ISourceElementRequestor.RequiresInfo[mod.requiresCount];
		for (int i = 0; i < mod.requiresCount; i++) {
			ISourceElementRequestor.RequiresInfo req = new ISourceElementRequestor.RequiresInfo();
			req.moduleName = CharOperation.concatWith(mod.requires[i].module.tokens, '.');
			req.modifiers = mod.requires[i].modifiers;
			reqs[i] = req;
		}
		modInfo.requires = reqs;
	}
	if (mod.exportsCount > 0) {
		ISourceElementRequestor.PackageExportInfo exps[] = new ISourceElementRequestor.PackageExportInfo[mod.exportsCount];
		for (int i = 0; i < mod.exportsCount; i++) {
			ISourceElementRequestor.PackageExportInfo exp = new ISourceElementRequestor.PackageExportInfo();
			exp.pkgName = mod.exports[i].pkgName;
			exps[i] = exp;
		}					
		modInfo.exports = exps;
	}
	if (mod.servicesCount > 0) {
		ISourceElementRequestor.ServicesInfo[] services = new ISourceElementRequestor.ServicesInfo[mod.servicesCount];
		for (int i = 0; i < services.length; i++) {
			ISourceElementRequestor.ServicesInfo ser = new ISourceElementRequestor.ServicesInfo();
			ser.serviceName = CharOperation.concatWith(mod.services[i].serviceInterface.getParameterizedTypeName(), '.');
			ser.implNames = new char[mod.services[i].implementations.length][];
			for (int j = 0; j < ser.implNames.length; j++) {
				ser.implNames[j] = CharOperation.concatWith(mod.services[i].implementations[j].getParameterizedTypeName(), '.');
			}
			services[i] = ser;
		}
		modInfo.services = services;
	}
	if (mod.usesCount > 0) {
		char[][] uses = new char[mod.usesCount][];
		for (int i = 0; i < uses.length; i++) {
			uses[i] = CharOperation.concatWith(mod.uses[i].serviceInterface.getParameterizedTypeName(), '.');
		}
		modInfo.usedServices = uses;
	}
}

