protected void consumeMethodHeaderExtendedDims() {
	// MethodHeaderExtendedDims ::= Dimsopt
	// now we update the returnType of the method
	MethodDeclaration md = (MethodDeclaration) this.astStack[this.astPtr];
	int extendedDims = this.intStack[this.intPtr--];
	this.extendsDim = extendedDims;
	if (extendedDims != 0) {
		TypeReference returnType = md.returnType;
		md.sourceEnd = this.endPosition;
		int dims = returnType.dimensions() + extendedDims;
		Annotation [][] annotationsOnDimensions = returnType.getAnnotationsOnDimensions();
		Annotation [][] annotationsOnExtendedDimensions = getAnnotationsOnDimensions(extendedDims);
		Annotation [][] annotationsOnAllDimensions = null;
		if (annotationsOnDimensions != null || annotationsOnExtendedDimensions != null) {
			annotationsOnAllDimensions = getMergedAnnotationsOnDimensions(returnType.dimensions(), annotationsOnDimensions, extendedDims, annotationsOnExtendedDimensions);
		}	
		md.returnType = copyDims(returnType, dims, annotationsOnAllDimensions);

		if (this.currentToken == TokenNameLBRACE) {
			md.bodyStart = this.endPosition + 1;
		}
	}
}

