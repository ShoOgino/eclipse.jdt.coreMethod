protected void consumeFormalParameter(boolean isVarArgs) {
	// FormalParameter ::= Type VariableDeclaratorId ==> false
	// FormalParameter ::= Modifiers Type VariableDeclaratorId ==> true
	/*
	astStack : 
	identifierStack : type identifier
	intStack : dim dim
	 ==>
	astStack : Argument
	identifierStack :  
	intStack :  
	*/

	identifierLengthPtr--;
	char[] parameterName = identifierStack[identifierPtr];
	long namePositions = identifierPositionStack[identifierPtr--];
	int extendedDimensions = this.intStack[this.intPtr--];
	int firstDimensions = this.intStack[this.intPtr--];
	final int typeDimensions = firstDimensions + extendedDimensions;
	TypeReference type = getTypeReference(typeDimensions);
	if (isVarArgs) {
		type = type.copyDims(typeDimensions + 1);
	}
	intPtr -= 3;
	Argument arg = 
		new Argument(
			parameterName, 
			namePositions, 
			type, 
			intStack[intPtr + 1], // modifiers
			isVarArgs);
	// consume annotations
	int length;
	if ((length = this.expressionLengthStack[this.expressionLengthPtr--]) != 0) {
		System.arraycopy(
			this.expressionStack, 
			(this.expressionPtr -= length) + 1, 
			arg.annotations = new Annotation[length], 
			0, 
			length); 
	}
	pushOnAstStack(arg);
	intArrayPtr--;
}

