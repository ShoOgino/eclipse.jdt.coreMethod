/* (non-Javadoc)
 * @see org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser#parseIdentifierTag()
 */
protected boolean parseIdentifierTag(boolean report) {
	int end = this.lineEnd+1;
	if (super.parseIdentifierTag(report) && this.index <= end) {
		if (this.tagValue == TAG_CATEGORY_VALUE) {
			// Store first category id
			int length = this.categories.length;
			if (++this.categoriesPtr >= length) {
				System.arraycopy(this.categories, 0, this.categories = new char[length+5][], 0, length);
				length += 5;
			}
			this.categories[this.categoriesPtr] = this.identifierStack[this.identifierPtr--];
			// Store optional additional category identifiers
			consumeToken();
			while (this.index < end) {
				if (readTokenSafely() == TerminalTokens.TokenNameIdentifier && (this.scanner.currentCharacter == ' ' || Character.isWhitespace(this.scanner.currentCharacter))) {
					if (this.index > (this.lineEnd+1)) break;
					// valid additional identifier
					if (++this.categoriesPtr >= length) {
						System.arraycopy(this.categories, 0, this.categories = new char[length+5][], 0, length);
						length += 5;
					}
					this.categories[this.categoriesPtr] = this.scanner.getCurrentIdentifierSource();
					consumeToken();
				} else {
					// TODO (frederic) raise warning for invalid syntax when javadoc spec will be finalized...
					break;
				}
			}
			// Reset position to end of line
			this.index = end;
			this.scanner.currentPosition = end;
			consumeToken();
		}
		return true;
	}
	return false;
}

