protected void notifySourceElementRequestor(RecordComponent recordComponent, TypeDeclaration declaringType) {
	assert declaringType.isRecord();

	// range check
	boolean isInRange =
				this.initialPosition <= recordComponent.declarationSourceStart
				&& this.eofPosition >= recordComponent.declarationSourceEnd;
	int recordComponentEndPosition = this.sourceEnds.get(recordComponent);
	if (recordComponentEndPosition == -1) {
		// use the declaration source end by default
		recordComponentEndPosition = recordComponent.declarationSourceEnd;
	}
	if (isInRange) {
		char[] typeName = CharOperation.concatWith(recordComponent.type.getParameterizedTypeName(), '.');
		ISourceElementRequestor.RecordComponentInfo recordComponentInfo = new ISourceElementRequestor.RecordComponentInfo();
		recordComponentInfo.typeAnnotated = ((recordComponent.bits & ASTNode.HasTypeAnnotations) != 0);
		recordComponentInfo.declarationStart = recordComponent.declarationSourceStart;
		recordComponentInfo.name = recordComponent.name;
		recordComponentInfo.type = typeName;
		recordComponentInfo.nameSourceStart = recordComponent.sourceStart;
		recordComponentInfo.nameSourceEnd = recordComponent.sourceEnd;
		recordComponentInfo.categories = this.nodesToCategories.get(recordComponent);
		recordComponentInfo.annotations = recordComponent.annotations;
		recordComponentInfo.node = recordComponent;
		this.requestor.enterRecordComponent(recordComponentInfo);
	}
	this.visitIfNeeded(recordComponent, declaringType);
	if (isInRange){
		this.requestor.exitRecordComponent(
			recordComponentEndPosition,
			recordComponent.declarationSourceEnd);
	}

}

