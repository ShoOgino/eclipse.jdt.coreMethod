	/**
	 * Defines access restriction rules for project import
	 */	
	public AccessRestriction getImportRestriction() {
		
		if (this.importRestriction == UNINIT_RESTRICTION) {
			char[][] accessibleFilesPatterns = getAccessRestrictionPatterns(this.accessibleFiles);
			char[][] nonAccessibleFilesPatterns = getAccessRestrictionPatterns(this.nonAccessibleFiles);
			if (accessibleFilesPatterns == null && nonAccessibleFilesPatterns == null) {
				this.importRestriction = null;
			} else {
				String messageTemplate;
				if (this.entryKind == CPE_PROJECT || this.entryKind == CPE_SOURCE) { // can be remote source entry when reconciling
					messageTemplate = org.eclipse.jdt.internal.core.util.Util.bind("restrictedAccess.project", "{0}", getPath().segment(0)); //$NON-NLS-1$//$NON-NLS-2$
				} else {
					IPath libPath = getPath();
					Object target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), libPath, false);
					String pathString;
					if (target instanceof java.io.File)
						pathString = libPath.toOSString();
					else
						pathString = libPath.makeRelative().toString();
					messageTemplate = org.eclipse.jdt.internal.core.util.Util.bind("restrictedAccess.library", "{0}", pathString); //$NON-NLS-1$//$NON-NLS-2$
				}	
				this.importRestriction = 
					new AccessRestriction(
						messageTemplate,
						accessibleFilesPatterns, 
						nonAccessibleFilesPatterns,
						null /* no further restriction */);
			}
		}
		return this.importRestriction;
	}

