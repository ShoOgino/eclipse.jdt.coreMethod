	@Override
	public char[][] listPackages(char[] moduleName) {
		switch (LookupStrategy.get(moduleName)) {
			case Named:
				IPackageFragmentRoot[] packageRoots = findModuleContext(moduleName);
				Set<String> packages = new HashSet<>();
				for (IPackageFragmentRoot packageRoot : packageRoots) {
					try {
						for (IJavaElement javaElement : packageRoot.getChildren()) {
							if (javaElement instanceof IPackageFragment && !((IPackageFragment) javaElement).isDefaultPackage())
								packages.add(javaElement.getElementName());
						}
					} catch (JavaModelException e) {
						Util.log(e, "Failed to retrieve packages from " + packageRoot); //$NON-NLS-1$
					}
				}
				return packages.stream().map(String::toCharArray).toArray(char[][]::new);
			default:
				throw new UnsupportedOperationException("can list packages only of a named module"); //$NON-NLS-1$
		}
	}

