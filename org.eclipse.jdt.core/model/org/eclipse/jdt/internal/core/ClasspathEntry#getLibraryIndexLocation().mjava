	/**
	 * This function computes the URL of the index location for this classpath entry. It returns null if the URL is
	 * invalid.
	 */
	public URL getLibraryIndexLocation() {
		switch(getEntryKind()) {
			case IClasspathEntry.CPE_LIBRARY :
				if (SHARED_INDEX_LOCATION != null) {
					try {
						String pathString = getPath().toPortableString();
						CRC32 checksumCalculator = new CRC32();
						checksumCalculator.update(pathString.getBytes());
						String fileName = Long.toString(checksumCalculator.getValue()) + ".index"; //$NON-NLS-1$
						return new URL("file", null, Paths.get(SHARED_INDEX_LOCATION, fileName).toString()); //$NON-NLS-1$
					} catch (MalformedURLException e1) {
						Util.log(e1); // should not happen if protocol known (eg. 'file')
					}
				}
				break;
			case IClasspathEntry.CPE_VARIABLE :
				break;
			default :
				return null;
		}
		if (this.extraAttributes == null) return null;
		for (int i= 0; i < this.extraAttributes.length; i++) {
			IClasspathAttribute attrib= this.extraAttributes[i];
			if (IClasspathAttribute.INDEX_LOCATION_ATTRIBUTE_NAME.equals(attrib.getName())) {
				String value = attrib.getValue();
				try {
					return new URL(value);
				} catch (MalformedURLException e) {
					return null;
				}
			}
		}
		return null;
	}

