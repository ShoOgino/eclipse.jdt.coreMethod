private IAnnotation getAnnotation(IBinaryAnnotation binaryAnnotation) {
	IBinaryElementValuePair[] binaryElementValuePairs = binaryAnnotation.getElementValuePairs();
	int pairsLength = binaryElementValuePairs.length;
	final IMemberValuePair[] members;
	if (pairsLength == 0) {
		members = Annotation.NO_MEMBER_VALUE_PAIRS;
	} else {
		members = new IMemberValuePair[pairsLength];
		for (int i = 0; i < pairsLength; i++) {
			IBinaryElementValuePair binaryElementValuePair = binaryElementValuePairs[i];
			MemberValuePair memberValuePair = new MemberValuePair(new String(binaryElementValuePair.getName()));
			memberValuePair.value = getMemberValue(memberValuePair, binaryElementValuePair.getValue());
			members[i] = memberValuePair;
		}
	}
	char[] typeName = org.eclipse.jdt.core.Signature.toCharArray(CharOperation.replaceOnCopy(binaryAnnotation.getTypeName(), '/', '.'));
	return new Annotation(this, new String(typeName)) {
		public IMemberValuePair[] getMemberValuePairs() throws JavaModelException {
			return members;
		}
	};
}

