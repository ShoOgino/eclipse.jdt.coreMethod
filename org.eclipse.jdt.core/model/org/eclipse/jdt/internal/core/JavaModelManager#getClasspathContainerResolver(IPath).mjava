	/**
 	 * Retrieve the client classpath container resolver for a given container path
 	 */
	public static ClasspathContainerResolver getClasspathContainerResolver(IPath containerPath){
		
		Plugin jdtCorePlugin = JavaCore.getPlugin();
		if (jdtCorePlugin == null) return null;

		IExtensionPoint extension = jdtCorePlugin.getDescriptor().getExtensionPoint(CPCONTAINER_RESOLVER_EXTPOINT_ID);
		if (extension != null) {
			IExtension[] extensions =  extension.getExtensions();
			for(int i = 0; i < extensions.length; i++){
				IConfigurationElement [] configElements = extensions[i].getConfigurationElements();
					IPluginDescriptor plugin = extension.getDeclaringPluginDescriptor();
					if (plugin.isPluginActivated()) {
						int bestMatch = -1;
						IConfigurationElement bestResolver = null;
						
						for(int j = 0; j < configElements.length; j++){
								String prefixAttribute = configElements[j].getAttribute("prefix"); //$NON-NLS-1$
								if (prefixAttribute != null){
									IPath resolverPrefixPath = new Path(prefixAttribute);
									if (resolverPrefixPath.isPrefixOf(containerPath)){
										if (resolverPrefixPath.segmentCount() > bestMatch){
											bestResolver = configElements[j];
											bestMatch = resolverPrefixPath.segmentCount();
										}				
									}
								}
						}
						if (bestResolver != null){
							if (JavaModelManager.CP_RESOLVE_VERBOSE) {
								System.out.println("CPVariable INIT - found initializer: "+containerPath+" --> " + bestResolver.getAttribute("class"));//$NON-NLS-3$//$NON-NLS-2$//$NON-NLS-1$
							}						
							try {
								Object execExt = bestResolver.createExecutableExtension("class"); //$NON-NLS-1$
								if (execExt instanceof ClasspathContainerResolver){
									return (ClasspathContainerResolver)execExt;
								}
							} catch(CoreException e) {
							}
						}
					}
			}	
		}
		return null;
	}	

