private IBinaryType getJarBinaryTypeInfo(PackageFragment pkg, boolean fullyInitialize) throws CoreException, IOException, ClassFormatException {
	BinaryTypeDescriptor descriptor = BinaryTypeFactory.createDescriptor(pkg, this);

	if (descriptor == null) {
		return null;
	}

	IBinaryType type = BinaryTypeFactory.readType(descriptor, fullyInitialize, null);

	// TODO(sxenos): setup the external annotation provider if the IBinaryType came from the index
	// TODO(sxenos): the old code always passed null as the third argument to setupExternalAnnotationProvider,
	// but this looks like a bug. I've preserved it for now but we need to figure out what was supposed to go
	// there.
	if (type instanceof ClassFileReader) {
		ClassFileReader reader = (ClassFileReader) type;

		JarPackageFragmentRoot root = (JarPackageFragmentRoot) pkg.getParent();
		if (root.getKind() == IPackageFragmentRoot.K_BINARY) {
			JavaProject javaProject = (JavaProject) getAncestor(IJavaElement.JAVA_PROJECT);
			IClasspathEntry entry = javaProject.getClasspathEntryFor(getPath());
			if (entry != null) {
				String entryName = new String(CharArrayUtils.concat(
						JavaNames.fieldDescriptorToBinaryName(descriptor.fieldDescriptor), SuffixConstants.SUFFIX_CLASS));
				IProject project = javaProject.getProject();
				IPath externalAnnotationPath = ClasspathEntry.getExternalAnnotationPath(entry, project, false); // unresolved for use in ExternalAnnotationTracker
				if (externalAnnotationPath != null)
					setupExternalAnnotationProvider(project, externalAnnotationPath, null, reader,
							entryName.substring(0, entryName.length() - SuffixConstants.SUFFIX_CLASS.length));
			}
		}
	}

	return type;
}

