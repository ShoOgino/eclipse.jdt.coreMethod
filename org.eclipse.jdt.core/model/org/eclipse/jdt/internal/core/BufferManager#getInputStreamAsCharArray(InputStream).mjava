	/**
	 * Returns the given input stream's contents as a character array.
	 */
	protected static char[] getInputStreamAsCharArray(InputStream stream)
		throws JavaModelException {
		InputStreamReader reader = null;
		reader = new InputStreamReader(stream);
		char[] contents = new char[0];
		char[] grow;
		try {
			int available = stream.available();
			int charsRead = 0;
			int pos = 0;
			while (available > 0) {
				grow = new char[contents.length + available];
				System.arraycopy(contents, 0, grow, 0, contents.length);
				contents = grow;
				charsRead = reader.read(contents, pos, available);
				available = stream.available();
			}
			if (charsRead < available && charsRead > 0) {
				grow = new char[contents.length - (available - charsRead)];
				System.arraycopy(contents, 0, grow, 0, grow.length);
				contents = grow;
			}
		} catch (IOException e) {
			throw new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);
		} finally {
			try {
				reader.close();
			} catch (IOException ioe) {
				throw new JavaModelException(ioe, IJavaModelStatusConstants.IO_EXCEPTION);
			}
		}
		return contents;
	}

