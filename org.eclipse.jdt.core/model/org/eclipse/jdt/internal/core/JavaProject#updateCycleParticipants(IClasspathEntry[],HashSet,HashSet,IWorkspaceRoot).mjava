	/**
	 * If a cycle is detected, then cycleParticipants contains all the project involved in this cycle (directly or indirectly),
	 * no cycle if the set is empty (and started empty)
	 */
	public void updateCycleParticipants(IClasspathEntry[] preferredClasspath, HashSet visited, HashSet cycleParticipants, IWorkspaceRoot workspaceRoot){

		if (!visited.add(this)) {
			cycleParticipants.addAll(visited);
			return;
		}
		
		try {
			IClasspathEntry[] classpath;
			if (preferredClasspath == null) {
				classpath = getResolvedClasspath(true);
			} else {
				classpath = preferredClasspath;
			}
			for (int i = 0, length = classpath.length; i < length; i++) {
				IClasspathEntry entry = classpath[i];
				
				if (entry.getEntryKind() == IClasspathEntry.CPE_PROJECT){
					String projectName = entry.getPath().lastSegment();
					JavaProject project = (JavaProject)JavaCore.create(workspaceRoot.getProject(projectName));
					project.updateCycleParticipants(null, visited, cycleParticipants, workspaceRoot);
				}
			}
		} catch(JavaModelException e){
		}
		visited.remove(this);
	}

