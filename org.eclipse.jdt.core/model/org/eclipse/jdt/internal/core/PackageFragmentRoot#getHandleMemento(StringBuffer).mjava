/**
 * @see JavaElement#getHandleMemento(StringBuffer)
 */
@Override
protected void getHandleMemento(StringBuffer buff) {
	IPath path;
	IResource underlyingResource = getResource();
	if (underlyingResource != null) {
		// internal jar or regular root
		if (resource().getProject().equals(getJavaProject().getProject())) {
			path = underlyingResource.getProjectRelativePath();
		} else {
			path = underlyingResource.getFullPath();
		}
	} else {
		// external jar
		path = getPath();
	}
	((JavaElement)getParent()).getHandleMemento(buff);
	buff.append(getHandleMementoDelimiter());
	escapeMementoName(buff, path.toString());
	if (org.eclipse.jdt.internal.compiler.util.Util.isJrt(path.toOSString())) {
		buff.append(JavaElement.JEM_MODULE);
		escapeMementoName(buff, getElementName());
	}
	try {
		IClasspathEntry entry = getJavaProject().getClasspathEntryFor(getPath());
		if (entry != null) {
			for (IClasspathAttribute attribute : entry.getExtraAttributes()) {
				appendEscapedDelimiter(buff, JavaElement.JEM_PACKAGEFRAGMENTROOT);
				escapeMementoName(buff, attribute.getName());
				appendEscapedDelimiter(buff, JavaElement.JEM_PACKAGEFRAGMENTROOT);
				escapeMementoName(buff, attribute.getValue());
			}
		}
	} catch (JavaModelException e) {
		// ignore
	}
}

