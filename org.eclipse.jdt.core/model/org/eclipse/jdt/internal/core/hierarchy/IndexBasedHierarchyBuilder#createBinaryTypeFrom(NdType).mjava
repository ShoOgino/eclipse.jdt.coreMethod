private static HierarchyBinaryType createBinaryTypeFrom(NdType type) {
	char[] enclosingTypeName = null;
	NdTypeSignature enclosingType = type.getDeclaringType();
	if (enclosingType != null) {
		enclosingTypeName = enclosingType.getRawType().getSimpleName().getChars();
	}
	//final char[][] typeParameterSignatures;
	NdTypeId typeId = type.getTypeId();
	HierarchyBinaryType result = new HierarchyBinaryType(type.getModifiers(), typeId.getBinaryName(),
			typeId.getSimpleName().getChars(), enclosingTypeName, null);
	// TODO(sxenos): Fill in the correct generic signature rather than passing null here

	NdTypeSignature superClass = type.getSuperclass();
	if (superClass != null) {
		result.recordSuperclass(superClass.getRawType().getBinaryName());
	}

	for (NdTypeInterface interf : type.getInterfaces()) {
		result.recordInterface(interf.getInterface().getRawType().getBinaryName());
	}
	return result;
}

