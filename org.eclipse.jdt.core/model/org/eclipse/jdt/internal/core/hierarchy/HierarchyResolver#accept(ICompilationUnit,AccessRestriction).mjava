/**
 * Add an additional compilation unit.
 * @param sourceUnit
 */
@Override
public void accept(ICompilationUnit sourceUnit, AccessRestriction accessRestriction) {
	if (CharOperation.equals(TypeConstants.MODULE_INFO_NAME, sourceUnit.getMainTypeName())) {
		// module is needed for resolving, so parse and build it now:
		CompilationResult unitResult = new CompilationResult(sourceUnit, 1, 1, this.options.maxProblemsPerUnit);
		CompilationUnitDeclaration parsedUnit = basicParser().dietParse(sourceUnit, unitResult);
		this.lookupEnvironment.buildTypeBindings(parsedUnit, accessRestriction);
		this.lookupEnvironment.completeTypeBindings(parsedUnit, true); // work done inside checkAndSetImports()
	} else {
		//System.out.println("Cannot accept compilation units inside the HierarchyResolver.");
		this.lookupEnvironment.problemReporter.abortDueToInternalError(
			new StringBuffer(Messages.accept_cannot)
				.append(sourceUnit.getFileName())
				.toString());
	}
}

