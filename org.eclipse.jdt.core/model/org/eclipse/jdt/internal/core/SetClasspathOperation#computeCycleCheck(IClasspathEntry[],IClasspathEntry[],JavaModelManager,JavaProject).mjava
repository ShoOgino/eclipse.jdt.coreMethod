	/**
	 * Computes whether a cycle check is needed and update the needCycleCheck field.
	 */
	protected void computeCycleCheck(
		IClasspathEntry[] oldResolvedPath,
		IClasspathEntry[] newResolvedPath,
		JavaModelManager manager,
		JavaProject project) {

		for (int i = 0, oldLength = oldResolvedPath.length; i < oldLength; i++) {
			int index = classpathContains(newResolvedPath, oldResolvedPath[i]);
			if (oldResolvedPath[i].getEntryKind() == IClasspathEntry.CPE_PROJECT
				&& (index == -1
						|| (oldResolvedPath[i].isExported() != newResolvedPath[index].isExported()))) {
					this.needCycleCheck = true;
					return;
			}
		}

		for (int i = 0, newLength = newResolvedPath.length; i < newLength; i++) {
			int index = classpathContains(oldResolvedPath, newResolvedPath[i]);
			if (newResolvedPath[i].getEntryKind() == IClasspathEntry.CPE_PROJECT
					&& index == -1) {
				this.needCycleCheck = true;
				return; 
			} // classpath reordering has already been handled in previous loop
		}
	}

