static char[][] internSimpleNames(char[][] simpleNames, boolean removeWellKnown) {
	if (simpleNames == null) return EmptySimpleNames;
	int length = simpleNames.length;
	if (length == 0) return EmptySimpleNames;

	ArrayList keepers = new ArrayList(length);
	next : for (int i = 0; i < length; i++) {
		char[] name = simpleNames[i];
		for (int j = 0, k = InternedSimpleNames.size(); j < k; j++) {
			char[] internedName = (char[]) InternedSimpleNames.get(j);
			if (CharOperation.equals(name, internedName)) {
				keepers.add(internedName);
				continue next;
			}
		}
		for (int j = 0, k = WellKnownSimpleNames.length; j < k; j++) {
			if (CharOperation.equals(name, WellKnownSimpleNames[j])) {
				if (!removeWellKnown)
					keepers.add(WellKnownSimpleNames[j]);
				continue next;
			}
		}
		InternedSimpleNames.add(name);
		keepers.add(name);
	}
	char[][] result = new char[keepers.size()][];
	keepers.toArray(result);
	return result;
}

