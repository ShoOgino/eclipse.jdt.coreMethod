static char[][][] internQualifiedNames(char[][][] qualifiedNames, boolean removeWellKnown) {
	if (qualifiedNames == null) return EmptyQualifiedNames;
	int length = qualifiedNames.length;
	if (length == 0) return EmptyQualifiedNames;

	ArrayList keepers = new ArrayList(length);
	next : for (int i = 0; i < length; i++) {
		char[][] qualifiedName = qualifiedNames[i];
		for (int j = 0, k = InternedQualifiedNames.size(); j < k; j++) {
			char[][] internedName = (char[][]) InternedQualifiedNames.get(j);
			if (CharOperation.equals(qualifiedName, internedName)) {
				keepers.add(internedName);
				continue next;
			}
		}
		for (int j = 0, k = WellKnownQualifiedNames.length; j < k; j++) {
			if (CharOperation.equals(qualifiedName, WellKnownQualifiedNames[j])) {
				if (!removeWellKnown)
					keepers.add(WellKnownQualifiedNames[j]);
				continue next;
			}
		}
		qualifiedName = internSimpleNames(qualifiedName, false);
		InternedQualifiedNames.add(qualifiedName);
		keepers.add(qualifiedName);
	}
	char[][][] result = new char[keepers.size()][][];
	keepers.toArray(result);
	return result;
}

