protected void updateIndex(Openable element, IResourceDelta delta){

	if (indexManager == null) return;
	
	switch(element.getElementType()){
		case IJavaElement.JAVA_PROJECT : 
			switch (delta.getKind()) {
				case IResourceDelta.ADDED :
				case IResourceDelta.OPEN:
					indexManager.indexAll((IProject)delta.getResource());
					break;
			}
			break;
		case IJavaElement.CLASS_FILE :
			IFile file = (IFile)delta.getResource();
			IFolder binaryFolder;
			try {
				binaryFolder = (IFolder)element.getPackageFragmentRoot().getUnderlyingResource();
			} catch (JavaModelException e) {
				break;
			}
			switch (delta.getKind()) {
				case IResourceDelta.CHANGED:
					// no need to index if the content has not changed
					if ((delta.getFlags() & IResourceDelta.CONTENT) == 0) break;
				case IResourceDelta.ADDED:
					if (file.isLocal(IResource.DEPTH_ZERO)) indexManager.add(file, binaryFolder);
					break;
				case IResourceDelta.REMOVED:
					indexManager.remove(file.getFullPath().toString(), binaryFolder);
					break;
			}
			break;
		case IJavaElement.COMPILATION_UNIT :
			file = (IFile)delta.getResource();
			switch (delta.getKind()) {
				case IResourceDelta.CHANGED:
					// no need to index if the content has not changed
					if ((delta.getFlags() & IResourceDelta.CONTENT) == 0) break;
				case IResourceDelta.ADDED:
					if (file.isLocal(IResource.DEPTH_ZERO)) indexManager.add(file, file.getProject());
					break;
				case IResourceDelta.REMOVED:
					indexManager.remove(file.getFullPath().toString(), file.getProject());
					break;
			}
	}				
}

