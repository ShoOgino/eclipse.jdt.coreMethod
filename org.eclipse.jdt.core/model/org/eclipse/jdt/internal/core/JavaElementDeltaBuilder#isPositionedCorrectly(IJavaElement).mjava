	/**
	 * Answers true if the elements position has not changed.
	 * Takes into account additions so that elements following
	 * new elements will not appear out of place.
	 */
	private boolean isPositionedCorrectly(IJavaElement element) {
		ListItem oldListItem = this.getOldPosition(element);
		if (oldListItem == null)
			return false;
		IJavaElement oldPrevious = oldListItem.previous;
		ListItem newListItem = this.getNewPosition(element);
		if (newListItem == null)
			return false;
		IJavaElement newPrevious = newListItem.previous;
		if (oldPrevious == newPrevious)
			return true;
		IJavaElement lastNewPrevious = null;
		while (lastNewPrevious != newPrevious) {
			if (isIdentical((JavaElement) oldPrevious, (JavaElement) newPrevious))
				return true;
			lastNewPrevious = newPrevious;
			// if newPrevious is null at this time we should exit the loop.
			if (newPrevious == null)
				break;
			newPrevious = (this.getNewPosition(newPrevious)).previous;
		}
		return false;
	}

