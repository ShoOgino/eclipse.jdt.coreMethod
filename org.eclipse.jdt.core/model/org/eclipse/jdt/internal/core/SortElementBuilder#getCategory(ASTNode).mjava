	public static int getCategory(ASTNode node) {
		Hashtable options = JavaCore.getOptions();
		switch(node.getNodeType()) {
			case ASTNode.METHOD_DECLARATION :
				MethodDeclaration methodDeclaration= (MethodDeclaration) node;
				if (methodDeclaration.isConstructor()) {
					return Integer.parseInt((String)options.get(JavaCore.SORTING_CONSTRUCTOR_ORDER));
				}
				int modifiers = methodDeclaration.getModifiers();
				if (Flags.isStatic(modifiers)) {
					return Integer.parseInt((String)options.get(JavaCore.SORTING_STATIC_METHOD_ORDER));
				} else {
					return Integer.parseInt((String)options.get(JavaCore.SORTING_METHOD_ORDER));
				}
			case ASTNode.FIELD_DECLARATION :
				modifiers = ((FieldDeclaration) node).getModifiers();
				if (Flags.isStatic(modifiers)) {
					return Integer.parseInt((String)options.get(JavaCore.SORTING_STATIC_FIELD_ORDER));
				} else {
					return Integer.parseInt((String)options.get(JavaCore.SORTING_FIELD_ORDER));
				}
			case ASTNode.TYPE_DECLARATION :
				return Integer.parseInt((String)options.get(JavaCore.SORTING_TYPE_ORDER));
			case ASTNode.INITIALIZER :
				modifiers = ((Initializer) node).getModifiers();
				if (Flags.isStatic(modifiers)) {
					return Integer.parseInt((String)options.get(JavaCore.SORTING_STATIC_INITIALIZER_ORDER));
				} else {
					return Integer.parseInt((String)options.get(JavaCore.SORTING_INITIALIZER_ORDER));
				}
		}
		return 0;
	}

