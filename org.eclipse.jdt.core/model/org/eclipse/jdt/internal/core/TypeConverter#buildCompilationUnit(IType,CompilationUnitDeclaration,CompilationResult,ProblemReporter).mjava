	public static TypeDeclaration buildCompilationUnit(IType type, CompilationUnitDeclaration compilationUnit, CompilationResult compilationResult, ProblemReporter problemReporter)  {
		try {
			char[] fullyQualifiedName = type.getFullyQualifiedName().toCharArray();
			char[] packageName = CharOperation.subarray(fullyQualifiedName, 0,CharOperation.lastIndexOf('.', fullyQualifiedName));
			
			if (packageName != null && packageName.length > 0) { 
				compilationUnit.currentPackage = new ImportReference(CharOperation.splitOn('.', packageName), new long[]{0}, false);
			}
		
			/* convert type */
			TypeDeclaration typeDeclaration = convert(type, null, null, compilationResult);
			
			IType alreadyComputedMember = type;
			IType parent = type.getDeclaringType();
			TypeDeclaration previousDeclaration = typeDeclaration;
			while(parent != null) {
				TypeDeclaration declaration = convert(parent, alreadyComputedMember, (MemberTypeDeclaration)previousDeclaration, compilationResult);
				
				alreadyComputedMember = parent;
				previousDeclaration = declaration;
				parent = parent.getDeclaringType();
			}
			
			compilationUnit.types = new TypeDeclaration[]{previousDeclaration};

			return typeDeclaration;
		} catch(JavaModelException e) {
			return null;
		}
	}

