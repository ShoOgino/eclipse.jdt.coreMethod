/**
 * @private	For testing purposes only
 */
public void printStats() {
	int forwardListLength = 0;
	LRUCacheEntry entry = fEntryQueue;
	while(entry != null) {
		forwardListLength++;
		entry = entry._fNext;
	}
	System.out.println("Forward length: " + forwardListLength); //$NON-NLS-1$
	
	int backwardListLength = 0;
	entry = fEntryQueueTail;
	while(entry != null) {
		backwardListLength++;
		entry = entry._fPrevious;
	}
	System.out.println("Backward length: " + backwardListLength); //$NON-NLS-1$

	Enumeration keys = fEntryTable.keys();
	ArrayList v = new ArrayList();
	class Temp {
		public Class fClass;
		public int fCount;
		public Temp(Class aClass) {
			fClass = aClass;
			fCount = 1;
		}
		public String toString() {
			return "Class: " + fClass + " has " + fCount + " entries."; //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-1$
		}
	}
	java.util.HashMap h = new java.util.HashMap();
	while(keys.hasMoreElements()) {
		entry = (LRUCacheEntry)fEntryTable.get(keys.nextElement());
		Class key = entry._fValue.getClass();
		Temp t = (Temp)h.get(key);
		if (t == null) {
			h.put(key, new Temp(key));
		} else {
			t.fCount++;
		}
	}

	for (Iterator iter = h.keySet().iterator(); iter.hasNext();){
		System.out.println(h.get(iter.next()));
	}
}

