	private static char[][] generateNonConstantName(char[][] nameParts, int namePartsPtr, boolean onlyLongest) {
		char[][] names;
		if (onlyLongest) {
			names = new char[1][];
		} else {
			names = new char[namePartsPtr + 1][];
		}

		char[] namePart = nameParts[0];

		char[] name = CharOperation.toLowerCase(namePart);

		if (!onlyLongest) {
			names[namePartsPtr] = name;
		}

		char[] nameSuffix = namePart;

		for (int i = 1; i <= namePartsPtr; i++) {
			namePart = nameParts[i];

			name = CharOperation.concat(CharOperation.toLowerCase(namePart), nameSuffix);
			// https://bugs.eclipse.org/bugs/show_bug.cgi?id=283539
			// Only the first word is converted to lower case and the rest of them are not changed for non-constants

			if (!onlyLongest) {
				names[namePartsPtr - i] = name;
			}

			nameSuffix = CharOperation.concat(namePart, nameSuffix);
		}
		if (onlyLongest) {
			names[0] = name;
		}
		return names;
	}

