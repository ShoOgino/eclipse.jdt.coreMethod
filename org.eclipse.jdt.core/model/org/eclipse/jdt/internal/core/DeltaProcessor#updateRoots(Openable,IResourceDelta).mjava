/*
 * Update the roots that are affected by the addition or the removal of the given project.
 */
private void updateRoots(Openable project, IResourceDelta projectDelta) {
	IPath projectPath = project.getPath();
	Iterator iterator = this.roots.keySet().iterator();
	while (iterator.hasNext()) {
		IPath path = (IPath)iterator.next();
		if (projectPath.isPrefixOf(path) && !projectPath.equals(path)) {
			IResourceDelta rootDelta = projectDelta.findMember(path.removeFirstSegments(1));
			IJavaProject rootProject = (IJavaProject)this.roots.get(path);
			try {
				this.updateCurrentDeltaAndIndex(rootDelta, IJavaElement.PACKAGE_FRAGMENT_ROOT, rootProject);
			} catch (JavaModelException e) {
			}
			HashSet set = (HashSet)this.otherRoots.get(path);
			if (set != null) {
				Iterator otherProjects = set.iterator();
				while (otherProjects.hasNext()) {
					rootProject = (IJavaProject)otherProjects.next();
					try {
						this.updateCurrentDeltaAndIndex(rootDelta, IJavaElement.PACKAGE_FRAGMENT_ROOT, rootProject);
					} catch (JavaModelException e) {
					}
				}
			}
		}
	}
}
