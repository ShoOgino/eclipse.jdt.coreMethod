	/**
	 * Reset secondary types cache for a project got from given path.
	 * If secondary types cache already exist, do not reset it now to avoid
	 * cache desynchronization (this reset is done in indexing thread...).
	 * Instead flag the cache as dirty to store the fact that current cache
	 * should be recomputed when indexing will be ended.
	 * 
	 * @param path Path of file containing a secondary type
	 */
	public void resetSecondaryTypesCache(String path) {
		if (VERBOSE) {
			StringBuffer buffer = new StringBuffer("JavaModelManager.resetSecondaryTypePaths("); //$NON-NLS-1$
			buffer.append(path);
			buffer.append(')');
			Util.verbose(buffer.toString());
		}
		IWorkspaceRoot wRoot = ResourcesPlugin.getWorkspace().getRoot();
		IResource resource = wRoot.findMember(path);
		if (resource != null) {
			PerProjectInfo projectInfo = getPerProjectInfo(resource.getProject(), false);
			if (projectInfo != null) {
				if (VERBOSE) {
					Util.verbose("-> reset cache for project: "+resource.getProject().getName()); //$NON-NLS-1$
				}
				if (projectInfo.secondaryTypes != null) {
					Object dirty = projectInfo.secondaryTypes.get(DIRTY_CACHE);
					if (dirty == null) {
						projectInfo.secondaryTypes.put(DIRTY_CACHE, resource);
					} else {
						HashSet resources = (dirty instanceof HashSet) ? (HashSet) dirty : new HashSet(3);
						resources.add(resource);
						projectInfo.secondaryTypes.put(DIRTY_CACHE, resource);
					}
				}
			}
		}
	}

