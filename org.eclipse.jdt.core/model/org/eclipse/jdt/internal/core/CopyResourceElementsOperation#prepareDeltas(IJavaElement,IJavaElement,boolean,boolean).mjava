	/**
	 * Sets the deltas to register the changes resulting from this operation
	 * for this source element and its destination.
	 * If the operation is a cross project operation<ul>
	 * <li>On a copy, the delta should be rooted in the dest project
	 * <li>On a move, two deltas are generated<ul>
	 * 			<li>one rooted in the source project
	 *			<li>one rooted in the destination project
	 * <li> When a CU is being overwritten, the delta on the destination will be of type F_CONTENT </ul></ul>
	 * If the operation is rooted in a single project, the delta is rooted in that project
	 *
	 */
	protected void prepareDeltas(IJavaElement sourceElement, IJavaElement destinationElement, boolean isMove, boolean overWriteCU) {
		if (Util.isExcluded(sourceElement) || Util.isExcluded(destinationElement)) return;

		IJavaProject destProject = destinationElement.getJavaProject();
		if (isMove) {
			IJavaProject sourceProject = sourceElement.getJavaProject();
			getDeltaFor(sourceProject).movedFrom(sourceElement, destinationElement);
			if (!overWriteCU) {
				getDeltaFor(destProject).movedTo(destinationElement, sourceElement);
				return;
			}
		} else {
			if (!overWriteCU) {
				getDeltaFor(destProject).added(destinationElement);
				return;
			}
		}
		getDeltaFor(destinationElement.getJavaProject()).changed(destinationElement, IJavaElementDelta.F_CONTENT);
	}

