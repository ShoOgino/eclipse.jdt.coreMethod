	private void checkModulePackages(IJavaElementRequestor requestor, IModuleContext context, int pkgIndex) {
		Object value = this.packageFragments.valueTable[pkgIndex];
		// reuse existing String[]
		String[] pkgName = (String[]) this.packageFragments.keyTable[pkgIndex];
		context.getEnvironment().forEach(r -> {
			if (value instanceof PackageFragmentRoot) {
				Object toCompare = value;
				// TODO: need better representation of IModuleEnvironment and IModulePathEntry
				// in the model to avoid comparison based on instance
				if (r instanceof JavaProject) {
					toCompare  = ((PackageFragmentRoot)value).getJavaProject();
				}
				if (r.equals(toCompare)) {
					PackageFragmentRoot root = (PackageFragmentRoot) value;
					requestor.acceptPackageFragment(root.getPackageFragment(pkgName));
				}
			} else {
				IPackageFragmentRoot[] roots = (IPackageFragmentRoot[]) value;
				if (roots != null) {
					for (int i = 0, length = roots.length; i < length; i++) {
						if (requestor.isCanceled())
							return;
						PackageFragmentRoot root = (PackageFragmentRoot) roots[i];
						Object toCompare = root;
						if (r instanceof JavaProject) {
							toCompare  = root.getJavaProject();
						}
						if (r.equals(toCompare))
							requestor.acceptPackageFragment(root.getPackageFragment(pkgName));
					}
				}
			}
		});
	}

