		/**
		 * @see org.eclipse.core.runtime.preferences.IEclipsePreferences.IPreferenceChangeListener#preferenceChange(org.eclipse.core.runtime.preferences.IEclipsePreferences.PreferenceChangeEvent)
		 */
		public void preferenceChange(IEclipsePreferences.PreferenceChangeEvent event) {
			String propertyName = event.getKey();
			if (propertyName.startsWith(CP_VARIABLE_PREFERENCES_PREFIX)) {
				String varName = propertyName.substring(CP_VARIABLE_PREFERENCES_PREFIX.length());
				JavaModelManager manager = getJavaModelManager();
				if (manager.variablesWithInitializer.contains(varName)) {
					// revert preference value as we will not apply it to JavaCore classpath variable
					String oldValue = (String) event.getOldValue();
					if (oldValue == null) {
						// unexpected old value => remove variable from set
						manager.variablesWithInitializer.remove(varName);
					} else {
						manager.getInstancePreferences().put(varName, oldValue);
					}
				} else {
					String newValue = (String)event.getNewValue();
					if (newValue != null && !(newValue = newValue.trim()).equals(CP_ENTRY_IGNORE)) {
						manager.variables.put(varName, new Path(newValue));
					} else {
						manager.variables.remove(varName);
					}
				}
			}
			if (propertyName.startsWith(CP_CONTAINER_PREFERENCES_PREFIX)) {
				recreatePersistedContainer(propertyName, (String)event.getNewValue(), false);
			}
		}

