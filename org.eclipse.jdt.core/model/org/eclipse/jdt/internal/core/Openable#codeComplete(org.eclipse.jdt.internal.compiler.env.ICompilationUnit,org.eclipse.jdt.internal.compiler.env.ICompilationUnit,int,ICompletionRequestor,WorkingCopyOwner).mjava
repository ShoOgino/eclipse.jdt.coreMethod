protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException {
	if (requestor == null) {
		throw new IllegalArgumentException(Util.bind("codeAssist.nullRequestor")); //$NON-NLS-1$
	}
	IBuffer buffer = getBuffer();
	if (buffer == null) {
		return;
	}
	if (position < -1 || position > buffer.getLength()) {
		throw new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.INDEX_OUT_OF_BOUNDS));
	}
	JavaProject project = (JavaProject) getJavaProject();
	SearchableEnvironment environment = null;
	NameLookup nameLookup = null;
	try {
		// set unit to skip
		environment = (SearchableEnvironment) project.getSearchableNameEnvironment();
		environment.unitToSkip = unitToSkip;
	
		// set the units to look inside
		nameLookup = project.getNameLookup();
		JavaModelManager manager = JavaModelManager.getJavaModelManager();
		ICompilationUnit[] workingCopies = manager.getWorkingCopies(owner, true/*add primary WCs*/);
		nameLookup.setUnitsToLookInside(workingCopies);

		// code complete
		CompletionEngine engine = new CompletionEngine(environment, new CompletionRequestorWrapper(requestor,nameLookup), project.getOptions(true), project);
		engine.complete(cu, position, 0);
	} finally {
		if (environment != null) {
			environment.unitToSkip = null;
		}
		if (nameLookup != null) {
			nameLookup.setUnitsToLookInside(null);
		}
	}
}

