	/*
	 * Returns the type of the java element the given delta matches to.
	 * Returns -1 if unknown (e.g. a non-java resource or excluded .java file)
	 */
	private int elementType(IResource res, int kind, int flags, int parentType, RootInfo rootInfo) {
		switch (parentType) {
			case IJavaElement.JAVA_MODEL:
				if (kind != IResourceDelta.CHANGED) {
					// change on the project itself
					return IJavaElement.JAVA_PROJECT;
				} else if ((flags & IResourceDelta.OPEN) != 0) {
					// project is opened or closed
					return IJavaElement.JAVA_PROJECT;
				} else if ((flags & IResourceDelta.DESCRIPTION) != 0) {
						// project's description has changed: need to check if java nature has changed
						IProject proj = res.getProject();
						boolean wasJavaProject = JavaModelManager.getJavaModelManager().getJavaModel().findJavaProject(proj) != null;
						boolean isJavaProject = JavaProject.hasJavaNature(proj);
						if (wasJavaProject != isJavaProject) {
							return IJavaElement.JAVA_PROJECT;
						}
				} // else see below
			case IJavaElement.JAVA_PROJECT:
				if (rootInfo == null) {
					rootInfo = this.rootInfo(res.getFullPath());
				}
				if (rootInfo != null && (rootInfo.project.getProject().getFullPath().isPrefixOf(res.getFullPath()))) {
					return IJavaElement.PACKAGE_FRAGMENT_ROOT;
				} else {
					return IJavaElement.JAVA_PROJECT; // not yet in a package fragment root
				}
			case IJavaElement.PACKAGE_FRAGMENT_ROOT:
			case IJavaElement.PACKAGE_FRAGMENT:
				if (rootInfo == null) {
					rootInfo = this.rootInfo(res.getFullPath());
				}
				if (Util.isExcluded(res, rootInfo == null ? null : rootInfo.exclusionPatterns)) {
					return -1;
				}
				if (res instanceof IFolder) {
					if (Util.isValidFolderNameForPackage(res.getName())) {
						return IJavaElement.PACKAGE_FRAGMENT;
					} else {
						return -1;
					}
				} else {
					String fileName = res.getName();
					if (Util.isValidCompilationUnitName(fileName)) {
						return IJavaElement.COMPILATION_UNIT;
					} else if (Util.isValidClassFileName(fileName)) {
						return IJavaElement.CLASS_FILE;
					} else if (this.roots.get(res.getFullPath()) != null) {
						// case of proj=src=bin and resource is a jar file on the classpath
						return IJavaElement.PACKAGE_FRAGMENT_ROOT;
					} else {
						return -1;
					}
				}
			default:
				return -1;
		}
	}

