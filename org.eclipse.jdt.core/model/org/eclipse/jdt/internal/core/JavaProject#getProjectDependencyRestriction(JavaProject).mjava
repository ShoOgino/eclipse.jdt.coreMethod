	/**
	 * Access restriction rule describing a project dependency. It combines export restrictions of prerequisite
	 * project with import restrictions of dependent project.
	 */	
	public AccessRestriction getProjectDependencyRestriction(JavaProject prereqProject) {
		
		if (JavaCore.IGNORE.equals(getOption(JavaCore.COMPILER_PB_FORBIDDEN_REFERENCE, true)))
				return null;
		
		char[][] exportIncludes = getAccessRestrictionPatterns(
					prereqProject.getAccessRestrictions(JavaCore.COMPILER_ACCESS_RESTRICTION_EXPORT_INCLUDE));
		char[][] exportExcludes = getAccessRestrictionPatterns(
					prereqProject.getAccessRestrictions(JavaCore.COMPILER_ACCESS_RESTRICTION_EXPORT_EXCLUDE));

		AccessRestriction importRestriction = getProjectImportRestriction();
		if (importRestriction == null && exportIncludes == null && exportExcludes == null) 
			return null;
		
		return new AccessRestriction(
								org.eclipse.jdt.internal.core.util.Util.bind("restrictedAccess.export", null, prereqProject.getElementName()), //$NON-NLS-1$
								exportIncludes, 
								exportExcludes,
								importRestriction);
	}	

