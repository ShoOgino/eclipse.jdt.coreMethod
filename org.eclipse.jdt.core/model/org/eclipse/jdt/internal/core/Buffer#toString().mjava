public String toString() {
	StringBuffer buffer = new StringBuffer();
	buffer.append("Owner: " + ((JavaElement)this.owner).toStringWithAncestors()); //$NON-NLS-1$
	buffer.append("\nFlags: ");
	boolean previous = false;
	if ((this.flags & F_HAS_UNSAVED_CHANGES) != 0) {
		buffer.append("UNSAVED CHANGES");
		previous = true;
	}
	if ((this.flags & F_IS_CLOSED) != 0) {
		if (previous) buffer.append(" & ");
		buffer.append("CLOSED");
		previous = true;
	}
	if ((this.flags & F_IS_READ_ONLY) != 0) {
		if (previous) buffer.append(" & ");
		buffer.append("READONLY");
		previous = true;
	}
	int length = this.contents.length;
	buffer.append("\nContents:\n"); //$NON-NLS-1$
	for (int i = 0; i < length; i++) {
		char car = this.contents[i];
		switch (car) {
			case '\n': 
				buffer.append("\\n\n"); //$NON-NLS-1$
				break;
			case '\r':
				if (i < length-1 && this.contents[i+1] == '\n') {
					buffer.append("\\r\\n\n"); //$NON-NLS-1$
					i++;
				} else {
					buffer.append("\\r\n"); //$NON-NLS-1$
				}
				break;
			default:
				buffer.append(car);
				break;
		}		
	}
	return buffer.toString();
}

