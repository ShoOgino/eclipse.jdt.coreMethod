	/**
	 * Returns true if the given object is a classpath entry
	 * with equivalent attributes.
	 */
	public boolean equals(Object object) {
		if (this == object)
			return true;
		if (object instanceof IClasspathEntry) {
			IClasspathEntry otherEntry = (IClasspathEntry) object;

			if (this.contentKind != otherEntry.getContentKind())
				return false;

			if (this.entryKind != otherEntry.getEntryKind())
				return false;

			if (this.isExported != otherEntry.isExported())
				return false;

			if (!this.path.equals(otherEntry.getPath()))
				return false;

			IPath otherPath = otherEntry.getSourceAttachmentPath();
			if (this.sourceAttachmentPath == null) {
				if (otherPath != null)
					return false;
			} else {
				if (!this.sourceAttachmentPath.equals(otherPath))
					return false;
			}

			otherPath = otherEntry.getSourceAttachmentRootPath();
			if (this.sourceAttachmentRootPath == null) {
				if (otherPath != null)
					return false;
			} else {
				if (!this.sourceAttachmentRootPath.equals(otherPath))
					return false;
			}

			if (this.exclusionPatterns == null){
				if (otherEntry.getExclusionPatterns() != null)
					return false;
			} else {
				int excludeLength = this.exclusionPatterns.length;
				IPath[] otherExcludes = otherEntry.getExclusionPatterns();
				if (otherExcludes == null || otherExcludes.length != excludeLength)
					return false;
				for (int i = 0; i < excludeLength; i++){
					if (!this.exclusionPatterns[i].equals(otherExcludes[i]))
						return false;
				}
			}
			return true;
		} else {
			return false;
		}
	}

