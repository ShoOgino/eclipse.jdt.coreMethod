	/*
	 * Return secondary types cache merged with new secondary types created while indexing
	 * Note that merge result is directly stored in given parameter map.
	 */
	private Hashtable secondaryTypesMerging(Hashtable secondaryTypes) {
		if (VERBOSE) {
			Util.verbose("JavaModelManager.getSecondaryTypesMerged()"); //$NON-NLS-1$
			Util.verbose("	- current cache to merge:"); //$NON-NLS-1$
			Iterator keys = secondaryTypes.keySet().iterator();
			while (keys.hasNext()) {
				String packName = (String) keys.next();
				Util.verbose("		+ "+packName+':'+secondaryTypes.get(packName) ); //$NON-NLS-1$
			}
		}

		// Return current cache if there's no indexing cache (double check, this should not happen)
		HashMap indexedSecondaryTypes = (HashMap) secondaryTypes.remove(INDEXED_SECONDARY_TYPES);
		if (indexedSecondaryTypes == null) {
			return secondaryTypes;
		}

		// Merge indexing cache in secondary types one
		Iterator files = indexedSecondaryTypes.keySet().iterator();
		while (files.hasNext()) {
			IFile file = (IFile) files.next();
	
			// Remove all secondary types of indexed file from cache
			secondaryTypesRemoving(secondaryTypes, file);
			
			// Add all indexing file secondary types in given secondary types cache
			HashMap fileSecondaryTypes = (HashMap) indexedSecondaryTypes.get(file);
			Iterator packages = fileSecondaryTypes.keySet().iterator();
			while (packages.hasNext()) {
				String packageName = (String) packages.next();
				HashMap cachedTypes = (HashMap) secondaryTypes.get(packageName);
				if (cachedTypes == null) {
					secondaryTypes.put(packageName, fileSecondaryTypes.get(packageName));
				} else {
					HashMap types = (HashMap) fileSecondaryTypes.get(packageName);
					Iterator typeNames = types.keySet().iterator();
					while (typeNames.hasNext()) {
						String typeName = (String) typeNames.next();
						cachedTypes.put(typeName, types.get(typeName));
					}
				}
			}
		}
		if (VERBOSE) {
			Util.verbose("	- secondary types cache merged:"); //$NON-NLS-1$
			Iterator keys = secondaryTypes.keySet().iterator();
			while (keys.hasNext()) {
				String packName = (String) keys.next();
				Util.verbose("		+ "+packName+':'+secondaryTypes.get(packName) ); //$NON-NLS-1$
			}
		}
		return secondaryTypes;
	}

