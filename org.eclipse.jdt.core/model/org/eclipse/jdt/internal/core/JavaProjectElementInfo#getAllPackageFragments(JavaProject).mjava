	HashtableOfArrayToObject getAllPackageFragments(JavaProject project) {
		if (this.allPkgFragmentsCache == null) {
			HashtableOfArrayToObject cache = new HashtableOfArrayToObject();
			IPackageFragmentRoot[] roots = getAllPackageFragmentRoots(project);
			for (int i = 0, length = roots.length; i < length; i++) {
				IPackageFragmentRoot root = roots[i];
				IJavaElement[] frags = null;
				try {
					frags = root.getChildren();
				} catch (JavaModelException e) {
					// root doesn't exist: ignore
					continue;
				}
				for (int j = 0, length2 = frags.length; j < length2; j++) {
					PackageFragment fragment= (PackageFragment) frags[j];
					String[] pkgName = fragment.names;
					Object existing = cache.get(pkgName);
					if (existing == null) {
						cache.put(pkgName, root);
					} else {
						if (existing instanceof PackageFragmentRoot) {
							cache.put(pkgName, new IPackageFragmentRoot[] {(PackageFragmentRoot) existing, root});
						} else {
							IPackageFragmentRoot[] entry= (IPackageFragmentRoot[]) existing;
							IPackageFragmentRoot[] copy= new IPackageFragmentRoot[entry.length + 1];
							System.arraycopy(entry, 0, copy, 0, entry.length);
							copy[entry.length]= root;
							cache.put(pkgName, copy);
						}
					}
				}
			}
			this.allPkgFragmentsCache = cache;
		}
		return this.allPkgFragmentsCache;
	}

