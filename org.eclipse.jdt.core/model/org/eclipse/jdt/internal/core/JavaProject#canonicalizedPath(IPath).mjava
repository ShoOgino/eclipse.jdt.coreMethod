/**
 * Returns a canonicalized path from the given external path.
 * Note that the return path contains the same number of segments
 * and it contains a device only if the given path contained one.
 * @see java.io.File for the definition of a canonicalized path
 */
public static IPath canonicalizedPath(IPath externalPath) {
	if (externalPath == null) return null;

	// if not external path, return original path
	if (ResourcesPlugin.getWorkspace().getRoot().findMember(externalPath) != null) {
		return externalPath;
	}
	
	IPath canonicalPath = null;
	try {
		canonicalPath  = new Path(new File(externalPath.toOSString()).getCanonicalPath());
	} catch (IOException e) {
		// default to original path
		return externalPath;
	}
	// keep only segments that were in original path and device if it was there
	IPath result = canonicalPath.removeFirstSegments(canonicalPath.segmentCount() - externalPath.segmentCount());
	if (externalPath.getDevice() == null) {
		return result.setDevice(null);
	} else {
		return result;
	}
}

