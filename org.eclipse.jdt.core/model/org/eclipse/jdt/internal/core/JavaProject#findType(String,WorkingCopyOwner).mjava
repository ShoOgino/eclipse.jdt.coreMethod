	/**
	 * @see IJavaProject#findType(String, WorkingCopyOwner)
	 */
	public IType findType(String fullyQualifiedName, WorkingCopyOwner owner) throws JavaModelException {
		
		IType type = null;
		NameLookup lookup = null;
		try {
			// set units to look inside
			lookup = getNameLookup();
			JavaModelManager manager = JavaModelManager.getJavaModelManager();
			ICompilationUnit[] workingCopies = manager.getWorkingCopies(owner, true/*add primary WCs*/);
			lookup.setUnitsToLookInside(workingCopies);
			
			// lookup type
			type = lookup.findType(
				fullyQualifiedName,
				false,
				NameLookup.ACCEPT_CLASSES | NameLookup.ACCEPT_INTERFACES);
		} finally {
			if (lookup != null) {
				lookup.setUnitsToLookInside(null);
			}
		}
		if (type == null) {
			// try to find enclosing type
			int lastDot = fullyQualifiedName.lastIndexOf('.');
			if (lastDot == -1) return null;
			type = this.findType(fullyQualifiedName.substring(0, lastDot));
			if (type != null) {
				type = type.getType(fullyQualifiedName.substring(lastDot+1));
				if (!type.exists()) {
					return null;
				}
			}
		}
		return type;
	}

