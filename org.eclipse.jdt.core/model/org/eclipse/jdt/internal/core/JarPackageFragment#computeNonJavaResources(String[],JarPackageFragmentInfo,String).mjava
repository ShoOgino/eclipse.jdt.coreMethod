/**
 * Compute all the non-java resources according to the entry name found in the jar file.
 */
/* package */ void computeNonJavaResources(String[] resNames, JarPackageFragmentInfo info, String zipName) {
	if (resNames == null) {
		info.setNonJavaResources(null);
		return;
	}
	int max = resNames.length;
	Object[] res = new Object[max];
	int index = 0;
	for (int i = 0; i < max; i++) {
		String resName = resNames[i];
		// consider that a .java file is not a non-java resource (see bug 12246 Packages view shows .class and .java files when JAR has source)
		if (!resName.toLowerCase().endsWith(".java")) { //$NON-NLS-1$
			if (!this.isDefaultPackage()) {
				resName = this.getElementName().replace('.', '/') + "/" + resName;//$NON-NLS-1$
			}
			res[index++] = new JarEntryFile(resName, zipName);
		}
	} 
	if (index != max) {
		System.arraycopy(res, 0, res = new Object[index], 0, index);
	}
	info.setNonJavaResources(res);
}

