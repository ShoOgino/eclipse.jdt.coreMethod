/**
 * @see IMethod
 * Look for source attachment information to retrieve the actual parameter names as stated in source.
 */
public String[] getParameterNames() throws JavaModelException {

	if (fParameterNames == null) {

		// force source mapping if not already done
		IType type = (IType) getParent();
		SourceMapper mapper = getSourceMapper();
		if (mapper != null) {
			char[] source = mapper.findSource(type);
			if (source != null){
				mapper.mapSource(type, source);
				ISourceRange sourceRange = getSourceRange();
				if (source != null & sourceRange != null && sourceRange != SourceMapper.fgUnknownRange) {
					IProblemFactory factory = new DefaultProblemFactory();
					DecodeParametersNames decoder = new DecodeParametersNames();
					SourceElementParser parser = new SourceElementParser(decoder, factory, new CompilerOptions(JavaCore.getOptions()));
					int start = sourceRange.getOffset();
					int end = start + sourceRange.getLength();
					parser.parseTypeMemberDeclarations(source, start, end);
					fParameterNames = decoder.getParametersNames();
				}
			}
		}
		// if still no parameter names, produce fake ones
		if (fParameterNames == null) {
			IBinaryMethod info = (IBinaryMethod) getRawInfo();
			int paramCount = Signature.getParameterCount(new String(info.getMethodDescriptor()));
			fParameterNames = new String[paramCount];
			for (int i = 0; i < paramCount; i++) {
				fParameterNames[i] = "arg" + i; //$NON-NLS-1$
			}
		}
	}
	return fParameterNames;
}

