	/**
	 * @exception JavaModelException if setting the source
	 * 	of the original compilation unit fails
	 */
	protected void executeOperation() throws JavaModelException {
		if (progressMonitor != null){
			if (progressMonitor.isCanceled()) return;
			progressMonitor.beginTask(Util.bind("element.reconciling"), 10); //$NON-NLS-1$
		}
	
		CompilationUnit workingCopy = getWorkingCopy();
		boolean wasConsistent = workingCopy.isConsistent();
		JavaElementDeltaBuilder deltaBuilder = null;
	
		try {
			// create the delta builder (this remembers the current content of the cu)
			if (!wasConsistent){
				deltaBuilder = new JavaElementDeltaBuilder(workingCopy);
				
				// update the element infos with the content of the working copy
				workingCopy.makeConsistent(progressMonitor);
				deltaBuilder.buildDeltas();
		
			}
	
			if (progressMonitor != null) progressMonitor.worked(2);
			
			// force problem detection? - if structure was consistent
			if (forceProblemDetection && wasConsistent){
				if (progressMonitor != null && progressMonitor.isCanceled()) return;
		
				IProblemRequestor problemRequestor = workingCopy.getPerWorkingCopyInfo();
				if (problemRequestor != null && problemRequestor.isActive()){
					problemRequestor.beginReporting();
					CompilationUnitProblemFinder.process(workingCopy, problemRequestor, progressMonitor);
					problemRequestor.endReporting();
				}
			}
			
			// register the deltas
			if (deltaBuilder != null){
				if (deltaBuilder.delta != null) {
					addReconcileDelta(workingCopy, deltaBuilder.delta);
				}
			}
		} finally {
			if (progressMonitor != null) progressMonitor.done();
		}
	}

