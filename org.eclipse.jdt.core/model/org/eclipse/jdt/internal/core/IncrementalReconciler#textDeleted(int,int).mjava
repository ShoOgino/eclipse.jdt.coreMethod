	/**
	 * @see IReconciler
	 */
	public void textDeleted(int position, int length) {
		doFullReconcile();
		if (true) {
			return;
		}
		try {
			if (isWhitespace(position, length)) {
				System.out.println("Whitespace");
				return;
			}

			int endPosition = position + length;
			IJavaElement first = fCompilationUnit.getElementAt(position);
			IJavaElement last = fCompilationUnit.getElementAt(endPosition);

			if (first == last) {
				if (first == null) {
					first = fCompilationUnit;
					last = fCompilationUnit;
				}
			} else {
				doFullReconcile();
				return;
			}

			if (first instanceof IParent) {
				first = getElementBefore(position, first);
				last = getElementAfter(endPosition, last);
			}

			if (first != last) {
				doFullReconcile();
				return;
			}

			int offset = getSourceOffset(first);
			int end = offset + getSourceLength(first) - length;

			if (end <= offset) {
				doFullReconcile();
				return;
			}

			SourceType type = (SourceType) getEnclosingType(first);

			IncrementalDeterministicRequestor requestor =
				new IncrementalDeterministicRequestor(new IJavaElement[] { first });
			reconcile(type, requestor, offset, end);
		} catch (JavaModelException e) {
			return;
		}
	}

