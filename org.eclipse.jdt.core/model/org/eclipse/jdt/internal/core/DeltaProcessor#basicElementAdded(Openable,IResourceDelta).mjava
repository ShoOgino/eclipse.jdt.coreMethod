/**
 * Generic processing for an element that has been added:<ul>
 * <li>The element is added to its parent's cache of children
 * <li>The element is closed (to ensure consistency)
 * <li>An entry is made in the delta reporting it as added (ADDED).
 * </ul>
 * <p>
 * If the element is an archive, and it has just been added, it may not be specified
 * on the project's classpath. In this case, the new element is not added as a child
 * of its parent (since only package fragment roots on the classpath are considered to
 * be children of a project).
 */
protected void basicElementAdded(Openable element, IResourceDelta delta) {
	if (isOpen(delta.getResource())) {
		boolean onClasspath = isOnClasspath(element);

		// only add as a child if it is on the classpath
		if (onClasspath) {
			addToParentInfo(element);
			switch (element.getElementType()) {
				case IJavaElement.PACKAGE_FRAGMENT_ROOT :
					// when a root is added, and is on the classpath, the project must be updated
					JavaProject project = (JavaProject)element.getJavaProject();
					updateProject(project);
					//1G1TW2T - get rid of namelookup since it holds onto obsolete cached info 
					try {
						project.getJavaProjectElementInfo().setNameLookup(null);
					} catch(JavaModelException e){
					}
					break;
				case IJavaElement.PACKAGE_FRAGMENT :
					//1G1TW2T - get rid of namelookup since it holds onto obsolete cached info 
					project = (JavaProject)element.getJavaProject();
					try {
						project.getJavaProjectElementInfo().setNameLookup(null);
					} catch(JavaModelException e){
					}
					break;
			}
		}
				
		close(element);
		fCurrentDelta.added(element);
	}
}

