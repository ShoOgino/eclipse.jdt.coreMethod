	/**
	 * Returns a collection of <code>IClasspathEntry</code>s from the given
	 * classpath string in XML format.
	 *
	 * @exception IOException if the stream cannot be read 
	 */
	protected IClasspathEntry[] readPaths(String xmlClasspath) throws IOException {
		IPath projectPath= getProject().getFullPath();
		StringReader reader = new StringReader(xmlClasspath);
		Element cpElement;
		try {
			DocumentBuilder parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();
			cpElement = parser.parse(new InputSource(reader)).getDocumentElement();
		} catch(SAXException e) {
			throw new IOException(Util.bind("file.badFormat"/*nonNLS*/));
		} catch(ParserConfigurationException e){
			reader.close();
			throw new IOException(Util.bind("file.badFormat"/*nonNLS*/));
		} finally {
			reader.close();
		}
		if (!cpElement.getNodeName().equalsIgnoreCase("classpath"/*nonNLS*/)) {
			throw new IOException(Util.bind("file.badFormat"/*nonNLS*/));
		}
		NodeList list= cpElement.getChildNodes();
		Vector paths= new Vector();
		int length= list.getLength();
		for (int i= 0; i < length; ++i) {
			Node node= list.item(i);
			short type= node.getNodeType();
			if (type == Node.ELEMENT_NODE) {
				Element cpeElement= (Element) node;
				if (cpeElement.getNodeName().equalsIgnoreCase("classpathentry"/*nonNLS*/)) {
					String cpeElementKind = cpeElement.getAttribute("kind"/*nonNLS*/);
					String pathStr = cpeElement.getAttribute("path"/*nonNLS*/);
					// ensure path is absolute
					IPath path= new Path(pathStr);
					int kind= kindFromString(cpeElementKind);
					if (kind != IClasspathEntry.CPE_VARIABLE && !path.isAbsolute()) {
						path= projectPath.append(path);
					}
					// source attachment info (optional)
					String sourceAttachmentPathStr = cpeElement.getAttribute("sourcepath"/*nonNLS*/);
					IPath sourceAttachmentPath = sourceAttachmentPathStr.equals(""/*nonNLS*/) ? null : new Path(sourceAttachmentPathStr);
					String sourceAttachmentRootPathStr = cpeElement.getAttribute("rootpath"/*nonNLS*/);
					IPath sourceAttachmentRootPath = sourceAttachmentRootPathStr.equals(""/*nonNLS*/) ? null : new Path(sourceAttachmentRootPathStr);
					
					IClasspathEntry entry= createClasspathEntry(path, kind, sourceAttachmentPath, sourceAttachmentRootPath);
					if (entry == null) return null;
					paths.addElement(entry);
				}
			}
		}
		if (paths.size() > 0) {
			IClasspathEntry[] ips= new IClasspathEntry[paths.size()];
			paths.copyInto(ips);
			return ips;
		} else {
			return null;
		}
	}

