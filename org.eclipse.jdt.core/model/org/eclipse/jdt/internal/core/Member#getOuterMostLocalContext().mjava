/*
 * Returns the outermost context defining a local element. Per construction, it can only be a
 * method/field/initializarer member; thus, returns null if this member is already a top-level type or member type.
 * e.g for X.java/X/Y/foo()/Z/bar()/T, it will return X.java/X/Y/foo()
 */
public Member getOuterMostLocalContext() {
	IJavaElement current = this;
	Member lastLocalContext = null;
	parentLoop: while (true) {
		switch (current.getElementType()) {
			case COMPILATION_UNIT :
				break parentLoop; // done recursing
			case TYPE:
				// cannot be a local context
				break;
			case INITIALIZER:
			case FIELD:
			case METHOD:
				 // these elements can define local members
				lastLocalContext = (Member) current;
				break;
		}		
		current = current.getParent();
	} 
	return lastLocalContext;
/*	TODO (jerome) check old version, especially was answering local types
	switch (fParent.getElementType()) {
		case COMPILATION_UNIT:
			return null;
		case TYPE:
			Member declaringMember = ((Member)fParent).getOuterMostLocalContext();
			if (declaringMember == null && getElementType() != TYPE) {
				return this;
			} else {
				return declaringMember;
			}
		case INITIALIZER:
		case FIELD:
		case METHOD:
			return ((Member)fParent).getOuterMostLocalContext();
	}
	return null;
*/	
}

