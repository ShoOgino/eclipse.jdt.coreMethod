	/*
	 * Process the given delta and look for projects being added, opened, closed or
	 * with a java nature being added or removed.
	 * Note that projects being deleted are checked in deleting(IProject).
	 * In all cases, add the project's dependents to the list of projects to update
	 * so that the classpath related markers can be updated.
	 */
	private void checkProjectsBeingAddedOrRemoved(IResourceDelta delta) {
		IResource resource = delta.getResource();
		switch (resource.getType()) {
			case IResource.ROOT :
				// workaround for bug 15168 circular errors not reported 
				if (this.manager.javaProjectsCache == null) {
					try {
						this.manager.javaProjectsCache = this.manager.getJavaModel().getJavaProjects();
					} catch (JavaModelException e) {
					}
				}
				
				IResourceDelta[] children = delta.getAffectedChildren();
				for (int i = 0, length = children.length; i < length; i++) {
					this.checkProjectsBeingAddedOrRemoved(children[i]);
				}
				break;
			case IResource.PROJECT :
				// NB: No need to check project's nature as if the project is not a java project:
				//     - if the project is added or changed this is a noop for projectsBeingDeleted
				//     - if the project is closed, it has already lost its java nature
				int deltaKind = delta.getKind();
				if (deltaKind == IResourceDelta.ADDED) {
					// remember project and its dependents
					IProject project = (IProject)resource;
					JavaProject javaProject = (JavaProject)JavaCore.create(project);
					this.addToRootsToRefreshWithDependents(javaProject);
					
					// workaround for bug 15168 circular errors not reported 
					if (JavaProject.hasJavaNature(project)) {
						this.addToParentInfo(javaProject);
					}

				} else if (deltaKind == IResourceDelta.CHANGED) {
					IProject project = (IProject)resource;
					if ((delta.getFlags() & IResourceDelta.OPEN) != 0) {
						// project opened or closed: remember  project and its dependents
						JavaProject javaProject = (JavaProject)JavaCore.create(project);
						this.addToRootsToRefreshWithDependents(javaProject);
						
						// workaround for bug 15168 circular errors not reported 
						if (project.isOpen()) {
							if (JavaProject.hasJavaNature(project)) {
								this.addToParentInfo(javaProject);
							}
						} else {
							javaProject = (JavaProject)this.manager.getJavaModel().findJavaProject(project);
							if (javaProject != null) {
								try {
									javaProject.close();
								} catch (JavaModelException e) {
								}
								this.removeFromParentInfo(javaProject);
							}
						}
					} else if ((delta.getFlags() & IResourceDelta.DESCRIPTION) != 0) {
						boolean wasJavaProject = this.manager.getJavaModel().findJavaProject(project) != null;
						boolean isJavaProject = JavaProject.hasJavaNature(project);
						if (wasJavaProject != isJavaProject) {
							// java nature added or removed: remember  project and its dependents
							JavaProject javaProject = (JavaProject)JavaCore.create(project);
							this.addToRootsToRefreshWithDependents(javaProject);

							// workaround for bug 15168 circular errors not reported 
							if (isJavaProject) {
								this.addToParentInfo(javaProject);
							} else {
								// flush classpath markers
								javaProject.
									flushClasspathProblemMarkers(
										true, // flush cycle markers
										true  //flush classpath format markers
									);
									
								// remove problems and tasks created  by the builder
								JavaBuilder.removeProblemsAndTasksFor(project);

								// close project
								try {
									javaProject.close();
								} catch (JavaModelException e) {
								}
								this.removeFromParentInfo(javaProject);
							}
						} else {
							// in case the project was removed then added then changed (see bug 19799)
							if (JavaProject.hasJavaNature(project)) { // need nature check - 18698
								this.addToParentInfo((JavaProject)JavaCore.create(project));
							}
						}
					} else {
						// workaround for bug 15168 circular errors not reported 
						// in case the project was removed then added then changed
						if (JavaProject.hasJavaNature(project)) { // need nature check - 18698
							this.addToParentInfo((JavaProject)JavaCore.create(project));
						}						
					}					
				}
				break;
		}
	}

