	private OutputInfo outputInfo(RootInfo rootInfo, IResource res) {
		try {
			IJavaProject proj =
				rootInfo == null ?
					(IJavaProject)this.createElement(res.getProject(), IJavaElement.JAVA_PROJECT, null) :
					rootInfo.project;
			if (proj != null) {
				IPath output = proj.getOutputLocation();
				int traverseMode = IGNORE;
				if (proj.getProject().getFullPath().equals(output)){ // case of proj==bin==src
					traverseMode = SOURCE;
				} else {
					// check case of src==bin
					IClasspathEntry[] classpath = proj.getResolvedClasspath(true);
					for (int i = 0, length = classpath.length; i < length; i++) {
						IClasspathEntry entry = classpath[i];
						if (entry.getPath().equals(output)) {
							traverseMode = (entry.getEntryKind() == IClasspathEntry.CPE_SOURCE) ? SOURCE : BINARY;
							break;
						}
					}
				}
				return new OutputInfo(output, traverseMode);
			}
		} catch (JavaModelException e) {
		}
		return null;
	}

