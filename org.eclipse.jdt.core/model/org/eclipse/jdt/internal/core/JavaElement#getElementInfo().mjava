	/**
	 * Returns the info for this handle.  
	 * If this element is not already open, it and all of its parents are opened.
	 * Does not return null.
	 * NOTE: BinaryType infos are NJOT rooted under JavaElementInfo.
	 * @exception JavaModelException if the element is not present or not accessible
	 */
	public Object getElementInfo() throws JavaModelException {

		// workaround to ensure parent project resolved classpath is available to avoid triggering initializers
		// while the JavaModelManager lock is acquired (can cause deadlocks in clients)
		IJavaProject project = getJavaProject();
		if (project != null && !project.isOpen()) {
			// TODO: need to revisit, since deadlock could still occur if perProjectInfo is removed concurrent before entering the lock
			try {
				project.getResolvedClasspath(true); // trigger all possible container/variable initialization outside the model lock
			} catch (JavaModelException e) {
				// project is not accessible or is not a java project
			}
		}

		// element info creation is done inside a lock on the JavaModelManager
		JavaModelManager manager;
		synchronized(manager = JavaModelManager.getJavaModelManager()){
			Object info = manager.getInfo(this);
			if (info == null) {
				openHierarchy();
				info= manager.getInfo(this);
				if (info == null) {
					throw newNotPresentException();
				}
			}
			return info;
		}
	}

