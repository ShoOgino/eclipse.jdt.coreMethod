	/*
	 * Adds the dependents of the given project to the list of the projects
	 * to update.
	 */
	private void addDependentProjects(IPath projectPath, HashSet result) {
		IJavaProject[] projects = null;
		try {
			projects = this.manager.getJavaModel().getJavaProjects();
		} catch (JavaModelException e) {
			// java model doesn't exist
			return;
		}
		for (int i = 0, length = projects.length; i < length; i++) {
			IJavaProject project = projects[i];
			IClasspathEntry[] classpath = null;
			try {
				classpath = ((JavaProject)project).getExpandedClasspath(true);
			} catch (JavaModelException e) {
				// project doesn't exist: continue with next project
				continue;
			}
			for (int j = 0, length2 = classpath.length; j < length2; j++) {
				IClasspathEntry entry = classpath[j];
					if (entry.getEntryKind() == IClasspathEntry.CPE_PROJECT
							&& entry.getPath().equals(projectPath)) {
						result.add(project);
					}
				}
			}
	}

