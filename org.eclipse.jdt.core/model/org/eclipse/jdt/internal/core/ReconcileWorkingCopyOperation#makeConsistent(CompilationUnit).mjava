	/*
	 * Makes the given working copy consistent, computes the delta and computes an AST if needed.
	 * Returns the AST.
	 */
	public org.eclipse.jdt.core.dom.CompilationUnit makeConsistent(CompilationUnit workingCopy) throws JavaModelException {
		if (!workingCopy.isConsistent()) {
			// make working copy consistent
			if (this.problems == null) this.problems = new HashMap();
			this.resolveBindings = this.requestorIsActive;
			this.ast = workingCopy.makeConsistent(this.astLevel, this.resolveBindings, reconcileFlags, this.problems, this.progressMonitor);
			this.deltaBuilder.buildDeltas();
			if (this.ast != null && this.deltaBuilder.delta != null)
				this.deltaBuilder.delta.changedAST(this.ast);
			return this.ast;
		}
		if (this.ast != null) 
			return this.ast; // no need to recompute AST if known already
		
		CompilationUnitDeclaration unit = null;
		char[] contents = null;
		try {
			// find problems if needed
			if (JavaProject.hasJavaNature(workingCopy.getJavaProject().getProject()) 
					&& (this.reconcileFlags & ICompilationUnit.FORCE_PROBLEM_DETECTION) != 0) {
				this.resolveBindings = this.requestorIsActive;
				if (this.problems == null)
					this.problems = new HashMap();
				contents = workingCopy.getContents();
				unit =
					CompilationUnitProblemFinder.process(
						workingCopy,
						contents,
						this.workingCopyOwner,
						this.problems,
						this.astLevel != ICompilationUnit.NO_AST/*creating AST if level is not NO_AST */,
						reconcileFlags,
						this.progressMonitor);
				if (this.progressMonitor != null) this.progressMonitor.worked(1);
			}
			
			// create AST if needed
			if (this.astLevel != ICompilationUnit.NO_AST 
					&& unit !=null/*unit is null if working copy is consistent && (problem detection not forced || non-Java project) -> don't create AST as per API*/) {
				Map options = workingCopy.getJavaProject().getOptions(true);
				// convert AST
				this.ast =
					AST.convertCompilationUnit(
						this.astLevel,
						unit,
						contents,
						options,
						this.resolveBindings,
						workingCopy,
						reconcileFlags,
						this.progressMonitor);
				if (this.ast != null) {
					if (this.deltaBuilder.delta == null) {
						this.deltaBuilder.delta = new JavaElementDelta(workingCopy);
					}
					this.deltaBuilder.delta.changedAST(this.ast);
				}
				if (this.progressMonitor != null) this.progressMonitor.worked(1);
			}
	    } catch (JavaModelException e) {
	    	if (JavaProject.hasJavaNature(workingCopy.getJavaProject().getProject()))
	    		throw e;
	    	// else JavaProject has lost its nature (or most likely was closed/deleted) while reconciling -> ignore
	    	// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=100919)
	    } finally {
	        if (unit != null) {
	            unit.cleanUp();
	        }
	    }
		return this.ast;
	}

