	private static void resolvedChainedLibraries(IPath jarPath, HashSet visited, ArrayList result) {
		if (visited.contains( jarPath))
			return;
		visited.add(jarPath);
		Object target = JavaModel.getTarget(jarPath, true/*check existence, otherwise the manifest cannot be read*/);
		if (target instanceof IFile || target instanceof File) {
			JavaModelManager manager = JavaModelManager.getJavaModelManager();
			ZipFile zip = null;
			BufferedReader reader = null;
			try {
				zip = manager.getZipFile(jarPath);
				ZipEntry manifest =	zip.getEntry("META-INF/MANIFEST.MF"); //$NON-NLS-1$
				if (manifest != null) { // non-null implies regular file
					reader = new BufferedReader(new InputStreamReader(zip.getInputStream(manifest)));
					ManifestAnalyzer analyzer = new ManifestAnalyzer();
					boolean success = analyzer.analyzeManifestContents(reader);
					List calledFileNames = analyzer.getCalledFileNames();
					if (!success || analyzer.getClasspathSectionsCount() == 1 && calledFileNames == null) {
						Util.log(IStatus.WARNING, "Invalid Class-Path header in manifest of jar file: " + jarPath.toOSString()); //$NON-NLS-1$
						return;
					} else if (analyzer.getClasspathSectionsCount() > 1) {
						Util.log(IStatus.WARNING, "Multiple Class-Path headers in manifest of jar file: " + jarPath.toOSString()); //$NON-NLS-1$
						return;
					}
					if (calledFileNames != null) {
						Iterator calledFilesIterator = calledFileNames.iterator();
						IPath directoryPath = jarPath.removeLastSegments(1);
						while (calledFilesIterator.hasNext()) {
							String calledFileName = (String) calledFilesIterator.next();
							if (!directoryPath.isValidPath(calledFileName)) {
								Util.log(IStatus.WARNING, "Invalid Class-Path entry " + calledFileName + " in manifest of jar file: " + jarPath.toOSString()); //$NON-NLS-1$ //$NON-NLS-2$
							} else {
								IPath calledJar = directoryPath.append(new Path(calledFileName));
								resolvedChainedLibraries(calledJar, visited, result);
								result.add(calledJar);
							}
						}
					}
				}
			} catch (CoreException e) {
				// not a zip file
			} catch (IOException e) {
				Util.log(e, "Could not read Class-Path header in manifest of jar file: " + jarPath.toOSString()); //$NON-NLS-1$
			} finally {
				manager.closeZipFile(zip);
				if (reader != null) {
					try {
						reader.close();
					} catch (IOException e) {
						// best effort
					}
				}
			}
		}
	}

