	/**
	 * Compute the non-java resources contained in this java project.
	 */
	private Object[] computeNonJavaResources(JavaProject project) {
		Object[] nonJavaResources = new IResource[5];
		int nonJavaResourcesCounter = 0;
		try {
			IResource[] members = ((IContainer) project.getUnderlyingResource()).members();
			for (int i = 0, max = members.length; i < max; i++) {
				IResource res = members[i];
				switch (res.getType()) {
					case IResource.FILE :
						String extension = res.getProjectRelativePath().getFileExtension();
						if (!"java".equalsIgnoreCase(extension)
							&& !"class".equalsIgnoreCase(extension)) {
							// check if this file might be a jar or a zip inside the build path
							IPath resFullPath = res.getFullPath();
							if (project.findPackageFragmentRoot(resFullPath) == null) {
								if (nonJavaResources.length == nonJavaResourcesCounter) {
									// resize
									System.arraycopy(
										nonJavaResources,
										0,
										(nonJavaResources = new IResource[nonJavaResourcesCounter * 2]),
										0,
										nonJavaResourcesCounter);
								}
								nonJavaResources[nonJavaResourcesCounter++] = res;
							}
						}
						break;
					case IResource.FOLDER :
						IPath resFullPath = res.getFullPath();
						if (!resFullPath.equals(project.getOutputLocation())
							&& project.findPackageFragmentRoot(resFullPath) == null
							&& project.findPackageFragment(resFullPath) == null) {
							if (nonJavaResources.length == nonJavaResourcesCounter) {
								// resize
								System.arraycopy(
									nonJavaResources,
									0,
									(nonJavaResources = new IResource[nonJavaResourcesCounter * 2]),
									0,
									nonJavaResourcesCounter);
							}
							nonJavaResources[nonJavaResourcesCounter++] = res;
						}
				}
			}
			if (nonJavaResources.length != nonJavaResourcesCounter) {
				System.arraycopy(
					nonJavaResources,
					0,
					(nonJavaResources = new IResource[nonJavaResourcesCounter]),
					0,
					nonJavaResourcesCounter);
			}
		} catch (CoreException e) {
			nonJavaResources = NO_NON_JAVA_RESOURCES;
			nonJavaResourcesCounter = 0;
		}
		return nonJavaResources;
	}

