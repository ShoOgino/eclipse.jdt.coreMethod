	/**
	 * @exception JavaModelException if setting the source
	 * 	of the original compilation unit fails
	 */
	protected void executeOperation() throws JavaModelException {
		try {
			beginTask(Util.bind("workingCopy.commit"), 2); //$NON-NLS-1$
			CompilationUnit workingCopy = (CompilationUnit)getCompilationUnit();
			ICompilationUnit primary = workingCopy.getPrimary();
		
			// creates the delta builder (this remembers the content of the cu)	
			if (!primary.isOpen()) {
				// force opening so that the delta builder can get the old info
				primary.open(null);
			}
			JavaElementDeltaBuilder deltaBuilder;
			if (Util.isExcluded(primary)) {
				deltaBuilder = null;
			} else {
				deltaBuilder = new JavaElementDeltaBuilder(primary);
			}
		
			// save the cu
			IBuffer primaryBuffer = primary.getBuffer();
			if (primaryBuffer == null) return;
			char[] primaryContents = primaryBuffer.getCharacters();
			boolean hasSaved = false;
			try {
				IBuffer workingCopyBuffer = workingCopy.getBuffer();
				if (workingCopyBuffer == null) return;
				primaryBuffer.setContents(workingCopyBuffer.getCharacters());
				primary.save(fMonitor, fForce);
				setAttribute(HAS_MODIFIED_RESOURCE_ATTR, TRUE); 
				hasSaved = true;
			} finally {
				if (!hasSaved){
					// restore original buffer contents since something went wrong
					primaryBuffer.setContents(primaryContents);
				}
			}
			// make sure working copy is in sync
			workingCopy.updateTimeStamp((CompilationUnit)primary);
			workingCopy.makeConsistent(this);
			worked(1);
		
			if (deltaBuilder != null) {
				// build the deltas
				deltaBuilder.buildDeltas();
			
				// add the deltas to the list of deltas created during this operation
				if (deltaBuilder.delta != null) {
					addDelta(deltaBuilder.delta);
				}
			}
			worked(1);
		} finally {	
			done();
		}
	}

