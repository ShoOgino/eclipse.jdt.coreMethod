/**
 * @exception JavaModelException if setting the source
 * 	of the original compilation unit fails
 */
protected void executeOperation() throws JavaModelException {
	try {
		beginTask(Util.bind("workingCopy.commit"), 2); //$NON-NLS-1$
		WorkingCopy copy = (WorkingCopy)getCompilationUnit();
		ICompilationUnit original = (ICompilationUnit) copy.getOriginalElement();
	
		
		// creates the delta builder (this remembers the content of the cu)	
		if (!original.isOpen()) {
			// force opening so that the delta builder can get the old info
			original.open(null);
		}
		JavaElementDeltaBuilder deltaBuilder = new JavaElementDeltaBuilder(original);
	
		// save the cu
		IBuffer originalBuffer = original.getBuffer();
		if (originalBuffer == null) return;
		char[] originalContents = originalBuffer.getCharacters();
		boolean hasSaved = false;
		try {
			IBuffer copyBuffer = copy.getBuffer();
			if (copyBuffer == null) return;
			originalBuffer.setContents(copyBuffer.getCharacters());
			original.save(fMonitor, fForce);
			this.hasModifiedResource = true;
			hasSaved = true;
		} finally {
			if (!hasSaved){
				// restore original buffer contents since something went wrong
				originalBuffer.setContents(originalContents);
			}
		}
		// make sure working copy is in sync
		copy.updateTimeStamp((CompilationUnit)original);
		copy.makeConsistent(this);
		worked(1);
	
		// build the deltas
		deltaBuilder.buildDeltas();
	
		// add the deltas to the list of deltas created during this operation
		if (deltaBuilder.delta != null) {
			addDelta(deltaBuilder.delta);
		}
		worked(1);
	} finally {	
		done();
	}
}

