/**
 * The elements are equivalent, but might have content changes.
 */
private void findContentChange(JavaElementInfo oldInfo, JavaElementInfo newInfo, IJavaElement newElement) {
	if (oldInfo instanceof MemberElementInfo && newInfo instanceof MemberElementInfo) {
		if (((MemberElementInfo)oldInfo).getModifiers() != ((MemberElementInfo)newInfo).getModifiers()) {
			this.delta.changed(newElement, IJavaElementDelta.F_MODIFIERS);
		} else if (oldInfo instanceof SourceMethodElementInfo && newInfo instanceof SourceMethodElementInfo) {
			SourceMethodElementInfo oldSourceMethodInfo = (SourceMethodElementInfo)oldInfo;
			SourceMethodElementInfo newSourceMethodInfo = (SourceMethodElementInfo)newInfo;
			if (!CharOperation.equals(oldSourceMethodInfo.getReturnTypeName(), newSourceMethodInfo.getReturnTypeName())
					|| !CharOperation.equals(oldSourceMethodInfo.getTypeParameterNames(), newSourceMethodInfo.getTypeParameterNames())
					|| !equals(oldSourceMethodInfo.getTypeParameterBounds(), newSourceMethodInfo.getTypeParameterBounds())) {
				this.delta.changed(newElement, IJavaElementDelta.F_CONTENT);
			}
		} else if (oldInfo instanceof SourceFieldElementInfo && newInfo instanceof SourceFieldElementInfo) {
			if (!CharOperation.equals(
					((SourceFieldElementInfo)oldInfo).getTypeName(), 
					((SourceFieldElementInfo)newInfo).getTypeName())) {
				this.delta.changed(newElement, IJavaElementDelta.F_CONTENT);
			}
		}
	}
	if (oldInfo instanceof SourceTypeElementInfo && newInfo instanceof SourceTypeElementInfo) {
		SourceTypeElementInfo oldSourceTypeInfo = (SourceTypeElementInfo)oldInfo;
		SourceTypeElementInfo newSourceTypeInfo = (SourceTypeElementInfo)newInfo;
		if (!CharOperation.equals(oldSourceTypeInfo.getSuperclassName(), newSourceTypeInfo.getSuperclassName()) 
				|| !CharOperation.equals(oldSourceTypeInfo.getInterfaceNames(), newSourceTypeInfo.getInterfaceNames())) {
			this.delta.changed(newElement, IJavaElementDelta.F_SUPER_TYPES);
		}
		if (!CharOperation.equals(oldSourceTypeInfo.getTypeParameterNames(), newSourceTypeInfo.getTypeParameterNames())
				|| !equals(oldSourceTypeInfo.getTypeParameterBounds(), newSourceTypeInfo.getTypeParameterBounds())) {
			this.delta.changed(newElement, IJavaElementDelta.F_CONTENT);
		}
		HashMap oldTypeCategories = oldSourceTypeInfo.categories;
		HashMap newTypeCategories = newSourceTypeInfo.categories;
		if (oldTypeCategories != null) {
			Iterator elements = oldTypeCategories.keySet().iterator();
			while (elements.hasNext()) {
				IJavaElement element = (IJavaElement) elements.next();
				String[] oldCategories = (String[]) oldTypeCategories.get(element);
				String[] newCategories = newTypeCategories == null ? null : (String[]) newTypeCategories.get(element);
				if (!Util.equalArraysOrNull(oldCategories, newCategories)) {
					this.delta.changed(element, IJavaElementDelta.F_CATEGORIES);
				}
			}
		} else if (newTypeCategories != null) {
			Iterator elements = newTypeCategories.keySet().iterator();
			while (elements.hasNext()) {
				IJavaElement element = (IJavaElement) elements.next();
				this.delta.changed(element, IJavaElementDelta.F_CATEGORIES); // all categories for this element were removed
			}
		}
	}
}

