/**
 * Returns the given file's contents as a byte array.
 */
public static byte[] getResourceContentsAsBytes(IFile file) throws JavaModelException {
	InputStream stream= null;
	try {
		stream = file.getContents(true);
	} catch (CoreException e) {
		throw new JavaModelException(e);
	}
	byte[] contents = new byte[0];
	try {
		int contentsLength = 0;
		int bytesRead = -1;
		do {
			int available= stream.available();
			
			// resize contents if needed
			if (contentsLength + available > contents.length) {
				System.arraycopy(contents, 0, contents = new byte[contentsLength + available], 0, contentsLength);
			}

			// read as many bytes as possible
			bytesRead = stream.read(contents, contentsLength, available);
			
			if (bytesRead > 0) {
				// remember length of contents
				contentsLength += bytesRead;
			}
		} while (bytesRead > 0);
		
		// resize contents if necessary
		if (contentsLength < contents.length) {
			System.arraycopy(contents, 0, contents = new byte[contentsLength], 0, contentsLength);
		}
	} catch (IOException e) {
		throw new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);
	} finally {
		try {
			stream.close();
		} catch (IOException ioe) {
			throw new JavaModelException(ioe, IJavaModelStatusConstants.IO_EXCEPTION);
		}
	}
	return contents;
}

