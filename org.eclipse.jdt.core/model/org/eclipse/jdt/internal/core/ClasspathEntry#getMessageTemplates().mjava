	private String[] getMessageTemplates() {
		String [] result = new String[AccessRuleSet.MESSAGE_TEMPLATES_LENGTH];
		if (this.entryKind == CPE_PROJECT || this.entryKind == CPE_SOURCE) { // can be remote source entry when reconciling
			result[0] = Messages.bind(
				org.eclipse.jdt.internal.core.util.Messages.restrictedAccess_project,
				new String[] {"{0}", getPath().segment(0)});  //$NON-NLS-1$
			result[1] = Messages.bind(
					org.eclipse.jdt.internal.core.util.Messages.restrictedAccess_constructor_project,
					new String[] {"{0}", getPath().segment(0)});  //$NON-NLS-1$
			result[2] = Messages.bind(
					org.eclipse.jdt.internal.core.util.Messages.restrictedAccess_method_project,
					new String[] {"{0}", "{1}", getPath().segment(0)});  //$NON-NLS-1$ //$NON-NLS-2$
			result[3] = Messages.bind(
					org.eclipse.jdt.internal.core.util.Messages.restrictedAccess_field_project,
					new String[] {"{0}", "{1}", getPath().segment(0)});  //$NON-NLS-1$ //$NON-NLS-2$
		} else {
			IPath libPath = getPath();
			Object target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), libPath, false);
			String pathString;
			if (target instanceof java.io.File)
				pathString = libPath.toOSString();
			else
				pathString = libPath.makeRelative().toString();
			result[0] = Messages.bind(
				org.eclipse.jdt.internal.core.util.Messages.restrictedAccess_library,
				new String[] {"{0}", pathString}); //$NON-NLS-1$ 
			result[1] = Messages.bind(
					org.eclipse.jdt.internal.core.util.Messages.restrictedAccess_constructor_library,
					new String[] {"{0}", pathString}); //$NON-NLS-1$ 
			result[2] = Messages.bind(
					org.eclipse.jdt.internal.core.util.Messages.restrictedAccess_method_library,
					new String[] {"{0}", "{1}", pathString}); //$NON-NLS-1$ //$NON-NLS-2$ 
			result[3] = Messages.bind(
					org.eclipse.jdt.internal.core.util.Messages.restrictedAccess_field_library,
					new String[] {"{0}", "{1}", pathString}); //$NON-NLS-1$ //$NON-NLS-2$ 
		}
		return result;
	}

