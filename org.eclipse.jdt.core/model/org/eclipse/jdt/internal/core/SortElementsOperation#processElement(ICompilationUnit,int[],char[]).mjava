	/**
	 * Method processElement.
	 * @param unit
	 * @param bufferContents
	 */
	private String processElement(ICompilationUnit unit, int[] positionsToMap, char[] source) {
		this.hasChanged = false;
		SortElementBuilder builder = new SortElementBuilder(source, positionsToMap, comparator);
		SourceElementParser parser = new SourceElementParser(builder,
			ProblemFactory.getProblemFactory(Locale.getDefault()), new CompilerOptions(JavaCore.getOptions()), true);
		
		if (unit.exists()) {
			IPackageFragment packageFragment = (IPackageFragment)unit.getAncestor(IJavaElement.PACKAGE_FRAGMENT);
			char[][] expectedPackageName = null;
			if (packageFragment != null){
				expectedPackageName = CharOperation.splitOn('.', packageFragment.getElementName().toCharArray());
			}
			parser.parseCompilationUnit(
				new BasicCompilationUnit(
					source,
					expectedPackageName,
					unit.getElementName(),
					null),
				false/*diet parse*/);
		} else {
			parser.parseCompilationUnit(
				new BasicCompilationUnit(
					source,
					null,
					"",//$NON-NLS-1$
					null),
				false/*diet parse*/);
		}
		return builder.getSource();
	}

