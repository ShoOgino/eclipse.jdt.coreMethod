	/**
	 * Computes the collection of package fragment roots (local ones) and set it on the given info.
	 * Need to check *all* package fragment roots in order to reset NameLookup
	 * @param info JavaProjectElementInfo
	 * @throws JavaModelException
	 */
	public void computeChildren(JavaProjectElementInfo info) throws JavaModelException {
		IClasspathEntry[] classpath = getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);
		IPackageFragmentRoot[] oldRoots = info.allPkgFragmentRootsCache;
		if (oldRoots != null) {
			IPackageFragmentRoot[] newRoots = computePackageFragmentRoots(classpath, true);
			checkIdentical: { // compare all pkg fragment root lists
				if (oldRoots.length == newRoots.length){
					for (int i = 0, length = oldRoots.length; i < length; i++){
						if (!oldRoots[i].equals(newRoots[i])){
							break checkIdentical;
						}
					}
					return; // no need to update
				}	
			}
		}
		info.resetCaches(); // discard caches (hold onto roots and pkg fragments)
		info.setNonJavaResources(null);
		info.setChildren(
			computePackageFragmentRoots(classpath, false));		
	}

