	/*
	 * Finds the source file name (using the simple .java file name) for the given IBinaryType.
	 * Returns null if not found.
	 */
	public String findSourceFileName(IType type, IBinaryType info) {
		char[] sourceFileName = info.sourceFileName();
		if (sourceFileName == null) {
			/*
			 * We assume that this type has been compiled from a file with its name
			 * For example, A.class comes from A.java and p.A.class comes from a file A.java
			 * in the folder p.
			 */
			try {
				if (type.isMember()) {
					IType enclosingType = type.getDeclaringType();
					if (enclosingType == null) return null; // play it safe
					while (enclosingType.getDeclaringType() != null) {
						enclosingType = enclosingType.getDeclaringType();
					}
					return enclosingType.getElementName() + SUFFIX_STRING_java;
				} else if (type.isLocal() || type.isAnonymous()){
					String typeQualifiedName = type.getTypeQualifiedName();
					return typeQualifiedName.substring(0, typeQualifiedName.indexOf('$')) + SUFFIX_STRING_java;
				} else {
					return type.getElementName() + SUFFIX_STRING_java;
				}
			} catch (JavaModelException e) {
				// ignore
			}
		} else {
			return  new String(sourceFileName);
		}
		return null;
	}

