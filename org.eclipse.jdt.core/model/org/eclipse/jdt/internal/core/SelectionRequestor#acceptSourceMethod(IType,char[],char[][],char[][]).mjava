	/**
	 * Resolve the source method
	 *
	 * fix for 1FWFT6Q
	 */
	protected void acceptSourceMethod(
		IType type,
		char[] selector,
		char[][] parameterPackageNames,
		char[][] parameterTypeNames) {
		String name = new String(selector);
		IMethod[] methods = null;
		try {
			methods = type.getMethods();
		} catch (JavaModelException e) {
			return;
		}
		IJavaElement[] matches = new IJavaElement[] {
		};
		for (int i = 0; i < methods.length; i++) {
			if (methods[i].getElementName().equals(name)
				&& methods[i].getParameterTypes().length == parameterTypeNames.length) {
				matches = growAndAddToArray(matches, methods[i]);
			}
		}

		// if no matches, nothing to report
		if (matches.length == 0) {
			return;
		}

		// if there is only one match, we've got it
		if (matches.length == 1) {
			fElements = growAndAddToArray(fElements, matches[0]);
			return;
		}

		// more than one match - must match simple parameter types
		for (int i = 0; i < matches.length; i++) {
			IMethod method = (IMethod) matches[i];
			String[] signatures = method.getParameterTypes();
			boolean match = true;
			for (int p = 0; p < signatures.length; p++) {
				String simpleName = Signature.getSimpleName(Signature.toString(signatures[p]));
				if (!simpleName.equals(new String(parameterTypeNames[p]))) {
					match = false;
					break;
				}
			}
			if (match) {
				fElements = growAndAddToArray(fElements, method);
			}
		}

	}

