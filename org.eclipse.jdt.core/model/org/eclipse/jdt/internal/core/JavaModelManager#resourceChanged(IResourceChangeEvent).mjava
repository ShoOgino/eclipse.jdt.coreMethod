	/**
	 * Notifies this Java Model Manager that some resource changes have happened
	 * on the platform, and that the Java Model should update any required
	 * internal structures such that its elements remain consistent.
	 * Translates <code>IResourceDeltas</code> into <code>IJavaElementDeltas</code>.
	 *
	 * @see IResourceDelta
	 * @see IResource 
	 */
	public void resourceChanged(IResourceChangeEvent event) {
		if (event.getSource() instanceof IWorkspace) {
			IResource resource = event.getResource();
			IResourceDelta delta = event.getDelta();
			
			switch(event.getType()){
				case IResourceChangeEvent.PRE_DELETE :
					try {
						if(resource.getType() == IResource.PROJECT 
							&& ((IProject) resource).hasNature(JavaCore.NATURE_ID)) {
								
							this.deleting((IProject)resource);
						}
					} catch(CoreException e){
					}
					return;
					
				case IResourceChangeEvent.PRE_AUTO_BUILD :
					if(delta != null) {
						this.checkProjectsBeingAddedOrRemoved(delta);
						
						// update the classpath related markers
						this.deltaProcessor.updateClasspathMarkers();

						// the following will close project if affected by the property file change
						this.deltaProcessor.performPreBuildCheck(delta, null); 
					}
					// only fire already computed deltas (resource ones will be processed in post change only)
					fire(null, ElementChangedEvent.PRE_AUTO_BUILD);
					break;
					
				case IResourceChangeEvent.POST_CHANGE :
					try {
						if (delta != null) {
							IJavaElementDelta[] translatedDeltas = this.deltaProcessor.processResourceDelta(delta, ElementChangedEvent.POST_CHANGE);
							if (translatedDeltas.length > 0) {
								for (int i= 0; i < translatedDeltas.length; i++) {
									registerJavaModelDelta(translatedDeltas[i]);
								}
							}
							fire(null, ElementChangedEvent.POST_CHANGE);
						}		
					} finally {
						// workaround for bug 15168 circular errors not reported 
						this.javaProjectsCache = null;
					}
			}
		}
	}

