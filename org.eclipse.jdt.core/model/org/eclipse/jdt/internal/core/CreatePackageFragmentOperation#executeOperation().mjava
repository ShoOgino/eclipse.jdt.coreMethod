/**
 * Execute the operation - creates the new package fragment and any
 * side effect package fragments.
 *
 * @exception JavaModelException if the operation is unable to complete
 */
protected void executeOperation() throws JavaModelException {
	JavaElementDelta delta = null;
	IPackageFragmentRoot root = (IPackageFragmentRoot) getParentElement();
	String[] names = Util.getTrimmedSimpleNames(fName);
	beginTask(Util.bind("operation.createPackageFragmentProgress"), names.length); //$NON-NLS-1$
	IContainer parentFolder = (IContainer) root.getResource();
	String sideEffectPackageName = ""; //$NON-NLS-1$
	ArrayList resultElements = new ArrayList(names.length);
	char[][] exclusionPatterns = ((PackageFragmentRoot)root).fullExclusionPatternChars();
	int i;
	for (i = 0; i < names.length; i++) {
		String subFolderName = names[i];
		sideEffectPackageName += subFolderName;
		IResource subFolder = parentFolder.findMember(subFolderName);
		if (subFolder == null) {
			createFolder(parentFolder, subFolderName, fForce);
			parentFolder = parentFolder.getFolder(new Path(subFolderName));
			IPackageFragment addedFrag = root.getPackageFragment(sideEffectPackageName);
			if (!Util.isExcluded(parentFolder, exclusionPatterns)) {
				if (delta == null) {
					delta = newJavaElementDelta();
				}
				delta.added(addedFrag);
			}
			resultElements.add(addedFrag);
		} else {
			parentFolder = (IContainer) subFolder;
		}
		sideEffectPackageName += '.';
		worked(1);
	}
	if (resultElements.size() > 0) {
		fResultElements = new IJavaElement[resultElements.size()];
		resultElements.toArray(fResultElements);
		if (delta != null) {
			addDelta(delta);
		}
	}
	done();
}

