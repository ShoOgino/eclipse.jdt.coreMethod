/**
 * Creates the handles and infos for the fields of the given binary type.
 * Adds new handles to the given vector.
 */
private void generateRecordComponentInfos(IType type, IBinaryType typeInfo, HashMap newElements, ArrayList childrenHandles) {
	// Make the fields
	IRecordComponent[] components = typeInfo.getRecordComponents();
	if (components == null) {
		return;
	}
	JavaModelManager manager = JavaModelManager.getJavaModelManager();
	for (int i = 0, fieldCount = components.length; i < fieldCount; i++) {
		IRecordComponent componentInfo = components[i];
		BinaryField component = new BinaryField((JavaElement)type, manager.intern(new String(componentInfo.getName()))) {
			@Override
			public boolean isRecordComponent() throws JavaModelException {
				return true;
			}
		};
		newElements.put(component, componentInfo);
		childrenHandles.add(component);
		generateAnnotationsInfos(component, componentInfo.getAnnotations(), componentInfo.getTagBits(), newElements);
	}
}

