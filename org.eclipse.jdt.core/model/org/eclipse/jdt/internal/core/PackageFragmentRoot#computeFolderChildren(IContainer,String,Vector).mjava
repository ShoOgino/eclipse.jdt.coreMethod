	/**
	 * Starting at this folder, create package fragments and add the fragments to the collection
	 * of children.
	 * 
	 * @exception JavaModelException  The resource associated with this package fragment does not exist
	 */
	protected void computeFolderChildren(
		IContainer folder,
		String prefix,
		Vector vChildren)
		throws JavaModelException {
		IPackageFragment pkg = getPackageFragment(prefix);
		vChildren.addElement(pkg);
		try {
			IPath outputLocationPath = getJavaProject().getOutputLocation();
			IResource[] members = folder.members();
			for (int i = 0, max = members.length; i < max; i++) {
				IResource member = members[i];
				if (member.getType() == IResource.FOLDER
					&& member.getName().indexOf('.') < 0) {
					String newPrefix;
					if (prefix.length() == 0) {
						newPrefix = member.getName();
					} else {
						newPrefix = prefix + "." + member.getName();
					}
					// eliminate binary output only if nested inside direct subfolders
					if (!member.getFullPath().equals(outputLocationPath)) {
						computeFolderChildren((IFolder) member, newPrefix, vChildren);
					}
				}
			}
		} catch (IllegalArgumentException e) {
			throw new JavaModelException(
				e,
				IJavaModelStatusConstants.ELEMENT_DOES_NOT_EXIST);
			// could be thrown by ElementTree when path is not found
		} catch (CoreException e) {
			throw new JavaModelException(e);
		}
	}

