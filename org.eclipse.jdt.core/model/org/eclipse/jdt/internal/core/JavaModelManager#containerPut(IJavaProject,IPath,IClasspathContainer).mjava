	public synchronized void containerPut(IJavaProject project, IPath containerPath, IClasspathContainer container){

		// set/unset the initialization in progress
		HashSet projectInitializations = containerInitializationInProgress(project);
		if (container == CONTAINER_INITIALIZATION_IN_PROGRESS) {
			projectInitializations.add(containerPath);
			
			// do not write out intermediate initialization value
			return;
		} else {
			projectInitializations.remove(containerPath);
			if (projectInitializations.size() == 0) {
				Map initializations = (Map)this.containerInitializationInProgress.get();
				initializations.remove(project);
			}

			Map projectContainers = (Map)this.containers.get(project);
			if (projectContainers == null){
				projectContainers = new HashMap(1);
				this.containers.put(project, projectContainers);
			}
	
			if (container == null) {
				projectContainers.remove(containerPath);
				Map previousContainers = (Map)this.previousSessionContainers.get(project);
				if (previousContainers != null){
					previousContainers.remove(containerPath);
				}
			} else {
				projectContainers.put(containerPath, container);
			}
		}
		// container values are persisted in preferences during save operations, see #saving(ISaveContext)
	}

