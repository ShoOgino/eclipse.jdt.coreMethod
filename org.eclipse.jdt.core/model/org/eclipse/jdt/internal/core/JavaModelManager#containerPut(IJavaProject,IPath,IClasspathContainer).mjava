	public static void containerPut(IJavaProject project, IPath containerPath, IClasspathContainer container){

		Map projectContainers = (Map)Containers.get(project);
		if (projectContainers == null){
			projectContainers = new HashMap(1);
			Containers.put(project, projectContainers);
		}

		if (container == null) {
			projectContainers.remove(containerPath);
			Map previousContainers = (Map)PreviousSessionContainers.get(project);
			if (previousContainers != null){
				previousContainers.remove(containerPath);
			}
		} else {
			projectContainers.put(containerPath, container);
		}

		// do not write out intermediate initialization value
		if (container == JavaModelManager.ContainerInitializationInProgress) {
			return;
		}
		Preferences preferences = JavaCore.getPlugin().getPluginPreferences();
		String containerKey = CP_CONTAINER_PREFERENCES_PREFIX+project.getElementName() +"|"+containerPath;//$NON-NLS-1$
		String containerString = CP_ENTRY_IGNORE;
		try {
			if (container != null) {
				containerString = ((JavaProject)project).encodeClasspath(container.getClasspathEntries(), null, false);
			}
		} catch(JavaModelException e){
		}
		preferences.setDefault(containerKey, CP_ENTRY_IGNORE); // use this default to get rid of removed ones
		preferences.setValue(containerKey, containerString);
		JavaCore.getPlugin().savePluginPreferences();
	}

