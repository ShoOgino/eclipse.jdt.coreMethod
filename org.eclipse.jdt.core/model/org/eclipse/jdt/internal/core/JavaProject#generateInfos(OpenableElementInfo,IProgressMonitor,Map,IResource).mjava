	/**
	 * @see Openable
	 */
	protected boolean generateInfos(
		OpenableElementInfo info,
		IProgressMonitor pm,
		Map newElements,
		IResource underlyingResource) throws JavaModelException {

		boolean validInfo = false;
		try {
			if (getProject().isOpen()) {
				// put the info now, because computing the roots requires it
				JavaModelManager.getJavaModelManager().putInfo(this, info);

				// compute the pkg fragment roots
				updatePackageFragmentRoots();				
	
				// remember the timestamps of external libraries the first time they are looked up
				IClasspathEntry[] resolvedClasspath = getResolvedClasspath(true/*ignore unresolved variable*/);
				for (int i = 0, length = resolvedClasspath.length; i < length; i++) {
					IClasspathEntry entry = resolvedClasspath[i];
					if (entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY) {
						IPath path = entry.getPath();
						Object target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), path, true);
						if (target instanceof java.io.File) {
							Map externalTimeStamps = JavaModelManager.getJavaModelManager().deltaProcessor.externalTimeStamps;
							if (externalTimeStamps.get(path) == null) {
								long timestamp = DeltaProcessor.getTimeStamp((java.io.File)target);
								externalTimeStamps.put(path, new Long(timestamp));							
							}
						}
					}
				}			

				// only valid if reaches here				
				validInfo = true;
			}
		} finally {
			if (!validInfo)
				JavaModelManager.getJavaModelManager().removeInfo(this);
		}
		return validInfo;
	}

