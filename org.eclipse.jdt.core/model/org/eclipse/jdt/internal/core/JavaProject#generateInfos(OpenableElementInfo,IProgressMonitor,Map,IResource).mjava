/**
	 * @see Openable
	 */
	protected boolean generateInfos(
		OpenableElementInfo info,
		IProgressMonitor pm,
		Map newElements,
		IResource underlyingResource) throws JavaModelException {
	
		if (getProject().isOpen()) {
			// put the info now, because computing the roots requires it
			//JavaModelManager.getJavaModelManager().putInfo(this, info);
	
			IWorkspace workspace = ResourcesPlugin.getWorkspace();
			IWorkspaceRoot wRoot = workspace.getRoot();
			IClasspathEntry[] resolvedClasspath = getResolvedClasspath(true/*ignore unresolved variable*/, false  /*don't refresh CP markers (see bug 37274)*/);
	
			// compute the pkg fragment roots (resolved CP should already be cached from marker refresh)
			computeChildren((JavaProjectElementInfo)info);				
	
			// remember the timestamps of external libraries the first time they are looked up
			for (int i = 0, length = resolvedClasspath.length; i < length; i++) {
				IClasspathEntry entry = resolvedClasspath[i];
				if (entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY) {
					IPath path = entry.getPath();
					Object target = JavaModel.getTarget(wRoot, path, true);
					if (target instanceof java.io.File) {
						Map externalTimeStamps = JavaModelManager.getJavaModelManager().deltaProcessor.externalTimeStamps;
						if (externalTimeStamps.get(path) == null) {
							long timestamp = DeltaProcessor.getTimeStamp((java.io.File)target);
							externalTimeStamps.put(path, new Long(timestamp));							
						}
					}
				}
			}			
	
		}
		return true;
	}

