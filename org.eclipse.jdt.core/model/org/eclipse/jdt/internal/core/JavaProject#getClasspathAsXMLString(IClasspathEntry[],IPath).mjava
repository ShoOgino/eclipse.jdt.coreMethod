	/**
	 * Returns the XML String encoding of the class path.
	 */
	protected String getClasspathAsXMLString(IClasspathEntry[] classpath, IPath outputLocation) throws JavaModelException {
		Document doc= new DocumentImpl();
		Element cpElement= doc.createElement("classpath"/*nonNLS*/);
		doc.appendChild(cpElement);

		for (int i= 0; i < classpath.length; ++i) {
			Element cpeElement= getEntryAsXMLElement(doc, classpath[i], getProject().getFullPath());
			cpElement.appendChild(cpeElement);
		}

		if (outputLocation != null) {
			outputLocation= outputLocation.removeFirstSegments(1);
			outputLocation= outputLocation.makeRelative();
			Element oElement= doc.createElement("classpathentry"/*nonNLS*/);
			oElement.setAttribute("kind"/*nonNLS*/, kindToString(ClasspathEntry.K_OUTPUT));
			oElement.setAttribute("path"/*nonNLS*/, outputLocation.toOSString());
			cpElement.appendChild(oElement);
		}

		// produce a String output
		StringWriter writer = new StringWriter();
		try {
			OutputFormat format = new OutputFormat();
			format.setIndenting(true);
			Serializer serializer = SerializerFactory.getSerializerFactory(Method.XML).makeSerializer(writer, format);
			serializer.asDOMSerializer().serialize(doc);
		} catch (IOException e) {
			throw new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);
		}
		return writer.toString();	
	}

