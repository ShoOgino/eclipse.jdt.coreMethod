public void acceptLocalField(FieldBinding fieldBinding) {
	IJavaElement res;
	if(fieldBinding.declaringClass instanceof ParameterizedTypeBinding) {
		LocalTypeBinding localTypeBinding = (LocalTypeBinding)((ParameterizedTypeBinding)fieldBinding.declaringClass).type;
		res = findLocalElement(localTypeBinding.sourceStart());
	} else {
		SourceTypeBinding typeBinding = (SourceTypeBinding)fieldBinding.declaringClass;
		res = findLocalElement(typeBinding.sourceStart());
	}
	if (res != null && res.getElementType() == IJavaElement.TYPE) {
		IType type = (IType) res;
		IField field= type.getField(new String(fieldBinding.name));
		if (field.exists()) {
			if (fieldBinding instanceof ParameterizedFieldBinding) {
				char[] uniqueKey = fieldBinding.computeUniqueKey();
				if(field.isBinary()) {
					field = new ParameterizedBinaryField(
							(JavaElement)field.getParent(),
							field.getElementName(),
							uniqueKey == null ? null : new String(uniqueKey));
				} else {
					field = new ParameterizedSourceField(
							(JavaElement)field.getParent(),
							field.getElementName(),
							uniqueKey == null ? null : new String(uniqueKey));
				}
			}
			addElement(field);
			if(SelectionEngine.DEBUG){
				System.out.print("SELECTION - accept field("); //$NON-NLS-1$
				System.out.print(field.toString());
				System.out.println(")"); //$NON-NLS-1$
			}
		}
	}
}

