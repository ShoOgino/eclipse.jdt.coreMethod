	/*
	 * Check whether the updated file is affecting some of the properties of a given project (like
	 * its classpath persisted as a file).
	 * Also force classpath problems to be refresh if not running in autobuild mode.
	 * NOTE: It can induce resource changes, and cannot be called during POST_CHANGE notification.
	 *
	 */
	private void performPreBuildCheck(
		IResourceDelta delta,
		IJavaElement parent) {
	
		IResource resource = delta.getResource();
		IJavaElement element = null;
		boolean processChildren = false;
	
		switch (resource.getType()) {
	
			case IResource.ROOT :
				if (delta.getKind() == IResourceDelta.CHANGED) {
					element = JavaCore.create(resource);
					processChildren = true;
				}
				break;
			case IResource.PROJECT :
				int kind = delta.getKind();
				switch (kind) {
					case IResourceDelta.CHANGED:
						// do not visit non-java projects (see bug 16140 Non-java project gets .classpath)
						IProject project = (IProject)resource;
						if (JavaProject.hasJavaNature(project)) {
							element = JavaCore.create(resource);
							processChildren = true;
						} else if (this.manager.getJavaModel().findJavaProject(project) != null) {
							// project had the java nature
							this.state.rootsAreStale = true;

							// remove classpath cache so that initializeRoots() will not consider the project has a classpath
							this.manager.removePerProjectInfo((JavaProject)JavaCore.create(project));
						}
						break;
					case IResourceDelta.ADDED:
						this.state.rootsAreStale = true;
						break;
					case IResourceDelta.REMOVED:
						// remove classpath cache so that initializeRoots() will not consider the project has a classpath
						this.manager.removePerProjectInfo((JavaProject)JavaCore.create(resource));
						this.state.rootsAreStale = true;
						break;
				}
				break;
			case IResource.FILE :
				if (parent.getElementType() == IJavaElement.JAVA_PROJECT) {
					IFile file = (IFile) resource;
					JavaProject project = (JavaProject) parent;
	
					/* check classpath file change */
					if (file.getName().equals(JavaProject.CLASSPATH_FILENAME)) {
						reconcileClasspathFileUpdate(delta, project);
						this.state.rootsAreStale = true;
						break;
					}
//					/* check custom preference file change */
//					if (file.getName().equals(JavaProject.PREF_FILENAME)) {
//						reconcilePreferenceFileUpdate(delta, file, project);
//						break;
//					}
				}
				break;
		}
		if (processChildren) {
			IResourceDelta[] children = delta.getAffectedChildren();
			for (int i = 0; i < children.length; i++) {
				performPreBuildCheck(children[i], element);
			}
		}
	}

