	/**
	 * Check whether the updated file is affecting some of the properties of a given project (like
	 * its classpath persisted as a file).
	 * Also force classpath problems to be refresh if not running in autobuild mode.
	 * NOTE: It can induce resource changes, and cannot be called during POST_CHANGE notification.
	 *
	 */
	public void performPreBuildCheck(
		IResourceDelta delta,
		IJavaElement parent) {
	
		IResource resource = delta.getResource();
		IJavaElement element = JavaCore.create(resource);
		boolean processChildren = false;
	
		switch (resource.getType()) {
	
			case IResource.ROOT :
				if (delta.getKind() == IResourceDelta.CHANGED) {
					processChildren = true;
				}
				break;
			case IResource.PROJECT :
				// do not visit non-java projects (see bug 16140 Non-java project gets .classpath)
				if (delta.getKind() == IResourceDelta.CHANGED && this.hasJavaNature(resource)) {
					processChildren = true;
				}
				break;
			case IResource.FILE :
				if (parent.getElementType() == IJavaElement.JAVA_PROJECT) {
					IFile file = (IFile) resource;
					JavaProject project = (JavaProject) parent;
	
					/* check classpath file change */
					if (file.getName().equals(JavaProject.CLASSPATH_FILENAME)) {
						reconcileClasspathFileUpdate(delta, file, project);
						break;
					}
//					/* check custom preference file change */
//					if (file.getName().equals(JavaProject.PREF_FILENAME)) {
//						reconcilePreferenceFileUpdate(delta, file, project);
//						break;
//					}
				}
				break;
		}
		if (processChildren) {
			IResourceDelta[] children = delta.getAffectedChildren();
			for (int i = 0; i < children.length; i++) {
				performPreBuildCheck(children[i], element);
			}
		}
	}

