/**
 * Merged all awaiting deltas.
 */
public void mergeDeltas() {
	if (fJavaModelDeltas.size() <= 1) return;
	
	if (DeltaProcessor.VERBOSE) {
		System.out.println("MERGING " + fJavaModelDeltas.size() + " DELTAS ["+Thread.currentThread()+"]"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
	}
	
	Iterator deltas = fJavaModelDeltas.iterator();
	JavaElementDelta rootDelta = new JavaElementDelta(getJavaModel());
	boolean insertedTree = false;
	while (deltas.hasNext()) {
		IJavaElementDelta delta = (IJavaElementDelta)deltas.next();
		if (DeltaProcessor.VERBOSE) {
			System.out.println(delta.toString());
		}
		IJavaElementDelta[] children = delta.getAffectedChildren();
		for (int j = 0; j < children.length; j++) {
			JavaElementDelta projectDelta = (JavaElementDelta) children[j];
			rootDelta.insertDeltaTree(projectDelta.getElement(), projectDelta);
			insertedTree = true;
		}
	}
	if (insertedTree){
		fJavaModelDeltas = new ArrayList(1);
		fJavaModelDeltas.add(rootDelta);
	}
	else {
		fJavaModelDeltas = new ArrayList(0);
	}
}	

