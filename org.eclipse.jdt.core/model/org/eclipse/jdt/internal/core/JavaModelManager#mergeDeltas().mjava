/**
 * Merged all awaiting deltas.
 */
public void mergeDeltas() {
	Iterator deltas = null;
	if (fJavaModelDeltas.isEmpty()) {
		//deltas = fResourceDeltas.elements();
		return;
	} else {
		deltas = fJavaModelDeltas.iterator();
	}	
	if (deltas != null) {
		JavaElementDelta rootDelta = new JavaElementDelta(getJavaModel());
		boolean insertedTree = false;
		while (deltas.hasNext()) {
			IJavaElementDelta delta = (IJavaElementDelta)deltas.next();
			IJavaElementDelta[] children = delta.getAffectedChildren();
			for (int j = 0; j < children.length; j++) {
				JavaElementDelta projectDelta = (JavaElementDelta) children[j];
				rootDelta.insertDeltaTree(projectDelta.getElement(), projectDelta);
				insertedTree = true;
			}
		}
		if (insertedTree){
			if (fJavaModelDeltas.isEmpty()) {
				fResourceDeltas = new ArrayList(1);
				fResourceDeltas.add(rootDelta);
			} else {
				fJavaModelDeltas = new ArrayList(1);
				fJavaModelDeltas.add(rootDelta);
			}	
		}
		else {
			if (fJavaModelDeltas.isEmpty()) {
				fResourceDeltas = new ArrayList(0);
			} else {
				fJavaModelDeltas = new ArrayList(0);
			}	
		}
	}
}	

