	public void readVariables(String xmlString) throws IOException {
		
		StringReader reader = new StringReader(xmlString);
		Element cpElement;
		try {
			DocumentBuilder parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();
			cpElement = parser.parse(new InputSource(reader)).getDocumentElement();
		} catch(SAXException e) {
			return;
		} catch(ParserConfigurationException e){
			return;
		} finally {
			reader.close();
		}
		if (cpElement == null) return;
		if (!cpElement.getNodeName().equalsIgnoreCase("variables")) { //$NON-NLS-1$
			return;
		}
		NodeList list= cpElement.getChildNodes();
		int length= list.getLength();
		for (int i= 0; i < length; ++i) {
			Node node= list.item(i);
			short type= node.getNodeType();
			if (type == Node.ELEMENT_NODE) {
				Element element= (Element) node;
				if (element.getNodeName().equalsIgnoreCase("variable")) { //$NON-NLS-1$
					String varName = element.getAttribute("name"); //$NON-NLS-1$
					String varPath = element.getAttribute("path"); //$NON-NLS-1$
					try {
						JavaCore.setClasspathVariable(varName, new Path(varPath), null);
					} catch(JavaModelException e){
					} catch(RuntimeException e){
					}
				}
			}
		}
	}

