	/*
	 * Returns the per-working copy info for the given working copy.
	 * If it doesn't exist and if create, add a new per-working copy info with the given problem requestor.
	 * If recordUsage, increment the per-working copy info's use count.
	 * Returns null if it doesn't exist and not create.
	 */
	public PerWorkingCopyInfo getPerWorkingCopyInfo(ICompilationUnit workingCopy, boolean create, boolean recordUsage, IProblemRequestor problemRequestor) {
		synchronized(perWorkingCopyInfos) { // use the perWorkingCopyInfo collection as its own lock
			PerWorkingCopyInfo info = (PerWorkingCopyInfo) perWorkingCopyInfos.get(workingCopy);
			if (info == null && create) {
				info= new PerWorkingCopyInfo(problemRequestor);
				perWorkingCopyInfos.put(workingCopy, info);
			}
			if (info != null && recordUsage) info.useCount++;
			return info;
		}
	}	

