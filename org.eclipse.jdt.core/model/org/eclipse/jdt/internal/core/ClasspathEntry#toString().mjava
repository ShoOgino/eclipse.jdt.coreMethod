	/**
	 * Returns a printable representation of this classpath entry.
	 */
	public String toString() {
		StringBuffer buffer = new StringBuffer();
		buffer.append(getPath().toString());
		buffer.append('[');
		switch (getEntryKind()) {
			case IClasspathEntry.CPE_LIBRARY :
				buffer.append("CPE_LIBRARY");
				break;
			case IClasspathEntry.CPE_PROJECT :
				buffer.append("CPE_PROJECT");
				break;
			case IClasspathEntry.CPE_SOURCE :
				buffer.append("CPE_SOURCE");
				break;
			case IClasspathEntry.CPE_VARIABLE :
				buffer.append("CPE_VARIABLE");
				break;
		}
		buffer.append("][");
		switch (getContentKind()) {
			case IPackageFragmentRoot.K_BINARY :
				buffer.append("K_BINARY");
				break;
			case IPackageFragmentRoot.K_SOURCE :
				buffer.append("K_SOURCE");
				break;
			case ClasspathEntry.K_OUTPUT :
				buffer.append("K_OUTPUT");
				break;
		}
		buffer.append(']');
		if (getSourceAttachmentPath() != null) {
			buffer.append("[sourcePath:");
			buffer.append(getSourceAttachmentPath());
			buffer.append(']');
		}
		if (getSourceAttachmentRootPath() != null) {
			buffer.append("[rootPath:");
			buffer.append(getSourceAttachmentRootPath());
			buffer.append(']');
		}
		return buffer.toString();
	}

