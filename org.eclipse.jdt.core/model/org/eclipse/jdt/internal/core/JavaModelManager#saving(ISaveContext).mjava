	/**
	 * @see ISaveParticipant
	 */
	public void saving(ISaveContext context) throws CoreException {
		
	    // save container values on snapshot/full save
		IJavaProject[] projects = getJavaModel().getJavaProjects();
		for (int i = 0, length = projects.length; i < length; i++) {
		    IJavaProject project = projects[i];
			// clone while iterating (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=59638)
			Map projectContainers = containerClone(project);
			if (projectContainers == null) continue;
			for (Iterator keys = projectContainers.keySet().iterator(); keys.hasNext();) {
			    IPath containerPath = (IPath) keys.next();
			    IClasspathContainer container = (IClasspathContainer) projectContainers.get(containerPath);
				String containerKey = CP_CONTAINER_PREFERENCES_PREFIX+project.getElementName() +"|"+containerPath;//$NON-NLS-1$
				String containerString = CP_ENTRY_IGNORE;
				try {
					if (container != null) {
						containerString = ((JavaProject)project).encodeClasspath(container.getClasspathEntries(), null, false);
					}
				} catch(JavaModelException e){
					// could not encode entry: leave it as CP_ENTRY_IGNORE
				}
				JavaCore.getDefaultPreferences().put(containerKey, CP_ENTRY_IGNORE); // TODO (frederic) verify if this is really necessary...
				JavaCore.getInstancePreferences().put(containerKey, containerString);
			}
		}
		try {
			JavaCore.getInstancePreferences().flush();
		} catch (BackingStoreException e) {
			// TODO (frederic) see if it's necessary to report this exception
			// IStatus status = new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, IStatus.ERROR, "Problems while saving context", e); //$NON-NLS-1$
			// throw new CoreException(status);
		}
		
		if (context.getKind() == ISaveContext.FULL_SAVE) {
			// will need delta since this save (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=38658)
			context.needDelta();
			
			// clean up indexes on workspace full save
			// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=52347)
			IndexManager manager = this.indexManager;
			if (manager != null) {
				manager.cleanUpIndexes();
			}
		}
	
		IProject savedProject = context.getProject();
		if (savedProject != null) {
			if (!JavaProject.hasJavaNature(savedProject)) return; // ignore
			PerProjectInfo info = getPerProjectInfo(savedProject, true /* create info */);
			saveState(info, context);
			return;
		}

		ArrayList vStats= null; // lazy initialized
		for (Iterator iter =  this.perProjectInfos.values().iterator(); iter.hasNext();) {
			try {
				PerProjectInfo info = (PerProjectInfo) iter.next();
				saveState(info, context);
			} catch (CoreException e) {
				if (vStats == null)
					vStats= new ArrayList();
				vStats.add(e.getStatus());
			}
		}
		if (vStats != null) {
			IStatus[] stats= new IStatus[vStats.size()];
			vStats.toArray(stats);
			throw new CoreException(new MultiStatus(JavaCore.PLUGIN_ID, IStatus.ERROR, stats, Util.bind("build.cannotSaveStates"), null)); //$NON-NLS-1$
		}
	}

