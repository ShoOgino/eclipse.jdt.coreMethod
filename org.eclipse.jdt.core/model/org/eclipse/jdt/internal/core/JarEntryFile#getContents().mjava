	public InputStream getContents() throws CoreException {
		IPackageFragmentRoot root = getPackageFragmentRoot();
		if (root.isModule()) {
			try {
				if (this.parent instanceof JarPackageFragmentRoot) {
					IPath rootPath = ((JarPackageFragmentRoot) this.parent).getPath();
					Object target = JavaModel.getTarget(rootPath, false);
					if (target != null && target instanceof File) {
						return JimageUtil.getContentFromJimage((File) target, getEntryName(), root.getElementName());
					}
				}
			} catch (IOException e) {
				throw new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);
			}
			return null;
		} else {
			ZipFile zipFile = null;
			try {
				zipFile = getZipFile();
				if (JavaModelManager.ZIP_ACCESS_VERBOSE) {
					System.out.println("(" + Thread.currentThread() + ") [JarEntryFile.getContents()] Creating ZipFile on " +zipFile.getName()); //$NON-NLS-1$	//$NON-NLS-2$
				}
				String entryName = getEntryName();
				ZipEntry zipEntry = zipFile.getEntry(entryName);
				if (zipEntry == null){
					throw new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.INVALID_PATH, entryName));
				}
				byte[] contents = Util.getZipEntryByteContent(zipEntry, zipFile);
				return new ByteArrayInputStream(contents);
			} catch (IOException e){
				throw new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);
			} finally {
				// avoid leaking ZipFiles
				JavaModelManager.getJavaModelManager().closeZipFile(zipFile);
			}
		}
	}

