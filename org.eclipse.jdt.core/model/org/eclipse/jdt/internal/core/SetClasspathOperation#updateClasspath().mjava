	private void updateClasspath() throws JavaModelException {

		JavaProject project = ((JavaProject) getElementsToProcess()[0]);

		beginTask(Util.bind("classpath.settingProgress", project.getElementName()), 2); //$NON-NLS-1$

		// SIDE-EFFECT: from thereon, the classpath got modified
		project.setRawClasspath0(this.newRawPath);

		// resolve new path (asking for marker creation if problems)
		if (this.newResolvedPath == null) {
			this.newResolvedPath = project.getResolvedClasspath(true, this.canChangeResource);
		}
		
		// remember the timestamps of external libraries
		if (this.newResolvedPath != null) {					
			for (int i = 0, length = this.newResolvedPath.length; i < length; i++) {
				IClasspathEntry entry = this.newResolvedPath[i];
				if (entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY) {
					IPath path = entry.getPath();
					Object target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), path, true);
					if (target instanceof java.io.File) {
						long timestamp = DeltaProcessor.getTimeStamp((java.io.File)target);
						JavaModelManager.getJavaModelManager().deltaProcessor.externalTimeStamps.put(path, new Long(timestamp));							
					}
				}
			}							
		}
		
		if (this.oldResolvedPath != null) {
			generateClasspathChangeDeltas(
				this.oldResolvedPath,
				this.newResolvedPath,
				project.getJavaModelManager(),
				project);
		} else {
			this.needCycleCheck = true;
			updateAffectedProjects(project.getProject().getFullPath());
		}
		
		updateCycleMarkersIfNecessary(newResolvedPath);
	}

