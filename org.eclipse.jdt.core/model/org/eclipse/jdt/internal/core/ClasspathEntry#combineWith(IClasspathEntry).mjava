	/**
	 * Used to perform export/restriction propagation across referring projects/containers
	 */
	public ClasspathEntry combineWith(IClasspathEntry referringEntry) {
		if (referringEntry == null) return this;
		if (referringEntry.isExported() 
				|| referringEntry.getInclusionPatterns().length > 0 
				|| referringEntry.getExclusionPatterns().length > 0) {
			return new ClasspathEntry(
								this.getContentKind(), this.getEntryKind(), this.getPath(),
								ClasspathEntry.concatPatterns(referringEntry.getInclusionPatterns(), this.getInclusionPatterns()), 
								ClasspathEntry.concatPatterns(referringEntry.getExclusionPatterns(), this.getExclusionPatterns()), 
								this.getOutputLocation(), this.getSourceAttachmentPath(), this.getSourceAttachmentRootPath(), 
								referringEntry.isExported()|| this.isExported); // duplicate container entry for tagging it as exported
		}
		// no need to clone
		return this;
	}

