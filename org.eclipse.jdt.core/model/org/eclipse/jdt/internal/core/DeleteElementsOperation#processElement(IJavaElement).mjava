/**
 * Deletes this element from its compilation unit.
 * @see MultiOperation
 */
protected void processElement(IJavaElement element) throws JavaModelException {
	ICompilationUnit cu = (ICompilationUnit) element;

	// keep track of the import statements - if all are removed, delete
	// the import container (i.e. report it in the delta)
	int numberOfImports = cu.getImports().length;

	IDOMCompilationUnit cuDOM = fFactory.createCompilationUnit(cu.getBuffer().getCharacters(), cu.getElementName());
	JavaElementDelta delta = new JavaElementDelta(cu);
	IJavaElement[] cuElements = ((IRegion) fChildrenToRemove.get(cu)).getElements();
	for (int i = 0; i < cuElements.length; i++) {
		IJavaElement e = cuElements[i];
		if (e.exists()) {
			IDOMNode node = ((JavaElement) e).findNode(cuDOM);
			// TBD
			Assert.isTrue(node != null, Util.bind("element.cannotLocate", e.getElementName(), cuDOM.getName())); //$NON-NLS-1$
			node.remove();
			delta.removed(e);
			if (e.getElementType() == IJavaElement.IMPORT_DECLARATION) {
				numberOfImports--;
				if (numberOfImports == 0) {
					delta.removed(cu.getImportContainer());
				}
			}
		}
	}
	if (delta.getAffectedChildren().length > 0) {
		commitChanges(cuDOM, cu);
		if (!cu.isWorkingCopy()) { // if unit is working copy, then commit will have already fired the delta
			addDelta(delta);
		}
	}
}

