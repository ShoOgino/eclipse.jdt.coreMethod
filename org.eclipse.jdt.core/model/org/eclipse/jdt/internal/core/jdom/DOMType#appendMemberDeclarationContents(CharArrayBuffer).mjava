/**
 * @see DOMMember#appendMemberDeclarationContents(CharArrayBuffer )
 */
protected void appendMemberDeclarationContents(CharArrayBuffer  buffer) {
	
	if (fTypeKeyword != null) {
		buffer.append(fTypeKeyword);
		buffer.append(fDocument, fTypeRange[1], fNameRange[0] - fTypeRange[1] );
	} else {
		buffer.append(fDocument, fTypeRange[0], fTypeRange[1] + 1 - fTypeRange[0]);
	}

	buffer.append(getName());

	if (isClass()) {
		boolean hasInterfaces = false;
		if (getMask(MASK_TYPE_HAS_SUPERCLASS)) {
			if (fExtendsRange[0] < 0) {
				buffer.append(" extends "); //$NON-NLS-1$
			} else {
				buffer.append(fDocument, fExtendsRange[0], fExtendsRange[1] + 1 - fExtendsRange[0]);
			}
			if (fSuperclass != null) {
				buffer.append(fSuperclass);
			} else {
				buffer.append(fDocument, fSuperclassRange[0], fSuperclassRange[1] + 1 - fSuperclassRange[0]);
			}
		}
		if (getMask(MASK_TYPE_HAS_INTERFACES)) {
			hasInterfaces = true;
			if (fImplementsRange[0] < 0) {
				buffer.append(" implements "); //$NON-NLS-1$
			} else {
				buffer.append(fDocument, fImplementsRange[0], fImplementsRange[1] + 1 - fImplementsRange[0]);
			}
			if (fInterfaces != null) {
				buffer.append(fInterfaces);
			} else {
				buffer.append(fDocument, fInterfacesRange[0], fInterfacesRange[1] + 1 - fInterfacesRange[0]);
			}
		}
		if (hasInterfaces) {
			if (fImplementsRange[0] < 0) {
				buffer.append(' ');
			} else {
				buffer.append(fDocument, fInterfacesRange[1] + 1, fOpenBodyRange[0] - fInterfacesRange[1] - 1);
			}
		} else {
			if (fSuperclassRange[0] < 0) {
				buffer.append(' ');
			} else {
				buffer.append(fDocument, fSuperclassRange[1] + 1, fOpenBodyRange[0] - fSuperclassRange[1] - 1);
			}
		}
	} else {
		if (getMask(MASK_TYPE_HAS_INTERFACES)) {
			if (fExtendsRange[0] < 0) {
				buffer.append(" extends "); //$NON-NLS-1$
			} else {
				buffer.append(fDocument, fExtendsRange[0], fExtendsRange[1] + 1 - fExtendsRange[0]);
			}
			if (fInterfaces != null) {
				buffer.append(fInterfaces);
				buffer.append(' ');
			} else {
				buffer.append(fDocument, fInterfacesRange[0], fInterfacesRange[1] + 1 - fInterfacesRange[0]);
			}
		} else {
			buffer.append(fDocument, fNameRange[1] + 1, fOpenBodyRange[0] - fNameRange[1] - 1);
		}
	}
	
}

