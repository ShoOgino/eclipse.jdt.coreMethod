/**
 * Accepts the line separator table and converts it into a line start table.
 *
 * <p>A line separator might corresponds to several characters in the source.
 *
 * @see org.eclipse.jdt.internal.compiler.IDocumentElementRequestor#acceptLineSeparatorPositions(int[])
 */
public void acceptLineSeparatorPositions(int[] positions) {
	if (positions != null) {
		int length = positions.length;
		if (length > 0) {
			this.fLineStartPositions = new int[length + 1];
			this.fLineStartPositions[0] = 0;
			int documentLength = this.fDocument.length;
			for (int i = 0; i < length; i++) {
				int iPlusOne = i + 1;
				int positionPlusOne = positions[i] + 1;
				if (positionPlusOne < documentLength) {
					if (iPlusOne < length) {
						// more separators
						this.fLineStartPositions[iPlusOne] = positionPlusOne;
					} else {
						// no more separators
						if (this.fDocument[positionPlusOne] == '\n') {
							this.fLineStartPositions[iPlusOne] = positionPlusOne + 1;
						} else {
							this.fLineStartPositions[iPlusOne] = positionPlusOne;
						}
					}
				} else {
					this.fLineStartPositions[iPlusOne] = positionPlusOne;
				}
			}
		}
	}
}

