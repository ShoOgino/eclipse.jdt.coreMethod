/**
 * Returns a String representing this field declaration as a field
 * declaration with one variable declarator.
 */
protected char[] getSingleVariableDeclaratorContents() {


	CharArrayBuffer buffer= new CharArrayBuffer();
	DOMField first= getFirstFieldDeclaration();
	if (first.isDetailed()) {
		first.appendMemberHeaderFragment(buffer);
		buffer.append(getType());
		if (isVariableDeclarator()) {
			buffer.append(' ');
		} else {
			buffer.append(this.fDocument, this.fTypeRange[1] + 1, this.fNameRange[0] - this.fTypeRange[1] - 1);
		}
	} else {
		buffer.append(first.fDocument, first.fSourceRange[0], first.fNameRange[0] - first.fSourceRange[0]);
	}

	buffer.append(getName());
	if (hasInitializer()) {
		if (this.fInitializerRange[0] < 0) {
			buffer
				.append('=')
				.append(this.fInitializer)
				.append(';')
				.append(Util.getLineSeparator(buffer.toString(), null));
		} else {
			buffer
				.append(this.fDocument, this.fNameRange[1] + 1, this.fInitializerRange[0] - this.fNameRange[1] - 1)
				.append(getInitializer())
				.append(';')
				.append(Util.getLineSeparator(buffer.toString(), null));
		}
	} else {
		buffer.append(';').append(Util.getLineSeparator(buffer.toString(), null));
	}
	return buffer.getContents();
}

