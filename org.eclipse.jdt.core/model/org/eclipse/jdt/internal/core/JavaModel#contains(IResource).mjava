/*
 * @see IJavaModel
 */
public boolean contains(IResource resource) {
	switch (resource.getType()) {
		case IResource.ROOT:
		case IResource.PROJECT:
			return true;
	}
	// file or folder
	try {
		IPath path = resource.getFullPath();
		IJavaProject[] projects = this.getJavaProjects();
		for (int i = 0, length = projects.length; i < length; i++) {
			IJavaProject project = projects[i];
			IClasspathEntry[] classpath = project.getResolvedClasspath(true);
			
			IPath output = project.getOutputLocation();
			boolean isInOutput = output.isPrefixOf(path);
			IClasspathEntry innerMostEntry = null;
			for (int j = 0, cpLength = classpath.length; j < cpLength; j++) {
				IClasspathEntry entry = classpath[j];

				IPath entryPath = entry.getPath();
				if ((innerMostEntry == null || innerMostEntry.getPath().isPrefixOf(entryPath))
						&& entryPath.isPrefixOf(path)) {
					innerMostEntry = entry;
				}
				IPath entryOutput = classpath[j].getOutputLocation();
				if (entryOutput != null && entryOutput.isPrefixOf(path)) {
					isInOutput = true;
				}
			}
			if (innerMostEntry != null) {
				if  (resource instanceof IFolder) {
					 // folders are always included in src/lib entries
					 return true;
				}
				switch (innerMostEntry.getEntryKind()) {
					case IClasspathEntry.CPE_SOURCE:
						// .class files are not visible in source folders 
						return !Util.isClassFileName(path.lastSegment());
					case IClasspathEntry.CPE_LIBRARY:
						// .java files are not visible in library folders
						return !Util.isJavaFileName(path.lastSegment());
				}
			}
			if (isInOutput) {
				return false;
			}
		}
		return true;
	} catch (JavaModelException e) {
		return false;
	}
}

