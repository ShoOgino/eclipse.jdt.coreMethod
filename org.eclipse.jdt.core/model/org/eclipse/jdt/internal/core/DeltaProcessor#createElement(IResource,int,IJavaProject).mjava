	/**
	 * Creates the openables corresponding to this resource.
	 * Returns null if none was found.
	 */
	protected Openable createElement(IResource resource, int elementType, IJavaProject project) {
		if (resource == null) return null;
		
		IPath path = resource.getFullPath();
		IJavaElement element = null;
		if (this.currentElement != null) {
			switch (elementType) {
				case IJavaElement.JAVA_PROJECT:
					element = project;
					break;
				case IJavaElement.PACKAGE_FRAGMENT_ROOT:
					element = project.getPackageFragmentRoot(resource);
					break;
				case IJavaElement.PACKAGE_FRAGMENT:
					// find the element that encloses the resource
					this.popUntilPrefixOf(path);
					if (this.currentElement == null) break;
					
					// find the root
					IPackageFragmentRoot root = this.currentElement.getPackageFragmentRoot();
					if (root != null && !JavaModelManager.conflictsWithOutputLocation(path, (JavaProject)project)) {
						// create package handle
						IPath pkgPath = path.removeFirstSegments(root.getPath().segmentCount());
						String pkg = Util.packageName(pkgPath);
						if (pkg == null) return null;
						element = root.getPackageFragment(pkg);
					}
					break;
				case IJavaElement.COMPILATION_UNIT:
					// find the element that encloses the resource
					this.popUntilPrefixOf(path);
					if (this.currentElement == null) break;
					
					// find the package
					IPackageFragment pkgFragment = null;
					switch (this.currentElement.getElementType()) {
						case IJavaElement.PACKAGE_FRAGMENT:
							pkgFragment = (IPackageFragment)this.currentElement;
							break;
						case IJavaElement.COMPILATION_UNIT:
						case IJavaElement.CLASS_FILE:
							pkgFragment = (IPackageFragment)this.currentElement.getParent();
							break;
					}
					if (pkgFragment != null) {
						// create compilation unit handle 
						String fileName = path.lastSegment();
						if (!Util.isValidCompilationUnitName(fileName)) return null;
						element = pkgFragment.getCompilationUnit(fileName);
					}
					break;
				case IJavaElement.CLASS_FILE:
					// find the element that encloses the resource
					this.popUntilPrefixOf(path);
					if (this.currentElement == null) break;
					
					// find the package
					pkgFragment = null;
					switch (this.currentElement.getElementType()) {
						case IJavaElement.PACKAGE_FRAGMENT:
							pkgFragment = (IPackageFragment)this.currentElement;
							break;
						case IJavaElement.COMPILATION_UNIT:
						case IJavaElement.CLASS_FILE:
							pkgFragment = (IPackageFragment)this.currentElement.getParent();
							break;
					}
					if (pkgFragment != null) {
						// create class file handle
						String fileName = path.lastSegment();
						if (!Util.isValidClassFileName(fileName)) return null;
						element = pkgFragment.getClassFile(fileName);
					}
					break;
			}
		}
		if (element == null) {
			element = JavaModelManager.create(resource, project);
		}
		this.currentElement = (Openable)element;
		return this.currentElement;
	}

