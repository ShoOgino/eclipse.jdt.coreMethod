/**
 * Get the jdk level of this root.
 * The value can be:
 * <ul>
 * <li>JavaCore#VERSION_1_1</li>
 * <li>JavaCore#VERSION_1_2</li>
 * <li>JavaCore#VERSION_1_3</li>
 * <li>JavaCore#VERSION_1_4</li>
 * <li>JavaCore#VERSION_1_5</li>
 * <li><code>null</null> if the root is a source package fragment root or if a Java model exception occured</li>
 * </ul>
 * Returns the jdk level
 */
public String getJdkLevel() {
	try {
		switch(getKind()) {
			case IPackageFragmentRoot.K_BINARY:
				ClassFileReader reader = null;
				if (isArchive()) {
					// root is a jar file or a zip file
					JarPackageFragmentRoot jarPackageFragmentRoot = (JarPackageFragmentRoot) this;
					ZipFile jar = null;
					try {
						jar = jarPackageFragmentRoot.getJar();
						for (Enumeration e= jar.entries(); e.hasMoreElements();) {
							ZipEntry member= (ZipEntry) e.nextElement();
							String entryName= member.getName();
							if (Util.isClassFileName(entryName)) {
								reader = ClassFileReader.read(jar, entryName);
								break;
							}
						}
					} catch (CoreException e) {
					} finally {
						JavaModelManager.getJavaModelManager().closeZipFile(jar);
					}
				} else {
					IResource resource = getResource();
					IFile classFile = null;
					if (resource.getType() == IResource.FOLDER) {
						classFile = searchClassFile((IFolder) resource);
					}
					if (classFile != null) {
						byte[] bytes = Util.getResourceContentsAsByteArray(classFile);
						IPath location = classFile.getLocation();
						reader = new ClassFileReader(bytes, location == null ? null : location.toString().toCharArray());
					}
				}
				if (reader != null) {
					int majorVersion = reader.getMajorVersion();
					switch(majorVersion) {
						case 45 : return JavaCore.VERSION_1_1;
						case 46 : return JavaCore.VERSION_1_2;
						case 47 : return JavaCore.VERSION_1_3;
						case 48 : return JavaCore.VERSION_1_4;
						// TODO (olivier) add version 1.5 
					}
				}
		}
	} catch(JavaModelException e) {
	} catch(ClassFormatException e) {
	} catch(IOException e) {
	}
	return null;
}

