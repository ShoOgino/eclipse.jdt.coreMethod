/**
 * Resolve the type, adding to the resolved elements.
 */
protected void acceptType(char[] packageName, char[] typeName, int acceptFlags, boolean isDeclaration, char[] uniqueKey, int start, int end) {
	IType type = null;
	if(isDeclaration) {
		type = resolveTypeByLocation(packageName, typeName, acceptFlags, start, end);
	} else {
		type = resolveType(packageName, typeName, acceptFlags);
		if(type != null && uniqueKey != null) {
			if(type.isBinary()) {
				type = new ParameterizedBinaryType((JavaElement)type.getParent(), type.getElementName(), new String(uniqueKey));
			} else {
				type = new ParameterizedSourceType((JavaElement)type.getParent(), type.getElementName(), new String(uniqueKey));
			}
		}
	}
	
	if (type != null) {
		addElement(type);
		if(SelectionEngine.DEBUG){
			System.out.print("SELECTION - accept type("); //$NON-NLS-1$
			System.out.print(type.toString());
			System.out.println(")"); //$NON-NLS-1$
		}
	} 
}

