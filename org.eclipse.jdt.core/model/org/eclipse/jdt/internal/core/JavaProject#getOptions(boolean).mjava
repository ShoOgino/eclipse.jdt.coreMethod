	/**
	 * @see org.eclipse.jdt.core.IJavaProject#getOptions(boolean)
	 */
	public Map getOptions(boolean inheritJavaCoreOptions) {
		
		// Get cached preferences if exist
		JavaModelManager.PerProjectInfo perProjectInfo = null;
		if (inheritJavaCoreOptions) {
			try {
				perProjectInfo = getPerProjectInfo();
				if (perProjectInfo.options != null) {
					return new Hashtable(perProjectInfo.options);
				}
			} catch (JavaModelException jme) {
				// skip
			}
		}

		// initialize to the defaults from JavaCore options pool
		Map options = inheritJavaCoreOptions ? JavaCore.getOptions() : new Hashtable(5);

		IEclipsePreferences projectPreferences= getEclipsePreferences();
		if (projectPreferences == null) return options; // cannot do better (non-Java project)
		HashSet optionNames = JavaModelManager.getJavaModelManager().optionNames;
		
		// project cannot hold custom preferences set to their default, as it uses CUSTOM_DEFAULT_OPTION_VALUE

		// get custom preferences not set to their default
		try {
			String[] propertyNames = projectPreferences.keys();
			for (int i = 0; i < propertyNames.length; i++){
				String propertyName = propertyNames[i];
				String value = projectPreferences.get(propertyName, null);
				if (value != null && optionNames.contains(propertyName)){
					options.put(propertyName, value.trim());
				}
			}		
		} catch (BackingStoreException e) {
			// nothing to do
		}

		// Cache computed map
		if (perProjectInfo != null) {
			perProjectInfo.options = options;
		}
		return options;
	}

