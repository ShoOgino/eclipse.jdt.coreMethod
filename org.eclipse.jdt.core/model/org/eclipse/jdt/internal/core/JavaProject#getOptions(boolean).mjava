	/**
	 * @see org.eclipse.jdt.core.IJavaProject#getOptions(boolean)
	 */
	public Map getOptions(boolean inheritJavaCoreOptions) {
		
		// initialize to the defaults from JavaCore options pool
		Map options = inheritJavaCoreOptions ? JavaCore.getOptions() : new Hashtable(5);

		Preferences preferences = getPreferences();
		if (preferences == null) return options; // cannot do better (non-Java project)
		HashSet optionNames = JavaModelManager.OptionNames;
		
		// get preferences set to their default
		if (inheritJavaCoreOptions){
			String[] defaultPropertyNames = preferences.defaultPropertyNames();
			for (int i = 0; i < defaultPropertyNames.length; i++){
				String propertyName = defaultPropertyNames[i];
				if (optionNames.contains(propertyName)){
					options.put(propertyName, preferences.getDefaultString(propertyName).trim());
				}
			}		
		}
		// get custom preferences not set to their default
		String[] propertyNames = preferences.propertyNames();
		for (int i = 0; i < propertyNames.length; i++){
			String propertyName = propertyNames[i];
			String value = preferences.getString(propertyName).trim();
			if (optionNames.contains(propertyName)){
				options.put(propertyName, value);
				// TODO (frederic) remove when jdt-ui will change to new values
				if (inheritJavaCoreOptions && JavaCore.COMPILER_PB_INVALID_JAVADOC.equals(propertyName)) {
					options.put(JavaCore.OLD_COMPILER_PB_INVALID_ANNOTATION, value);
				}
				if (inheritJavaCoreOptions && JavaCore.COMPILER_PB_MISSING_JAVADOC.equals(propertyName)) {
					options.put(JavaCore.OLD_COMPILER_PB_MISSING_ANNOTATION, value);
				}
				// end to do
			}		
			// bug 45112 backward compatibility.
			// TODO (frederic) remove for 3.0
			else if (JavaCore.OLD_COMPILER_PB_INVALID_ANNOTATION.equals(propertyName)) {
				options.put(JavaCore.COMPILER_PB_INVALID_JAVADOC, value);
				// TODO (frederic) remove when jdt-ui will change to new values
				options.put(JavaCore.OLD_COMPILER_PB_INVALID_ANNOTATION, value);
			}
			else if (JavaCore.OLD_COMPILER_PB_MISSING_ANNOTATION.equals(propertyName)) {
				options.put(JavaCore.COMPILER_PB_MISSING_JAVADOC, value);
				// TODO (frederic) remove when jdt-ui will change to new values
				options.put(JavaCore.OLD_COMPILER_PB_MISSING_ANNOTATION, value);
			}
			// end bug 45112
		}		

		// TODO (frederic) remove when jdt-ui will change to new values
		if (inheritJavaCoreOptions) {
			if (!options.containsKey(JavaCore.OLD_COMPILER_PB_INVALID_ANNOTATION)) {
				options.put(JavaCore.OLD_COMPILER_PB_INVALID_ANNOTATION, JavaCore.IGNORE);
			}
			if (!options.containsKey(JavaCore.OLD_COMPILER_PB_MISSING_ANNOTATION)) {
				options.put(JavaCore.OLD_COMPILER_PB_MISSING_ANNOTATION, JavaCore.DISABLED);
			}
		}
		// end to do
		
		return options;
	}

