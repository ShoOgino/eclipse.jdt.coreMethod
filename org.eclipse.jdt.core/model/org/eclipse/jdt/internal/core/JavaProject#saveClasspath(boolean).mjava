	/**
	 * Saves the classpath in a shareable format (VCM-wise) if necessary (i.e. semantically different)
	 * Returns whether the .classpath file was modified.
	 */
	public boolean saveClasspath(boolean force) throws JavaModelException {
		
		if (!getProject().exists())
			return false;

		if (!isOpen())
			return false; // no update for closed projects

		QualifiedName classpathProp = getClasspathPropertyName();

		try {
			// attempt to prove the classpath has not change
			String fileClasspathString = getSharedProperty(classpathProp);
			if (fileClasspathString != null) {
				IClasspathEntry[] fileEntries = readPaths(fileClasspathString);
				if (!force && isClasspathEqualsTo(fileEntries)) {
					// no need to save it, it is the same
					return false;
				}
			}
		} catch (IOException e) {
		} catch (RuntimeException e) {
		} catch (CoreException e) {
		}

		// actual file saving
		try {
			setSharedProperty(
				classpathProp,
				getClasspathAsXMLString(getRawClasspath(), getOutputLocation()));
			return true;
		} catch (CoreException e) {
			throw new JavaModelException(e);
		}
	}

