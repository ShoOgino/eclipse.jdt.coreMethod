/**
 * @see IBuffer
 */
@Override
public void save(IProgressMonitor progress, boolean force) throws JavaModelException {

	// determine if saving is required
	if (isReadOnly() || this.file == null) {
		return;
	}
	if (!hasUnsavedChanges())
		return;

	// use a platform operation to update the resource contents
	try {
		String stringContents = getContents();
		if (stringContents == null) return;

		// Get encoding
		String encoding = null;
		try {
			encoding = this.file.getCharset();
		}
		catch (CoreException ce) {
			// use no encoding
		}

		// Create bytes array
		byte[] bytes = encoding == null
			? stringContents.getBytes()
			: stringContents.getBytes(encoding);

		// Special case for UTF-8 BOM files
		// see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=110576
		if (encoding != null && encoding.equals(org.eclipse.jdt.internal.compiler.util.Util.UTF_8)) {
			IContentDescription description;
			try {
				description = this.file.getContentDescription();
			} catch (CoreException e) {
				if (e.getStatus().getCode() != IResourceStatus.RESOURCE_NOT_FOUND)
					throw e;
				// file no longer exist (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=234307 )
				description = null;
			}
			if (description != null && description.getProperty(IContentDescription.BYTE_ORDER_MARK) != null) {
				int bomLength= IContentDescription.BOM_UTF_8.length;
				byte[] bytesWithBOM= new byte[bytes.length + bomLength];
				System.arraycopy(IContentDescription.BOM_UTF_8, 0, bytesWithBOM, 0, bomLength);
				System.arraycopy(bytes, 0, bytesWithBOM, bomLength, bytes.length);
				bytes= bytesWithBOM;
			}
		}

		// Set file contents
		ByteArrayInputStream stream = new ByteArrayInputStream(bytes);
		if (this.file.exists()) {
			this.file.setContents(
				stream,
				force ? IResource.FORCE | IResource.KEEP_HISTORY : IResource.KEEP_HISTORY,
				null);
		} else {
			this.file.create(stream, force, null);
		}
	} catch (IOException e) {
		throw new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);
	} catch (CoreException e) {
		throw new JavaModelException(e);
	}

	// the resource no longer has unsaved changes
	this.flags &= ~ (F_HAS_UNSAVED_CHANGES);
}

