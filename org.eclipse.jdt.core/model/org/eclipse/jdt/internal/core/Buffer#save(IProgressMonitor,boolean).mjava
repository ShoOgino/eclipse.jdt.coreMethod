/**
 * @see IBuffer
 */
public void save(IProgressMonitor progress, boolean force) throws JavaModelException {

	// determine if saving is required 
	if (isReadOnly() || this.file == null) {
		return;
	}
	synchronized (this.lock) {
		if (!hasUnsavedChanges())
			return;
			
		// use a platform operation to update the resource contents
		try {
			String encoding = JavaCore.getOption(JavaCore.CORE_ENCODING);
			String contents = this.getContents();
			if (contents == null) return;
			byte[] bytes = encoding == null 
				? contents.getBytes() 
				: contents.getBytes(encoding);
			ByteArrayInputStream stream = new ByteArrayInputStream(bytes);

			this.file.setContents(
				stream, 
				force ? IResource.FORCE | IResource.KEEP_HISTORY : IResource.KEEP_HISTORY, 
				null);
		} catch (IOException e) {
			throw new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);
		} catch (CoreException e) {
			throw new JavaModelException(e);
		}

		// the resource no longer has unsaved changes
		this.flags &= ~ (F_HAS_UNSAVED_CHANGES);
	}
}

