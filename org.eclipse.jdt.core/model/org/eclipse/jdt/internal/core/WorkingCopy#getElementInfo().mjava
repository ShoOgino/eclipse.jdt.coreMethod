	/**
	 * Returns the info for this handle.  
	 * If this element is not already open, it and all of its parents are opened.
	 * Does not return null.
	 * NOTE: BinaryType infos are NJOT rooted under JavaElementInfo.
	 * @exception JavaModelException if the element is not present or not accessible
	 */
	public Object getElementInfo() throws JavaModelException {

		JavaModelManager manager = JavaModelManager.getJavaModelManager();
		boolean shouldPerformProblemDetection = false;
		synchronized(manager){
			Object info = manager.getInfo(this);
			if (info == null) {
				shouldPerformProblemDetection = true;
			}
		}
		Object info = super.getElementInfo(); // will populate if necessary

		// perform problem detection outside the JavaModelManager lock
		if (this.problemRequestor != null && shouldPerformProblemDetection && this.problemRequestor.isActive()){
			this.problemRequestor.beginReporting();
			CompilationUnitProblemFinder.process(this, this.problemRequestor, null); 
			this.problemRequestor.endReporting();
		}		
		return info;
	}

