/**
 * Converts a <code>IResourceDelta</code> rooted in a <code>Workspace</code> into
 * the corresponding set of <code>IJavaElementDelta</code>, rooted in the
 * relevant <code>JavaModel</code>s.
 */
public IJavaElementDelta[] processResourceDelta(IResourceDelta changes) {
	
	// clear state
	clearState();
	
	// get the workspace delta, and start processing there.
	IResourceDelta[] deltas = changes.getAffectedChildren();
	IJavaElementDelta[] translatedDeltas = new JavaElementDelta[deltas.length];
	for (int i = 0; i < deltas.length; i++) {
		IResourceDelta delta = deltas[i];
		JavaModel model = JavaModelManager.getJavaModel(delta.getResource().getWorkspace());
		if (model != null) {
			fCurrentDelta = new JavaElementDelta(model);
			traverseDelta(delta, model); // traverse delta
			translatedDeltas[i] = fCurrentDelta;
		}
	}
	// process removed roots
	processRemovedRoots();
	// update classpaths
	updateClasspaths(false); 
	
	// clear state
	clearState();
	
	return filterRealDeltas(translatedDeltas);
}

