/**
 * Read a StateSnapConstantPool from an input stream.
 */
private void read(IDevelopmentContext dc, DataInputStream in, StateSnapV5 snap) throws IOException {
	int n = in.readInt();  // Actual size of pool is (NUM_SPECIAL + n)
	init(dc, n);

	int i = NUM_SPECIAL;
	for (int j = 0; j < n; ++j, ++i) {
		int tag = in.readByte();
		switch (tag) {
			case 1:
				// String
				String str = in.readUTF();
				fSet.put(i, str);
				break;
			case 2:
				// IPath
				int temp = in.readInt();
				IPath parent = temp == 0 ? null : getPath(temp);
				String elementName = getString(in.readInt());
				if (parent == null) {
					fSet.put(i, new Path(elementName));
				}
				else {
					fSet.put(i, parent.append(elementName));
				}
				break;
			case 3:
				// SourceEntry
				SourceEntry entry = snap.readSourceEntry(this, in);
				fSet.put(i, entry);
				break;
			case 4:
			case 5:
			case 6:
			case 7:
			case 8:
			case 9:
			case 10:
			case 11:
				fSet.put(i, readHandle(dc, in, tag));
				break;
			case 12:
			case 13:
			case 14:
			case 15:
				fSet.put(i, readNumber(in, tag));
				break;
			default:
				throw new IOException(Util.bind("build.unexpectedPoolItem"/*nonNLS*/));
		}
	}
}

