	/**
	 * Returns the contents for a source entry as a char array.
	 */
	protected char[] getElementContentCharArray(SourceEntry entry) {
		// TBD: need proper byte->char conversion
		byte[] bytes= getElementContentBytes(entry);
		BufferedReader reader = null;
		try {
			reader= new BufferedReader(new InputStreamReader(new ByteArrayInputStream(bytes)));
			int length= bytes.length;
			char[] contents= new char[length];
			int len= 0;
			int readSize= 0;
			while ((readSize != -1) && (len != length)) {
				// See PR 1FMS89U
				// We record first the read size. In this case len is the actual read size.
				len += readSize;
				readSize= reader.read(contents, len, length - len);
			}
			reader.close();
			// See PR 1FMS89U
			// Now we need to resize in case the default encoding used more than one byte for each
			// character
			if (len != length)
				System.arraycopy(contents, 0, (contents= new char[len]), 0, len);
			return contents;
		} catch (IOException e) {
			if (reader != null) {
				try {
					reader.close();
				} catch(IOException ioe) {
				}
			}
			String message= e.getMessage();
			message= (message == null ? "." : " due to " + message + ".");
			throw internalException("Error reading file " + entry + message);
		}
	}

