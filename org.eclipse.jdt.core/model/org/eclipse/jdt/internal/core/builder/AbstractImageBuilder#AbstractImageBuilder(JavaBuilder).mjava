protected AbstractImageBuilder(JavaBuilder javaBuilder) {
	this.javaBuilder = javaBuilder;
	this.newState = new State(javaBuilder);

	// local copies
	this.outputFolder = javaBuilder.outputFolder;
	this.sourceFolders = javaBuilder.sourceFolders;
	this.notifier = javaBuilder.notifier;

	// only perform resource copying if the output location does not match a source folder
	// corresponds to: project == src == bin, or several source folders are contributing resources,
	// but one is the output location too (and would get populated with other source folder resources).
	IPath outputPath = outputFolder.getFullPath();
	int index = sourceFolders.length;
	if (index == 0) {
		// handle case of the last source folder is removed... so no source folders exist but the output folder must still be scrubbed
		this.hasSeparateOutputFolder = !outputPath.equals(javaBuilder.currentProject.getFullPath());
	} else {
		this.hasSeparateOutputFolder = true;
		while (this.hasSeparateOutputFolder && --index >= 0)
			this.hasSeparateOutputFolder = !outputPath.equals(sourceFolders[index].getFullPath());
	}

	this.nameEnvironment = new NameEnvironment(javaBuilder.classpath);
	this.compiler = newCompiler();
	this.workQueue = new WorkQueue();
	this.problemTypeLocations = new ArrayList(3);
}

