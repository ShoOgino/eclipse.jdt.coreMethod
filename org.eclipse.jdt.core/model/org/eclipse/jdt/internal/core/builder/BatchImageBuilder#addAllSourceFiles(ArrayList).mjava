protected void addAllSourceFiles(final ArrayList sourceFiles) throws CoreException {
	for (int i = 0, l = sourceLocations.length; i < l; i++) {
		final ClasspathMultiDirectory sourceLocation = sourceLocations[i];
		final char[][] exclusionPatterns = sourceLocation.exclusionPatterns;
		sourceLocation.sourceFolder.accept(
// KJ : Switch to use a proxy visitor?
//			new IResourceProxyVisitor() {
//				public boolean visit(IResourceProxy proxy) throws CoreException {
//					IResource resource = null;
//					if (exclusionPatterns != null) {
//						resource = proxy.requestResource();
//						if (Util.isExcluded(resource, exclusionPatterns)) return false;
//					}
//					if (proxy.getType() == IResource.FILE) {
//						if (Util.isJavaFileName(proxy.getName())) {
//							if (resource == null)
//								resource = proxy.requestResource();
//							sourceFiles.add(new SourceFile((IFile) resource, sourceLocation, encoding));
//						}
//						return false;
//					}
//					return true;
//				}
//			}
			new IResourceVisitor() {
				public boolean visit(IResource resource) throws CoreException {
					if (exclusionPatterns != null && Util.isExcluded(resource, exclusionPatterns))
						return false;
					if (resource.getType() == IResource.FILE) {
						if (Util.isJavaFileName(resource.getName()))
							sourceFiles.add(new SourceFile((IFile) resource, sourceLocation, encoding));
						return false;
					}
					return true;
				}
			}
		);
		notifier.checkCancel();
	}
}

