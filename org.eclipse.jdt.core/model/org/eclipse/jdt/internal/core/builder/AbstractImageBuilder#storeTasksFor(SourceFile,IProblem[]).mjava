protected void storeTasksFor(SourceFile sourceFile, IProblem[] tasks) throws CoreException {
	if (sourceFile == null || tasks == null || tasks.length == 0) return;

	IResource resource = sourceFile.resource;
	for (int i = 0, l = tasks.length; i < l; i++) {
		IProblem task = tasks[i];
		if (task.getID() == IProblem.Task) {
			IMarker marker = resource.createMarker(IJavaModelMarker.TASK_MARKER);
			int priority = IMarker.PRIORITY_NORMAL;
			String compilerPriority = task.getArguments()[2];
			if (JavaCore.COMPILER_TASK_PRIORITY_HIGH.equals(compilerPriority))
				priority = IMarker.PRIORITY_HIGH;
			else if (JavaCore.COMPILER_TASK_PRIORITY_LOW.equals(compilerPriority))
				priority = IMarker.PRIORITY_LOW;
			marker.setAttributes(
				new String[] {
					IMarker.MESSAGE, 
					IMarker.PRIORITY, 
					IMarker.DONE, 
					IMarker.CHAR_START, 
					IMarker.CHAR_END, 
					IMarker.LINE_NUMBER,
					IMarker.USER_EDITABLE, 
				}, 
				new Object[] { 
					task.getMessage(),
					new Integer(priority),
					new Boolean(false),
					new Integer(task.getSourceStart()),
					new Integer(task.getSourceEnd() + 1),
					new Integer(task.getSourceLineNumber()),
					new Boolean(false),
				});
		}
	}
}

