	/**
	 * Increases the capacity of this OrderedSet. This method is sent when
	 * the size of this OrderedSet exceeds the load factor.
	 */
	protected void rehash() {
		Object key;
		int index, length = elementKeys.length << 1;
		Object[] newKeys = new Object[length];
		int[] newIndexes = new int[length];
		for (int i = length; --i >= 0;) {
			newIndexes[i] = -1;
		}
		for (int i = 0; i < elementKeys.length; i++) {
			if ((key = elementKeys[i]) != null) {
				index = findIndex(key, newKeys);
				newKeys[index] = key;
				newIndexes[index] = elementIndexes[i];
			}
		}
		Object[] newOrdered = new Object[length];
		System.arraycopy(orderedList, 0, newOrdered, 0, elementCount);
		elementKeys = newKeys;
		elementIndexes = newIndexes;
		orderedList = newOrdered;
	}

