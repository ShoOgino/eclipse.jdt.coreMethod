	/**
	 * This method recalculates the dependency info to refer to the source element 
	 * each type came from.  Stand-alone sources and binaries are represented by 
	 * PackageElement objects, zips are represented by the IPath of the zip file,
	 * and namespaces by IPackage objects.
	 */
	protected Vector resolveDependencies(PackageElement resultUnit, CompilationResult result) {
		IPackage resultPackage= resultUnit.getPackage();
		SourceEntry resultSourceEntry= getSourceEntry(resultUnit);
		char[][] fileDependencies= result.getFileDependencies();
		char[][] namespaceDependencies= result.getNamespaceDependencies();
		Vector vSourceDeps= new Vector();
		if (namespaceDependencies != null) {
			for (int i= 0; i < namespaceDependencies.length; i++) {
				String namespace= Util.toString(namespaceDependencies[i]);
				if (namespace.length() == 0) {
					IPackage defaultPkg= defaultPackageFor(resultUnit.getPackage());
					if (defaultPkg != null && !vSourceDeps.contains(defaultPkg)) {
						vSourceDeps.addElement(defaultPkg);
					}
				} else {
					IPackage pkg= fDevelopmentContext.getImage().getPackageHandle(namespace, false);
					pkg= canonicalize(pkg);
					if (!vSourceDeps.contains(pkg)) {
						vSourceDeps.addElement(pkg);
					}
				}
			}
		}
		if (!vSourceDeps.contains(resultPackage)) {
			vSourceDeps.addElement(resultPackage);
		}
		if (!vSourceDeps.contains(fDevelopmentContext.getDefaultPackage())) {
			vSourceDeps.addElement(fDevelopmentContext.getDefaultPackage());
		}

		/* do for each file dependency */
		if (fileDependencies != null) {
			for (int i= 0; i < fileDependencies.length; i++) {
				if (fileDependencies[i] != null) {
					SourceEntry sEntry= SourceEntry.fromPathWithZipEntryName(Util.toString(fileDependencies[i]));
					if (sEntry.fZipEntryFileName != null) {
						IPath path= sEntry.getPath();
						if (!vSourceDeps.contains(path)) {
							vSourceDeps.addElement(path);
						}
					} else {
						PackageElement element= packageElementFromSourceEntry(sEntry);
						/* Make sure it's a valid ref. */
						if (getSourceEntry(element) != null) {
							if (!vSourceDeps.contains(element.getPackage())) {
								vSourceDeps.addElement(element.getPackage());
							}
							vSourceDeps.addElement(element);
						}
					}
				}
			}
		}
		return vSourceDeps;
	}

