protected void copyExtraResourcesBack(ClasspathMultiDirectory sourceLocation, final boolean deletedAll) throws CoreException {
	// When, if ever, does a builder need to copy resources files (not .java or .class) into the output folder?
	// If we wipe the output folder at the beginning of the build then all 'extra' resources must be copied to the output folder.

	notifier.subTask(Util.bind("build.copyingResources")); //$NON-NLS-1$
	final int segmentCount = sourceLocation.sourceFolder.getFullPath().segmentCount();
	final char[][] exclusionPatterns = sourceLocation.exclusionPatterns;
	final IContainer outputFolder = sourceLocation.binaryFolder;
	sourceLocation.sourceFolder.accept(
		new IResourceVisitor() {
			public boolean visit(IResource resource) throws CoreException {
				switch(resource.getType()) {
					case IResource.FILE :
						String extension = resource.getFileExtension();
						if (JavaBuilder.JAVA_EXTENSION.equalsIgnoreCase(extension)) return false;
						if (JavaBuilder.CLASS_EXTENSION.equalsIgnoreCase(extension)) return false;
						if (javaBuilder.filterExtraResource(resource)) return false;
						if (exclusionPatterns != null && Util.isExcluded(resource, exclusionPatterns))
							return false;

						IPath partialPath = resource.getFullPath().removeFirstSegments(segmentCount);
						IResource copiedResource = outputFolder.getFile(partialPath);
						if (copiedResource.exists()) {
							if (deletedAll) {
								createErrorFor(resource, Util.bind("build.duplicateResource")); //$NON-NLS-1$
								return false;
							}
							copiedResource.delete(IResource.FORCE, null); // last one wins
						}
						resource.copy(copiedResource.getFullPath(), IResource.FORCE, null);
//						resource.copy(copiedResource.getFullPath(), IResource.FORCE | IResource.DEEP, null);
						copiedResource.setDerived(true);
						return false;
					case IResource.FOLDER :
						if (resource.equals(outputFolder)) return false;
						if (javaBuilder.filterExtraResource(resource)) return false;
						if (exclusionPatterns != null && Util.isExcluded(resource, exclusionPatterns))
							return false;

						createFolder(resource.getFullPath().removeFirstSegments(segmentCount), outputFolder);
				}
				return true;
			}
		}
	);
}

