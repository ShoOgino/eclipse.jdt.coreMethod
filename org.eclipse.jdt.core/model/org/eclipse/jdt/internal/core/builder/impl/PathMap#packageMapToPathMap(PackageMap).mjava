	/**
	 * Creates and returns new path map given a package map.  The package map is
	 * from IPackage -> IPath[].  The new path map is from IPath -> IPackage[]
	 */
	protected Dictionary packageMapToPathMap(PackageMap pkgMap) {
		LookupTable table = new LookupTable();

		/* first generate a path map using vectors */
		for (Enumeration e = pkgMap.getAllPackages(); e.hasMoreElements();) {
			IPackage pkg = (IPackage) e.nextElement();
			IPath[] paths = pkgMap.getFragments(pkg);

			/* add entries in the path map for each fragment */
			for (int i = 0; i < paths.length; i++) {
				Vector v = (Vector) table.get(paths[i]);
				if (v == null) {
					/* most common case is one path per package */
					v = new Vector(1);
					table.put(paths[i], v);
				}
				v.addElement(pkg);
			}
		}

		/* convert vectors to arrays */
		for (Enumeration e = table.keys(); e.hasMoreElements();) {
			IPath path = (IPath) e.nextElement();
			Vector v = (Vector) table.get(path);
			IPackage[] pkgs = new IPackage[v.size()];
			v.copyInto(pkgs);
			table.put(path, pkgs);
		}
		return table;
	}

