	/**
	 * Computes added, removed, and changed packages.  At this
	 * stage, if a package hasn't been added or removed, it is
	 * considered to be changed.  Later, when the classes are
	 * calculated, the packages that don't have changed classes
	 * will be removed from the list.  Stores vectors of non-state
	 * specific package handles.
	 */
	protected void computeAllPackages(
		Vector added,
		Vector removed,
		Vector changed) {

		/* do for each affected package */
		for (Enumeration e = getAffectedPackages(); e.hasMoreElements();) {
			IPackage pkg = (IPackage) e.nextElement();
			boolean inOld = pkg.inState(fOldState).isPresent();
			boolean inNew = pkg.inState(fNewState).isPresent();
			if (inOld) {
				if (inNew) {
					changed.addElement(pkg);
				} else {
					// Package was removed.
					removed.addElement(pkg);
				}
			} else {
				if (inNew) {
					// Package was added.
					added.addElement(pkg);
				} else {
					// Package was in image context but was not in either state.
					// Ignore it.
				}
			}
		}
	}

