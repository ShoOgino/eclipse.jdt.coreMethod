String[] directoryList(String pathPrefix, char[][] compoundName, char[] packageName) {
	String partialPath = NameEnvironment.assembleName(packageName, compoundName, '/');
	if (missingPackages.containsKey(partialPath)) return null;

	String fullPath = pathPrefix + partialPath;
	String[] dirList = (String[]) directoryCache.get(fullPath);
	if (dirList != null) return dirList;

	File dir = new File(fullPath);
	if (dir != null && dir.isDirectory()) {
		boolean matchesName = packageName == null;
		if (!matchesName) {
			int index = packageName.length;
			while (--index >= 0 && !Character.isUpperCase(packageName[index])) {}
			matchesName = index < 0 || exists(pathPrefix, new String(packageName), compoundName);
		}
		if (matchesName) {
			if ((dirList = dir.list()) == null)
				dirList = new String[0];
			directoryCache.put(fullPath, dirList);
			return dirList;
		}
	}
	missingPackages.put(partialPath, partialPath); // value is not used
	return null;
}

