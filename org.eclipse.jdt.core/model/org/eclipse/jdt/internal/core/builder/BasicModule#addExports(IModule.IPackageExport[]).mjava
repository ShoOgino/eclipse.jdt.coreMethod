	public void addExports(IModule.IPackageExport[] toAdd) {
		Predicate<char[]> shouldAdd = m -> {
			return Stream.of(this.exports).map(ref -> ((PackageExport) ref).pack).noneMatch(n -> CharOperation.equals(m, n));
		};
		Collection<IPackageExport> merged = Stream.concat(Stream.of(this.exports), Stream.of(toAdd)
				.filter(e -> shouldAdd.test(((PackageExport )e).name()))
				.map(e -> {
					PackageExport exp = new PackageExport();
					exp.pack = ((PackageExport )e).name();
					exp.exportedTo = ((PackageExport )e).targets();
					return exp;
				}))
			.collect(
				ArrayList::new,
				ArrayList::add,
				ArrayList::addAll);
		this.exports = merged.toArray(new PackageExport[merged.size()]);
	}

