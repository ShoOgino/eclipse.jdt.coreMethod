	/**
	 * Returns a primitive type handle corresponding to the given type code char.
	 * Returns nulll if type code is not a valid primitive type code.
	 */
	protected IType primitiveTypeFromTypeCode(char typeCode) {
		switch (typeCode) {
			case 'V' :
				return fVoidType;
			case 'I' :
				return fIntType;
			case 'B' :
				return fByteType;
			case 'C' :
				return fCharType;
			case 'D' :
				return fDoubleType;
			case 'F' :
				return fFloatType;
			case 'J' :
				return fLongType;
			case 'S' :
				return fShortType;
			case 'Z' :
				return fBooleanType;
			default :
				return null;
		}
	}

