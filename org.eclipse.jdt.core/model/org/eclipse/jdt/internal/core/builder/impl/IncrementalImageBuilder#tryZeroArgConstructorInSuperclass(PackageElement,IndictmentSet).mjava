/**
 * If there have been changes to the zero-arg constructor in the superclass of any types in the CU,
 * the CU must be recompiled.  This handles refs by default constructors and implicit super invocations in
 * constructors, which aren't covered by the normal method indictments since they
 * generate no evidence of refs to the super constructor.
 */
protected boolean tryZeroArgConstructorInSuperclass(PackageElement unit, IndictmentSet indictments) {
	if (!indictments.hasConstructorIndictments()) {
		return false;
	}
	IType[] types = fOldState.getInternalDependencyGraph().getTypes(unit);
	for (int i = 0; i < types.length; ++i) {
		IType superclass = getBuilderType(types[i]).getSuperclass();
		if (superclass != null) {
			String key = '<' + superclass.getDeclaredName() + ">/0"; //$NON-NLS-1$
			if (indictments.tryMethodEvidence(key.toCharArray())) {
				return true;
			}
		}
	}
	return false;
}

