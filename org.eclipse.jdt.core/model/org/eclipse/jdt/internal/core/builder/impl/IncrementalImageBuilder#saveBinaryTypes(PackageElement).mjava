	/**
	 * Hang onto the binary types for this source, because it will be compiled
	 */
	protected void saveBinaryTypes(PackageElement element) {
		DependencyGraph graph = fOldState.getInternalDependencyGraph();
		IType[] types = graph.getTypes(element);
		for (int i = 0; i < types.length; i++) {
			IType type = types[i];
			BuilderType builderType = (BuilderType) fBuilderTypeTable.get(type);

			if (builderType == null || !builderType.isAffected()) {
				TypeStructureEntry oldEntry = fOldState.getTypeStructureEntry(type, false);
				Assert.isNotNull(oldEntry);

				/* create and store the builder type */
				// Allow it to be missing.  See 1FW1S0Y: ITPJCORE:ALL - Java builder builds when non-Java files affected
				IBinaryType oldBinary = fOldState.getBinaryTypeOrNull(oldEntry);
				builderType = new ModifiedBuilderType(this, oldEntry, oldBinary);
				fBuilderTypeTable.put(type, builderType);

				/* remove the principal structure entry in the new state */
				fNewState.getPrincipalStructureTable().remove(type);

				/* nuke the binary because it will soon be stale */
				fNewState.getBinaryOutput().deleteBinary(type);
			}
		}
	}

