	/**
	 * Returns an array containing Type objects representing all
	 * classes and interfaces in the package represented by this object.
	 * This includes public and default (package) access top-level 
	 * classes, inner classes, and local inner classes.
	 * Returns an array of length 0 if this package has no
	 * classes or interfaces.
	 * The Types are in no particular order.
	 * This is a slow method.  getDeclaredClasses() should be used for most cases.
	 */
	public IType[] getAllClasses() throws NotPresentException {

		TypeStructureEntry[] entries = fState.getAllTypesForPackage(fHandle);
		if (entries == null) {
			throw new NotPresentException();
		}
		IType[] results = new IType[entries.length];
		for (int i = 0, num = entries.length; i < num; ++i) {
			results[i] = (IType) entries[i].getType().inState(fState);
		}
		return results;
	}

