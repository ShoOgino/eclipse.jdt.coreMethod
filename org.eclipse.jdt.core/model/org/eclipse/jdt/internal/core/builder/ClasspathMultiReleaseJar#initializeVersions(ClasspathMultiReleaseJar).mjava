	private static synchronized void initializeVersions(ClasspathMultiReleaseJar jar) {
		if (jar.zipFile == null) {
			if (org.eclipse.jdt.internal.core.JavaModelManager.ZIP_ACCESS_VERBOSE) {
				System.out.println("(" + Thread.currentThread() + ") [ClasspathMultiReleaseJar.initializeVersions(String)] Creating ZipFile on " + jar.zipFilename); //$NON-NLS-1$	//$NON-NLS-2$
			}
			try {
				jar.zipFile = new ZipFile(jar.zipFilename);
			} catch (IOException e) {
				return;
			}
			jar.closeZipFileAtEnd = true;
		}
		int earliestJavaVersion = ClassFileConstants.MAJOR_VERSION_9;
		long latestJDK = CompilerOptions.versionToJdkLevel(jar.compliance);
		int latestJavaVer = (int) (latestJDK >> 16);
		List<String> versions = new ArrayList<>();
		for (int i = latestJavaVer; i >= earliestJavaVersion; i--) {
			String name = META_INF_VERSIONS+ (i - 44);
			ZipEntry entry = jar.zipFile.getEntry(name);
			if (entry != null) {
				versions.add(name);
			}
		}
		jar.supportedVersions = versions.toArray(new String[versions.size()]);
	}

