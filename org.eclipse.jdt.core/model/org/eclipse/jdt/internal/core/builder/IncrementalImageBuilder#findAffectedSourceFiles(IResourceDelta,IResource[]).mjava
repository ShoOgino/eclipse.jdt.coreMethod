protected boolean findAffectedSourceFiles(IResourceDelta delta, IResource[] binaryResources) {
	for (int j = 0, k = binaryResources.length; j < k; j++) {
		IResource binaryResource = binaryResources[j];
		// either a .class file folder or a zip/jar file
		if (binaryResource != null) { // skip unchanged output folder
			IResourceDelta binaryDelta = delta.findMember(binaryResource.getProjectRelativePath());
			if (binaryDelta != null) {
				if (binaryResource instanceof IFile) {
					if (JavaBuilder.DEBUG)
						System.out.println("ABORTING incremental build... found delta to jar/zip file"); //$NON-NLS-1$
					return false; // do full build since jar file was added/removed/changed
				}
				if (binaryDelta.getKind() == IResourceDelta.ADDED || binaryDelta.getKind() == IResourceDelta.REMOVED) {
					if (JavaBuilder.DEBUG)
						System.out.println("ABORTING incremental build... found added/removed binary folder"); //$NON-NLS-1$
					return false; // added/removed binary folder should not make it here, but handle anyways
				}
				int segmentCount = binaryResource.getLocation().segmentCount();
				IResourceDelta[] children = binaryDelta.getAffectedChildren(); // .class files from class folder
				for (int i = 0, length = children.length; i < length; ++i)
					findAffectedSourceFiles(children[i], segmentCount);
				notifier.checkCancel();
			}
		}
	}
	return true;
}

