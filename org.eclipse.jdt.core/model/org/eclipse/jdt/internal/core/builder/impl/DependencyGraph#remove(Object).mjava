	/**
	 * Remove the node for the given element, and mark all dependents
	 * as having to be recompiled, if they haven't been already.
	 * Returns true if the node was successfully removed, and false
	 * if the node could not be found.
	 */
	public boolean remove(Object element) {
		INode node = getNodeFor(element, false);
		if (node == null) {
			return false;
		}

		/* remove dependencies -- this removes backwards links as well */
		node.clearDependencies();

		/* do for each dependent (nodes that depend on me)
		   note: these weren't cleared above */
		INode[] dependents = node.getDependents();
		for (int i = 0; i < dependents.length; i++) {
			INode dep = dependents[i];

			/* remove the dependency */
			dep.removeDependency(node);
			// this must not cause the dependents local to be modified
		}

		return deleteNode(node) != null;
	}

