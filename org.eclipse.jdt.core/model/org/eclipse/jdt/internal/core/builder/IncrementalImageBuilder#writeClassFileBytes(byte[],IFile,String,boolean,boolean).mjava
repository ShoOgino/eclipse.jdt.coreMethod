protected void writeClassFileBytes(byte[] bytes, IFile file, String qualifiedFileName, boolean isSecondaryType, boolean updateClassFile) throws CoreException {
	// Before writing out the class file, compare it to the previous file
	// If structural changes occured then add dependent source files
	if (file.exists()) {
		if (writeClassFileCheck(file, qualifiedFileName, bytes) || updateClassFile) { // see 46093
			if (JavaBuilder.DEBUG)
				System.out.println("Writing changed class file " + file.getName());//$NON-NLS-1$
			file.setContents(new ByteArrayInputStream(bytes), true, false, null);
			if (!file.isDerived())
				file.setDerived(true);
		} else if (JavaBuilder.DEBUG) {
			System.out.println("Skipped over unchanged class file " + file.getName());//$NON-NLS-1$
		}
	} else {
		if (isSecondaryType)
			addDependentsOf(new Path(qualifiedFileName), true); // new secondary type
		if (JavaBuilder.DEBUG)
			System.out.println("Writing new class file " + file.getName());//$NON-NLS-1$
		try {
			file.create(new ByteArrayInputStream(bytes), IResource.FORCE, null);
		} catch (org.eclipse.core.internal.resources.ResourceException e) {
			// TODO (kent) API violation: The type ResourceException is referenced across API boundaries
			if (e.getStatus().getCode() == IResourceStatus.CASE_VARIANT_EXISTS)
				// catch the case that a nested type has been renamed and collides on disk with an as-yet-to-be-deleted type
				throw new AbortCompilation(true, new AbortIncrementalBuildException(qualifiedFileName));
			throw e; // rethrow
		}
		file.setDerived(true);
	}
}

