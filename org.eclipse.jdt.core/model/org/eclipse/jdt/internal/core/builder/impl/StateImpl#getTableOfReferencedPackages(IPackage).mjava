	/**
	 * Returns a hashtable of IPackage objects representing all other
	 * packages which this package directly references.
	 */
	protected Hashtable getTableOfReferencedPackages(IPackage pkgHandle) {
		/* set of referenced builder packages */
		Hashtable pkgTable= new Hashtable();

		/* do for each type in this package */
		TypeStructureEntry[] types= getAllTypesForPackage(pkgHandle);
		if (types != null) {
			for (int i= 0; i < types.length; i++) {
				PackageElement element= packageElementFromSourceEntry(types[i].getSourceEntry());
				IPackage[] deps= getInternalDependencyGraph().getNamespaceDependencies(element);

				/* make sure namespaces are actually packages */
				for (int j= 0; j < deps.length; j++) {
					if (fPackageMap.getEntry(deps[j]) != null) {
						pkgTable.put(deps[j], deps[j]);
					}
				}
			}
		}

		/* remove this package */
		pkgTable.remove(pkgHandle);
		return pkgTable;
	}

