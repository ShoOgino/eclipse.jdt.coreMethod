	/**
	 * Returns the byte contents for a source entry.
	 */
	protected byte[] getElementContentBytes(SourceEntry entry) {
		if (entry.fZipEntryFileName != null) {
			ZipFile zipFile= null;
			try {
				IPath path= entry.getPath();
				JavaModelManager manager= (JavaModelManager) JavaModelManager.getJavaModelManager();
				zipFile= manager.getZipFile(path);
				if (zipFile == null) {
					//throw internalException("Error reading file " + entry + "due to missing zip/jar file");
					return new byte[0];
				}
				ZipEntry zipEntry= zipFile.getEntry(entry.getZipEntryName());
				if (zipEntry == null) {
					//throw internalException("Error reading file " + entry + " due to missing zip/jar entry");
					return new byte[0];
				}
				InputStream input= zipFile.getInputStream(zipEntry);
				if (input == null){
					//throw internalException("Error reading file " + entry + " due to missing zip/jar entry");
					return new byte[0];
				}
				byte[] contents= Util.readContentsAsBytes(input);
				if (contents == null) {
					//throw internalException("Error reading file " + entry + " due to error reading contents");
					return new byte[0];
				}
				return contents;
			} catch (CoreException e) {
				//throw internalException(e);
				return new byte[0];
			} catch (IOException e) {
				String message= e.getMessage();
				message= (message == null ? "." : " due to " + message + ".");
				//throw internalException("Error reading file " + entry + message);
				return new byte[0];
			} finally {
				if (zipFile != null) {
					try {
						zipFile.close();
					} catch(IOException e) {
						// ignore
					}
				}
			}
		} else {
			IFile file= getFile(entry);
			try {
				// Fix for 1FVTLHB: ITPCORE:WINNT - Importing a project does not import class files
				JavaModelManager.getJavaModelManager().ensureLocal(file);
				return Util.readContentsAsBytes(file.getContents(true));
			} catch (CoreException e) {
				return fDevelopmentContext.getBinaryFromFileSystem(file);
			} catch (IOException e) {
				String message= e.getMessage();
				message= (message == null ? "." : " due to " + message + ".");
				//throw internalException("Error reading file " + entry + message);
				return new byte[0];
			}
		}
	}

