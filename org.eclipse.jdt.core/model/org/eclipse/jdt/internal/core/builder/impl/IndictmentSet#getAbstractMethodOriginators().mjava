	/**
	 * Returns the originators of all abstract method indictments.  
	 * If any of these returned types are direct supertypes of the 
	 * type on trial, it is found guilty.
	 */
	public IType[] getAbstractMethodOriginators() {
		if (fAbstractMethodTable == null) {
			return new IType[0];
		}
		int length = fAbstractMethodTable.size();
		if (length == 0) {
			return new IType[0];
		}
		IType[] toReturn = new IType[length];
		int i = 0;
		for (Enumeration e = fAbstractMethodTable.elements();
			e.hasMoreElements();
			i++) {
			toReturn[i] =
				((AbstractMethodCollaboratorIndictment) e.nextElement()).getType();
		}

		return toReturn;
	}

