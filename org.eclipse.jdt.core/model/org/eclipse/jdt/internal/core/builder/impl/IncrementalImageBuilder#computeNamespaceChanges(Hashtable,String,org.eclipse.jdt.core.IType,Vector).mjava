/**
 * Computes the names with namespace changes for the given type.
 */
protected void computeNamespaceChanges(Hashtable oldTSEntries, String parentTypeName, org.eclipse.jdt.core.IType type, Vector vTypeNames) throws JavaModelException {
	String typeName = type.getElementName();
	if (parentTypeName != null) {
		int len = parentTypeName.length() + typeName.length() + 1;
		typeName = new StringBuffer(len).append(parentTypeName).append("$").append(typeName).toString(); //$NON-NLS-1$
	}
	/* Remove it so that only non-matching ones remain in the table. */
	TypeStructureEntry tsEntry = (TypeStructureEntry) oldTSEntries.remove(typeName);
	if (tsEntry == null || !compareVisibilityAndGender(tsEntry, type)) {
		vTypeNames.addElement(typeName);
	}
	org.eclipse.jdt.core.IType[] memberTypes = type.getTypes();
	for (int i = 0; i < memberTypes.length; ++i) {
		computeNamespaceChanges(oldTSEntries, typeName, memberTypes[i], vTypeNames);
	}
}

