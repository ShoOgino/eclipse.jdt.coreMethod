	/** 
	 * Read the problem reporter.
	 */
	protected IProblemReporter readProblemReporter(
		IProject project,
		StateSnapConstantPool pool,
		DataInputStream in)
		throws IOException {
		checkSection(in, "Problems");
		IProblemReporter reporter = null;
		boolean isProblemTable = in.readBoolean();
		if (isProblemTable) {
			reporter = new ProblemTable();
			int numProblems = in.readInt();
			for (int i = 0; i < numProblems; ++i) {
				ProblemDetailImpl pb = readProblem(pool, in);
				reporter.putProblem(pb.getSourceEntry(), pb);
			}
		} else {
			String className = in.readUTF();
			Class clazz = null;
			try {
				clazz = Class.forName(className);
			} catch (ClassNotFoundException e) {
				throw new IOException("Class " + className + " was not found.");
			}
			try {
				reporter = (IProblemReporter) clazz.newInstance();
			} catch (InstantiationException e) {
				throw new IOException("Could not instanciate " + clazz.getName());
			} catch (IllegalAccessException e) {
				throw new IOException("Could not instanciate " + clazz.getName());
			}
			reporter.initialize(
				project,
				JavaModelManager.getJavaModelManager().getDevelopmentContext(project));
		}
		return reporter;
	}

