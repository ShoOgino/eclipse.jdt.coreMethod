	/**
	 * Tries an ambiguous name against the set of available indictments.  Returns
	 * true if there is a match (guilty), and false if there is no match (not
	 * guilty).
	 */
	public boolean tryAmbiguousEvidence(char[] name) {
		if (fFieldsTable == null && fTypesTable == null) {
			return false;
		}
		
		// Try all segments of name
		int i = 0;
		int j = CharOperation.indexOf('.', name);
		while (j >= 0) {
			char[] segment = CharOperation.subarray(name, i, j);
			if (tryFieldEvidence(segment) || tryTypeEvidence(segment)) {
				return true;
			}
			i = j + 1;
			j = CharOperation.indexOf('.', name, i);			
		}
		char[] segment = CharOperation.subarray(name, i, name.length-1);
		return tryFieldEvidence(segment) || tryTypeEvidence(segment);
	}

