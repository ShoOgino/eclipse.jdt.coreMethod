/**
 * If a subtype of the originator of a method indictment redefines
 * the method for which there is an indictment, it must be recompiled.
 * This is also true if any superinterfaces of the subtype defines
 * an indicted method.
 */
protected boolean tryMethodDeclarations(BuilderType builderType, IndictmentSet indictments) {
	final boolean GUILTY = true, INNOCENT = false;

	/* try the methods of this type */
	IBinaryType oldBinary = builderType.getOldBinaryType();
	if (oldBinary == null) return GUILTY;
	
	IBinaryMethod[] methods = oldBinary.getMethods();
	if (methods != null) {
		for (int k = 0; k < methods.length; k++) {
			if (indictments.tryMethodDeclaration(methods[k])) {
				return GUILTY;
			}
		}
	}

	/* recurse on superinterfaces */
	char[][] interfaces = oldBinary.getInterfaceNames();
	if (interfaces != null) {
		for (int i = 0; i < interfaces.length; i++) {
			BuilderType supr = getBuilderType(BinaryStructure.getType(builderType.getNewState(), builderType.getNewTypeStructureEntry(), interfaces[i]));
			if (tryMethodDeclarations(supr, indictments)) {
				return GUILTY;
			}
		}
	}
	return INNOCENT;
}

