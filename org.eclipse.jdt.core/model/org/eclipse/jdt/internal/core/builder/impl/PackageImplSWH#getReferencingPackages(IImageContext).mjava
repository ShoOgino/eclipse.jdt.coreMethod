	/**
	 * Returns an array of Package objects representing all packages
	 * in the given image context which directly reference this package.
	 * The result does not include this package.
	 * In other words, the result is non-transitive and non-reflexive.
	 * <p>
	 * The intersection of all packages in the image and those in the
	 * image context are considered, so the resulting packages are 
	 * guaranteed to be present in the image.
	 * The resulting packages are in no particular order.
	 */
	public IPackage[] getReferencingPackages(IImageContext context) 
	  throws NotPresentException {
		if (!isPresent())
			throw new NotPresentException(Util.bind("element.notPresent")); //$NON-NLS-1$

		IPackage[] pkgs = fState.getReferencingPackages(fHandle, context);

		/* wrap packages in state */
		for (int i = 0; i < pkgs.length; i++) {
			pkgs[i] = (IPackage)pkgs[i].inState(fState);
		}
		return pkgs;
	}

