	/**
	 * Run the Java Image Builder.
	 */
	protected IProject[] build(int kind, Map map, IProgressMonitor monitor) throws CoreException {

		if (!this.getProject().exists()) return new IProject[0];
		//if (!((JavaProject)getJavaProject()).hasSource()) return new IProject[0];
		
		JavaDevelopmentContextImpl dc = getDevelopmentContext();
		dc.setProgressMonitor(monitor);
		boolean ok = false;
		try {
			if (kind == FULL_BUILD) {
				fullBuild(dc, monitor);
			}
			else {
				Hashtable deltas = checkIncrementalBuild(monitor);
				if (deltas == null) {
					fullBuild(dc, monitor);
				}
				else {
					incrementalBuild(dc, deltas, monitor);
				}
			}
			ok = true;
		} catch (ImageBuilderInternalException e) {
			// Fix for 1FW2XY6: ITPJCORE:ALL - Image builder wrappers CoreException
			if (e.getThrowable() instanceof CoreException) {
				throw (CoreException) e.getThrowable();
			} else {
				throw new CoreException(new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, Util.bind("build.builderName"), e)); //$NON-NLS-1$
			}
		} catch (OperationCanceledException e) {
			// Do nothing for now, and avoid propagating the exception.  
			// The finally block ensures we will do a full build next time.
			// See 1FVJ5Z8: ITPCORE:ALL - How should builders handle cancel?
		} finally {
			// Don't let DC hang onto progress monitor.
			dc.setProgressMonitor(null);
			if (!ok) {
				// If the build failed, clear out the previously built state,
				// forcing a full build next time.
				setLastBuiltState(null);
			}
			if (monitor != null) monitor.subTask(Util.bind("build.completed")); //$NON-NLS-1$
		}
		return getRequiredProjects(getLastBuiltState(monitor));
	}

