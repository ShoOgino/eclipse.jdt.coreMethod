	/**
	 * @see IImage
	 */
	public IType[] getBuiltClasses(IPath path) {
		Vector vResult = new Vector();
		//		try {
		String extension = path.getFileExtension().toLowerCase();
		if (extension.equals("java") || extension.equals("class")) {
			IPath pkgPath = path.removeLastSegments(1);
			IPackage pkg = fState.getPathMap().packageHandleFromPath(pkgPath);
			TypeStructureEntry[] tsEntries = fState.getAllTypesForPackage(pkg);
			if (tsEntries != null) { // present?
				for (int i = 0, len = tsEntries.length; i < len; ++i) {
					TypeStructureEntry tsEntry = tsEntries[i];
					if (path.equals(tsEntry.getSourceEntry().getPath())) {
						vResult.addElement(tsEntry.getType().inState(fState));
					}
				}
			}
		} else
			if (fState.isZipElement(path)) {
				IPackage[] pkgs = fState.getPathMap().packageHandlesFromPath(path);
				for (int i = 0; i < pkgs.length; ++i) {
					IPackage pkg = pkgs[i];
					TypeStructureEntry[] tsEntries = fState.getAllTypesForPackage(pkg);
					if (tsEntries != null) { // present?
						for (int j = 0, len = tsEntries.length; j < len; ++j) {
							TypeStructureEntry tsEntry = tsEntries[j];
							if (path.equals(tsEntry.getSourceEntry().getPath())) {
								vResult.addElement(tsEntry.getType().inState(fState));
							}
						}
					}
				}
			} else {
				if (path.equals(fState.getProject().getFullPath())) {
					try {
						IResource[] members = fState.getProject().members();
						for (int i = 0, max = members.length; i < max; i++) {
							IType[] tempResult = getBuiltClasses(members[i].getFullPath());
							for (int j = 0; j < tempResult.length; ++j) {
								vResult.addElement(tempResult[j]);
							}
						}
					} catch (CoreException e) {
						//couldn't access the project -- ignore and return empty array
					}
				} else { // package
					IPackage pkg = fState.getPathMap().packageHandleFromPath(path);
					TypeStructureEntry[] tsEntries = fState.getAllTypesForPackage(pkg);
					if (tsEntries != null) { // present?
						for (int i = 0, len = tsEntries.length; i < len; ++i) {
							TypeStructureEntry tsEntry = tsEntries[i];
							if (path.isPrefixOf(tsEntry.getSourceEntry().getPath())) {
								vResult.addElement(tsEntry.getType().inState(fState));
							}
						}
					}
				}
			}
		//		}
		//		catch (ResourceAccessException e) {
		//			fState.resourceAccessException(e);
		//		}
		IType[] result = new IType[vResult.size()];
		vResult.copyInto(result);
		return result;
	}

