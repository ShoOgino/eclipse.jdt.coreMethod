	/**
	 * Returns the order number, calculating it if not already done.
	 * seen is a set of previously visited nodes.
	 */
	private int getOrder(int recursionLevel) {
		if (fOrder != -1) {
			return fOrder;
		}

//		trace(recursionLevel, -1);

		fOrder = 0;  // Mark as non-invalid to break cycles
		int max = -1;
		for (int i = 0, len = fDependencies.length; i < len; ++i) {
			int order = ((AbstractNode) fDependencies[i]).getOrder(recursionLevel + 1);
			if (order > max) {
				max = order;
			}
		}
		fOrder = max + 1;
		
//		trace(recursionLevel, fOrder);
		return fOrder;
	}

