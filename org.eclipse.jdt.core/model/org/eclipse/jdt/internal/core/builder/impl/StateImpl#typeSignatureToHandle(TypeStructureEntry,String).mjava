	/**
	 * Convert a type signature to a non-state-specific type handle.
	 */
	protected IType typeSignatureToHandle(TypeStructureEntry tsEntry, String sig) {
		int nestingDepth= 0;
		int i= 0;
		char c= sig.charAt(i);
		while (c == '[') {
			++nestingDepth;
			++i;
			c= sig.charAt(i);
		}

		/* if its a class */
		IType elementType;
		if (c == 'L') {
			/* class or interface */
			int semicolon= sig.indexOf(';', i + 1);
			elementType= typeNameToHandle(tsEntry, sig.substring(i + 1, semicolon));
		} else {
			/* base type or invalid type name */
			elementType= fDevelopmentContext.primitiveTypeFromTypeCode(c);
		}
		if (nestingDepth == 0) {
			return elementType;
		} else {
			return new ArrayTypeHandleImpl((TypeImpl) elementType, nestingDepth);
		}
	}

