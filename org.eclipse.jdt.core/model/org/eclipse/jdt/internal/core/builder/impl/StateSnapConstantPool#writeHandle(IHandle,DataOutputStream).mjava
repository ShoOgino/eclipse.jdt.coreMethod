	/** 
	 * Write a handle to the given stream.
	 */
	private void writeHandle(IHandle h, DataOutputStream out) throws IOException {
		switch (h.kind()) {
			case IHandle.K_JAVA_PACKAGE :
				IPackage pkg = (IPackage) h;
				out.writeByte(4);
				out.writeInt(index(pkg.getName()));
				out.writeBoolean(pkg.isUnnamed());
				break;
			case IHandle.K_JAVA_TYPE :
				IType t = (IType) h;
				if (t.isPrimitive()) {
					// tag=5
					// Primitive types should not show up since they are well known and are not written.
					throw new IOException("Internal error");
				} else
					if (t.isArray()) {
						ArrayTypeHandleImpl at = (ArrayTypeHandleImpl) t;
						out.writeByte(6);
						out.writeInt(index(at.getElementType()));
						int nesting = at.getNestingDepth();
						Assert.isTrue(nesting < 256);
						out.writeByte(nesting);
					} else {
						Assert.isTrue(t instanceof ClassOrInterfaceHandleImpl);
						out.writeByte(7);
						out.writeInt(index(t.getPackage()));
						out.writeInt(index(t.getSimpleName()));
					}
				break;
			case IHandle.K_JAVA_METHOD :
				{
					IMethod m = (IMethod) h;
					out.writeByte(8);
					out.writeInt(index(m.getDeclaringClass()));
					out.writeInt(index(m.getName()));
					IType[] params = m.getParameterTypes();
					Assert.isTrue(params.length < 256);
					out.writeByte(params.length);
					for (int j = 0; j < params.length; ++j) {
						out.writeInt(index(params[j]));
					}
					break;
				}
			case IHandle.K_JAVA_CONSTRUCTOR :
				{
					IConstructor c = (IConstructor) h;
					out.writeByte(9);
					out.writeInt(index(c.getDeclaringClass()));
					IType[] params = c.getParameterTypes();
					Assert.isTrue(params.length < 256);
					out.writeByte(params.length);
					for (int j = 0; j < params.length; ++j) {
						out.writeInt(index(params[j]));
					}
					break;
				}
			case IHandle.K_JAVA_FIELD :
				IField f = (IField) h;
				out.writeByte(10);
				out.writeInt(index(f.getDeclaringClass()));
				out.writeInt(index(f.getName()));
				break;
			case IHandle.K_JAVA_IMAGE :
				out.writeByte(11);
				break;
			default :
				Assert.isTrue(false, "Unknown handle type");
		}
	}

