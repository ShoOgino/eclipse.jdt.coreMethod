	/**
	 * Computes the indictments for the fields of this type
	 */
	public void computeFieldIndictments(
		IndictmentSet indictments,
		IBinaryType newType,
		IType typeHandle) {

		/* create a set of all old fields */
		HashtableOfObject oldFieldsTable = new HashtableOfObject(11);
		IBinaryField[] oldFields = fOldStructure.getFields();
		if (oldFields != null) {
			for (int i = 0; i < oldFields.length; i++) {
				oldFieldsTable.put(oldFields[i].getName(), oldFields[i]);
			}
		}

		/* check if each new field was in old field list */
		IBinaryField[] newFields = newType.getFields();
		if (newFields != null) {
			for (int i = 0; i < newFields.length; i++) {
				IBinaryField newField = newFields[i];
				IBinaryField oldField = (IBinaryField) oldFieldsTable.get(newField.getName());
				if (oldField == null) {
					/* it's a new field -- create a indictment */
					indictments.add(Indictment.createFieldIndictment(newField));
				} else {
					/* if it has it changed, issue an indictment */
					oldFieldsTable.put(oldField.getName(), null);
					// TBD: there is no remove on HashtableOfObject
					if (!BinaryStructure.compare(oldField, newField)) {
						indictments.add(Indictment.createFieldIndictment(oldField));
					}
				}
			}
		}

		/* remaining old fields have been deleted -- create indictments */
		Object[] remaining = oldFieldsTable.valueTable;
		for (int i = remaining.length; i-- > 0;) {
			if (remaining[i] != null) {
				IBinaryField oldField = (IBinaryField) remaining[i];
				indictments.add(Indictment.createFieldIndictment(oldField));
			}
		}
	}

