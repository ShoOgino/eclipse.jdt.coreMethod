/**
 * Update the problem counts given the old and new problems,
 * either of which may be null.
 */
protected void updateProblemCounts(Vector oldProblems, Vector newProblems) {
	if (oldProblems != null) {
		for (int i = 0, oldSize = oldProblems.size(); i < oldSize; ++i) {
			ProblemDetailImpl oldProblem = (ProblemDetailImpl) oldProblems.elementAt(i);
			ProblemDetailImpl newProblem = null;
			if (newProblems != null) {
				for (int j = 0, newSize = newProblems.size(); j < newSize; ++j) {
					ProblemDetailImpl pb = (ProblemDetailImpl) newProblems.elementAt(j);
					if (oldProblem.equals(pb, true)) {
						newProblem = pb;
						break;
					}
				}
			}
			if (newProblem == null) {
				if ((oldProblem.getSeverity() & IProblemDetail.S_ERROR) != 0) {
					fFixedErrorCount++;
				} else {
					fFixedWarningCount++;
				}
			}
		}
	}
	if (newProblems != null) {
		for (int i = 0, newSize = newProblems.size(); i < newSize; ++i) {
			ProblemDetailImpl newProblem = (ProblemDetailImpl) newProblems.elementAt(i);
			ProblemDetailImpl oldProblem = null;
			if (oldProblems != null) {
				for (int j = 0, oldSize = oldProblems.size(); j < oldSize; ++j) {
					ProblemDetailImpl pb = (ProblemDetailImpl) oldProblems.elementAt(j);
					if (newProblem.equals(pb, true)) {
						oldProblem = pb;
						break;
					}
				}
			}
			if (oldProblem == null) {
				if ((newProblem.getSeverity() & IProblemDetail.S_ERROR) != 0) {
					fNewErrorCount++;
				} else {
					fNewWarningCount++;
				}
			}
		}
	}
}

