/**
 * Returns the inner class entry representing this type, or null if not applicable.
 */
protected static IBinaryNestedType getInnerClassEntry(IBinaryType type) {
	IBinaryNestedType[] inners = type.getMemberTypes();
	if (inners != null) {
		char[] name = type.getName();
		for (int i = 0, max = inners.length; i < max; ++i) {
			IBinaryNestedType t = (IBinaryNestedType) inners[i];
			if (CharOperation.equals(t.getName(), name)) {
				return t;
			}
		}
	}
	return null;
}

