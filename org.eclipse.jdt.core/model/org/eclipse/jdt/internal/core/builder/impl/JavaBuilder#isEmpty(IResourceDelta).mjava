	/**
	 * Checks whether this is an empty delta as far as the builder is concerned.
	 */
	protected boolean isEmpty(IResourceDelta change) {
		// Made checks more selective for 1FW1S0Y: ITPJCORE:ALL - Java builder builds when non-Java files affected
		if (change == null)
			return true;
		int kind = change.getKind();
		boolean isAdded = kind == IResourceDelta.ADDED;
		boolean isRemoved = kind == IResourceDelta.REMOVED;
		boolean isChanged = kind == IResourceDelta.CHANGED;
		int flags = change.getFlags();
		boolean contentChanged = isChanged && (flags & IResourceDelta.CONTENT) != 0;
		String extension = change.getFullPath().getFileExtension();
		boolean isJavaOrClassFile =
			extension != null
				&& (extension.equalsIgnoreCase("java") || extension.equalsIgnoreCase("class"));
		boolean isArchive =
			extension != null
				&& (extension.equalsIgnoreCase("zip") || extension.equalsIgnoreCase("jar"));

		// care about added, removed and modified (content actually modified) .java and .class files
		if (isJavaOrClassFile && (isAdded || isRemoved || contentChanged))
			return false;
		// care about added, removed and modified (content actually modified) .jar and .zip files
		if (isArchive && (isAdded || isRemoved || contentChanged))
			return false;

		// care about all folder additions and removals since they may represent package fragments
		IResource resource = change.getResource();
		if (resource != null) {
			int type = resource.getType();
			// may have been a container previously if its type is changing
			boolean isFolder =
				(flags & IResourceDelta.TYPE) != 0 || type == IResource.FOLDER;
			if (isFolder && (isAdded || isRemoved))
				return false;
		}
		// recurse on children
		IResourceDelta[] children = change.getAffectedChildren();
		for (int i = 0; i < children.length; ++i) {
			if (!isEmpty(children[i]))
				return false;
		}
		return true;
	}

