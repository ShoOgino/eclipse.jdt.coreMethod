	/**
	 * Issues indictments to the dependents of the specified element.
	 * If transitive is true, they are issued to all dependents transitively,
	 * otherwise they are issued only to immediate dependents.
	 * The trial process is run as the indictments are issued.
	 * Any newly-convicted compilation units are added to the to-be-compiled list.
	 */
	protected void issueIndictments(
		Object element,
		IndictmentSet indicts,
		boolean transitive) {
		DependencyGraph graph = fNewState.getInternalDependencyGraph();
		Object[] dependents = graph.getDependents(element);
		if (dependents.length > 0) {
			Hashtable seen = new Hashtable(11);
			seen.put(element, element); // Don't visit the given element

			for (int i = 0; i < dependents.length; ++i) {
				issueIndictments(graph, dependents[i], indicts, transitive, seen);
			}
		}
	}

