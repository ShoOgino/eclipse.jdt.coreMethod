	/**
	 * Returns a string representation of this <tt>LookupTable</tt> object 
	 * in the form of a set of entries, enclosed in braces and separated 
	 * by the ASCII characters "<tt>,&nbsp;</tt>" (comma and space). Each 
	 * entry is rendered as the key, an equals sign <tt>=</tt>, and the 
	 * associated element, where the <tt>toString</tt> method is used to 
	 * convert the key and element to strings. <p>Overrides to 
	 * <tt>toString</tt> method of <tt>Object</tt>.
	 *
	 * @return  a string representation of this lookup table.
	 */
	public synchronized String toString() {
	StringBuffer buf = new StringBuffer();
	buf.append("{"/*nonNLS*/);
	boolean first = true;
	for (int i = 0, max = keys.length; i < max; i++) {
		if (keys[i] != null) {
			if (first) {
				first = false;
			}
			else {
				buf.append(", "/*nonNLS*/);
			}
			if (buf.length() > 1000) {
				buf.append("..."/*nonNLS*/);
				break;
			}
			else {
			    buf.append(keys[i]).append("="/*nonNLS*/).append(values[i]);
		    }
	    }
	}
	buf.append("}"/*nonNLS*/);
	return buf.toString();
	}

