	private void parseWildCard(int rank) {
	 	if (this.scanner.nextToken() != Scanner.TYPE) {
	 		malformedKey();
	 		return;
	 	}
	 	char[] source = this.scanner.getTokenSource();
	 	if (source.length == 0) {
	 		malformedKey();
	 		return;
	 	}
	 	int kind = -1;
	 	switch (source[0]) {
		 	case '*':
		 		kind = Wildcard.UNBOUND;
		 		break;
		 	case '+':
		 		kind = Wildcard.EXTENDS;
		 		parseTypeArgument();
		 		break;
		 	case '-':
		 		kind = Wildcard.SUPER;
		 		parseTypeArgument();
		 		break;
	 	}
	 	if (kind == -1) {
	 		malformedKey();
	 		return;
	 	}
	 	consumeWildCard(kind, rank);
	 }

