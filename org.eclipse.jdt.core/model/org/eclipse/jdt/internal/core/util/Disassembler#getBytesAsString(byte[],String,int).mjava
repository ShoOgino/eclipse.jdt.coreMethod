	private String getBytesAsString(final byte[] bytes, final String lineSeparator, final int tabNumber) {
		StringBuffer buffer = new StringBuffer();
		NumberFormat format = NumberFormat.getInstance();
		format.setMaximumIntegerDigits(3);
		format.setMinimumIntegerDigits(3);
		final int length = bytes.length;
		if (length == 0) {
			return "{}"; //$NON-NLS-1$
		} else {
			buffer.append('{');
			writeNewLine(buffer, lineSeparator, tabNumber + 2);
			String hexString = Integer.toHexString(bytes[0] & 0xFF);
			switch(hexString.length()) {
				case 1 :
					buffer.append('0');
					break;
			}
			buffer.append(hexString).append(' ');
			hexString = Integer.toHexString(bytes[1] & 0xFF);
			switch(hexString.length()) {
				case 1 :
					buffer.append('0');
					break;
			}
			buffer.append(hexString);
			for (int i = 2; i < length; i++) {
				if ((i - 2) % 11 == 0) {
					writeNewLine(buffer, lineSeparator, tabNumber + 2);
				} else {
					buffer.append(' ');
				}
				final int currentByte = bytes[i] & 0xFF;
				hexString = Integer.toHexString(currentByte).toUpperCase();
				switch(hexString.length()) {
					case 1 :
						buffer.append('0');
						break;
				}
				buffer.append(hexString).append('(').append(format.format(currentByte)).append(')');
			}
			writeNewLine(buffer, lineSeparator, tabNumber + 1);
			buffer.append('}');
		}
		return String.valueOf(buffer);
	}

