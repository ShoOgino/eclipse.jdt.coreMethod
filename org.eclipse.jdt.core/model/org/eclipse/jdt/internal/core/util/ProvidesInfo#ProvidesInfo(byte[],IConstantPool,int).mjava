	public ProvidesInfo(byte[] classFileBytes, IConstantPool constantPool, int offset) throws ClassFormatException {
		int readOffset = 0;
		this.index = u2At(classFileBytes, readOffset, offset);
		readOffset += 2;
		IConstantPoolEntry constantPoolEntry = constantPool.decodeEntry(this.index);
		if (constantPoolEntry.getKind() != IConstantPoolConstant.CONSTANT_Class) {
			throw new ClassFormatException(ClassFormatException.INVALID_CONSTANT_POOL_ENTRY);
		}
		this.serviceName = constantPoolEntry.getClassInfoName();
		this.implementationsCount = u2At(classFileBytes, readOffset, offset);
		readOffset += 2;

		if (this.implementationsCount != 0) {
			this.implementationIndices = new int[this.implementationsCount];
			this.implementationNames = new char[this.implementationsCount][];
			for (int i = 0; i < this.implementationsCount; i++) {
				this.implementationIndices[i] = u2At(classFileBytes, readOffset, offset);
				readOffset += 2;
				constantPoolEntry = constantPool.decodeEntry(this.implementationIndices[i]);
				if (constantPoolEntry.getKind() != IConstantPoolConstant.CONSTANT_Class) {
					throw new ClassFormatException(ClassFormatException.INVALID_CONSTANT_POOL_ENTRY);
				}
				this.implementationNames[i] = constantPoolEntry.getClassInfoName();
			}
		}
	}

