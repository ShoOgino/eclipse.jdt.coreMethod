	/**
	 * Extract method receiver type from its unique key.
	 * 
	 * For methods, receiver type is located at the beginning of the unique key.
	 * So receiver type signature is unique key substring starting at beginning and
	 * ended at first ';' character not included in type arguments definition (ie.
	 * outside <...>).
	 * 
	 * @param uniqueKey ParameterizedSourceMethod unique key
	 * @throws IllegalArgumentException If receiver type signature of unique key is malformed
	 * @return String Receiver type signature
	 */
	public final static String extractMethodReceiverType(String uniqueKey) {
		// scan method unique key until first ';' outside <>
		Scanner scanner = new Scanner(false, true, false, ClassFileConstants.JDK1_3, null, null, true); 
		scanner.setSource(uniqueKey.toCharArray());
		int token;
		try {
			token = scanner.getNextToken();
			int argCount = 0;
			tokensLoop: while (token != TerminalTokens.TokenNameEOF) {
				if (argCount == 0) {
					switch (token) {
						case TerminalTokens.TokenNameLESS:
							argCount++;
							break;
						case TerminalTokens.TokenNameSEMICOLON:
							break tokensLoop;
						default:
							break;
					}
				} else {
					switch (token) {
						case TerminalTokens.TokenNameGREATER:
						case TerminalTokens.TokenNameRIGHT_SHIFT:
						case TerminalTokens.TokenNameUNSIGNED_RIGHT_SHIFT:
							argCount--;
							break;
						case TerminalTokens.TokenNameLESS:
							argCount++;
							break;
					}
				}
				token = scanner.getNextToken();
			}
		} catch (InvalidInputException e) {
			throw new IllegalArgumentException();
		}
		// return extracted type
		if (scanner.atEnd()) throw new IllegalArgumentException();
		return uniqueKey.substring(0, scanner.currentPosition);
	}

