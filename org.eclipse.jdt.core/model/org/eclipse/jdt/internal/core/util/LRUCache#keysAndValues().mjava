	/**
	 * Returns an enumeration that iterates over all the keys and values
	 * currently in the cache.
	 */
	public ICacheEnumeration<K, V> keysAndValues() {
		return new ICacheEnumeration<K, V>() {

			Enumeration<LRUCacheEntry<K, V>> values = LRUCache.this.entryTable.elements();
			LRUCacheEntry<K, V> entry;

			@Override
			public boolean hasMoreElements() {
				return this.values.hasMoreElements();
			}

			@Override
			public K nextElement() {
				this.entry = this.values.nextElement();
				return this.entry.key;
			}

			@Override
			public V getValue() {
				if (this.entry == null) {
					throw new java.util.NoSuchElementException();
				}
				return this.entry.value;
			}
		};
	}

