	/*
	 * Returns the openable that contains the given AST node.
	 */
	private Openable getOpenable(ASTNode toBeFound, Openable openable) {
	    if (openable instanceof ClassFile) {
	        try {
	            int sourceStart = toBeFound.sourceStart;
	            int sourceEnd = toBeFound.sourceEnd;
	            ClassFile classFile = (ClassFile)openable;
                ISourceRange sourceRange = classFile.getType().getSourceRange();
                int offset = sourceRange.getOffset();
                if (offset == sourceStart && offset + sourceRange.getLength() != sourceEnd) {
                    return openable;
                } else {
                    String prefix = classFile.getTopLevelTypeName() + '$';
                    IPackageFragment pkg = (IPackageFragment)classFile.getParent();
                    IClassFile[] children = pkg.getClassFiles();
                    for (int i = 0, length = children.length; i < length; i++) {
                        IClassFile child = children[i];
                        if (child.getElementName().startsWith(prefix)) {
			                sourceRange = child.getType().getSourceRange();
			                offset = sourceRange.getOffset();
                        	if (offset == sourceStart && offset + sourceRange.getLength() != sourceEnd) {
                        	    return (Openable)child;
                        	}
                        }
                    }
                }
            } catch (JavaModelException e) {
                // class file doesn't exist: ignore
            }
	    }
	    return openable;
	}

