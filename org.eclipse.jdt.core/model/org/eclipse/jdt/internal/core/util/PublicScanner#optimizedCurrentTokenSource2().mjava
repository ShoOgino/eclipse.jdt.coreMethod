	final char[] optimizedCurrentTokenSource2() {
		//try to return the same char[] build only once

		char[] src = this.source;
		int start = this.startPosition;
		char c0 , c1;
		int hash = (((c0=src[start]) << 6) + (c1=src[start+1])) % TableSize;
		char[][] table = this.charArray_length[0][hash];
		int i = this.newEntry2;
		while (++i < InternalTableSize) {
			char[] charArray = table[i];
			if ((c0 == charArray[0]) && (c1 == charArray[1]))
				return charArray;
		}
		//---------other side---------
		i = -1;
		int max = this.newEntry2;
		while (++i <= max) {
			char[] charArray = table[i];
			if ((c0 == charArray[0]) && (c1 == charArray[1]))
				return charArray;
		}
		//--------add the entry-------
		if (++max >= InternalTableSize) max = 0;
		char[] r;
		System.arraycopy(src, start, r= new char[2], 0, 2);
		//newIdentCount++;
		return table[this.newEntry2 = max] = r; //(r = new char[] {c0, c1});
	}

