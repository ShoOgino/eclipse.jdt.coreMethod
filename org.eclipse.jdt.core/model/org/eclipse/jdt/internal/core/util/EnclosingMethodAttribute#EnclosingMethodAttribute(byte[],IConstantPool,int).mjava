	EnclosingMethodAttribute(byte[] classFileBytes, IConstantPool constantPool, int offset) throws ClassFormatException {
		super(classFileBytes, constantPool, offset);
		int index = u2At(classFileBytes, 6, offset);
		this.enclosingClassIndex = index;
		IConstantPoolEntry constantPoolEntry = constantPool.decodeEntry(index);
		if (constantPoolEntry.getKind() != IConstantPoolConstant.CONSTANT_Class) {
			throw new ClassFormatException(ClassFormatException.INVALID_CONSTANT_POOL_ENTRY);
		}
		this.enclosingClassName = constantPoolEntry.getClassInfoName();
		this.methodNameAndTypeIndex = u2At(classFileBytes, 8, offset);
		constantPoolEntry = constantPool.decodeEntry(this.methodNameAndTypeIndex);
		if (constantPoolEntry.getKind() != IConstantPoolConstant.CONSTANT_NameAndType) {
			throw new ClassFormatException(ClassFormatException.INVALID_CONSTANT_POOL_ENTRY);
		}
		this.methodDescriptorIndex = constantPoolEntry.getNameAndTypeInfoDescriptorIndex();
		this.methodNameIndex = constantPoolEntry.getNameAndTypeInfoNameIndex();
		constantPoolEntry = constantPool.decodeEntry(this.methodDescriptorIndex);
		if (constantPoolEntry.getKind() != IConstantPoolConstant.CONSTANT_Utf8) {
			throw new ClassFormatException(ClassFormatException.INVALID_CONSTANT_POOL_ENTRY);
		}
		this.methodDescriptor = constantPoolEntry.getUtf8Value();
		constantPoolEntry = constantPool.decodeEntry(this.methodNameIndex);
		if (constantPoolEntry.getKind() != IConstantPoolConstant.CONSTANT_Utf8) {
			throw new ClassFormatException(ClassFormatException.INVALID_CONSTANT_POOL_ENTRY);
		}
		this.methodName = constantPoolEntry.getUtf8Value();
	}

