	public Binding getCompilerBinding(CompilationUnitDeclaration parsedUnit) {
		if (this.environment == null) return null;
		switch (this.scanner.token) {
			case Scanner.PACKAGE:
	 			return new PackageBinding(this.compoundName, null, this.environment);
	 		case Scanner.TYPE:
	 			if (this.compoundName.length == 1 && this.compoundName[0].length == 1) {
	 				// case of base type
		 			TypeBinding baseTypeBinding = getBaseTypeBinding(this.compoundName[0]);
		 			if (baseTypeBinding != null) 
	 					return getArrayBinding(this.dimension, baseTypeBinding);
	 			}
	 			char[] typeName = this.compoundName[this.compoundName.length-1];
	 			int dim = this.dimension;
	 			TypeBinding binding = parsedUnit == null ? getBinaryBinding() : getTypeBinding(parsedUnit, parsedUnit.types, typeName);
	 			if (binding == null) return null;
				TypeBinding typeBinding = null;
				if (this.scanner.isAtParametersStart()) {
					if (this.scanner.isAtTypeParameterStart())	 					
	 					// generic type binding
	 					typeBinding = getGenericTypeBinding((SourceTypeBinding) binding);
	 				else if (this.scanner.isAtTypeStart() || this.scanner.isAtWildCardStart())
						// parameterized type binding
	 					typeBinding = getParameterizedTypeBinding((ReferenceBinding) binding, null/*no enclosing type*/); 
				} else if (binding.typeVariables().length > 0)
					// raw type binding
					typeBinding = this.environment.createRawType((ReferenceBinding) binding, null/*no enclosing type*/);
				else
					// non-generic type binding
					typeBinding = binding;
	 			if (this.scanner.isAtFieldOrMethodStart()) {
	 				switch (this.scanner.nextToken()) {
		 				case Scanner.FIELD:
		 					return getFieldBinding(((ReferenceBinding) typeBinding).fields());
		 				case Scanner.METHOD:
		 					MethodBinding methodBinding = getMethodBinding(((ReferenceBinding) typeBinding).methods());
		 					if (this.scanner.isAtParametersStart())
		 						// parameterized generic method binding
		 						methodBinding = getParameterizedGenericMethodBinding(methodBinding);
		 					if (this.scanner.isAtLocalVariableStart()) {
		 						MethodScope methodScope = methodBinding.sourceMethod().scope;
		 						return getLocalVariableBinding(methodScope);
		 					} else
		 						return methodBinding;
	 				}
	 				return null; // malformed key
	 			} else if (this.scanner.isAtTypeVariableStart()) {
	 				return getTypeVariableBinding((SourceTypeBinding) binding);
	 			} else {
	 				return getArrayBinding(dim, typeBinding);
	 			}
	 	}
	 	return null;
	 }

