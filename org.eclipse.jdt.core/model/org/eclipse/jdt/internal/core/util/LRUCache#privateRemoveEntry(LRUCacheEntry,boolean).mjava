	/**
	 * Removes the entry from the entry queue.  
	 * @param shuffle indicates whether we are just shuffling the queue 
	 * (in which case, the entry table is not modified).
	 */
	protected void privateRemoveEntry (LRUCacheEntry entry, boolean shuffle) {
		
		LRUCacheEntry previous, next;
		
		previous = entry.previous;
		next = entry.next;
		
		if (!shuffle) {
			entryTable.remove(entry.key);
			currentSpace -= entry.space;
		}

		/* if this was the first entry */
		if (previous == null) {
			entryQueue = next;
		} else {
			previous.next = next;
		}

		/* if this was the last entry */
		if (next == null) {
			entryQueueTail = previous;
		} else {
			next.previous = previous;
		}
	}

