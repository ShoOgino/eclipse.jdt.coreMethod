	public void parse(boolean pauseAfterFullyQualifiedName) {
		if (!this.parsingPaused) {
			// fully qualified name
			parseFullyQualifiedName();
			if (pauseAfterFullyQualifiedName) {
				this.parsingPaused = true;
				return;
			}
		}
		if (isPackage())
			return;
		consumeTopLevelType();
		parseSecondaryType();
		parseInnerType();
		
		if (this.scanner.isAtParametersStart()) {
			if (this.scanner.isAtTypeParameterStart())	{		
				// generic type
				parseGenericType();
				// local type in generic type
				parseInnerType();
			} else if (this.scanner.isAtTypeStart() || this.scanner.isAtWildCardStart())
				// parameterized type
				parseParameterizedType(null/*top level type*/);
			else if (this.scanner.isAtRawTypeEnd())
				// raw type
				parseRawType();
		} else {
			// non-generic type
			consumeNonGenericType();
		}
		
		consumeType();
		
		if (this.scanner.isAtFieldOrMethodStart()) {
			switch (this.scanner.nextToken()) {
 				case Scanner.FIELD:
 					consumeField(this.scanner.getTokenSource());
 					return;
 				case Scanner.METHOD:
 					parseMethod();
 					if (this.scanner.isAtLocalVariableStart()) {
 						parseLocalVariable();
 					}
 					break;
 				default:
 					malformedKey();
 					return;
			}
		} else if (this.scanner.isAtTypeVariableStart()) {
			parseTypeVariable();
		}
	}

