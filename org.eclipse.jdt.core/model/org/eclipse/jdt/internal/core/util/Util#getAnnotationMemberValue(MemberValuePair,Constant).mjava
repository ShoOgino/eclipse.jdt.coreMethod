	/*
	 * Creates a member value from the given constant, and sets the valueKind on the given memberValuePair
	 */
	public static Object getAnnotationMemberValue(MemberValuePair memberValuePair, Constant constant) {
		switch (constant.typeID()) {
			case TypeIds.T_int : 
				memberValuePair.valueKind = IMemberValuePair.K_INT;
				return new Integer(constant.intValue());
			case TypeIds.T_byte : 
				memberValuePair.valueKind = IMemberValuePair.K_BYTE;
				return new Byte(constant.byteValue());
			case TypeIds.T_short : 
				memberValuePair.valueKind = IMemberValuePair.K_SHORT;
				return new Short(constant.shortValue());
			case TypeIds.T_char : 
				memberValuePair.valueKind = IMemberValuePair.K_CHAR;
				return new Character(constant.charValue());
			case TypeIds.T_float : 
				memberValuePair.valueKind = IMemberValuePair.K_FLOAT;
				return new Float(constant.floatValue());
			case TypeIds.T_double : 
				memberValuePair.valueKind = IMemberValuePair.K_DOUBLE;
				return new Double(constant.doubleValue());
			case TypeIds.T_boolean : 
				memberValuePair.valueKind = IMemberValuePair.K_BOOLEAN;
				return Boolean.valueOf(constant.booleanValue());
			case TypeIds.T_long : 
				memberValuePair.valueKind = IMemberValuePair.K_LONG;
				return new Long(constant.longValue());
			case TypeIds.T_JavaLangString : 
				memberValuePair.valueKind = IMemberValuePair.K_STRING;
				return constant.stringValue();
			default:
				memberValuePair.valueKind = IMemberValuePair.K_UNKNOWN;
				return null;
		}
	}

