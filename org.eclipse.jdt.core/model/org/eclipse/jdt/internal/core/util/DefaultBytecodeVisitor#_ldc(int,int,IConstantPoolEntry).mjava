	/**
	 * @see IBytecodeVisitor#_ldc(int, int, IConstantPoolEntry)
	 */
	public void _ldc(int pc, int index, IConstantPoolEntry constantPoolEntry) {
		dumpPcNumber(pc);
		switch (constantPoolEntry.getKind()) {
			case IConstantPoolConstant.CONSTANT_Float :
				buffer.append(Util.bind("classformat.ldc_w_float", //$NON-NLS-1$
					new String[] {
						OpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.LDC],
						Integer.toString(index),
						Float.toString(constantPoolEntry.getFloatValue())
					}));
				break;
			case IConstantPoolConstant.CONSTANT_Integer :
				buffer.append(Util.bind("classformat.ldc_w_integer", //$NON-NLS-1$
					new String[] {
						OpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.LDC],
						Integer.toString(index),
						Integer.toString(constantPoolEntry.getIntegerValue())
					}));
				break;
			case IConstantPoolConstant.CONSTANT_String :
				buffer.append(Util.bind("classformat.ldc_w_string", //$NON-NLS-1$
					new String[] {
						OpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.LDC],
						Integer.toString(index),
						constantPoolEntry.getStringValue()
					}));
				break;
			case IConstantPoolConstant.CONSTANT_Class :
				buffer.append(Util.bind("classformat.ldc_w_class", //$NON-NLS-1$
					new String[] {
						OpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.LDC],
						Integer.toString(index),
						returnConstantClassName(constantPoolEntry)
					}));
		}
		writeNewLine();
	}

