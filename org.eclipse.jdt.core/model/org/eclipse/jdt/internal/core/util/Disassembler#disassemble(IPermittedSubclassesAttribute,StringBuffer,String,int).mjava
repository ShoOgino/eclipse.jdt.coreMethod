	private void disassemble(IPermittedSubclassesAttribute permittedSubclassesAttribute, StringBuffer buffer, String lineSeparator, int tabNumber) {
		writeNewLine(buffer, lineSeparator, tabNumber);
		writeNewLine(buffer, lineSeparator, tabNumber); // additional line
		buffer.append(Messages.disassembler_permittedsubclasses);
		writeNewLine(buffer, lineSeparator, tabNumber + 1);
		IPermittedSubclassesAttributeEntry[] entries = permittedSubclassesAttribute.getPermittedSubclassAttributesEntries();
		int length = entries.length;
		int permittedSubclassesIndex;
		IPermittedSubclassesAttributeEntry entry;
		for (int i = 0; i < length; i++) {
			if (i != 0) {
				buffer.append(Messages.disassembler_comma);
				writeNewLine(buffer, lineSeparator, tabNumber + 1);
			}
			entry = entries[i];
			permittedSubclassesIndex = entry.gePermittedSubclassIndex();
			buffer
				.append(Messages.disassembler_constantpoolindex)
				.append(permittedSubclassesIndex);
			if (permittedSubclassesIndex != 0) {
				buffer
					.append(Messages.disassembler_space)
					.append(entry.getPermittedSubclassName());
			}
		}
	}

