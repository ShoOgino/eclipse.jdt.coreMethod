	/**
	 * @see IBytecodeVisitor#_invokeinterface(int, int, byte, IConstantPoolEntry)
	 */
	public void _invokeinterface(
		int pc,
		int index,
		byte nargs,
		IConstantPoolEntry constantInterfaceMethodref) {

		dumpPcNumber(pc);
		if (isCompact()) {
			buffer.append(Messages.bind(Messages.classformat_invokeinterface_compact, (new String[] {
				OpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKEINTERFACE],
				Integer.toString(index),
				Integer.toString(nargs),
				Util.toString(
					constantInterfaceMethodref.getClassName(),
					constantInterfaceMethodref.getMethodName(),
					constantInterfaceMethodref.getMethodDescriptor(),
					true)
			})));
		} else {
			buffer.append(Messages.bind(Messages.classformat_invokeinterface, (new String[] {
					OpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKEINTERFACE],
					Integer.toString(index),
					Integer.toString(nargs),
					returnDeclaringClassName(constantInterfaceMethodref),
					new String(constantInterfaceMethodref.getMethodName()),
					new String(constantInterfaceMethodref.getMethodDescriptor()),
			})));
		}
		writeNewLine();
	}

