	public void consumeWildCard(int kind) {
		switch (kind) {
			case Wildcard.EXTENDS:
			case Wildcard.SUPER:
				BindingKeyResolver boundResolver = (BindingKeyResolver) this.types.get(0);
				this.compilerBinding = this.environment.createWildcard((ReferenceBinding) this.wildcardGenericType, this.wildcardRank, (TypeBinding) boundResolver.compilerBinding, null /*no extra bound*/, kind);
				break;
			case Wildcard.UNBOUND:
				this.compilerBinding = this.environment.createWildcard((ReferenceBinding) this.wildcardGenericType, rank++, null/*no bound*/, null /*no extra bound*/, kind);
				break;
		}
	}

