	/*
	 * Adds the given char array to this set.
	 * If a char array that is equals to the given char array already exists, do nothing.
	 * Returns the existing char array or the new char array if not found.
	 */
	public char[] add(char[] array) {
		cleanupGarbageCollectedValues();
		int index = (CharOperation.hashCode(array) & 0x7FFFFFFF) % this.values.length;
		HashableWeakReference currentValue;
		while ((currentValue = this.values[index]) != null) {
			char[] referent;
			if (CharOperation.equals(array, referent = (char[]) currentValue.get())) {
				return referent;
			}
			index = (index + 1) % this.values.length;
		}
		this.values[index] = new HashableWeakReference(array, this.referenceQueue);

		// assumes the threshold is never equal to the size of the table
		if (++this.elementSize > this.threshold)
			rehash();
		
		return array;
	}

