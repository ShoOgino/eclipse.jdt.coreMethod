		public synchronized String printStats() {
			int oldestCounter = getOldestTimestampCounter();
			if (oldestCounter == 0) {
				return "No elements in cache"; //$NON-NLS-1$
			}
			long currentTime = System.currentTimeMillis();
			StringBuffer buffer = new StringBuffer();
			buffer.append("Oldest element ("); //$NON-NLS-1$
			buffer.append(getAge(oldestCounter, currentTime));
			buffer.append(" old):\n"); //$NON-NLS-1$
			Object element = getOldestElement();
			if (element instanceof JavaElement) {
				buffer.append(((JavaElement) element).toStringWithAncestors());
				buffer.append('\n');
			}
			buffer.append('\n');
			
			int lastCount = 0;
			int increment = LRUCache.this.currentSpace / 5;
			int elementCounter = 0;
			LRUCacheEntry entry = LRUCache.this.entryQueueTail;
			while (entry != null) {
				if (++elementCounter - lastCount >= increment) {
					buffer.append(elementCounter);
					buffer.append(" elements are at least "); //$NON-NLS-1$
					buffer.append(getAge(entry.timestamp, currentTime));
					buffer.append(" old\n"); //$NON-NLS-1$
					lastCount = elementCounter;
				}
				entry = entry.previous;
			}
			buffer.append(LRUCache.this.currentSpace);
			buffer.append(" elements are at least "); //$NON-NLS-1$
			buffer.append(getAge(LRUCache.this.entryQueue.timestamp, currentTime));
			buffer.append(" old"); //$NON-NLS-1$
			
			return buffer.toString();
		}

