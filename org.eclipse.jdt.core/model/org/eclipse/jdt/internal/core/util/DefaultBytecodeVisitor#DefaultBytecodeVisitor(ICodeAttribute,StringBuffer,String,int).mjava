	public DefaultBytecodeVisitor(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber) {
		ILocalVariableAttribute localVariableAttribute = codeAttribute.getLocalVariableAttribute();
		int localVariableAttributeLength = localVariableAttribute == null ? 0 : localVariableAttribute.getLocalVariableTableLength();
		if (localVariableAttributeLength != 0) {
			this.hashMap = new HashMap(localVariableAttributeLength);
			ILocalVariableTableEntry[] localVariableTableEntries = localVariableAttribute.getLocalVariableTable();
			for (int i = 0; i < localVariableAttributeLength; i++) {
				ILocalVariableTableEntry localVariableTableEntry = localVariableTableEntries[i];
				switch(i) {
					case 0 :
					case 1 :
					case 2 :
					case 3 :
						this.hashMap.put(INDEXES[i], new String(localVariableTableEntry.getName()));
						break;
					default: 
						this.hashMap.put(new Integer(localVariableTableEntry.getIndex()), new String(localVariableTableEntry.getName()));
				}
			}
		} else {
			this.hashMap = null;
		}
		this.buffer = buffer;
		this.lineSeparator = lineSeparator;
		this.tabNumber = tabNumber + 1;
		long codeLength = codeAttribute.getCodeLength();
		this.digitNumberForPC = Long.toString(codeLength).length();
	}

