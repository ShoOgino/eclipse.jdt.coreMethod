	/**
	 * Copies the resource of this package fragment root to the destination path as specified by
	 * <code>IResource.copy(IPath, int, IProgressMonitor)</code> but excluding nested source folders.
	 * <p>
	 * If specified, update the classpath of the destination's project. If a non <code>null</code> 
	 * sibling is specified, a copy of this root's classpath entry is inserted before the sibling on the 
	 * destination project's raw classpath. If <code>null></code> is specified, the classpath entry 
	 * is added at the end of the raw classpath.
	 * </p>
	 * 
	 * @param destination the destination path
	 * @param updateFlags bit-wise or of update flag constants
	 *   (<code>FORCE</code> and <code>SHALLOW</code>)
	 * @param updateClasspath whether the classpath of the destination project should be updated
	 * @param sibling the classpath entry before which a copy of the classpath entry should be inserted
	 * @param monitor a progress monitor
	 * 
	 * @exception JavaModelException if this root could not be copied. Reasons include:
	 * <ul>
	 * <li> This root does not exist (ELEMENT_DOES_NOT_EXIST)</li>
	 * <li> A <code>CoreException</code> occurred while copying the resource
	 * <li> This root is external (INVALID_RESOURCE_TYPE)
	 * <li> The destination is not in a Java project and <code>updateClasspath</code> was specified
	 *        (INVALID_PROJECT)
	 * <li> The sibling is not a classpath entry on the destination project's raw classpath (INVALID_SIBLING)
	 * <li> The same classpath entry already exists on the destination project's classpath 
	 *        (NAME_COLLISION) and <code>updateFlags</code> has not been specified 
	 * 	   as <code>FORCE</code>
	 * </ul>
	 * @see IResource#copy
	 * @since 2.1
	 */
	public void copy(IPath destination, int updateFlags, boolean updateClasspath, IClasspathEntry sibling, IProgressMonitor monitor) throws JavaModelException;

