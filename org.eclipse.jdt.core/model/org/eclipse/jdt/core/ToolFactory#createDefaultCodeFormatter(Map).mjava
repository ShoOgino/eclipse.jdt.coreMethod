	/**
	 * Create an instance of the built-in code formatter. A code formatter implementation can be contributed via the 
	 * extension point "org.eclipse.jdt.core.codeFormatter". If unable to find a registered extension, the factory will 
	 * default to using the default code formatter.
	 * 
	 * @param options - the options map to use for formatting with the default code formatter. Recognized options
	 * 	are documented on <code>JavaCore#getDefaultOptions()</code>. If set to <code>null</code>, then use 
	 * 	the current settings from <code>JavaCore#getOptions</code>.
	 * @return an instance of the built-in code formatter
	 * @see ICodeFormatter
	 * @see ToolFactory#createCodeFormatter()
	 * @see JavaCore#getOptions()
	 * @deprecated - use #createCodeFormatter(Map) instead
	 */
	public static ICodeFormatter createDefaultCodeFormatter(Map options){
		final String NEW_CODE_FORMATTER_ACTIVATION = JavaCore.PLUGIN_ID + ".newformatter.activation"; //$NON-NLS-1$
	
		Object newFormatterActivation = JavaCore.getOption(NEW_CODE_FORMATTER_ACTIVATION);
		
		ICodeFormatter codeFormatter;
		if (JavaCore.ENABLED.equals(newFormatterActivation)) {
			class CompatibleCodeFormatter extends DefaultCodeFormatter implements ICodeFormatter {
				CompatibleCodeFormatter(Map settings) {
					super(settings);
				}
				/**
				 * @see org.eclipse.jdt.core.ICodeFormatter#format(String, int, int[], String)
				 */
				public String format(
					String source,
					int indentationLevel,
					int[] positions,
					String lineSeparator) {
					
					TextEdit textEdit = probeFormatting(source, indentationLevel, lineSeparator, 0, source.length());
					if (textEdit == null) {
						return source;
					} else {
						Document document = new Document(source);
						try {
							textEdit.apply(document, TextEdit.UPDATE_REGIONS);
						} catch (MalformedTreeException e) {
							e.printStackTrace();
						} catch (BadLocationException e) {
							e.printStackTrace();
						}
						return document.get();
					}
				}			
			}
			codeFormatter = new CompatibleCodeFormatter(options);
		} else {
			if (options == null) options = JavaCore.getOptions();
			codeFormatter = new org.eclipse.jdt.internal.formatter.CodeFormatter(options);
		}
		return codeFormatter;
	}

