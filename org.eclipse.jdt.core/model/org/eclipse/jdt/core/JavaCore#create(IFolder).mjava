	/**
	 * Returns the package fragment or package fragment root corresponding to the given folder, or
	 * <code>null</code> if unable to associate the given folder with a Java element.
	 * <p>
	 * Note that a package fragment root is returned rather than a default package.
	 * <p>
	 * Creating a Java element has the side effect of creating and opening all of the
	 * element's parents if they are not yet open.
	 */
	public static IJavaElement create(IFolder folder) {
		if (folder == null) {
			return null;
		}
		if (folder.getName().indexOf('.') < 0) {
			JavaProject project = (JavaProject) create(folder.getProject());
			if (project == null)
				return null;
			IJavaElement element = determineIfOnClasspath(folder, project);
			try {
				IPath outputLocation = project.getOutputLocation();
				if (outputLocation == null)
					return null;
				if (outputLocation.isPrefixOf(folder.getFullPath())) {
					if (project.getClasspathEntryFor(outputLocation) != null) {
						// if the output location is the same as an input location, return the element
						return element;
					} else {
						// otherwise, do not create elements for folders in the output location
						return null;
					}
				} else {
					return element;
				}
			} catch (JavaModelException e) {
				return null;
			}
		}
		return null;
	}

