/**
 * Returns a method signature with any capture information removed. 
 * Returns the method signature itself if no capture information is
 * present.
 * <p>
 * For example:
 * <pre>
 * <code>
 * removeCaptureFromMethod("LTest<!+Ljava.lang.Throwable;>;")
 * will return: "LTest<+Ljava.lang.Throwable;>;"
 * </code>
 * </pre>
 * </p>
 *
 * @param captureSignature the signature which may have been captured
 * @return new signature without capture information or siganture itself
 * 	if no specific capture information was there
 * @exception NullPointerException if <code>captureSignature</code> is null
 * @since 3.1
 */
public static String removeCaptureFromMethod(String captureSignature) {
		char[] array = captureSignature.toCharArray();
		char[] result = removeCaptureFromMethod(array);
		if (array == result) return captureSignature;
		return new String(result);
}

