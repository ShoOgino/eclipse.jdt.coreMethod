	/**
	 * Saves any changes in this element's buffer to its underlying resource
	 * via a workspace resource operation. This has no effect if the element has no underlying
	 * buffer, or if there are no unsaved changed in the buffer.
	 * <p>
	 * The <code>force</code> parameter controls how this method deals with
	 * cases where the workbench is not completely in sync with the local file system.
	 * If <code>false</code> is specified, this method will only attempt
	 * to overwrite a corresponding file in the local file system provided
	 * it is in sync with the workbench. This option ensures there is no 
	 * unintended data loss; it is the recommended setting.
	 * However, if <code>true</code> is specified, an attempt will be made
	 * to write a corresponding file in the local file system, 
	 * overwriting any existing one if need be.
	 * In either case, if this method succeeds, the resource will be marked 
	 * as being local (even if it wasn't before).
	 * <p>
	 * As a result of this operation, the element is consistent with its underlying 
	 * resource or buffer. 
	 *
	 * @exception JavaModelException if an error occurs accessing the contents
	 * 		of its underlying resource. Reasons include:
	 * <ul>
	 *  <li>This Java element does not exist (ELEMENT_DOES_NOT_EXIST)</li>
	 *  <li>This Java element is read-only (READ_ONLY)</li>
	 * </ul>
	 */
	public void save(IProgressMonitor progress, boolean force)
		throws JavaModelException;

