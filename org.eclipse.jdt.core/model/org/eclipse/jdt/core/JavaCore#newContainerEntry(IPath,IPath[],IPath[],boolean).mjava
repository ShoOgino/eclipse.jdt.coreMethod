	/**
	 * Creates and returns a new classpath entry of kind <code>CPE_CONTAINER</code>
	 * for the given path. This method is fully equivalent to calling
	 * {@link #newContainerEntry(IPath, IPath[], IPath[], IClasspathAttribute[], boolean)
	 * newContainerEntry(containerPath, accessibleFiles, nonAccessibleFiles, new IClasspathAttribute[0], isExported)}. 
	 * 
	 * @param containerPath the path identifying the container, it must be formed of at least
	 * 	one segment (ID+hints)
	 * @param accessibleFiles the possibly empty list of accessible files patterns
	 *    represented as relative paths
	 * @param nonAccessibleFiles the possibly empty list of non accessible files patterns
	 *    represented as relative paths
	 * @param isExported a boolean indicating whether this entry is contributed to dependent
	 *    projects in addition to the output location
	 * @return a new container classpath entry
	 * 
	 * @see JavaCore#getClasspathContainer(IPath, IJavaProject)
	 * @see JavaCore#setClasspathContainer(IPath, IJavaProject[], IClasspathContainer[], IProgressMonitor)
	 * @since 3.1
	 * @deprecated use newContainerEntry(containerPath, accessibleFiles, nonAccessibleFiles, new IClasspathAttribute[0], isExported) instead
	 */
	// TODO (jerome) delete before 3.1 M6
	public static IClasspathEntry newContainerEntry(
			IPath containerPath, 
			IPath[] accessibleFiles, 
			IPath[] nonAccessibleFiles, 
			boolean isExported) {
		
		return newContainerEntry(containerPath, accessibleFiles, nonAccessibleFiles, ClasspathEntry.NO_EXTRA_ATTRIBUTES, isExported);
	}

