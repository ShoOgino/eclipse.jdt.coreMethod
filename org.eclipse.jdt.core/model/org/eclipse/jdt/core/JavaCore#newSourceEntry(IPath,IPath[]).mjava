	/**
	 * Creates and returns a new classpath entry of kind <code>CPE_SOURCE</code> for the project's source folder 
	 * identified by the given absolute path. This specifies that all package fragments within the root will 
	 * have children of type <code>ICompilationUnit</code>.
	 * <p>
	 * The source folder is referred to using an absolute path relative to the workspace root, e.g. <code>"/Project/src"</code>.
	 * <p>
	 * A source entry is used to set up the internal source layout of a project, and cannot be used out of the
	 * context of the containing project (a source entry "Proj1/src" cannot be used on the classpath of Proj2).
	 * TODO: should mention mount points at this stage
	 * <p>
	 * A particular source entry cannot be exported to other projects. All sources/binaries inside a project are
	 * contributed as a whole through a project entry (see <code>JavaCore.newProjectEntry</code>).
	 * <p>
	 * Exclusion patterns can be specified to cause portions of the resource tree to be excluded from this source folder.
	 * If <code>null</code> is passed, then the source folder will default to only exclude ".class" files (which is the minimal
	 * exclusion pattern). Empty patterns will automatically be discarded (after trimmed). Exclusion patterns are source
	 * folder relative paths, and can contain '**', '*' or '?' wildcards (see <code>IClasspathEntry#getExclusionPatterns()</code>).
	 * <p>
	 * In case no resource need to be excluded from the source folder, the factory method <code>JavaCore.newSourceEntry(IPath)</code>
	 * can be used instead.
	 *
	 * @param path the absolute path of a source folder
	 * @param exclusionPatterns the resource path patterns to exclude
	 * @return a new source classpath entry
	 * 
	 * @see #newSourceEntry(org.eclipse.core.runtime.IPath)
	 * @see IClasspathEntry#getExclusionPatterns
	 * 
	 * @since 2.1
	 */
	public static IClasspathEntry newSourceEntry(IPath path, IPath[] exclusionPatterns) {
		
		Assert.isTrue(path.isAbsolute(), Util.bind("classpath.needAbsolutePath" )); //$NON-NLS-1$
		Assert.isTrue(exclusionPatterns != null, Util.bind("classpath.nullExclusionPattern" )); //$NON-NLS-1$

		return new ClasspathEntry(
			IPackageFragmentRoot.K_SOURCE,
			IClasspathEntry.CPE_SOURCE,
			path,
			exclusionPatterns,
			null, // source attachment
			null, // source attachment root
			false);
	}

