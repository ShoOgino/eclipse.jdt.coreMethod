    /**
     * Binds a classpath container to a <code>IClasspathContainer</code> for a given project.
     * The resolved container can be queried for the set of classpath entries the container maps to.
     * It may returns <code>null</code> if this resolver was unable to resolve the container ID.
     * <p>
     * A container is identified by a container path, which must be formed of two segments.
     * The first segment is used as a unique identifier (which this initializer did register onto), and
     * the second segment is a clue that can be used by the initializer to perform.
     * <p>
     * @param containerPath - a two-segment path (ID/clue) identifying the container that needs 
     * 	to be resolved
     * @param project - the Java project in which context the container is to be resolved.
     *    This allows generic containers to be bound with project specific values.
     * 
     * @see JavaCore#setClasspathContainer
     * @see IClasspathContainer
     */
    public abstract void initialize(IPath containerPath, IJavaProject project) throws CoreException;

