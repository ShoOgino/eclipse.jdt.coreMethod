	/**
	 * Notification of a classpath container change. This notification must be performed
	 * by client code which did register some classpath container resolvers, whenever 
	 * changes in container need to be reflected onto the JavaModel.
	 * <p>
	 * In reaction to this notification, the JavaModel will be updated to reflect the new
	 * state of the updated container. Note that the update can be scoped to either
	 * a given project or the entire Java model according to the changeScope argument.
	 * This is symetric to container resolution which enables project specific resolution.
	 * <p>
	 * This functionality cannot be used while the resource tree is locked.
	 * <p>
	 * Classpath container states are persisted locally to the workspace, and 
	 * are preserved from session to session.
	 * <p>
	 * When notifying a container change, the corresponding container resolver should
	 * in turn expect to be activated so as to resolve the updated container path.
	 * 
	 * @param containerPath - the name of the container which is being updated
	 * @param changeScope - the scope of the change, either a specific project (IJavaProject)
	 *     or the entire JavaModel (IJavaModel).
	 * @param monitor a monitor to report progress
	 * 
	 * @see #getResolvedClasspathContainer(IPath, IJavaProject)
	 * @since 2.0
	 */
	public void classpathContainerChanged(IPath containerPath, IJavaElement changeScope, IProgressMonitor monitor){

		//TOFIX
	}

