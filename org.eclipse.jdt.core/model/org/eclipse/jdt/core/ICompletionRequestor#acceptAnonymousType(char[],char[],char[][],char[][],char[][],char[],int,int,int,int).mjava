/**
 * Code assist notification of an anonymous type declaration completion.
 * @param superTypePackageName Name of the package that contains the super type of this 
 * 		new anonymous type declaration .
 * 
 * @param superTypeName Name of the super type of this new anonymous type declaration.
 * 
 * @param parameterPackageNames Names of the packages in which the parameter types are declared.
 *    	Should contain as many elements as parameterTypeNames.
 * 
 * @param parameterTypeNames Names of the parameters types. 
 * 		Should contain as many elements as parameterPackageNames.
 * 
 * @param completionName The completion for the anonymous type declaration.
 * 		Can include zero, one or two brackets. If the closing bracket is included,
 * 		then the cursor should be placed before it.
 * 
 * @param modifiers The modifiers of the constructor.
 * 
 * @param completionStart The start position of insertion of the name of this new anonymous type declaration.
 * 
 * @param completionEnd The end position of insertion of the name of this new anonymous type declaration.
 * 
 * @param relevance The relevance of the completion proposal
 * 		It is a positive integer which are used for determine if this proposal is more relevant than another proposal.
 * 		This value can only be used for compare relevance. A proposal is more relevant than another if his relevance
 * 		value is higher.
 * 
 * NOTE - All package and type names are presented in their readable form:
 *    Package names are in the form "a.b.c".
 *    Base types are in the form "int" or "boolean".
 *    Array types are in the qualified form "M[]" or "int[]".
 *    Nested type names are in the qualified form "A.M".
 *    The default package is represented by an empty array.
 *
 * NOTE: parameter names can be retrieved from the source model after the user selects a specific method.
 */
void acceptAnonymousType(
	char[] superTypePackageName,
	char[] superTypeName,
	char[][] parameterPackageNames,
	char[][] parameterTypeNames,
	char[][] parameterNames,
	char[] completionName,
	int modifiers,
	int completionStart,
	int completionEnd,
	int relevance);

