	/**
	 * Finds the Java element corresponding to the given binding key. Elements are 
	 * looked up using this project's classpath. The first element corresponding to 
	 * the given key on this project's classpath is returned.
	 * Returns <code>null</code> if the element is not found. 
	 * <p>Possible elements are:
	 * <ul>
	 * <li>{@link IPackageFragment} for a binding key from an 
	 * 		{@link IPackageBinding}</li>
	 * <li>{@link IType} for a binding key from an {@link ITypeBinding}</li>
	 * <li>{@link IMethod} for a binding key from an {@link IMethodBinding}</li>
	 * <li>{@link IField} for a binding key from an {@link IVariableBinding} 
	 * 		representing a {@link IVariableBinding#isField() field}</li>
	 * <li>{@link ITypeParameter} for a binding key from an {@link ITypeBinding} 
	 * 		representing a {@link ITypeBinding#isTypeVariable() type 
	 * 		variable}</li>
	 * <li>{@link IAnnotation} for a binding key from an 
	 * 		{@link IAnnotationBinding}</li>
	 * </ul></p>
	 * <p>Note if two methods correspond to the binding key because they have 
	 * the same simple parameter types (e.g. <code>X.foo(p1.Y)</code> and 
	 * <code>X.foo(p2.Y)</code>), then the first one is returned.</p>
	 * 
	 * @param bindingKey the given binding key
	 * @param owner the owner of the returned element's compilation unit, 
	 * 		or <code>null</code> if the default working copy owner must be 
	 * 		used
	 * @exception JavaModelException if this project does not exist or if an
	 *		exception occurs while accessing its corresponding resource
	 * @return the Java element corresponding to the given key,
	 * 		or <code>null</code> if no such Java element is found
	 * @since 3.4
	 */
	IJavaElement findElement(String bindingKey, WorkingCopyOwner owner) throws JavaModelException;

