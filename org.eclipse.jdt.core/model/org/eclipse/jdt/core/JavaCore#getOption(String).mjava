	/**
	 * Helper method for returning one option value only. Equivalent to <code>(String)JavaCore.getOptions().get(optionName)</code>
	 * Note that it may answer <code>null</code> if this option does not exist.
	 * <p>
	 * For a complete description of the configurable options, see <code>getDefaultOptions</code>.
	 * </p>
	 * 
	 * @param optionName the name of an option
	 * @return the String value of a given option
	 * @see JavaCore#getDefaultOptions()
	 * @since 2.0
	 */
	public static String getOption(String optionName) {
		
		if (CORE_ENCODING.equals(optionName)){
			return ResourcesPlugin.getEncoding();
		}
		// backward compatibility
		if (COMPILER_PB_INVALID_IMPORT.equals(optionName)
				|| COMPILER_PB_UNREACHABLE_CODE.equals(optionName)) {
			return ERROR;
		}
		String propertyName = optionName;
		// bug 45112 backward compatibility.  TODO (frederic) remove after 3.0-M6
		if (OLD_COMPILER_PB_INVALID_ANNOTATION.equals(optionName)) {
			propertyName = COMPILER_PB_INVALID_JAVADOC;
		}
		else if (OLD_COMPILER_PB_MISSING_ANNOTATION.equals(optionName)) {
			propertyName = COMPILER_PB_MISSING_JAVADOC;
		}
		// end bug 45112
		if (JavaModelManager.OptionNames.contains(propertyName)){
			Preferences preferences = getPlugin().getPluginPreferences();
			return preferences.getString(propertyName).trim();
		}
		return null;
	}

