	/**
	 * Sets whether a proposal with a required proposal
	 * of the given kind is allowed.
	 * 
	 * @param completionProposalKind one of the kind constants declared
	 * on <code>CompletionProposal</code>
	 * @param allow <code>true</code> if a proposal with a required proposal
	 * of the given kind is allowed by this requestor, and <code>false</code> 
	 * if it isn't of interest
	 * @see #isAllowingRequiredProposals(int)
	 * @see CompletionProposal#getKind()
	 * @see CompletionProposal#getRequiredProposals()
	 * 
	 * @since 3.3
	 */
	public void setAllowsRequiredProposals(int completionProposalKind, boolean allow) {
		if (completionProposalKind < CompletionProposal.FIRST_KIND
			|| completionProposalKind > CompletionProposal.LAST_KIND) {
				throw new IllegalArgumentException("Unknown kind of completion proposal: "+completionProposalKind); //$NON-NLS-1$
		}
		if (allow) {
			this.requiredProposalAllowSet |= (1 << completionProposalKind);
		} else {
			this.requiredProposalAllowSet &= ~(1 << completionProposalKind);
		}
	}

