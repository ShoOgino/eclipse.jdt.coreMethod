/**
 * Returns the AST created from the current state of the working copy.
 * Creates one if none exists yet.
 * Returns <code>null</code> if the current state of the working copy
 * doesn't allow the AST to be created (e.g. if the working copy's content 
 * cannot be parsed).
 * 
 * @param astLevel the level of AST requested
 * @param resolveBindings whether the bindings in the returned AST should be resolved
 * @return the AST created from the current state of the working copy,
 *   or <code>null</code> if none could be created
 * @exception JavaModelException  if the contents of the working copy
 *		cannot be accessed. Reasons include:
 * <ul>
 * <li> The working copy does not exist (ELEMENT_DOES_NOT_EXIST)</li>
 * </ul>
 */
// TODO do we really want individual astLevel for participants ? or should they implicitly get the one from ongoing reconcile operation ?
public org.eclipse.jdt.core.dom.CompilationUnit getAST(int astLevel, boolean resolveBindings) throws JavaModelException {
	if (this.operation.astLevel < astLevel) {
		this.operation.astLevel = astLevel;
		this.operation.ast = null; // force the AST to be re-created since the ast level was insufficient the first time
	}
	if (!this.operation.resolveBindings & resolveBindings) {
		this.operation.resolveBindings = true;
		this.operation.ast = null; // force the AST to be re-created since bindings were not computed the first time
	}
	org.eclipse.jdt.core.dom.CompilationUnit result = this.operation.makeConsistent(this.workingCopy, null/*don't report problems to the working copy's problem requestor*/);
	if (result == null)
		result = this.operation.createAST(this.workingCopy);
	return result;
}

