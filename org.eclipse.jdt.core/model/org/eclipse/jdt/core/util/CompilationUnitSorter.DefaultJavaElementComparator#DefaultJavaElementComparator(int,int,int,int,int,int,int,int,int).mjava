		/**
		 * This constructor is used to specify customized values for the different categories. They are a convinient way to
		 * distinguish AST nodes. The lower a value is, the higher the node will appear in the sorted compilation unit.
		 * 
		 * There are nine categories:
		 * <ol>
		 * <li>static types</li>
		 * <li>static fields</li>
		 * <li>static initializers</li>
		 * <li>static methods</li>
		 * <li>types</li>
		 * <li>fields</li>
		 * <li>initializers</li>
		 * <li>constructors</li>
		 * <li>methods</li>
		 * </ol>
		 * 
		 * @param staticTypeCategory the given value for the static type category
		 * @param staticFieldCategory the given value for the static field category
		 * @param staticInitializerCategory the given value for the static initializer category
		 * @param staticMethodCategory the given value for static the method category
		 * @param typeCategory the given value for the type category
		 * @param fieldCategory the given value for field category
		 * @param initializerCategory the given value for initializer category
		 * @param constructorCategory the given value for constructor category
		 * @param methodCategory the given value for method category
		 */
		public DefaultJavaElementComparator(
			int staticTypeCategory,
			int staticFieldCategory,
			int staticInitializerCategory,
			int staticMethodCategory,
			int typeCategory,
			int fieldCategory,
			int initializerCategory,
			int constructorCategory,
			int methodCategory) {
				this.categories = new int[] {
					staticTypeCategory,
					staticFieldCategory,
					staticInitializerCategory,
					staticMethodCategory,
					typeCategory,
					fieldCategory,
					initializerCategory,
					constructorCategory,
					methodCategory
				};
			this.collator = Collator.getInstance();
		}

