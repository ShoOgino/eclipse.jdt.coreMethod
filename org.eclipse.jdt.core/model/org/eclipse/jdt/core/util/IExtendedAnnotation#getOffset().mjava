	/**
	 * Answer back the offset.
	 * 
	 * For a target_type value equals to:
	 * <table border="1">
	 * <tr>
	 * <th>target_type</th>
	 * <th>offset description</th>
	 * </tr>
	 * <tr>
	 * <td>0x43 (INSTANCE_OF), 0x44 (NEW), 0x45 (CONSTRUCTOR_REFERENCE), 0x46 (METHOD_REFERENCE)</td>
	 * <td>The offset within the bytecodes of the <code>instanceof</code> bytecode for INSTANCE_OF,
	 * the <code>new</code> bytecode for NEW and the implementing instruction for either a
	 * CONSTRUCTOR_REFERENCE or METHOD_REFERENCE.</td>
	 * </tr>
	 * <tr>
	 * <td>0x47 (CAST), 0x48 (CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT), 0x49 (METHOD_INVOCATION_TYPE_ARGUMENT),
	 * 0x4A (CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT), 0x4B (METHOD_REFERENCE_TYPE_ARGUMENT)</td>
	 * <td>The offset within the bytecodes of the <code>new</code> bytecode for constructor call, or the
	 * relevant bytecode for method invocation or method reference. For CAST the offset may
	 * point to the <code>checkcast</code> or another instruction as it is possible the cast
	 * may have been discarded by the compiler if it were a no-op.</td>
	 * </tr>
	 * </table>
	 * 
	 * 
	 * @return the offset
	 */
	int getOffset();

