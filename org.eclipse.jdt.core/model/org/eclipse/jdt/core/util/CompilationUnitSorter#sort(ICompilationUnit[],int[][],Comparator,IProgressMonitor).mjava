	/**
	 * This method is used to sort elements within each compilation unit inside this compilationUnits array.
	 * The positions are mapped to the new positions once the sorting is done. This should be used to
	 * update the positions of markers within compilation units.
	 * The sizes of positions and compilationUnits array have to be the same.
	 * 
	 * @param compilationUnits compilation units to process
	 * @param positions positions to map
	 * @param comparator the comparator to use for the sorting
	 * @param monitor the given progress monitor
	 * 
	 * @exception CoreException a Core exception is thrown if one of the supplied compilation units is <code>null</code></li>,
	 * one of the supplied elements are not an instance of IWorkingCopy, or the size of the given positions and of the given
	 * compilationUnits arrays are not equal.
	 * 
	 * @since 2.1
	 */
	public static void sort(ICompilationUnit[] compilationUnits, int[][] positions, Comparator comparator, IProgressMonitor monitor) throws CoreException {
		if (comparator == null || compilationUnits == null) {
			return;
		}
		SortElementsOperation operation = new SortElementsOperation(compilationUnits , positions, comparator);
		JavaCore.run(operation, monitor);
	}	

