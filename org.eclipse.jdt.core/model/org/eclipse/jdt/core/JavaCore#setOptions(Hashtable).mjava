	/**
	 * Sets the current table of options. All and only the options explicitly included in the given table 
	 * are remembered; all previous option settings are forgotten, including ones not explicitly
	 * mentioned.
	 * <p>
	 * For a complete description of the configurable options, see <code>getDefaultOptions</code>.
	 * </p>
	 * 
	 * @param newOptions the new options (key type: <code>String</code>; value type: <code>String</code>),
	 *   or <code>null</code> to reset all options to their default values
	 * @see JavaCore#getDefaultOptions()
	 *///TODO should use a Map for 3.0
	public static void setOptions(Hashtable newOptions) {
		
		// see #initializeDefaultPluginPreferences() for changing default settings
		Preferences preferences = getPlugin().getPluginPreferences();

		if (newOptions == null){
			newOptions = JavaCore.getDefaultOptions();
		}
		Enumeration keys = newOptions.keys();
		while (keys.hasMoreElements()){
			String key = (String)keys.nextElement();
			// TODO (frederic) remove when jdt-ui will change to new values
			String newKey = key;
			if (key.equals(OLD_COMPILER_PB_INVALID_ANNOTATION)) {
				newKey = COMPILER_PB_INVALID_JAVADOC;
			}
			if (key.equals(OLD_COMPILER_PB_MISSING_ANNOTATION)) {
				newKey = COMPILER_PB_MISSING_JAVADOC;
			}
			// end to do
			if (!JavaModelManager.OptionNames.contains(newKey)) continue; // unrecognized option
			if (newKey.equals(CORE_ENCODING)) continue; // skipped, contributed by resource prefs
			preferences.setValue(newKey, (String)newOptions.get(key));
		}
		
		// persist options
		getPlugin().savePluginPreferences();
	}

