/**
 * Returns the path of this classpath entry.
 *
 * The meaning of the path of a classpath entry depends on its entry kind:<ul>
 *	<li>Source code in the current project (<code>CPE_SOURCE</code>) -  
 *      The path associated with this entry is the absolute path to the root folder. </li>
 *	<li>A binary library in the current project (<code>CPE_LIBRARY</code>) - the path
 *		associated with this entry is the absolute path to the JAR (or root folder), and 
 *		in case it refers to an external JAR, then there is no associated resource in 
 *		the workbench.
 *	<li>A required project (<code>CPE_PROJECT</code>) - the path of the entry denotes the
 *		path to the corresponding project resource.</li>
 *  <li>A variable entry (<code>CPE_VARIABLE</code>) - the first segment of the path 
 *      is the name of a classpath variable. If this classpath variable
 *		is bound to the path <it>P</it>, the path of the corresponding classpath entry
 *		is computed by appending to <it>P</it> the segments of the returned
 *		path without the variable.</li>
 * </ul>
 *
 * @return the path of this classpath entry
 */
IPath getPath();

