/**
 * Do code completion inside a code snippet in the context of the current type.
 * 
 * If the type can access to his source code and the insertion position is valid,
 * then completion is performed against source. Otherwise the completion is performed
 * against type structure and given locals variables.
 * 
 * @param snippet the code snippet
 * @param insertion the position with in source where the snippet
 * is inserted. This position must not be in comments.
 * A possible value is -1, if the position is not known.
 * @param position the position with in snippet where the user 
 * is performing code assist.
 * @param localVariableTypesNames an array (possibly empty) of fully qualified 
 * type names of local variables visible at the current scope
 * @param localVariableNames an array (possibly empty) of local variable names 
 * that are visible at the current scope
 * @param localVariableModifiers an array (possible empty) of modifiers for 
 * local variables
 * @param isStatic whether the current scope is in a static context
 * @param requestor the completion requestor
 */
void codeComplete(char[] snippet, int insertion, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic, ICompletionRequestor requestor) throws JavaModelException;

