/**
 * Sends the given class files to the target and loads them. If the given
 * class name is not <code>null</code>, run the code snippet with this class
 * name. Returns whether the code snippet could be deployed. Note it must
 * return <code>true</code> even if running the code snippet threw an exception.
 * <p>
 * The details of sending and loading the class files are left up to
 * implementations.
 * </p>
 * <p>
 * To run a code snippet, an implementation should create a new instance of
 * the given code snippet class and call (directly or using another means) its
 * <code>RUN_METHOD</code>.
 * </p>
 * <p>
 * Also before the call, the implementation should copy the values of the local
 * variables (if any) into the corresponding fields of the code snippet instance.
 * A field name is formed of <code>LOCAL_VAR_PREFIX</code>
 * preceded the name of the local variable. For example, the field name for
 * local variable <code>"myLocal"</code> is <code>"val$myLocal"</code> (assuming the
 * value of <code>LOCAL_VAR_PREFIX</code> is "val$"). In the
 * same way, the implementation should copy the value of the 'this' object into the
 * field called <code>DELEGATE_THIS</code>.
 * </p>
 * <p>
 * After calling the <code>RUN_METHOD</code>, the values of the local
 * variables may have been modified. The implementation must copy the
 * values of the fields back into the local variables.
 * </p>
 * <p>
 * Finally, the overall value returned by the code snippet can be retrieved
 * from the special field <code>RESULT_VALUE_FIELD</code>
 * on the code snippet instance.
 * The <code>Class</code> that is the runtime type of the returned value can be
 * retrieved from the special field <code>RESULT_TYPE_FIELD</code>.
 * </p>
 *
 * @param classFileBytes the list of class file bytes
 * @param classFileCompoundNames the corresponding list of class file type
 *   compound names (example of a compound name: {"java", "lang", "Object"})
 * @param codeSnippetClassName name of the actual class to instantiate and run,
 *   or <code>null</code> if none
 * @return <code>true</code> if the code snippet was successfully deployed
 */
public boolean acceptClassFiles(byte[][] classFileBytes, String[][] classFileCompoundNames, String codeSnippetClassName);

