/**
 * Returns an open working copy (managed or not) of this element using the given factory to create
 * the buffer, or this element if this element is a working copy.
 * <p>
 * Note that this factory will be used for the life time of this working copy, i.e. if the 
 * working copy is closed then reopened, this factory will be used.
 * The buffer will be automatically initialized with the original's compilation unit content
 * upon creation.
 * <p>
 * A managed working copy is a special instance of working copy that is remembered and returned
 * by this element. Thus the same instance of working copy is always returned until it is destroyed.
 * When the managed working copy instance is created, an ADDED IJavaElementDelta is reported on this
 * working copy.
 *
 * @param monitor a progress monitor used to report progress while opening this compilation unit
 *                 or <code>null</code> if no progress should be reported 
 * @param factory the factory that creates a buffer that is used to get the content of the working copy
 *                 or <code>null</code> if the internal factory should be used
 * @param isManaged whether the created working is managed
 * @exception JavaModelException if the contents of this element can
 *   not be determined. Reasons include:
 * <ul>
 * <li> This Java element does not exist (ELEMENT_DOES_NOT_EXIST)</li>
 * </ul>
 * @since 2.0
 */
IJavaElement getWorkingCopy(IProgressMonitor monitor, IBufferFactory factory, boolean isManaged) throws JavaModelException;

