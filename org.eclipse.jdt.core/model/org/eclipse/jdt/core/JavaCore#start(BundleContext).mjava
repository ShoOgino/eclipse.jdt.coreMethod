	/* (non-Javadoc)
	 * Startup the JavaCore plug-in.
	 * <p>
	 * Registers the JavaModelManager as a resource changed listener and save participant.
	 * Starts the background indexing, and restore saved classpath variable values.
	 * <p>
	 * @throws Exception
	 * @see org.eclipse.core.runtime.Plugin#start(BundleContext)
	 */
	public void start(BundleContext context) throws Exception {
		super.start(context);
		
		final JavaModelManager manager = JavaModelManager.getJavaModelManager();
		try {
			manager.configurePluginDebugOptions();

			// request state folder creation (workaround 19885)
			JavaCore.getPlugin().getStateLocation();

			// retrieve variable values
			JavaCore.getPlugin().getPluginPreferences().addPropertyChangeListener(new JavaModelManager.PluginPreferencesListener());
			manager.loadVariablesAndContainers();

			final IWorkspace workspace = ResourcesPlugin.getWorkspace();
			workspace.addResourceChangeListener(
				manager.deltaState,
				IResourceChangeEvent.PRE_BUILD
					| IResourceChangeEvent.POST_BUILD
					| IResourceChangeEvent.POST_CHANGE
					| IResourceChangeEvent.PRE_DELETE
					| IResourceChangeEvent.PRE_CLOSE);

			startIndexing();
			
			// process deltas since last activated in indexer thread so that indexes are up-to-date.
			// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=38658
			manager.getIndexManager().request(
				new IJob() {
					public boolean belongsTo(String jobFamily) {
						return false;
					}
					public void cancel() {
						// ignore
					}
					public void ensureReadyToRun() {
						// ignore
					}
					public boolean execute(IProgressMonitor progress) {
						try {
							// add save participant and process delta atomically
							// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=59937
							workspace.run(
								new IWorkspaceRunnable() {
									public void run(IProgressMonitor monitor) throws CoreException {
										ISavedState savedState = workspace.addSaveParticipant(JavaCore.this, manager);
										if (savedState != null) {
											// the event type coming from the saved state is always POST_AUTO_BUILD
											// force it to be POST_CHANGE so that the delta processor can handle it
											manager.deltaState.getDeltaProcessor().overridenEventType = IResourceChangeEvent.POST_CHANGE;
											savedState.processResourceChangeEvents(manager.deltaState);
										}
									}
								},
								null); // no progress monitor
						} catch (CoreException e) {
							Util.log(e, "Could not process saved state delta"); //$NON-NLS-1$
						}
						return true;
					}
				});
		} catch (RuntimeException e) {
			manager.shutdown();
			throw e;
		}
	}

