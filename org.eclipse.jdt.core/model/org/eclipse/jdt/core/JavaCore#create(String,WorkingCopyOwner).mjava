	/**
	 * Returns the Java model element corresponding to the given handle identifier
	 * generated by <code>IJavaElement.getHandleIdentifier()</code>, or
	 * <code>null</code> if unable to create the associated element.
	 * If the returned Java element is an <code>ICompilationUnit</code>, its owner
	 * is the given owner if such a working copy exists, otherwise the compilation unit 
	 * is a primary compilation unit.
	 * 
	 * @param handleIdentifier the given handle identifier
	 * @param owner the owner of the returned compilation unit, ignored if the returned
	 *   element is not a compilation unit
	 * @return the Java element corresponding to the handle identifier
	 * @since 3.0
	 */
	public static IJavaElement create(String handleIdentifier, WorkingCopyOwner owner) {
		if (handleIdentifier == null) {
			return null;
		}
		String delimiters = new String(new char[] {
			JavaElement.JEM_COUNT,
			JavaElement.JEM_JAVAPROJECT,
			JavaElement.JEM_PACKAGEFRAGMENTROOT,
			JavaElement.JEM_PACKAGEFRAGMENT,
			JavaElement.JEM_FIELD,
			JavaElement.JEM_METHOD,
			JavaElement.JEM_INITIALIZER,
			JavaElement.JEM_COMPILATIONUNIT,
			JavaElement.JEM_CLASSFILE,
			JavaElement.JEM_TYPE,
			JavaElement.JEM_PACKAGEDECLARATION,
			JavaElement.JEM_IMPORTDECLARATION,
			JavaElement.JEM_LOCALVARIABLE});
		StringTokenizer memento = new StringTokenizer(handleIdentifier, delimiters, true);
		JavaModel model = JavaModelManager.getJavaModelManager().getJavaModel();
		return model.getHandleFromMemento(memento, owner);
	}

