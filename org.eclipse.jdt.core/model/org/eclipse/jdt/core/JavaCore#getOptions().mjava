	/**
	 * Returns the table of the current options. Initially, all options have their default values,
	 * and this method returns a table that includes all known options.
	 * <p>
	 * For a complete description of the configurable options, see <code>getDefaultOptions</code>.
	 * </p>
	 * 
	 * @return table of current settings of all options 
	 *   (key type: <code>String</code>; value type: <code>String</code>)
	 * @see #getDefaultOptions()
	 * @see JavaCorePreferenceInitializer for changing default settings
	 */
	public static Hashtable getOptions() {

		// init
		Hashtable options = new Hashtable(10);
		HashSet optionNames = JavaModelManager.getJavaModelManager().optionNames;
		IPreferencesService service = Platform.getPreferencesService();

		// set options using preferences service lookup
		Iterator iterator = optionNames.iterator();
		while (iterator.hasNext()) {
		    String propertyName = (String) iterator.next();
		    String propertyValue = service.get(propertyName, null, preferencesLookup);
		    if (propertyValue != null) {
			    options.put(propertyName, propertyValue);
		    }
		}

		// get encoding through resource plugin
		options.put(CORE_ENCODING, getEncoding()); 

		// backward compatibility
		options.put(COMPILER_PB_INVALID_IMPORT, ERROR);
		options.put(COMPILER_PB_UNREACHABLE_CODE, ERROR);

		// return built map
		return options;
	}

