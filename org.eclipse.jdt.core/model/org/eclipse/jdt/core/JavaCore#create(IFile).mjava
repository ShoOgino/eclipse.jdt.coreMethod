	/**
	 * Returns the Java element corresponding to the given file, or
	 * <code>null</code> if unable to associate the given file
	 * with a Java element.
	 *
	 * <p>The file must be one of:<ul>
	 *	<li>a <code>.java</code> file - the element returned is the corresponding <code>ICompilationUnit</code></li>
	 *	<li>a <code>.class</code> file - the element returned is the corresponding <code>IClassFile</code></li>
	 *	<li>a <code>.jar</code> file - the element returned is the corresponding <code>IPackageFragmentRoot</code></li>
	 *	</ul>
	 * <p>
	 * Creating a Java element has the side effect of creating and opening all of the
	 * element's parents if they are not yet open.
	 */
	public static IJavaElement create(IFile file) {
		if (file == null) {
			return null;
		}
		String extension = file.getProjectRelativePath().getFileExtension();
		if (extension != null) {
			if (Util.isValidCompilationUnitName(file.getName())) {
				return createCompilationUnitFrom(file);
			} else if (Util.isValidClassFileName(file.getName())) {
				return createClassFileFrom(file);
			} else if (extension.equalsIgnoreCase("jar"  //$NON-NLS-1$
				) || extension.equalsIgnoreCase("zip"  //$NON-NLS-1$
				)) {
				return createJarPackageFragmentRootFrom(file);
			}
		}
		return null;
	}

