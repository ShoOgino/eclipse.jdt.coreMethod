	/**
	 * Validate the given Java type name, either simple or qualified.
	 * For example, <code>"java.lang.Object"</code>, or <code>"Object"</code>.
	 * <p>
	 *
	 * @param name the name of a type
	 * @return a status object with code <code>IStatus.OK</code> if
	 *		the given name is valid as a Java type name, 
	 *      a status with code <code>IStatus.WARNING</code>
	 *		indicating why the given name is discouraged, 
	 *      otherwise a status object indicating what is wrong with 
	 *      the name
	 */
	public static IStatus validateJavaTypeName(String name) {
		if (name == null) {
			return new Status(
				IStatus.ERROR,
				JavaCore.PLUGIN_ID,
				-1,
				"A Java type name must not be null",
				null);
		}
		String trimmed = name.trim();
		if (!name.equals(trimmed)) {
			return new Status(
				IStatus.ERROR,
				JavaCore.PLUGIN_ID,
				-1,
				"A Java type name must not start or end with a blank.",
				null);
			;
		}
		int index = name.lastIndexOf('.');
		char[] scannedID;
		if (index == -1) {
			// simple name
			scannedID = scannedIdentifier(name);
		} else {
			// qualified name
			String pkg = name.substring(0, index).trim();
			IStatus status = validatePackageName(pkg);
			if (!status.isOK()) {
				return status;
			}
			String type = name.substring(index + 1).trim();
			scannedID = scannedIdentifier(type);
		}

		if (scannedID != null) {
			if (CharOperation.contains('$', scannedID)) {
				return new Status(
					IStatus.WARNING,
					JavaCore.PLUGIN_ID,
					-1,
					"By convention, Java type names usually don't contain the $ character.",
					null);
			}
			if ((scannedID.length > 0 && Character.isLowerCase(scannedID[0]))) {
				return new Status(
					IStatus.WARNING,
					JavaCore.PLUGIN_ID,
					-1,
					"By convention, Java type names usually start with an uppercase letter.",
					null);
			}
			return new Status(IStatus.OK, JavaCore.PLUGIN_ID, -1, "OK", null);
		} else {
			return new Status(
				IStatus.ERROR,
				JavaCore.PLUGIN_ID,
				-1,
				"The type name " + name + " is not a valid identifier.",
				null);
		}
	}

