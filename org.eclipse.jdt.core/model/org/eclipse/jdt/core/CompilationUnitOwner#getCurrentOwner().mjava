	/**
	 * Returns the current <code>CompilationUnitOwner</code>.
	 * This is the inner most <code>CompilationUnitOwner</code> running
	 * a given <code>Runnable</code> using the <code>run(Runnable)</code>
	 * protocol.
	 * <p>
	 * If the caller of this method is not running inside the dynamic scope of
	 * a <code>run(Runnable)</code> method, then a default 
	 * <code>CompilationUnitOwner</code> is returned.
	 * </p>
	 * 
	 * @return CompilationUnitOwner the current compilation unit owner
	 */
	public static CompilationUnitOwner getCurrentOwner() {
		ArrayList stack = (ArrayList)owners.getCurrent();
		if (stack == null) {
			return DefaultCompilationUnitOwner.PRIMARY;
		}
		return (CompilationUnitOwner)stack.get(stack.size()-1);
	}

