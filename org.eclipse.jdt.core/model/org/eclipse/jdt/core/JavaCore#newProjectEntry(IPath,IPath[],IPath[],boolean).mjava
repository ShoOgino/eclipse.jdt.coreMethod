	/**
	 * Creates and returns a new classpath entry of kind <code>CPE_PROJECT</code>
	 * for the project identified by the given absolute path.
	 * This method is fully equivalent to calling
	 * {@link #newProjectEntry(IPath, IPath[], IPath[], boolean, IClasspathAttribute[], boolean)
	 * newProjectEntry(path, accessibleFiles, nonAccessibleFiles, true, new IClasspathAttribute[0], isExported)}.
	 * 
	 * @param path the absolute path of the prerequisite project
	 * @param accessibleFiles the possibly empty list of accessible files patterns
	 *    represented as relative paths
	 * @param nonAccessibleFiles the possibly empty list of non accessible files patterns
	 *    represented as relative paths
	 * @param isExported indicates whether this entry is contributed to dependent
	 * 	  projects in addition to the output location
	 * @return a new project classpath entry
	 * @since 3.1
	 * @deprecated use newProjectEntry(path, accessibleFiles, nonAccessibleFiles, true, new IClasspathAttribute[0], isExported) instead
	 */
	// TODO (jerome) remove before 3.1 M6
	public static IClasspathEntry newProjectEntry(
			IPath path, 
			IPath[] accessibleFiles, 
			IPath[] nonAccessibleFiles, 
			boolean isExported) {
		return newProjectEntry(path, accessibleFiles, nonAccessibleFiles, true/*default is to combine access restrictions*/, ClasspathEntry.NO_EXTRA_ATTRIBUTES, isExported);
	}

