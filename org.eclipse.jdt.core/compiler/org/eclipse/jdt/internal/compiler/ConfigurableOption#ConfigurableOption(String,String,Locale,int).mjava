	/**
	 * INTERNAL USE ONLY
	 *
	 * Initialize an instance of this class according to a specific locale
	 *
	 * @param loc java.util.Locale
	 */
	public ConfigurableOption(
		String componentName,
		String optionName,
		Locale loc,
		int currentValueIndex) {

		this.componentName = componentName;
		this.currentValueIndex = currentValueIndex;

		ResourceBundle resource = null;
		try {
			String location = componentName.substring(0, componentName.lastIndexOf('.'));
			resource = ResourceBundle.getBundle(location + ".Options", loc);
		} catch (MissingResourceException e) {
			category = "Missing ressources entries for" + componentName + " options";
			name = "Missing ressources entries for" + componentName + " options";
			description = "Missing ressources entries for" + componentName + " options";
			possibleValues = new String[0];
			id = -1;
		}
		if (resource == null)
			return;
		try {
			id = Integer.parseInt(resource.getString(optionName + ".number"));
		} catch (MissingResourceException e) {
			id = -1;
		} catch (NumberFormatException e) {
			id = -1;
		}
		try {
			category = resource.getString(optionName + ".category");
		} catch (MissingResourceException e) {
			category = "Missing ressources entries for" + componentName + " options";
		}
		try {
			name = resource.getString(optionName + ".name");
		} catch (MissingResourceException e) {
			name = "Missing ressources entries for" + componentName + " options";
		}
		try {
			StringTokenizer tokenizer =
				new StringTokenizer(resource.getString(optionName + ".possibleValues"), "|");
			int numberOfValues = Integer.parseInt(tokenizer.nextToken());
			if (numberOfValues == -1) {
				possibleValues = NoDiscreteValue;
			} else {
				possibleValues = new String[numberOfValues];
				int index = 0;
				while (tokenizer.hasMoreTokens()) {
					possibleValues[index] = tokenizer.nextToken();
					index++;
				}
			}
		} catch (MissingResourceException e) {
			possibleValues = new String[0];
		} catch (NoSuchElementException e) {
			possibleValues = new String[0];
		} catch (NumberFormatException e) {
			possibleValues = new String[0];
		}
		try {
			description = resource.getString(optionName + ".description");
		} catch (MissingResourceException e) {
			description = "Missing ressources entries for" + componentName + " options";
		}
	}

