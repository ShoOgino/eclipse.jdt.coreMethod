/**
 * Returns all the options of the compiler to be shown by the UI
 *
 * @param locale java.util.Locale
 * @return org.eclipse.jdt.internal.compiler.ConfigurableOption[]
 */
public ConfigurableOption[] getConfigurableOptions(Locale locale) {
	String componentName = Compiler.class.getName();
	return new ConfigurableOption[] {
		new ConfigurableOption(
			componentName,
			"debug.vars"/*nonNLS*/, 
			locale, 
			(produceDebugAttributes & Vars) != 0 ? 0 : 1), 
		new ConfigurableOption(
			componentName,
			"debug.lines"/*nonNLS*/, 
			locale, 
			(produceDebugAttributes & Lines) != 0 ? 0 : 1), 
		new ConfigurableOption(
			componentName,
			"debug.source"/*nonNLS*/, 
			locale, 
			(produceDebugAttributes & Source) != 0 ? 0 : 1), 
		new ConfigurableOption(
			componentName,
			"debug.preserveAllLocals"/*nonNLS*/, 
			locale, 
			preserveAllLocalVariables ? 0 : 1), 
		new ConfigurableOption(
			componentName,
			"optionalError.unReachableCode"/*nonNLS*/, 
			locale, 
			(errorThreshold & UnreachableCode) != 0 ? 0 : 1), 
		new ConfigurableOption(
			componentName,
			"optionalError.importProblem"/*nonNLS*/, 
			locale, 
			(errorThreshold & ImportProblem) != 0 ? 0 : 1), 
		new ConfigurableOption(
			componentName,
			"optionalWarning.methodWithConstructorName"/*nonNLS*/, 
			locale, 
			(warningThreshold & MethodWithConstructorName) != 0 ? 0 : 1), 
		new ConfigurableOption(
			componentName,
			"optionalWarning.overridingPackageDefaultMethod"/*nonNLS*/, 
			locale, 
			(warningThreshold & OverriddenPackageDefaultMethod) != 0 ? 0 : 1), 
		new ConfigurableOption(
			componentName,
			"optionalWarning.deprecated"/*nonNLS*/, 
			locale, 
			(warningThreshold & UsingDeprecatedAPI) != 0 ? 0 : 1), 
		new ConfigurableOption(
			componentName,
			"optionalWarning.maskedCatchBlock"/*nonNLS*/, 
			locale, 
			(warningThreshold & MaskedCatchBlock) != 0 ? 0 : 1), 
		new ConfigurableOption(
			componentName,
			"optionalWarning.unusedLocalVariable"/*nonNLS*/, 
			locale, 
			(warningThreshold & UnusedLocalVariable) != 0 ? 0 : 1), 
		new ConfigurableOption(
			componentName,
			"optionalWarning.unusedArgument"/*nonNLS*/, 
			locale, 
			(warningThreshold & UnusedArgument) != 0 ? 0 : 1), 
		new ConfigurableOption(
			componentName,
			"binaryCompatibility.targetJDK"/*nonNLS*/, 
			locale, 
			targetJDK), 
		new ConfigurableOption(
			componentName,
			"optionalWarning.accessEmulation"/*nonNLS*/, 
			locale, 
			(warningThreshold & AccessEmulation) != 0 ? 0 : 1),
		new ConfigurableOption(
			componentName,
			"optionalWarning.nonExternalizedString"/*nonNLS*/, 
			locale, 
			(warningThreshold & NonExternalizedString) != 0 ? 0 : 1)
		}; 
}

