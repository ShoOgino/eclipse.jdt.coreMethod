	public final Constant castTo(int conversionToTargetType){
		//the cast is an int of the form
		// (castId<<4)+typeId (in order to follow the
		//user written style (cast)expression ....
	
		if (this == NotAConstant) return NotAConstant;
		switch(conversionToTargetType){
			case T_undefined : 						return this;
	//            TARGET TYPE  <- FROM TYPE
	//	    case (T_undefined<<4)+T_undefined  	 : return NotAConstant;  
	//	    case (T_undefined<<4)+T_byte  		 : return NotAConstant;   
	//	    case (T_undefined<<4)+T_long  		 : return NotAConstant;   
	//	    case (T_undefined<<4)+T_short  		 : return NotAConstant;   
	//	    case (T_undefined<<4)+T_void  		 : return NotAConstant;   
	//	    case (T_undefined<<4)+T_String  	 : return NotAConstant;   
	//	    case (T_undefined<<4)+T_Object  	 : return NotAConstant;   
	//	    case (T_undefined<<4)+T_double  	 : return NotAConstant;   
	//	    case (T_undefined<<4)+T_float  		 : return NotAConstant;   
	//	    case (T_undefined<<4)+T_boolean 	 : return NotAConstant;   
	//	    case (T_undefined<<4)+T_char  		 : return NotAConstant;   
	//	    case (T_undefined<<4)+T_int  		 : return NotAConstant;   
		
	//	    case (T_byte<<4)+T_undefined  	 : return NotAConstant;   
		    case (T_byte<<4)+T_byte  		 : return this;  
		    case (T_byte<<4)+T_long  		 : return Constant.fromValue((byte)this.longValue()); 
		    case (T_byte<<4)+T_short  		 : return Constant.fromValue((byte)this.shortValue());    
	//	    case (T_byte<<4)+T_void  		 : return NotAConstant;   
	//	    case (T_byte<<4)+T_String  	 	 : return NotAConstant;   
	//	    case (T_byte<<4)+T_Object  	 	 : return NotAConstant;   
		    case (T_byte<<4)+T_double  	 	 : return Constant.fromValue((byte)this.doubleValue());    
		    case (T_byte<<4)+T_float  		 : return Constant.fromValue((byte)this.floatValue());    
	//	    case (T_byte<<4)+T_boolean  	 : return NotAConstant;   
		    case (T_byte<<4)+T_char  		 : return Constant.fromValue((byte)this.charValue());    
		    case (T_byte<<4)+T_int  		 : return Constant.fromValue((byte)this.intValue());    
	
	//	    case (T_long<<4)+T_undefined  	 : return NotAConstant;   
		    case (T_long<<4)+T_byte  		 : return Constant.fromValue((long)this.byteValue()); 
		    case (T_long<<4)+T_long  		 : return this; 
		    case (T_long<<4)+T_short  		 : return Constant.fromValue((long)this.shortValue()); 
	//	    case (T_long<<4)+T_void  		 : return NotAConstant;   
	//	    case (T_long<<4)+T_String  		 : return NotAConstant;   
	//	    case (T_long<<4)+T_Object  		 : return NotAConstant;   
		    case (T_long<<4)+T_double  		 : return Constant.fromValue((long)this.doubleValue());   
		    case (T_long<<4)+T_float  		 : return Constant.fromValue((long)this.floatValue());  
	//	    case (T_long<<4)+T_boolean  	 : return NotAConstant;   
		    case (T_long<<4)+T_char  		 : return Constant.fromValue((long)this.charValue()); 
		    case (T_long<<4)+T_int  		 : return Constant.fromValue((long)this.intValue()); 
	
	//	    case (T_short<<4)+T_undefined  	 : return NotAConstant;   
		    case (T_short<<4)+T_byte  		 : return Constant.fromValue((short)this.byteValue());
		    case (T_short<<4)+T_long  		 : return Constant.fromValue((short)this.longValue()); 
		    case (T_short<<4)+T_short  		 : return this;  
	//	    case (T_short<<4)+T_void  		 : return NotAConstant;   
	//	    case (T_short<<4)+T_String  	 : return NotAConstant;   
	//	    case (T_short<<4)+T_Object  	 : return NotAConstant;   
		    case (T_short<<4)+T_double  	 : return Constant.fromValue((short)this.doubleValue());   
		    case (T_short<<4)+T_float  		 : return Constant.fromValue((short)this.floatValue());   
	//	    case (T_short<<4)+T_boolean 	 : return NotAConstant;   
		    case (T_short<<4)+T_char  		 : return Constant.fromValue((short)this.charValue());  
		    case (T_short<<4)+T_int  		 : return Constant.fromValue((short)this.intValue());  
	
	//	    case (T_void<<4)+T_undefined  	 : return NotAConstant;   
	//	    case (T_void<<4)+T_byte  		 : return NotAConstant;   
	//	    case (T_void<<4)+T_long  		 : return NotAConstant;   
	//	    case (T_void<<4)+T_short  		 : return NotAConstant;   
	//	    case (T_void<<4)+T_void  		 : return NotAConstant;   
	//	    case (T_void<<4)+T_String  	 	 : return NotAConstant;   
	//	    case (T_void<<4)+T_Object  	 	 : return NotAConstant;   
	//	    case (T_void<<4)+T_double  	 	 : return NotAConstant;   
	//	    case (T_void<<4)+T_float  		 : return NotAConstant;   
	//	    case (T_void<<4)+T_boolean  	 : return NotAConstant;   
	//	    case (T_void<<4)+T_char  		 : return NotAConstant;   
	//	    case (T_void<<4)+T_int  		 : return NotAConstant;   
	
	//	    case (T_String<<4)+T_undefined   : return NotAConstant;   
	//	    case (T_String<<4)+T_byte  		 : return NotAConstant;   
	//	    case (T_String<<4)+T_long  		 : return NotAConstant;   
	//	    case (T_String<<4)+T_short  	 : return NotAConstant;   
	//	    case (T_String<<4)+T_void  		 : return NotAConstant;   
		    case (T_JavaLangString<<4)+T_JavaLangString  	 : return this;   
	//	    case (T_String<<4)+T_Object  	 : return NotAConstant;   
	//	    case (T_String<<4)+T_double  	 : return NotAConstant;   
	//	    case (T_String<<4)+T_float  	 : return NotAConstant;   
	//	    case (T_String<<4)+T_boolean 	 : return NotAConstant;   
	//	    case (T_String<<4)+T_char  		 : return NotAConstant;   
	//	    case (T_String<<4)+T_int  		 : return NotAConstant;   
	
	//	    case (T_Object<<4)+T_undefined   	: return NotAConstant;   
	//	    case (T_Object<<4)+T_byte  		 	: return NotAConstant;   
	//	    case (T_Object<<4)+T_long  		 	: return NotAConstant;   
	//	    case (T_Object<<4)+T_short 		 	: return NotAConstant;   
	//	    case (T_Object<<4)+T_void  		 	: return NotAConstant;   
	//	    case (T_Object<<4)+T_String  		: return NotAConstant;   
	//	    case (T_Object<<4)+T_Object  		: return NotAConstant;   
	//	    case (T_Object<<4)+T_double  		: return NotAConstant;   
	//	    case (T_Object<<4)+T_float  		: return NotAConstant;   
	//	    case (T_Object<<4)+T_boolean 		: return NotAConstant;   
	//	    case (T_Object<<4)+T_char  		 	: return NotAConstant;   
	//	    case (T_Object<<4)+T_int  			: return NotAConstant;   
	
	//	    case (T_double<<4)+T_undefined  	: return NotAConstant;   
		    case (T_double<<4)+T_byte  		 	: return Constant.fromValue((double)this.byteValue());   
		    case (T_double<<4)+T_long  		 	: return Constant.fromValue((double)this.longValue());   
		    case (T_double<<4)+T_short  		: return Constant.fromValue((double)this.shortValue());   
	//	    case (T_double<<4)+T_void  		 	: return NotAConstant;   
	//	    case (T_double<<4)+T_String  		: return NotAConstant;   
	//	    case (T_double<<4)+T_Object  		: return NotAConstant;   
		    case (T_double<<4)+T_double  		: return this;   
		    case (T_double<<4)+T_float  		: return Constant.fromValue((double)this.floatValue());   
	//	    case (T_double<<4)+T_boolean  		: return NotAConstant;   
		    case (T_double<<4)+T_char  		 	: return Constant.fromValue((double)this.charValue());   
		    case (T_double<<4)+T_int  			: return Constant.fromValue((double)this.intValue());  
	
	//	    case (T_float<<4)+T_undefined  	 : return NotAConstant;   
		    case (T_float<<4)+T_byte  		 : return Constant.fromValue((float)this.byteValue());   
		    case (T_float<<4)+T_long  		 : return Constant.fromValue((float)this.longValue());   
		    case (T_float<<4)+T_short  		 : return Constant.fromValue((float)this.shortValue());   
	//	    case (T_float<<4)+T_void  		 : return NotAConstant;   
	//	    case (T_float<<4)+T_String  	 : return NotAConstant;   
	//	    case (T_float<<4)+T_Object  	 : return NotAConstant;   
		    case (T_float<<4)+T_double  	 : return Constant.fromValue((float)this.doubleValue());   
		    case (T_float<<4)+T_float  		 : return this;   
	//	    case (T_float<<4)+T_boolean 	 : return NotAConstant;   
		    case (T_float<<4)+T_char  		 : return Constant.fromValue((float)this.charValue());   
		    case (T_float<<4)+T_int  		 : return Constant.fromValue((float)this.intValue());   
	
	//	    case (T_boolean<<4)+T_undefined  		 : return NotAConstant;   
	//	    case (T_boolean<<4)+T_byte  			 : return NotAConstant;   
	//	    case (T_boolean<<4)+T_long  			 : return NotAConstant;   
	//	    case (T_boolean<<4)+T_short  			 : return NotAConstant;   
	//	    case (T_boolean<<4)+T_void  			 : return NotAConstant;   
	//	    case (T_boolean<<4)+T_String  			 : return NotAConstant;   
	//	    case (T_boolean<<4)+T_Object  			 : return NotAConstant;   
	//	    case (T_boolean<<4)+T_double  			 : return NotAConstant;   
	//	    case (T_boolean<<4)+T_float  			 : return NotAConstant;   
		    case (T_boolean<<4)+T_boolean  			 : return this;  
	//	    case (T_boolean<<4)+T_char  			 : return NotAConstant;   
	//	    case (T_boolean<<4)+T_int  				 : return NotAConstant;   
		
	//	    case (T_char<<4)+T_undefined  	 : return NotAConstant;   
		    case (T_char<<4)+T_byte  		 : return Constant.fromValue((char)this.byteValue());  
		    case (T_char<<4)+T_long  		 : return Constant.fromValue((char)this.longValue());  
		    case (T_char<<4)+T_short  		 : return Constant.fromValue((char)this.shortValue());  
	//	    case (T_char<<4)+T_void  		 : return NotAConstant;   
	//	    case (T_char<<4)+T_String  		 : return NotAConstant;   
	//	    case (T_char<<4)+T_Object  		 : return NotAConstant;   
		    case (T_char<<4)+T_double  		 : return Constant.fromValue((char)this.doubleValue());   
		    case (T_char<<4)+T_float  		 : return Constant.fromValue((char)this.floatValue());   
	//	    case (T_char<<4)+T_boolean  	 : return NotAConstant;   
		    case (T_char<<4)+T_char  		 : return this;  
		    case (T_char<<4)+T_int  		 : return Constant.fromValue((char)this.intValue());  
		
	//	    case (T_int<<4)+T_undefined  	 : return NotAConstant;   
		    case (T_int<<4)+T_byte  		 : return Constant.fromValue((int)this.byteValue());  
		    case (T_int<<4)+T_long  		 : return Constant.fromValue((int)this.longValue());  
		    case (T_int<<4)+T_short  		 : return Constant.fromValue((int)this.shortValue());  
	//	    case (T_int<<4)+T_void  		 : return NotAConstant;   
	//	    case (T_int<<4)+T_String  		 : return NotAConstant;   
	//	    case (T_int<<4)+T_Object  		 : return NotAConstant;   
		    case (T_int<<4)+T_double  		 : return Constant.fromValue((int)this.doubleValue());   
		    case (T_int<<4)+T_float  		 : return Constant.fromValue((int)this.floatValue());   
	//	    case (T_int<<4)+T_boolean  	 	 : return NotAConstant;   
		    case (T_int<<4)+T_char  		 : return Constant.fromValue((int)this.charValue());  
		    case (T_int<<4)+T_int  		 	 : return this;  
	
		}
	
		return NotAConstant;
	}

