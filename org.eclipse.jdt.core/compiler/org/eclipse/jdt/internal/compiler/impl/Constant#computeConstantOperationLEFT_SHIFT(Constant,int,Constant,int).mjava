	public static final Constant computeConstantOperationLEFT_SHIFT(Constant left, int leftId, Constant right, int rightId) {
		
		switch (leftId){
			case T_char :
				switch (rightId){
					case T_char :	return Constant.fromValue(left.charValue() << right.charValue());
					case T_byte:	return Constant.fromValue(left.charValue() << right.byteValue());
					case T_short:	return Constant.fromValue(left.charValue() << right.shortValue());
					case T_int:		return Constant.fromValue(left.charValue() << right.intValue());
					case T_long:	return Constant.fromValue(left.charValue() << right.longValue());
				}
			break;
			case T_byte :
				switch (rightId){
					case T_char :	return Constant.fromValue(left.byteValue() << right.charValue());
					case T_byte:	return Constant.fromValue(left.byteValue() << right.byteValue());
					case T_short:	return Constant.fromValue(left.byteValue() << right.shortValue());
					case T_int:		return Constant.fromValue(left.byteValue() << right.intValue());
					case T_long:	return Constant.fromValue(left.byteValue() << right.longValue());
				}
			break;
			case T_short :
				switch (rightId){
					case T_char :	return Constant.fromValue(left.shortValue() << right.charValue());
					case T_byte:	return Constant.fromValue(left.shortValue() << right.byteValue());
					case T_short:	return Constant.fromValue(left.shortValue() << right.shortValue());
					case T_int:		return Constant.fromValue(left.shortValue() << right.intValue());
					case T_long:	return Constant.fromValue(left.shortValue() << right.longValue());
				}
			break;
			case T_int :
				switch (rightId){
					case T_char :	return Constant.fromValue(left.intValue() << right.charValue());
					case T_byte:	return Constant.fromValue(left.intValue() << right.byteValue());
					case T_short:	return Constant.fromValue(left.intValue() << right.shortValue());
					case T_int:		return Constant.fromValue(left.intValue() << right.intValue());
					case T_long:	return Constant.fromValue(left.intValue() << right.longValue());
				}
			break;
			case T_long :
				switch (rightId){
					case T_char :	return Constant.fromValue(left.longValue() << right.charValue());
					case T_byte:	return Constant.fromValue(left.longValue() << right.byteValue());
					case T_short:	return Constant.fromValue(left.longValue() << right.shortValue());
					case T_int:		return Constant.fromValue(left.longValue() << right.intValue());
					case T_long:	return Constant.fromValue(left.longValue() << right.longValue());
				}
	
			}
	
		return NotAConstant;
	} 

