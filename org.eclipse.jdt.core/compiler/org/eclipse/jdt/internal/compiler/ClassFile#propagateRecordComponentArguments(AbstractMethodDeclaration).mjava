	private void propagateRecordComponentArguments(AbstractMethodDeclaration methodDeclaration) {
		if ((methodDeclaration.bits & (ASTNode.IsCanonicalConstructor | ASTNode.IsImplicit)) == 0)
			return;
		ReferenceBinding declaringClass = methodDeclaration.binding.declaringClass;
		if (declaringClass instanceof SourceTypeBinding) {
			assert declaringClass.isRecord();
			RecordComponentBinding[] rcbs = ((SourceTypeBinding) declaringClass).components();
			Argument[] arguments = methodDeclaration.arguments;
			for (int i = 0, length = rcbs.length; i < length; i++) {
				RecordComponentBinding rcb = rcbs[i];
				RecordComponent recordComponent = rcb.sourceRecordComponent();
				if ((recordComponent.bits & ASTNode.HasTypeAnnotations) != 0) {
					methodDeclaration.bits |= ASTNode.HasTypeAnnotations;
					arguments[i].bits |= ASTNode.HasTypeAnnotations;
				}
				long rcMask = TagBits.AnnotationForParameter | TagBits.AnnotationForTypeUse;
				arguments[i].annotations = ASTNode.getRelevantAnnotations(recordComponent.annotations, rcMask, null);
			}
		}
	}

