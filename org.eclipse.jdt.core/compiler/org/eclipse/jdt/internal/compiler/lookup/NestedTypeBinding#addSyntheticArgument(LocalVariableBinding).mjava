	/* Add a new synthetic argument for <actualOuterLocalVariable>.
	* Answer the new argument or the existing argument if one already existed.
	*/
	public SyntheticArgumentBinding addSyntheticArgument(LocalVariableBinding actualOuterLocalVariable) {
		SyntheticArgumentBinding synthLocal = null;

		if (this.outerLocalVariables == null) {
			synthLocal = new SyntheticArgumentBinding(actualOuterLocalVariable);
			this.outerLocalVariables = new SyntheticArgumentBinding[] {synthLocal};
		} else {
			int size = this.outerLocalVariables.length;
			int newArgIndex = size;
			for (int i = size; --i >= 0;) {		// must search backwards
				if (this.outerLocalVariables[i].actualOuterLocalVariable == actualOuterLocalVariable)
					return this.outerLocalVariables[i];	// already exists
				if (this.outerLocalVariables[i].id > actualOuterLocalVariable.id)
					newArgIndex = i;
			}
			SyntheticArgumentBinding[] synthLocals = new SyntheticArgumentBinding[size + 1];
			System.arraycopy(this.outerLocalVariables, 0, synthLocals, 0, newArgIndex);
			synthLocals[newArgIndex] = synthLocal = new SyntheticArgumentBinding(actualOuterLocalVariable);
			System.arraycopy(this.outerLocalVariables, newArgIndex, synthLocals, newArgIndex + 1, size - newArgIndex);
			this.outerLocalVariables = synthLocals;
		}
		//System.out.println("Adding synth arg for local var: " + new String(actualOuterLocalVariable.name) + " to: " + new String(this.readableName()));
		if (this.scope.referenceCompilationUnit().isPropagatingInnerClassEmulation)
			updateInnerEmulationDependents();
		return synthLocal;
	}

