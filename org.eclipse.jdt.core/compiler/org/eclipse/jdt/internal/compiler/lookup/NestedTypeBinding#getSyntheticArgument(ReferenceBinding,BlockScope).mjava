public SyntheticArgumentBinding getSyntheticArgument(ReferenceBinding targetEnclosingType, BlockScope scope) {
	if (enclosingInstances == null) return null;		// is null if no enclosing instances are known

	// exact match
	for (int i = enclosingInstances.length; --i >= 0;)
		if (enclosingInstances[i].type == targetEnclosingType)
			if (enclosingInstances[i].actualOuterLocalVariable == null)
				return enclosingInstances[i];

	// type compatibility : to handle cases such as
	// class T { class M{}}
	// class S extends T { class N extends M {}} --> need to use S as a default enclosing instance for the super constructor call in N().
	for (int i = enclosingInstances.length; --i >= 0;)
		if (enclosingInstances[i].actualOuterLocalVariable == null)
			if (targetEnclosingType.isSuperclassOf((ReferenceBinding) enclosingInstances[i].type))
				return enclosingInstances[i];
	return null;
}

