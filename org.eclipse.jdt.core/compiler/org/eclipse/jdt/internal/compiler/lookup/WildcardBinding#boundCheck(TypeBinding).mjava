	/**
	 * Returns true if the argument type satisfies all bounds of the type parameter
	 */
	public boolean boundCheck(TypeBinding argumentType) {
	    switch (this.kind) {
	        case Wildcard.UNBOUND :
	            return true;
	        case Wildcard.EXTENDS :
	            return argumentType.isCompatibleWith(this.bound);
	        default: // SUPER
	        	// allowed as long as one is compatible with other (either way)
	        	// ? super Exception   ok for:  IOException, since it would be ok for (Exception)ioException
	            return this.bound.isCompatibleWith(argumentType)
					|| argumentType.isCompatibleWith(this.bound);
	    }
    }

