	/* Compute variable positions in scopes given an initial position offset
	 * ignoring unused local variables.
	 * 
	 * Special treatment to have Try secret return address variables located at non
	 * colliding positions. Return addresses are not allocated initially, but gathered
	 * and allocated behind all other variables.
	 */
	public void computeLocalVariablePositions(
		int initOffset,
		CodeStream codeStream) {

		super.computeLocalVariablePositions(initOffset, codeStream);
		
		// iterate over possible return addresses rooted at the method scope level, which
		// have no resolvedPosition yet, and assign them to positions at maxOffset and beyond
		for (int i = 0; i < this.localIndex; i++) {
			if (locals[i].name == TryStatement.SecretReturnName 
				&& locals[i].resolvedPosition != -1){
					
				locals[i].resolvedPosition = this.maxOffset++;
			}
		}
	}

