	/**
	 * Returns a type, where original type was substituted using the receiver
	 * parameterized type.
	 * In raw mode (see {@link Substitution#isRawSubstitution()}),
	 * all parameterized types are converted to raw types.
	 * Cf. 4.8: "The type of a constructor (8.8), instance method (8.4, 9.4),
	 *  or non-static field (8.3) M of a raw type C that is not inherited from its 
	 *  superclasses or superinterfaces is the raw type that corresponds to the erasure
	 *  of its type in the generic declaration corresponding to C." 
	 */
	public static TypeBinding substitute(Substitution substitution, TypeBinding originalType) {
		TypeBinding unannotatedOriginal = originalType.unannotated();
		TypeBinding substitute = substitute0(substitution, unannotatedOriginal);
		if (unannotatedOriginal == originalType)		// no annotation => use naked substitute
			return substitute;
		else if (substitute == unannotatedOriginal)		// no substitution => re-use annotated type
			return originalType;
		else 											// substitution and annotation: merge both
			return substitution.environment().copyAnnotations(originalType, substitute);
	}

