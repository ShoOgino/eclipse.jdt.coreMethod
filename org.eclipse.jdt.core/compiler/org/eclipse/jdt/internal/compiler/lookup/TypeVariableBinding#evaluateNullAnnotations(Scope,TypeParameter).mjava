	public void evaluateNullAnnotations(Scope scope, TypeParameter parameter) {
		long nullTagBits = this.tagBits & TagBits.AnnotationNullMASK;
		if (this.firstBound != null && this.firstBound.isValidBinding()) {
			long superNullTagBits = this.firstBound.tagBits & TagBits.AnnotationNullMASK;
			if (superNullTagBits != 0L) {
				if (nullTagBits == 0L) {
					nullTagBits |= superNullTagBits;
				} else if (superNullTagBits != nullTagBits) {
					// not finding either bound or ann should be considered a compiler bug
					TypeReference bound = findBound(this.firstBound, parameter);
					Annotation ann = bound.findAnnotation(superNullTagBits);
					scope.problemReporter().contradictoryNullAnnotationsOnBounds(ann, nullTagBits);
					this.tagBits &= ~TagBits.AnnotationNullMASK;
				}
			}
		}	
		ReferenceBinding[] interfaces = this.superInterfaces;
		int length;
		if ((length = interfaces.length) != 0) {
			for (int i = length; --i >= 0;) {
				ReferenceBinding resolveType = interfaces[i];
				long superNullTagBits = resolveType.tagBits & TagBits.AnnotationNullMASK;
				if (superNullTagBits != 0L) {
					if (nullTagBits == 0L) {
						nullTagBits |= superNullTagBits;
					} else if (superNullTagBits != nullTagBits) {
						// not finding either bound or ann should be considered a compiler bug
						TypeReference bound = findBound(this.firstBound, parameter);
						Annotation ann = bound.findAnnotation(superNullTagBits);
						scope.problemReporter().contradictoryNullAnnotationsOnBounds(ann, nullTagBits);
						this.tagBits &= ~TagBits.AnnotationNullMASK;
					}
				}
				interfaces[i] = resolveType;
			}
		}
		if (nullTagBits != 0)
			this.tagBits |= nullTagBits | TagBits.HasNullTypeAnnotation;
	}

