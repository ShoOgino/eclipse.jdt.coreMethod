	/**
	 * For resolution we work with a copy of the bound set, to enable retrying.
	 * @return the new bound set.
	 */
	public BoundSet copy() {
		BoundSet copy = new BoundSet();
		if (!this.boundsPerVariable.isEmpty()) {
			Iterator<Entry<InferenceVariable, ThreeSets>> setsIterator = this.boundsPerVariable.entrySet().iterator();
			while (setsIterator.hasNext()) {
				Entry<InferenceVariable, ThreeSets> entry = setsIterator.next();
				copy.boundsPerVariable.put(entry.getKey(), entry.getValue().copy());
			}
		}
		copy.inThrows.addAll(this.inThrows);
		copy.captures.putAll(this.captures);
		if (this.incorporatedBounds.length > 0)
			System.arraycopy(this.incorporatedBounds, 0, copy.incorporatedBounds = new TypeBound[this.incorporatedBounds.length], 0, this.incorporatedBounds.length);
		if (this.unincorporatedBoundsCount > 0)
			System.arraycopy(this.unincorporatedBounds, 0, copy.unincorporatedBounds = new TypeBound[this.unincorporatedBounds.length], 0, this.unincorporatedBounds.length);
		copy.unincorporatedBoundsCount = this.unincorporatedBoundsCount;
		return copy;
	}

