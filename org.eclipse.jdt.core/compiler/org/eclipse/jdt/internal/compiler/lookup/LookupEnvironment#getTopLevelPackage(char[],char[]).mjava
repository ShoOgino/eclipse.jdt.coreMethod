/* Answer the top level package named name.
* Ask the oracle for the package if its not in the cache.
* Answer null if the package cannot be found.
*/
PackageBinding getTopLevelPackage(char[] name, char[] mod) {
	PackageBinding packageBinding = getPackage0(name);
	if (packageBinding != null) {
		if (packageBinding == TheNotFoundPackage)
			return null;
		return packageBinding;
	}
	if (this.nameEnvironment instanceof IModuleAwareNameEnvironment) {
		ModuleBinding module = getModule(mod);
		if (module != null)
			packageBinding = module.getPackage(null, name);
	} else {
		if (this.nameEnvironment.isPackage(null, name)) {
			packageBinding = new PackageBinding(name, this);
		}
	}
	if (packageBinding != null) {
	//if (this.nameEnvironment.isPackage(null, name, mod)) {
		this.knownPackages.put(name, packageBinding);
		return packageBinding;
	}

	this.knownPackages.put(name, TheNotFoundPackage); // saves asking the oracle next time
	return null;
}

