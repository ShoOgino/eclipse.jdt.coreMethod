	/**
	 * Compute the resolved positions for all the synthetic arguments
	 */
	final public void computeSyntheticArgumentSlotSizes() {

		int slotSize = 0;
		// insert enclosing instances first, followed by the outerLocals
		int enclosingInstancesCount = this.enclosingInstances == null ? 0 : this.enclosingInstances.length;
		for (int i = 0; i < enclosingInstancesCount; i++){
			SyntheticArgumentBinding argument = this.enclosingInstances[i];
			// position the enclosing instance synthetic arg
			argument.resolvedPosition = slotSize + 1; // shift by 1 to leave room for aload0==this
			if (slotSize + 1 > 0xFF) { // no more than 255 words of arguments
				this.scope.problemReporter().noMoreAvailableSpaceForArgument(argument, this.scope.referenceType());
			}
			if ((argument.type == TypeBinding.LONG) || (argument.type == TypeBinding.DOUBLE)){
				slotSize += 2;
			} else {
				slotSize ++;
			}
		}
		this.enclosingInstancesSlotSize = slotSize;

		slotSize = 0; // reset, outer local are not positionned yet, since will be appended to user arguments
		int outerLocalsCount = this.outerLocalVariables == null ? 0 : this.outerLocalVariables.length;
			for (int i = 0; i < outerLocalsCount; i++){
			SyntheticArgumentBinding argument = this.outerLocalVariables[i];
			// do NOT position the outerlocal synthetic arg yet,  since will be appended to user arguments
			if ((argument.type == TypeBinding.LONG) || (argument.type == TypeBinding.DOUBLE)){
				slotSize += 2;
			} else {
				slotSize ++;
			}
		}
		this.outerLocalVariablesSlotSize = slotSize;
	}

