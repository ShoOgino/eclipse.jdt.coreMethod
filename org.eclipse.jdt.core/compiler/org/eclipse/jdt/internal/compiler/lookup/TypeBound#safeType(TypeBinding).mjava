	private TypeBinding safeType(TypeBinding type) {
		if (type != null && type.isLocalType()) {
			MethodBinding enclosingMethod = ((LocalTypeBinding) type.original()).enclosingMethod;
			if (enclosingMethod != null && CharOperation.prefixEquals(TypeConstants.ANONYMOUS_METHOD, enclosingMethod.selector)) {
				// don't use local class inside lambda: lambda is copied, type will be re-created and thus is unmatchable
				if (type.superclass().id == TypeIds.T_JavaLangObject && type.superInterfaces().length > 0)
					return type.superInterfaces()[0];
				return type.superclass();
			}
		}
		return type;
	}

