	public PackageBinding getExportedPackage(char[] qualifiedPackageName) {
		PackageBinding existing = this.exportedPackages.get(qualifiedPackageName);
		if (existing != null && existing != LookupEnvironment.TheNotFoundPackage)
			return existing;
		if (this.isAuto) { // all packages are exported by an automatic module
			return getDeclaredPackage(CharOperation.splitOn('.', qualifiedPackageName));
		}
		//Resolve exports to see if the package or a sub package is exported
		return Stream.of(this.exports).sorted((e1, e2) -> e1.name().length - e2.name().length)
		.filter(e -> CharOperation.prefixEquals(qualifiedPackageName, e.name())) // TODO: improve this
		.map(e -> {
			PackageBinding binding = getDeclaredPackage(CharOperation.splitOn('.', e.name()));
			if (binding != null) {
				this.exportedPackages.put(e.name(), binding);
				return binding;
			}
			return null;
		}).filter(p -> p != null).findFirst().orElse(null);
	}

