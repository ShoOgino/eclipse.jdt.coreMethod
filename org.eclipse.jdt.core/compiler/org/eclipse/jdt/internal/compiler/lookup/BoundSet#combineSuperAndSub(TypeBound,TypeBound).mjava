	private ConstraintFormula combineSuperAndSub(TypeBound boundS, TypeBound boundT) {
		//  permutations of: S <: α and α <: T imply ⟨S <: T⟩
		InferenceVariable alpha = boundS.left;
		if (alpha == boundT.left) //$IDENTITY-COMPARISON$ InferenceVariable
			//  α >: S and α <: T imply ⟨S <: T⟩
			return new ConstraintTypeFormula(boundS.right, boundT.right, ReductionResult.SUBTYPE);
		if (boundS.right instanceof InferenceVariable) {
			// try reverse:
			alpha = (InferenceVariable) boundS.right;
			if (alpha == boundT.right) //$IDENTITY-COMPARISON$ InferenceVariable
				// S :> α and T <: α  imply ⟨S :> T⟩
				return new ConstraintTypeFormula(boundS.left, boundT.left, ReductionResult.SUPERTYPE);
		}
		return null;
	}

