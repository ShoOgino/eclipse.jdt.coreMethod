/*
 * declaringUniqueKey dot fieldName
 * p.X { X<T> x} --> Lp/X;.x
 */
public char[] computeUniqueKey(boolean isLeaf) {
	// declaring key
	char[] declaringKey = 
		this.declaringClass == null /*case of length field for an array*/ 
			? CharOperation.NO_CHAR 
			: this.declaringClass.computeUniqueKey(false/*not a leaf*/);
	int declaringLength = declaringKey.length;
	
	// name
	int nameLength = this.name.length;
	
	char[] uniqueKey = new char[declaringLength + 1 + nameLength];
	int index = 0;
	System.arraycopy(declaringKey, 0, uniqueKey, index, declaringLength);
	index += declaringLength;
	uniqueKey[index++] = '.';
	System.arraycopy(this.name, 0, uniqueKey, index, nameLength);
	return uniqueKey;
}

