private boolean flaggedJavaBaseTypeErrors(ReferenceBinding result, char[][] compoundName) {
	assert result != null && !result.isValidBinding();
	if (CharOperation.equals(TypeConstants.JAVA, compoundName[0])) {
		ReferenceBinding type = getType(compoundName, javaBaseModule());
		if (type != null && type.isValidBinding()) {
			PackageBinding pack = type.getPackage();
			char[] readableName = pack != null ? pack.readableName() : null;
			if (readableName != null) {
				// 7.4.3 : The packages java, java.lang, and java.io are always observable.
				if (CharOperation.equals(readableName, TypeConstants.JAVA)
						|| CharOperation.equals(readableName, CharOperation.concatWith(TypeConstants.JAVA_LANG, '.'))
						|| CharOperation.equals(readableName, CharOperation.concatWith(TypeConstants.JAVA_IO, '.'))) {
					PackageBinding currentPack = getTopLevelPackage(readableName);
					ModuleBinding visibleModule = currentPack != null ? currentPack.enclosingModule : null;
					if (visibleModule != null && visibleModule != javaBaseModule()) {
						// A type from java.base is not visible
						if (!this.globalOptions.enableJdtDebugCompileMode) {
							this.problemReporter.isClassPathCorrect(compoundName, this.root.unitBeingCompleted, this.missingClassFileLocation, visibleModule.readableName());
							return true;
						}
					}
				}
			}
		}
	}
	return false;
}

