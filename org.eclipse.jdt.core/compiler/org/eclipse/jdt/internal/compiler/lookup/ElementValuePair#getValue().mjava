/**
 * Return {@link TypeBinding} for member value of type {@link java.lang.Class}
 * Return {@link org.eclipse.jdt.internal.compiler.impl.Constant} for member of primitive type or String
 * Return {@link FieldBinding} for enum constant
 * Return {@link AnnotationBinding} for annotation instance
 * Return <code>Object[]</code> for member value of array type.
 * @return the value of this member value pair or null if the value is missing or is not a compile-time constant
 */
public Object getValue() {
	if (this.value instanceof UnresolvedEnumConstant)
		this.value = ((UnresolvedEnumConstant)this.value).getResolved();
	else if (this.value instanceof Object[]) {
		Object[] valueArray = (Object[]) this.value;
		for(int i = 0; i < valueArray.length; i++) {
			Object object = valueArray[i];
			if (object instanceof UnresolvedEnumConstant)
				valueArray[i] = ((UnresolvedEnumConstant) object).getResolved();
		}
	}
	return this.value;
}

