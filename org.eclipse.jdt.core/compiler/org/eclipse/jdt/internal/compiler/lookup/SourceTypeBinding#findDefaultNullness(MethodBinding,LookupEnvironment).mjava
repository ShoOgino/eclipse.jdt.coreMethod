/**
 * Answer the nullness default applicable at the given method binding.
 * Possible values:<ul>
 * <li>the type binding for @NonNulByDefault</li>
 * <li>the synthetic type {@link ReferenceBinding#NULL_UNSPECIFIED} if a default from outer scope has been canceled</li>
 * <li>null if no default has been defined</li>
 * </ul>
 */
private TypeBinding findDefaultNullness(MethodBinding methodBinding, LookupEnvironment environment) {
	// find the applicable default inside->out:

	// method
	TypeBinding annotationBinding = environment.getNullAnnotationBindingFromDefault(methodBinding.tagBits, true/*resolve*/);
	if (annotationBinding != null)
		return annotationBinding;

	// type
	ReferenceBinding type = methodBinding.declaringClass;
	ReferenceBinding currentType = type;
	while (currentType instanceof SourceTypeBinding) {
		annotationBinding = ((SourceTypeBinding) currentType).getNullnessDefaultAnnotation();
		if (annotationBinding != null)
			return annotationBinding;
		if (currentType.isLocalType()) {
			// if direct enclosing is a method travel that way:
			MethodBinding enclosingMethod = ((LocalTypeBinding)currentType).enclosingMethod;
			if (enclosingMethod != null)
				return findDefaultNullness(enclosingMethod, environment);
		}
		currentType = currentType.enclosingType();
	}

	// package
	annotationBinding = type.getPackage().getNullnessDefaultAnnotation(this.scope);
	if (annotationBinding != null)
		return annotationBinding;

	// global
	long defaultNullness = environment.globalOptions.defaultNonNullness;
	if (defaultNullness != 0) {
		// we have a default, so we need an annotation type to record this during compile and in the byte code
		annotationBinding = environment.getNullAnnotationBinding(defaultNullness, true/*resolve*/);
		if (annotationBinding != null)
			return annotationBinding;

		// on this branch default was not defined using an annotation, thus annotation type can still be missing
		if (defaultNullness == TagBits.AnnotationNonNull)
			this.scope.problemReporter().missingNullAnnotationType(environment.getNonNullAnnotationName());
		else
			this.scope.problemReporter().abortDueToInternalError("Illegal default nullness value: "+defaultNullness); //$NON-NLS-1$
		// reset default to avoid duplicate errors:
		environment.globalOptions.defaultNonNullness = 0;
	}
	return null;
}

