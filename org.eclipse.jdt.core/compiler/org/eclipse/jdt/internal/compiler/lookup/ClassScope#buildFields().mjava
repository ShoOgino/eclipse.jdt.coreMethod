private void buildFields() {
	if (referenceContext.fields == null) {
		referenceContext.binding.fields = NoFields;
		return;
	}

	// count the number of fields vs. initializers
	FieldDeclaration[] fields = referenceContext.fields;
	int size = fields.length;
	int count = 0;
	for (int i = 0; i < size; i++)
		if (fields[i].isField())
			count++;

	// iterate the field declarations to create the bindings, lose all duplicates
	FieldBinding[] fieldBindings = new FieldBinding[count];
	HashtableOfObject knownFieldNames = new HashtableOfObject(count);
	boolean duplicate = false;
	count = 0;
	for (int i = 0; i < size; i++) {
		FieldDeclaration field = fields[i];
		if (!field.isField()) {
			if (referenceContext.binding.isInterface())
				problemReporter().interfaceCannotHaveInitializers(referenceContext.binding, field);
		} else {
			FieldBinding fieldBinding = new FieldBinding(field, null, referenceContext.binding); // field's type will be resolved when needed for top level types
			checkAndSetModifiersForField(fieldBinding, field);

			if (knownFieldNames.containsKey(field.name)) {
				duplicate = true;
				FieldBinding previousBinding = (FieldBinding) knownFieldNames.get(field.name);
				if (previousBinding != null) {
					for (int f = 0; f < i; f++) {
						FieldDeclaration previousField = fields[f];
						if (previousField.binding == previousBinding) {
							problemReporter().duplicateFieldInType(referenceContext.binding, previousField);
							previousField.binding = null;
							break;
						}
					}
				}
				knownFieldNames.put(field.name, null); // ensure that the duplicate field is found & removed
				problemReporter().duplicateFieldInType(referenceContext.binding, field);
				field.binding = null;
			} else {
				knownFieldNames.put(field.name, fieldBinding); // remember that we have seen a field with this name
				if (fieldBinding != null)
					fieldBindings[count++] = fieldBinding;
			}
		}
	}

	// remove duplicate fields
	if (duplicate) {
		FieldBinding[] newFieldBindings = new FieldBinding[knownFieldNames.size() - 1]; // we know we'll be removing at least 1 duplicate name
		size = count;
		count = 0;
		for (int i = 0; i < size; i++) {
			FieldBinding fieldBinding = fieldBindings[i];
			if (knownFieldNames.get(fieldBinding.name) != null)
				newFieldBindings[count++] = fieldBinding;
		}
		fieldBindings = newFieldBindings;
	}

	if (count != fieldBindings.length)
		System.arraycopy(fieldBindings, 0, fieldBindings = new FieldBinding[count], 0, count);
	for (int i = 0; i < count; i++)
		fieldBindings[i].id = i;
	referenceContext.binding.fields = fieldBindings;
	if (referenceContext.binding.isLocalType())
		referenceContext.binding.fields(); // fault the types for the local type's fields now since we need them
}

