private void createFields(IBinaryField[] iFields, long sourceLevel) {
	this.fields = NoFields;
	if (iFields != null) {
		int size = iFields.length;
		if (size > 0) {
			this.fields = new FieldBinding[size];
			boolean checkGenericSignatures = sourceLevel >= ClassFileConstants.JDK1_5;
			for (int i = 0; i < size; i++) {
				IBinaryField binaryField = iFields[i];
				char[] fieldSignature = checkGenericSignatures ? binaryField.getGenericSignature() : null;
				TypeBinding type = fieldSignature == null
					? environment.getTypeFromSignature(binaryField.getTypeName(), 0, -1, false, this)
					: environment.getTypeFromTypeSignature(new SignatureWrapper(fieldSignature), NoTypeVariables, this);
				FieldBinding field =
					new FieldBinding(
						binaryField.getName(),
						type,
						binaryField.getModifiers() | AccUnresolved,
						this,
						binaryField.getConstant());
				field.id = i; // ordinal
				this.fields[i] = field;

			}
		}
	}
}

