private void createFields(IBinaryField[] iFields, long sourceLevel) {
	this.fields = NoFields;
	if (iFields != null) {
		int size = iFields.length;
		if (size > 0) {
			this.fields = new FieldBinding[size];
			boolean checkGenericSignatures = sourceLevel >= ClassFileConstants.JDK1_5;
			for (int i = 0; i < size; i++) {
				IBinaryField field = iFields[i];
				char[] fieldSignature = checkGenericSignatures ? field.getGenericSignature() : null;
				TypeBinding type = fieldSignature == null
					? environment.getTypeFromSignature(field.getTypeName(), 0, -1, false, this)
					: environment.getTypeFromTypeSignature(new SignatureWrapper(fieldSignature), NoTypeVariables, this);
				this.fields[i] =
					new FieldBinding(
						field.getName(),
						type,
						field.getModifiers() | AccUnresolved,
						this,
						field.getConstant());
			}
		}
	}
}

