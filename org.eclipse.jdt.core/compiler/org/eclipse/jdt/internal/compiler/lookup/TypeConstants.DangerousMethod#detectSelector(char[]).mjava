		public static DangerousMethod detectSelector(char[] selector) {
			switch (selector[0]) {
				case 'r':
					if (CharOperation.prefixEquals(TypeConstants.REMOVE, selector)) {
						if (CharOperation.equals(selector, TypeConstants.REMOVE))
							return DangerousMethod.Remove;
						else if (CharOperation.equals(selector, TypeConstants.REMOVE_ALL))
							return DangerousMethod.RemoveAll;
					} else if (CharOperation.equals(selector, TypeConstants.RETAIN_ALL)) {
						return DangerousMethod.RetainAll;
					}
					break;
				case 'c':
					if (CharOperation.prefixEquals(TypeConstants.CONTAINS, selector)) {
						if (CharOperation.equals(selector, TypeConstants.CONTAINS))
							return DangerousMethod.Contains;
						else if (CharOperation.equals(selector, TypeConstants.CONTAINS_ALL))
							return DangerousMethod.ContainsAll;
						else if (CharOperation.equals(selector, TypeConstants.CONTAINS_KEY))
							return DangerousMethod.ContainsKey;
						else if (CharOperation.equals(selector, TypeConstants.CONTAINS_VALUE))
							return DangerousMethod.ContainsValue;
					}
					break;
				case 'g':
					if (CharOperation.equals(selector, TypeConstants.GET))
						return DangerousMethod.Get;
					break;
				case 'i':
					if (CharOperation.equals(selector, TypeConstants.INDEX_OF))
						return DangerousMethod.IndexOf;
					break;
				case 'l':
					if (CharOperation.equals(selector, TypeConstants.LAST_INDEX_OF))
						return DangerousMethod.LastIndexOf;
					break;
			}
			return null;
		}

