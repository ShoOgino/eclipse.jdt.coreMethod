	public TypeBinding getSAMType(Scope scope) {
		TypeBinding samType = null;
		for (int i = 0, max = this.intersectingTypes.length; i < max; i++) {
			TypeBinding typeBinding = this.intersectingTypes[i];
			MethodBinding methodBinding = typeBinding.getSingleAbstractMethod(scope, true);
			// Why doesn't getSingleAbstractMethod do as the javadoc says, and return null
			// when it is not a SAM type
			if (methodBinding instanceof ProblemMethodBinding && ((ProblemMethodBinding) methodBinding).problemId()==ProblemReasons.NoSuchSingleAbstractMethod) {
				continue;
			}
			if (samType != null) {
				return null; // There is more than one (!), so we don't know which
			}
			samType = typeBinding;
		}
		return samType;
	}

