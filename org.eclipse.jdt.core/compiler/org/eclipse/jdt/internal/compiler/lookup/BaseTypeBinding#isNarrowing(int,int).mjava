	public static final boolean isNarrowing(int left, int right) {

		//can "left" store a "right" using some narrowing conversion
		//(is left smaller than right)
		switch (left) {
			case TypeIds.T_boolean :
				return right == TypeIds.T_boolean;
			case TypeIds.T_char :
			case TypeIds.T_byte :
				if (right == TypeIds.T_byte)
					return true;
			case TypeIds.T_short :
				if (right == TypeIds.T_short)
					return true;
				if (right == TypeIds.T_char)
					return true;
			case TypeIds.T_int :
				if (right == TypeIds.T_int)
					return true;
			case TypeIds.T_long :
				if (right == TypeIds.T_long)
					return true;
			case TypeIds.T_float :
				if (right == TypeIds.T_float)
					return true;
			case TypeIds.T_double :
				if (right == TypeIds.T_double)
					return true;
			default :
				return false;
		}
	}

