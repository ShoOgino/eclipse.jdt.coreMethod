boolean doParametersClash(MethodBinding one, MethodBinding substituteTwo) {
	// must check each parameter pair to see if parameterized types are compatible
	TypeBinding[] oneParams = one.parameters;
	TypeBinding[] twoParams = substituteTwo.parameters;
	for (int i = 0, l = oneParams.length; i < l; i++) {
		if (oneParams[i] == twoParams[i]) continue;
		switch (oneParams[i].leafComponentType().kind()) {
			case Binding.PARAMETERIZED_TYPE :
				if (!twoParams[i].leafComponentType().isParameterizedType()
					|| !oneParams[i].isEquivalentTo(twoParams[i])
					|| !twoParams[i].isEquivalentTo(oneParams[i])) {
						return true;
				}
				break;
			case Binding.TYPE_PARAMETER :
				return true; // type variables must be identical (due to substitution) given their erasures are equal
		}
		if (twoParams[i].leafComponentType().isTypeVariable())
			return true; // type variables must be identical (due to substitution) given their erasures are equal
	}
	return false;
}

