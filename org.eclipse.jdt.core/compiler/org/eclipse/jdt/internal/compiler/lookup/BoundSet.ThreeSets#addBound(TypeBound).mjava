		/** Add a type bound to the appropriate set. */
		public boolean addBound(TypeBound bound) {
			Iterator<TypeBound> it = null;
			switch (bound.relation) {
				case ReductionResult.SUPERTYPE:
					if (this.superBounds == null) this.superBounds = new HashSet<>();
					if (CompilerOptions.useunspecdtypeinferenceperformanceoptimization) {
						if (!bound.right.isProperType(true)) {
							it = this.superBounds.iterator();
							while (it.hasNext()) {
								TypeBound b = it.next();
								if (bound.right.isParameterizedType() && b.right.isParameterizedType()
										&& b.right.original() == bound.right.original()) { //$IDENTITY-COMPARISON$
									TypeBinding clone = mergeTypeParameters((ParameterizedTypeBinding) b.right,
											(ParameterizedTypeBinding) bound.right);
									if (clone != null) {
										b.right = clone;
										return false;
									}
								}
							}
						}
					}
					return this.superBounds.add(bound);
				case ReductionResult.SAME:
					if (this.sameBounds == null) this.sameBounds = new HashSet<>();
					return this.sameBounds.add(bound);
				case ReductionResult.SUBTYPE:
					if (this.subBounds == null) this.subBounds = new HashSet<>();
					if (CompilerOptions.useunspecdtypeinferenceperformanceoptimization) {
						if (!bound.right.isProperType(true)) {
							it = this.subBounds.iterator();
							while (it.hasNext()) {
								TypeBound b = it.next();
								if (bound.right.isParameterizedType() && b.right.isParameterizedType()
										&& b.right.original() == bound.right.original()) { //$IDENTITY-COMPARISON$
									TypeBinding clone = mergeTypeParameters((ParameterizedTypeBinding) b.right,
											(ParameterizedTypeBinding) bound.right);
									if (clone != null) {
										b.right = clone;
										return false;
									}
								}
							}
						}
					}
					return this.subBounds.add(bound);
				default:
					throw new IllegalArgumentException("Unexpected bound relation in : " + bound); //$NON-NLS-1$
			}
		}

