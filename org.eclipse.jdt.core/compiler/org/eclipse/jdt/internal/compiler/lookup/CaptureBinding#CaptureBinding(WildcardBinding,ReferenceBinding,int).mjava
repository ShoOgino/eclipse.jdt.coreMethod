	public CaptureBinding(WildcardBinding wildcard, ReferenceBinding sourceType, int position) {
		super(WILDCARD_CAPTURE_NAME, null, 0);
		this.wildcard = wildcard;
		this.modifiers = AccPublic | AccGenericSignature; // treat capture as public
		this.fPackage = wildcard.fPackage;
		this.sourceType = sourceType;
		this.position = position;
		TypeVariableBinding wildcardVariable = wildcard.typeVariable();
		switch (wildcard.boundKind) {
			case Wildcard.EXTENDS :
				this.superclass = wildcard.superclass();
				this.firstBound = wildcard.bound;
				ReferenceBinding[] wildcardInterfaces = wildcard.superInterfaces();
				if (wildcardInterfaces == NoSuperInterfaces) {
					this.superInterfaces = NoSuperInterfaces;
				} else {
					this.superInterfaces = Scope.greaterLowerBound(wildcardInterfaces);
				}
				if ((wildcard.bound.tagBits & HasTypeVariable) == 0)
					this.tagBits &= ~HasTypeVariable;
				break;
			case Wildcard.UNBOUND :
				this.superclass = wildcardVariable.superclass();
				this.superInterfaces = wildcardVariable.superInterfaces();
				this.tagBits &= ~HasTypeVariable;
				break;
			case Wildcard.SUPER :
				this.superclass = wildcardVariable.superclass();
				if (wildcardVariable.firstBound == this.superclass || wildcard.bound == this.superclass) {
					this.firstBound = this.superclass;
				}
				this.superInterfaces = wildcardVariable.superInterfaces();
				this.lowerBound = wildcard.bound;
				if ((wildcard.bound.tagBits & HasTypeVariable) == 0)
					this.tagBits &= ~HasTypeVariable;
				break;
		}
	}

