/*
 *  Used to guarantee annotation identity.
 */
public AnnotationBinding createAnnotation(ReferenceBinding annotationType, ElementValuePair[] pairs) {
	// cached info is array of already created annotation binding for this type
	AnnotationBinding[] cachedInfo = (AnnotationBinding[])this.uniqueAnnotationBindings.get(annotationType);
	boolean needToGrow = false;
	int index = 0;
	if (pairs.length != 0) {
		AnnotationBinding.setMethodBindings(annotationType, pairs);
	}
	if (cachedInfo != null){
		nextCachedType : 
			// iterate existing parameterized for reusing one with same type arguments if any
			for (int max = cachedInfo.length; index < max; index++){
				AnnotationBinding cachedType = cachedInfo[index];
				if (cachedType == null) break nextCachedType;
				ElementValuePair[] elementValuePairs = cachedType.pairs;
				int length2 = pairs.length;
				if (length2 != elementValuePairs.length) continue nextCachedType;
				loop: for (int i = 0; i < length2; i++) {
					ElementValuePair pair = elementValuePairs[i];
					// loop on the given pair to make sure one will match
					for (int j = 0; j < length2; j++) {
						ElementValuePair pair2 = pairs[j];
						if (pair.binding == pair2.binding) {
							if (pair.value == null) {
								if (pair2.value == null) {
									continue loop;
								}
								continue nextCachedType;
							} else {
								if (pair2.value == null
										|| !pair2.value.equals(pair.value)) {
									continue nextCachedType;
								}
							}
							continue loop;
						}
					}
					// no match found for pair so we create a new annotation binding
					continue nextCachedType;
				}
				// cached type match, reuse current
				return cachedType;
		}
		needToGrow = true;
	} else {
		cachedInfo = new AnnotationBinding[1];
		this.uniqueAnnotationBindings.put(annotationType, cachedInfo);
	}
	// grow cache ?
	int length = cachedInfo.length;
	if (needToGrow && index == length){
		System.arraycopy(cachedInfo, 0, cachedInfo = new AnnotationBinding[length*2], 0, length);
		this.uniqueAnnotationBindings.put(annotationType, cachedInfo);
	}
	// add new binding
	AnnotationBinding annotationBinding = new AnnotationBinding(annotationType, pairs);
	cachedInfo[index] = annotationBinding;
	return annotationBinding;
}

