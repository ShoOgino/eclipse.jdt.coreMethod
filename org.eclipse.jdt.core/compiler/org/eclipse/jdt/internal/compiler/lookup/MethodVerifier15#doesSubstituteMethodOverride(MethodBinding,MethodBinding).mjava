boolean doesSubstituteMethodOverride(MethodBinding method, MethodBinding substituteMethod) {
	if (doTypeVariablesClash(method, substituteMethod)) return false;
	if (areParametersEqual(method, substituteMethod)) return true;
	if (method.declaringClass == substituteMethod.declaringClass) return false;

	TypeBinding[] params = method.parameters;
	TypeBinding[] inheritedParams = substituteMethod.parameters;
	int length = params.length;
	if (length != inheritedParams.length)
		return false;

	// also allow a method such as Number foo(Number) to override <U> T foo(T) where T extends Number
	if (method.typeVariables != NoTypeVariables || !substituteMethod.hasSubstitutedParameters())
		return false;
	if (method.declaringClass.findSuperTypeWithSameErasure(substituteMethod.declaringClass) == null)
		return false;

	for (int i = 0; i < length; i++)
		if (params[i] != inheritedParams[i].erasure())
			return false;
	return true;
}

