	/* Note that it must never produce a direct access to the targetEnclosingType,
	but instead a field sequence (this$2.this$1.this$0) so as to handle such a test case:
	
	class XX {
		void foo() {
			class A {
				class B {
					class C {
						boolean foo() {
							return (Object) A.this == (Object) B.this;
						}
					}
				}
			}
			new A().new B().new C();
		}
	}

	where we only want to deal with ONE enclosing instance for C (could not figure out an A for C)
	*/
	public final ReferenceBinding findLocalType(char[] name) {
		for (int i = 0, length = scopeIndex; i < length; i++) {
			if (subscopes[i] instanceof ClassScope) {
				SourceTypeBinding sourceType =
					((ClassScope) subscopes[i]).referenceContext.binding;
				if (CharOperation.equals(sourceType.sourceName(), name))
					return sourceType;
			}
		}
		return null;
	}

