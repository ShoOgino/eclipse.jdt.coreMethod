// caveat: returns false if a method is implemented that needs a bridge method
boolean isInterfaceMethodImplemented(MethodBinding inheritedMethod, MethodBinding existingMethod, ReferenceBinding superType) {
	if (inheritedMethod.original() != inheritedMethod && existingMethod.declaringClass.isInterface())
		return false; // must hold onto ParameterizedMethod to see if a bridge method is necessary

	inheritedMethod = computeSubstituteMethod(inheritedMethod, existingMethod);
	return inheritedMethod != null
		&& (inheritedMethod.returnType == existingMethod.returnType	// need to keep around to produce bridge methods? ...
			|| (this.type != existingMethod.declaringClass 			// ... not if inheriting the bridge situation from a superclass
					&& !existingMethod.declaringClass.isInterface()))
		&& doesMethodOverride(existingMethod, inheritedMethod);
}

