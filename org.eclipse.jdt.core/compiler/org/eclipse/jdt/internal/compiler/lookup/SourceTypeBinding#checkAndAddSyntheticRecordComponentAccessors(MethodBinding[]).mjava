public List<MethodBinding> checkAndAddSyntheticRecordComponentAccessors(MethodBinding[] methodBindings) {
	List<MethodBinding> implicitMethods = new ArrayList<>(0);
	if (this.fields == null)
		return implicitMethods;
	// JLS 14 8.10.3 Item 2 create the accessors for the fields if required
	/*
	 * An implicitly declared public accessor method with the same name as the record component,
	 * whose return type is the declared type of the record component,
	 * unless a public method with the same signature is explicitly declared in the body of the declaration of R.
	 */

	// Note: filteredComponents implies that only those components which are successful in having field - for eg
	// if the component name is not correct (say one of finalize, clone etc) then the compilation not successful
	// and no accessor should be created (essentially in a recovered code if there are errors) - if there are no
	// errors then filteredComponents equals components.
	List<String> filteredComponents = Arrays.stream(this.fields) // initialize with all the record components
			.filter(f -> f.isRecordComponent())
			.map(f -> new String(f.name))
			.collect(Collectors.toList());

	List<MethodBinding> accessors = new ArrayList<>();
	if (this.methods != null) {
		accessors = Arrays.stream(methodBindings)
				.filter(m -> m.selector != null && m.selector.length > 0)
				.filter(m -> filteredComponents.contains(new String(m.selector)))
				.filter(m -> m.parameterNames == null || m.parameterNames.length == 0)
				.collect(Collectors.toList());

		List<String> candidates = accessors.stream()
			.map(m -> new String(m.selector))
			.collect(Collectors.toList());
		filteredComponents.removeAll(candidates);
	}
	int missingCount = filteredComponents.size();
	for (int i = 0; i < missingCount; ++i) {
		RecordComponentBinding rcb = this.getRecordComponent(filteredComponents.get(i).toCharArray());
		if (rcb != null)
			implicitMethods.add(addSyntheticRecordComponentAccessor(rcb, i));
	}
	accessors.addAll(implicitMethods);
	this.recordComponentAccessors = accessors.toArray(new MethodBinding[0]);
	return implicitMethods;
}

