public List<MethodBinding> checkAndAddSyntheticRecordComponentAccessors(MethodBinding[] methodBindings) {
	List<MethodBinding> implicitMethods = new ArrayList<>(0);
	if (this.fields == null)
		return implicitMethods;
	// JLS 14 8.10.3 Item 2 create the accessors for the fields if required
	/*
	 * An implicitly declared public accessor method with the same name as the record component,
	 * whose return type is the declared type of the record component,
	 * unless a public method with the same signature is explicitly declared in the body of the declaration of R.
	 */

	List<String> missingNames = Arrays.stream(this.fields) // initialize with all the record components
			.filter(f -> f.isRecordComponent())
			.map(f -> new String(f.name))
			.collect(Collectors.toList());

	if (this.methods != null) {
		List<String> candidates =
			Arrays.stream(methodBindings)
			.filter(m -> m.selector != null && m.selector.length > 0)
			.filter(m -> missingNames.contains(new String(m.selector)))
			.filter(m -> m.parameters == null || m.parameters.length == 0)
			.map(m -> new String(m.selector))
			.collect(Collectors.toList());
		missingNames.removeAll(candidates);
	}
	int missingCount = missingNames.size();
	for (int i = 0; i < missingCount; ++i) {
		implicitMethods.add(addSyntheticRecordComponentAccessor(missingNames.get(i).toCharArray(), i));
	}
	return implicitMethods;
}

