 	// A context including this module and all it's required modules
 	public IModuleContext getDependencyClosureContext() {
 		Stream<ModuleBinding> stream = null;
 		if (this.isAuto) {
 			stream = getAllAutomaticModules();
 		} else {
 			stream = Stream.of(getAllRequiredModules());
 		}
		return getModuleLookupContext().includeAll(stream.map(m -> m.getModuleLookupContext()))
			.includeAll(getAllAutomaticModules().
					map(m -> m.getModuleLookupContext()));
 	}

