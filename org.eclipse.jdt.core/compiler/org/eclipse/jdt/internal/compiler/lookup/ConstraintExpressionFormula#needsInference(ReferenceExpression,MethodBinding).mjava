	private boolean needsInference(ReferenceExpression reference, MethodBinding original) {
		if (reference.typeArguments != null)
			return false;
		TypeBinding compileTimeReturn;
		if (original.isConstructor()) {
			// not checking r.mentionsAny for constructors, because A::new resolves to the raw type
			// whereas in fact the type of all expressions of this shape depend on their type variable (if any)
			if (original.declaringClass.typeVariables() != Binding.NO_TYPE_VARIABLES
					&& reference.receiverType.isRawType())
				return true; // diamond
			compileTimeReturn = original.declaringClass;
		} else {
			compileTimeReturn =  original.returnType;
		}
		return (original.typeVariables() != Binding.NO_TYPE_VARIABLES
				&& compileTimeReturn.mentionsAny(original.typeVariables(), -1));
	}

