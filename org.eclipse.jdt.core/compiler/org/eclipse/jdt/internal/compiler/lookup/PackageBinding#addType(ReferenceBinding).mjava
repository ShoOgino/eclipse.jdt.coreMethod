void addType(ReferenceBinding element) {
	if ((element.tagBits & TagBits.HasMissingType) == 0) clearMissingTagBit();
	if (this.knownTypes == null)
		this.knownTypes = new HashtableOfType(25);
	char [] name = element.compoundName[element.compoundName.length - 1];
	ReferenceBinding priorType = this.knownTypes.getput(name, element);
	if (priorType != null && priorType.isUnresolvedType() && !element.isUnresolvedType()) {
		((UnresolvedReferenceBinding) priorType).setResolvedType(element, this.environment);
	}
	if (this.environment.globalOptions.isAnnotationBasedNullAnalysisEnabled)
		if (element.isAnnotationType() || element instanceof UnresolvedReferenceBinding) // unresolved types don't yet have the modifiers set
			checkIfNullAnnotationType(element);

	if (!element.isUnresolvedType() && this.wrappingSplitPackageBindings != null) {
		for (SplitPackageBinding splitPackageBinding : this.wrappingSplitPackageBindings) {
			if (splitPackageBinding.knownTypes != null) {
				ReferenceBinding prior = splitPackageBinding.knownTypes.get(name);
				if (prior != null && prior.isUnresolvedType() && !element.isUnresolvedType()) {
					((UnresolvedReferenceBinding) prior).setResolvedType(element, this.environment);
					splitPackageBinding.knownTypes.put(name, null); // forces re-checking for conflicts
				}
			}
		}
	}
}

