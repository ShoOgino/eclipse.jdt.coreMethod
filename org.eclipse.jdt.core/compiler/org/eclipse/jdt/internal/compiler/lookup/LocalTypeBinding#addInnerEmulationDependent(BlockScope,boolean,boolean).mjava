	public void addInnerEmulationDependent(
		BlockScope scope,
		boolean wasEnclosingInstanceSupplied,
		boolean useDirectAccess) {
		int index;
		if (dependents == null) {
			index = 0;
			dependents = new InnerEmulationDependency[1];
		} else {
			index = dependents.length;
			for (int i = 0; i < index; i++)
				if (dependents[i].scope == scope)
					return; // already stored
			System.arraycopy(
				dependents,
				0,
				(dependents = new InnerEmulationDependency[index + 1]),
				0,
				index);
		}
		dependents[index] =
			new InnerEmulationDependency(
				scope,
				wasEnclosingInstanceSupplied,
				useDirectAccess);
		//  System.out.println("Adding dependency: "+ new String(scope.enclosingType().readableName()) + " --> " + new String(this.readableName()));
	}

