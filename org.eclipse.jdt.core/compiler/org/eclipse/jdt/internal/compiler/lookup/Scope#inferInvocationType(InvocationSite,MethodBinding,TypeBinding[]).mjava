	/**
	 * Given a selected applibable method, check if it has an unfinished InferenceContext18 associated.
	 * If so perform the outstanding Invocation Type Inference and return the improved method,
	 * otherwise return the applicable method unchanged.
	 */
	protected MethodBinding inferInvocationType(InvocationSite invocationSite, MethodBinding applicable, TypeBinding[] argumentTypes) {
		if (invocationSite instanceof Invocation) {
			Invocation invocation = (Invocation) invocationSite;
			if (applicable instanceof ParameterizedGenericMethodBinding) {
				ParameterizedGenericMethodBinding parameterizedMethod = (ParameterizedGenericMethodBinding) applicable;
				InferenceContext18 infCtx18 = invocation.getInferenceContext(parameterizedMethod);
				if (infCtx18 != null && !infCtx18.hasResultFor(invocation.invocationTargetType())) {
					return infCtx18.inferInvocationType(invocation, argumentTypes, parameterizedMethod);
				}
			} else {
				ASTNode.resolvePolyExpressionArguments(invocation, applicable, argumentTypes, this);
			}
		}
		return applicable;
	}

