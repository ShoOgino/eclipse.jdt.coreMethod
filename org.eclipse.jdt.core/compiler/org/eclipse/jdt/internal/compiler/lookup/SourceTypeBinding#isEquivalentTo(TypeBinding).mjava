/**
 * Returns true if a type is identical to another one,
 * or for generic types, true if compared to its raw type.
 */
public boolean isEquivalentTo(TypeBinding otherType) {

	if (this == otherType) return true;
    if (otherType == null) return false;
    switch(otherType.bindingType()) {

    	case Binding.WILDCARD_TYPE :
			return ((WildcardBinding) otherType).boundCheck(this);
    	
    	case Binding.PARAMETERIZED_TYPE :
	        if ((otherType.tagBits & HasDirectWildcard) == 0 && (!this.isMemberType() || !otherType.isMemberType())) 
	        	return false; // should have been identical
	        ParameterizedTypeBinding otherParamType = (ParameterizedTypeBinding) otherType;
	        if (this != otherParamType.type) 
	            return false;
            if (!isStatic()) { // static member types do not compare their enclosing
		        ReferenceBinding enclosing = enclosingType();
		        if (enclosing != null && !enclosing.isEquivalentTo(otherParamType.enclosingType()))
		            return false;
            }
	        int length = this.typeVariables == null ? 0 : this.typeVariables.length;
	        TypeBinding[] otherArguments = otherParamType.arguments;
	        int otherLength = otherArguments == null ? 0 : otherArguments.length;
	        if (otherLength != length) 
	            return false;
	        for (int i = 0; i < length; i++) {
	        	if (!this.typeVariables[i].isTypeArgumentContainedBy(otherArguments[i]))
					return false;
	        }
	        return true;
    	
    	case Binding.RAW_TYPE :
	        return otherType.erasure() == this;
    }
	return false;
}

