/* mark as skippable
 * - any interface method implemented by a class method
 * - an x method (x in {class, interface}), for which another x method with a subsignature was found
 * mark as isOverridden
 * - any skippable method as defined above iff it is actually overridden by the specific method (disregarding visibility etc.)
 * Note, that 'idx' corresponds to the position of 'general' in the arrays 'skip' and 'isOverridden'
 * TODO(stephan) currently (as of Bug 410325), the boarder between skip and isOverridden is blurred,
 *                should reassess after more experience with this patch.
 */
boolean isSkippableOrOverridden(MethodBinding specific, MethodBinding general, boolean[] skip, boolean[] isOverridden, int idx) {
	boolean specificIsInterface = specific.declaringClass.isInterface();
	boolean generalIsInterface = general.declaringClass.isInterface();
	if (!specificIsInterface && generalIsInterface) {
		if (isInterfaceMethodImplemented(general, specific, general.declaringClass)) {
			skip[idx] = true;
			isOverridden[idx] = true;
			return true;
		}
	} else if (specificIsInterface == generalIsInterface) {
		if (specific.declaringClass.isCompatibleWith(general.declaringClass) && isMethodSubsignature(specific, general)) {
			skip[idx] = true;
			isOverridden[idx] = true;
			return true;
		}
	}
	return false;
}

