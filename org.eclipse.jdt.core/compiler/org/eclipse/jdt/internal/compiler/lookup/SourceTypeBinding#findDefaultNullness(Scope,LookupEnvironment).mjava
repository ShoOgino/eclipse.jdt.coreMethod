/**
 * Answer the nullness default applicable at the given method binding.
 * Possible values:<ul>
 * <li>the type binding for @NonNulByDefault</li>
 * <li>the synthetic type {@link ReferenceBinding#NULL_UNSPECIFIED} if a default from outer scope has been canceled</li>
 * <li>null if no default has been defined</li>
 * </ul>
 * @param currentScope where to start search for lexically enclosing default
 * @param environment gateway to options and configured annotation types
 */
private TypeBinding findDefaultNullness(Scope currentScope, LookupEnvironment environment) {
	// find the applicable default inside->out:

	SourceTypeBinding currentType = null;
	TypeBinding annotationBinding;
	while (currentScope != null) {
		switch (currentScope.kind) {
			case Scope.METHOD_SCOPE:
				AbstractMethodDeclaration referenceMethod = ((MethodScope)currentScope).referenceMethod();
				if (referenceMethod != null && referenceMethod.binding != null) {
					annotationBinding = environment.getNullAnnotationBindingFromDefault(referenceMethod.binding.tagBits, true/*resolve*/);
					if (annotationBinding != null)
						return annotationBinding;
				}
				break;
			case Scope.CLASS_SCOPE:
				currentType = ((ClassScope)currentScope).referenceContext.binding;
				if (currentType != null) {
					annotationBinding = currentType.getNullnessDefaultAnnotation();
					if (annotationBinding != null)
						return annotationBinding;
				}
				break;
		}
		currentScope = currentScope.parent;
	}

	// package
	if (currentType != null) {
		annotationBinding = currentType.getPackage().getNullnessDefaultAnnotation(this.scope);
		if (annotationBinding != null)
			return annotationBinding;
	}

	// global
	long defaultNullness = environment.globalOptions.defaultNonNullness;
	if (defaultNullness != 0) {
		// we have a default, so we need an annotation type to record this during compile and in the byte code
		annotationBinding = environment.getNullAnnotationBinding(defaultNullness, true/*resolve*/);
		if (annotationBinding != null)
			return annotationBinding;

		// on this branch default was not defined using an annotation, thus annotation type can still be missing
		if (defaultNullness == TagBits.AnnotationNonNull)
			this.scope.problemReporter().missingNullAnnotationType(environment.getNonNullAnnotationName());
		else
			this.scope.problemReporter().abortDueToInternalError("Illegal default nullness value: "+defaultNullness); //$NON-NLS-1$
		// reset default to avoid duplicate errors:
		environment.globalOptions.defaultNonNullness = 0;
	}
	return null;
}

