boolean detectInheritedNameClash(MethodBinding inherited, MethodBinding otherInherited) {
	if (!inherited.areParameterErasuresEqual(otherInherited))
		return false;
	if (this.environment.globalOptions.sourceLevel < ClassFileConstants.JDK1_7) {
		// with fix for http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6182950
		// we now ignore return types when detecting name clashes
		// FYI for now we will only make this change when compliance is set to 1.7 or higher
		if (inherited.returnType.erasure() != otherInherited.returnType.erasure())
			return false;
	}
	// skip it if otherInherited is defined by a subtype of inherited's declaringClass
	if (inherited.declaringClass.erasure() != otherInherited.declaringClass.erasure())
		if (inherited.declaringClass.findSuperTypeOriginatingFrom(otherInherited.declaringClass) != null)
			return false;

	problemReporter().inheritedMethodsHaveNameClash(this.type, inherited, otherInherited);
	return true;
}

