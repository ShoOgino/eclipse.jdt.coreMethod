boolean mustImplementAbstractMethods() {
	if (!super.mustImplementAbstractMethods()) return false;
	if (!this.type.isEnum() || this.type.isAnonymousType()) return true;

	// enum type only needs to implement abstract methods if any of its constants does not supply a body
	TypeDeclaration typeDeclaration = this.type.scope.referenceContext;
	for (int i = 0, length = typeDeclaration.fields == null ? 0 : typeDeclaration.fields.length; i < length; i++) {
		FieldDeclaration fieldDecl = typeDeclaration.fields[i];
		if (fieldDecl.getKind() == AbstractVariableDeclaration.ENUM_CONSTANT)
			if (!(fieldDecl.initialization instanceof QualifiedAllocationExpression))
				return true; // leave mustImplementAbstractMethods flag on 
	}
	return false; // since all enum constants define an anonymous body
}

