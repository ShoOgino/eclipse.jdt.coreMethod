	/**
	 * Construct enum special methods: values or valueOf methods
	 */
	public SyntheticMethodBinding(SourceTypeBinding declaringEnum, char[] selector) {
		if (selector == TypeConstants.VALUES) {
		    this.declaringClass = declaringEnum;
		    this.selector = selector;
		    this.modifiers = AccFinal | AccPublic | AccStatic;
		    this.returnType = declaringEnum.scope.createArrayType(declaringEnum, 1);
		    this.parameters = NoParameters;
		    this.thrownExceptions = NoExceptions;
		    this.kind = EnumValues;
			SyntheticMethodBinding[] knownAccessMethods = ((SourceTypeBinding)this.declaringClass).syntheticMethods();
			int methodId = knownAccessMethods == null ? 0 : knownAccessMethods.length;
			this.index = methodId;	    
		} else if (selector == TypeConstants.VALUEOF) {
		    this.declaringClass = declaringEnum;
		    this.selector = selector;
		    this.modifiers = AccFinal | AccPublic | AccStatic;
		    this.returnType = declaringEnum;
		    this.parameters = new TypeBinding[]{ declaringEnum.scope.getJavaLangString() };
		    this.thrownExceptions = NoExceptions;
		    this.kind = EnumValueOf;
			SyntheticMethodBinding[] knownAccessMethods = ((SourceTypeBinding)this.declaringClass).syntheticMethods();
			int methodId = knownAccessMethods == null ? 0 : knownAccessMethods.length;
			this.index = methodId;	    
		}
	}

