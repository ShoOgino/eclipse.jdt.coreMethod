	/**
	 * Simplified API to perform Invocation Type Inference (JLS 18.5.2)
	 * and perform subsequent steps: bound check, rebinding of inner poly expressions,
	 * and creating of a problem method binding if needed.
	 * Should only be called if the inference has not yet finished.
	 * Version used for inner invocations, where argument types need to be extracted
	 * from actual invocation arguments.
	 * @param invocation invocation being inferred
	 * @param method current candidate method binding for this invocation
	 * @return a valid method binding with updated type parameters,
	 * 	or a problem method binding signaling either inference failure or a bound mismatch.
	 */
	public /*@NonNull*/ MethodBinding inferInvocationType(Invocation invocation, ParameterizedGenericMethodBinding method) {
		TypeBinding[] argumentTypes = null;
		Expression[] arguments = invocation.arguments();
		if (arguments != null) {
			argumentTypes = new TypeBinding[arguments.length];
			for (int i = 0; i < arguments.length; i++)
				argumentTypes[i] = arguments[i].resolvedType;
		}
		return inferInvocationType(invocation, argumentTypes, method);
	}

