	/**
	 * Check if the specified package is exported to the client module by this module. True if the package appears
	 * in the list of exported packages and when the export is targeted, the module appears in the targets of the
	 * exports statement
	 * @param pkg - the package whose visibility is to be checked
	 * @param client - the module that wishes to use the package
	 * @return true if the package is visible to the client module, false otherwise
	 */
	public boolean isPackageExportedTo(PackageBinding pkg, ModuleBinding client) {
		PackageBinding resolved = getExportedPackage(pkg.readableName());
		if (resolved == pkg) {
			if (this.isAuto) { // all packages are exported by an automatic module
				return true;
			}
			Predicate<IPackageExport> isTargeted = IPackageExport::isQualified;
			Predicate<IPackageExport> isExportedTo = e -> 
				Stream.of(e.targets()).map(ref -> this.environment.getModule(ref)).filter(m -> m != null).anyMatch(client::equals);
			
			return Stream.of(this.exports).filter(e -> CharOperation.equals(pkg.readableName(), e.name()))
					.anyMatch(isTargeted.negate().or(isExportedTo));
		}
		return false;
	}

