private MethodBinding findMethod(char[] methodDescriptor, char[][][] missingTypeNames) {
	int index = -1;
	while (methodDescriptor[++index] != '(') {
		// empty
	}
	char[] selector = new char[index];
	System.arraycopy(methodDescriptor, 0, selector, 0, index);
	TypeBinding[] parameters = Binding.NO_PARAMETERS;
	int numOfParams = 0;
	char nextChar;
	while ((nextChar = methodDescriptor[++index]) != ')') {
		if (nextChar != '[') {
			numOfParams++;
			if (nextChar == 'L')
				while ((nextChar = methodDescriptor[++index]) != ';'){/*empty*/}
		}
	}

	int startIndex = 0;
	if (numOfParams > 0) {
		parameters = new TypeBinding[numOfParams];
		index = 1;
		int end = 0;   // first character is always '(' so skip it
		for (int i = 0; i < numOfParams; i++) {
			while ((nextChar = methodDescriptor[++end]) == '['){/*empty*/}
			if (nextChar == 'L')
				while ((nextChar = methodDescriptor[++end]) != ';'){/*empty*/}

			if (i >= startIndex) {   // skip the synthetic arg if necessary
				parameters[i - startIndex] = this.environment.getTypeFromSignature(methodDescriptor, index, end, false, this, missingTypeNames);
			}
			index = end + 1;
		}
	}

	return CharOperation.equals(selector, TypeConstants.INIT)
		? this.enclosingType.getExactConstructor(parameters)
		: this.enclosingType.getExactMethod(selector, parameters, null);
}

