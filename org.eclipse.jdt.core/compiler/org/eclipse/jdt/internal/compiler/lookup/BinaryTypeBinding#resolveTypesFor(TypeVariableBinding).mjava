private TypeVariableBinding resolveTypesFor(TypeVariableBinding variable) {
	if ((variable.modifiers & AccUnresolved) == 0)
		return variable;

	if (variable.superclass != null)
		variable.superclass = resolveUnresolvedType(variable.superclass, this.environment, true);
	if (variable.firstBound != null)
		variable.firstBound = resolveUnresolvedType(variable.firstBound, this.environment, true);
	ReferenceBinding[] interfaces = variable.superInterfaces;
	for (int i = interfaces.length; --i >= 0;)
		interfaces[i] = resolveUnresolvedType(interfaces[i], this.environment, true);
	variable.modifiers ^= AccUnresolved;

	// finish resolving the types
	if (variable.superclass != null)
		variable.superclass = resolveType(variable.superclass, this.environment, true);
	if (variable.firstBound != null)
		variable.firstBound = resolveType(variable.firstBound, this.environment, true);
	for (int i = interfaces.length; --i >= 0;)
		interfaces[i] = resolveType(interfaces[i], this.environment, true);
	return variable;
}
/* Answer the receiver's superclass... null if the receiver is Object or an interface.
*
* NOTE: superclass of a binary type is resolved when needed
*/

