/**
 * Find supertype which erases to a given type, or null if not found
 */
public TypeBinding findSuperTypeWithSameErasure(TypeBinding otherType) {

	if (this == otherType) return this;
	int otherDim = otherType.dimensions();
	if (this.dimensions != otherDim) {
		switch(otherType.id) {
			case T_JavaLangObject :
			case T_JavaIoSerializable :
			case T_JavaLangCloneable :
				return otherType;
		}
		if (otherDim < this.dimensions & otherType.leafComponentType().id == T_JavaLangObject) {
			return otherType; // X[][] has Object[] as an implicit supertype
		}
		return null;
	}
	if (!(this.leafComponentType instanceof ReferenceBinding)) return null;
	TypeBinding leafSuperType = ((ReferenceBinding)this.leafComponentType).findSuperTypeWithSameErasure(otherType.leafComponentType());
	if (leafSuperType == null) return null;
	return environment().createArrayType(leafSuperType, this.dimensions);	
}

