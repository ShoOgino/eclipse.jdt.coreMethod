public boolean isMethodSubsignature(MethodBinding method, MethodBinding inheritedMethod) {
	if (!org.eclipse.jdt.core.compiler.CharOperation.equals(method.selector, inheritedMethod.selector))
		return false;

	// need to switch back to the original if the method is from a ParameterizedType
	if (method.declaringClass.isParameterizedType())
		method = method.original();

	inheritedMethod = inheritedMethod.original();
	TypeBinding match = method.declaringClass.findSuperTypeOriginatingFrom(inheritedMethod.declaringClass);
	if ((match instanceof ReferenceBinding) && match != inheritedMethod.declaringClass) {
		MethodBinding[] superMethods = ((ReferenceBinding) match).getMethods(inheritedMethod.selector);
		for (int i = 0, length = superMethods.length; i < length; i++)
			if (superMethods[i].original() == inheritedMethod.original())
				return isParameterSubsignature(method, superMethods[i]);
	}

	return isParameterSubsignature(method, inheritedMethod);
}

