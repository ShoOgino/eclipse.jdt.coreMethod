	public boolean isPackageVisible(char[] packageName, char[] sourceName, char[] clientName) {
		if (CharOperation.equals(sourceName, clientName)) 
			return true;

		IModule source = getModule(sourceName);
		IModule client = getModule(clientName);
		if (client != null) {
			IModule.IModuleReference[] requires = client.requires();
			if (requires != null && requires.length > 0) {
				for (IModule.IModuleReference ref : requires) {
					IModule refModule = getModule(ref.name());
					if (refModule == null) 
						continue;
					if (refModule == source && isPackageExportedTo(refModule, packageName, client)) {
						return true;
					}
					Set<IModule> set = new LinkedHashSet<>();
					collectAllVisibleModules(refModule, set);
					IModule[] targets = set.toArray(new IModule[set.size()]);
					for (IModule iModule : targets) {
						if (iModule == source && isPackageExportedTo(iModule, packageName, client)) {
							return true;
						}
					}
				}
			}
			return false;
		}
		return true;
	}

