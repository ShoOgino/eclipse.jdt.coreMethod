	private void checkForInheritedMemberTypes(SourceTypeBinding sourceType) {
		// search up the hierarchy of the sourceType to see if any superType defines a member type
		// when no member types are defined, tag the sourceType & each superType with the HasNoMemberTypes bit
		ReferenceBinding currentType = sourceType;
		ReferenceBinding[][] interfacesToVisit = null;
		int lastPosition = -1;
		do {
			if ((currentType.tagBits & HasNoMemberTypes) != 0)
				break; // already know it has no inherited member types, can stop looking up
			if (currentType.hasMemberTypes()) // avoid resolving member types eagerly
				return; // has member types
			ReferenceBinding[] itsInterfaces = currentType.superInterfaces();
			if (itsInterfaces != NoSuperInterfaces) {
				if (interfacesToVisit == null)
					interfacesToVisit = new ReferenceBinding[5][];
				if (++lastPosition == interfacesToVisit.length)
					System.arraycopy(
						interfacesToVisit,
						0,
						interfacesToVisit = new ReferenceBinding[lastPosition * 2][],
						0,
						lastPosition);
				interfacesToVisit[lastPosition] = itsInterfaces;
			}
		} while ((currentType = currentType.superclass()) != null);

		boolean hasMembers = false;
		if (interfacesToVisit != null) {
			done : for (int i = 0; i <= lastPosition; i++) {
				ReferenceBinding[] interfaces = interfacesToVisit[i];
				for (int j = 0, length = interfaces.length; j < length; j++) {
					ReferenceBinding anInterface = interfaces[j];
					if ((anInterface.tagBits & InterfaceVisited) == 0) { // if interface as not already been visited
						anInterface.tagBits |= InterfaceVisited;
						if ((anInterface.tagBits & HasNoMemberTypes) != 0)
							continue; // already know it has no inherited member types
						if (anInterface.memberTypes() != NoMemberTypes) {
							hasMembers = true;
							break done;
						}

						ReferenceBinding[] itsInterfaces = anInterface.superInterfaces();
						if (itsInterfaces != NoSuperInterfaces) {
							if (++lastPosition == interfacesToVisit.length)
								System.arraycopy(
									interfacesToVisit,
									0,
									interfacesToVisit = new ReferenceBinding[lastPosition * 2][],
									0,
									lastPosition);
							interfacesToVisit[lastPosition] = itsInterfaces;
						}
					}
				}
			}

			for (int i = 0; i <= lastPosition; i++) {
				ReferenceBinding[] interfaces = interfacesToVisit[i];
				for (int j = 0, length = interfaces.length; j < length; j++) {
					interfaces[j].tagBits &= ~InterfaceVisited;
					if (!hasMembers)
						interfaces[j].tagBits |= HasNoMemberTypes;
				}
			}
		}

		if (!hasMembers) {
			currentType = sourceType;
			do {
				currentType.tagBits |= HasNoMemberTypes;
			} while ((currentType = currentType.superclass()) != null);
		}
	}

