// 8.4.8.4
void checkInheritedMethods(MethodBinding[] methods, int length, boolean[] isOverridden) {
	boolean continueInvestigation = true;
	MethodBinding concreteMethod = null;
	for (int i = 0; i < length; i++) {
		// when unexpectedly seeing a non-abstract interface method regard it as abstract, too, for this check:
		boolean isAbstract = methods[i].isAbstract() || methods[i].declaringClass.isInterface();
		if (!isAbstract) {
			if (concreteMethod != null) {
				problemReporter().duplicateInheritedMethods(this.type, concreteMethod, methods[i]);
				continueInvestigation = false;
			}
			concreteMethod = methods[i];
		}
	}
	if (continueInvestigation) {
		super.checkInheritedMethods(methods, length, isOverridden);
	}
}

