	public PackageBinding getDeclaredPackage(char[][] name) {
		// return package binding if there exists a package named name in this module
		if (name == null || name.length == 0) {
			return this.environment.getDefaultPackage(this.moduleName);
		}

		PackageBinding parent = null;
		PackageBinding existing = this.environment.getPackage0(name[0]); 
		if (existing != null) { // known top level package
			if (existing == LookupEnvironment.TheNotFoundPackage)
				return null;
			parent = existing;
		}
		if (parent == null) {
			if (declaresPackage(null, name[0])) { // unknown as yet, but declared in this module
				parent = new PackageBinding(name[0], this.environment);
				this.declaredPackages.put(name[0], parent);
			} else {
				this.declaredPackages.put(name[0], LookupEnvironment.TheNotFoundPackage); // not declared in this module
				return null;
			}
		} else if (!declaresPackage(null, name[0])) { // already seen before, but not declared in this module
			return null;
		}
		// check each sub package
		for (int i = 1; i < name.length; i++) {
			PackageBinding binding = getDeclaredPackage(parent, name[i]); 
			if (binding == null) {
				return null;
			}
			parent = binding;
		}
		return parent;
	}

