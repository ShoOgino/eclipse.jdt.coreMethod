	public void invalidType(Expression expression, TypeBinding type) {
		// CODE should be UPDATED according to error coding in the different type binding errors
		//The different targetted errors should be :
		//UndefinedType
		//NotVisibleType
		//AmbiguousType
		//InternalTypeNameProvided
		//InheritedTypeHidesEnclosingName

		int flag = UndefinedType; // default
		switch (type.problemId()) {
			case NotFound :
				flag = UndefinedType;
				break;
			case NotVisible :
				flag = NotVisibleType;
				break;
			case Ambiguous :
				flag = AmbiguousType;
				break;
			case InternalNameProvided :
				flag = InternalTypeNameProvided;
				break;
			case InheritedNameHidesEnclosingName :
				flag = InheritedTypeHidesEnclosingName;
				break;
			case NoError : // 0
			default :
				needImplementation(); // want to fail to see why we were here...
				break;
		}

		this.handle(
			flag,
			new String[] { new String(type.readableName())},
			expression.sourceStart,
			expression.sourceEnd);
	}

