public final String getLocalizedMessage(int id, String[] problemArguments) {
	StringBuffer output = new StringBuffer(80);
	String message = 
		messageTemplates[(id & IProblem.IgnoreCategoriesMask)]; 
	if (message == null) {
		return "Unable to retrieve the error message for problem id: " //$NON-NLS-1$
			+ id
			+ ". Check compiler resources.";  //$NON-NLS-1$
	}

	// for compatibility with MessageFormat which eliminates double quotes in original message
	char[] messageWithNoDoubleQuotes =
		CharOperation.replace(message.toCharArray(), DOUBLE_QUOTES, SINGLE_QUOTE);
	message = new String(messageWithNoDoubleQuotes);

	// dequalify problem arguments, using following heuristic:
	// - if no segment is uppercased, then keep it all
	// - if one segment is uppercased, then only preserve the trailing portion, starting from this segment
	// e.g. 	java.lang.Object --> Object
	// 		int --> int
	//			java.lang --> java.lang
	//			p.X.Y --> X.Y
	for (int i = 0; i < problemArguments.length; i++){
		String problemArgument = problemArguments[i];
		int length = problemArgument.length();
		
		if (length > 0 && Character.isLowerCase(problemArgument.charAt(0))) {
			int start = 0;
			while (start < length) {
				int index = problemArgument.indexOf('.', start);
				if (index == -1) break;
				if (index < length && Character.isUpperCase(problemArgument.charAt(index+1))){
					problemArguments[i] = problemArgument.substring(index+1);
				}
				start = index+1;
			}
		}
	}

	int length = message.length();
	int start = -1, end = length;
	while (true) {
		if ((end = message.indexOf('{', start)) > -1) {
			output.append(message.substring(start + 1, end));
			if ((start = message.indexOf('}', end)) > -1) {
				try {
					output.append(
						problemArguments[Integer.parseInt(message.substring(end + 1, start))]); 
				} catch (NumberFormatException nfe) {
					output.append(message.substring(end + 1, start + 1));
				} catch (ArrayIndexOutOfBoundsException e) {
					return "Corrupted compiler resources for problem id: " //$NON-NLS-1$
						+ (id & IProblem.IgnoreCategoriesMask)
						+ ". Check compiler resources.";  //$NON-NLS-1$
				}
			} else {
				output.append(message.substring(end, length));
				break;
			}
		} else {
			output.append(message.substring(start + 1, length));
			break;
		}
	}
	return output.toString();
}

