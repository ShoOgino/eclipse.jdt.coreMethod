public void invalidField(NameReference nameRef, FieldBinding field) {
	int flag = UndefinedField;
	switch (field.problemId()) {
		case NotFound :
			flag = UndefinedField;
			break;
		case NotVisible :
			flag = NotVisibleField;
			break;
		case Ambiguous :
			flag = AmbiguousField;
			break;
		case NonStaticReferenceInStaticContext :
			flag = NonStaticFieldFromStaticInvocation;
			break;
		case NonStaticReferenceInConstructorInvocation :
			flag = InstanceFieldDuringConstructorInvocation;
			break;
		case InheritedNameHidesEnclosingName :
			flag = InheritedFieldHidesEnclosingName;
			break;
		case NoError : // 0
		default :
			needImplementation(); // want to fail to see why we were here...
			break;
	}
	this.handle(
		flag,
		new String[] {new String(field.readableName())},
		nameRef.sourceStart,
		nameRef.sourceEnd);
}

