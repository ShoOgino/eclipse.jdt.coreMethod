public void importProblem(ImportReference importRef, Binding expectedImport) {
	int problemId = expectedImport.problemId();
	int id;
	switch (problemId) {
		case NotFound : // 1
			id = IProblem.ImportNotFound;
			break;
		case NotVisible : // 2
			id = IProblem.ImportNotVisible;
			break;
		case Ambiguous : // 3
			id = IProblem.ImportAmbiguous;
			break;
		case InternalNameProvided : // 4
			id = IProblem.ImportInternalNameProvided;
			break;
		case InheritedNameHidesEnclosingName : // 5
			id = IProblem.ImportInheritedNameHidesEnclosingName;
			break;
		case NoError : // 0
		default :
			needImplementation(); // want to fail to see why we were here...
			return;
	}
	String argument;
	if(expectedImport instanceof ProblemReferenceBinding) {
		argument = CharOperation.toString(((ProblemReferenceBinding)expectedImport).compoundName);
	} else {
		argument = CharOperation.toString(importRef.tokens);
	}
	this.handle(id, new String[] {argument}, importRef.sourceStart, importRef.sourceEnd);
}

