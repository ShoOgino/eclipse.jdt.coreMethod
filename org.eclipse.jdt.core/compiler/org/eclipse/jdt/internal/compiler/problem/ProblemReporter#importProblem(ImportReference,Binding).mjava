public void importProblem(ImportReference importRef, Binding expectedImport) {
	int problemId = expectedImport.problemId();
	int id;
	switch (problemId) {
		case NotFound : // 1
			id = IProblem.ImportNotFound;
			break;
		case NotVisible : // 2
			id = IProblem.ImportNotVisible;
			break;
		case Ambiguous : // 3
			id = IProblem.ImportAmbiguous;
			break;
		case InternalNameProvided : // 4
			id = IProblem.ImportInternalNameProvided;
			break;
		case InheritedNameHidesEnclosingName : // 5
			id = IProblem.ImportInheritedNameHidesEnclosingName;
			break;
		case NoError : // 0
		default :
			needImplementation(); // want to fail to see why we were here...
			return;
	}
	char[][] tokens = expectedImport instanceof ProblemReferenceBinding
		? ((ProblemReferenceBinding) expectedImport).compoundName
		: importRef.tokens;
	String[] arguments = new String[]{CharOperation.toString(tokens)};
	this.handle(id, arguments, arguments, importRef.sourceStart, (int) importRef.sourcePositions[tokens.length - 1]);
}

