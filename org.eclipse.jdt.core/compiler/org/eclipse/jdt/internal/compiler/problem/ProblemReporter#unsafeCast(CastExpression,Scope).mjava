public void unsafeCast(CastExpression castExpression, Scope scope) {
	TypeBinding castedExpressionType = castExpression.expression.resolvedType;
	TypeBinding erasedCastType = castExpression.resolvedType.erasure();
	TypeBinding erasedLeaf = erasedCastType.leafComponentType();
	int dim = erasedCastType.dimensions();
	if (erasedLeaf.isGenericType()) {
		ReferenceBinding leafEnclosing = scope.environment().convertToParameterizedType(erasedLeaf.enclosingType());
		erasedCastType = scope.environment().createRawType((ReferenceBinding)erasedLeaf, leafEnclosing);
		if (dim > 0) erasedCastType = scope.environment().createArrayType(erasedCastType, dim);
	}	
	this.handle(
		IProblem.UnsafeGenericCast,
		new String[]{ 
			new String(castedExpressionType.readableName()), 
			new String(castExpression.resolvedType.readableName()),
			new String(erasedCastType.readableName()),
		},
		new String[]{ 
			new String(castedExpressionType.shortReadableName()), 
			new String(castExpression.resolvedType.shortReadableName()),
			new String(erasedCastType.shortReadableName()),
		},
		castExpression.sourceStart,
		castExpression.sourceEnd);
}

