public void abstractMethodInAbstractClass(SourceTypeBinding type, MethodBinding[] abstractMethods) {
	if (type.isEnum() && type.isLocalType()) {
		FieldBinding field = type.scope.enclosingMethodScope().initializedField;
		FieldDeclaration decl = field.sourceField();
		String[] arguments = new String[] {new String(decl.name)};
		this.handle(
			IProblem.EnumConstantCannotDefineAbstractMethod,
			arguments,
			arguments,
			decl.sourceStart(),
			decl.sourceEnd());
	} else {
		StringBuffer selectorsString = new StringBuffer();
		for (int i = 0, l = abstractMethods.length; i < l;) {
			MethodBinding abstractMethod = abstractMethods[i++];
			selectorsString.append(abstractMethod.selector);
			selectorsString.append("()"); //$NON-NLS-1$
			if (i < l)
				selectorsString.append(", "); //$NON-NLS-1$
		}
		String[] arguments = new String[] {new String(type.sourceName()), selectorsString.toString()};
		this.handle(
			IProblem.AbstractMethodInAbstractClass,
			arguments,
			arguments,
			type.sourceStart(),
			type.sourceEnd());
	}
}

