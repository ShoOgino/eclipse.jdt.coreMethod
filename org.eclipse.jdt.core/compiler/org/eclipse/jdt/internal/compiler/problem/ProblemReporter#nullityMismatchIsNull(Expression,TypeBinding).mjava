public void nullityMismatchIsNull(Expression expression, TypeBinding requiredType) {
	if (requiredType instanceof CaptureBinding) {
		CaptureBinding capture = (CaptureBinding) requiredType;
		if (capture.wildcard != null)
			requiredType = capture.wildcard;
	}
	int problemId = IProblem.RequiredNonNullButProvidedNull;
	String[] arguments;
	String[] argumentsShort;
	if (this.options.sourceLevel < ClassFileConstants.JDK1_8) {
		arguments      = new String[] { annotatedTypeName(requiredType, this.options.nonNullAnnotationName) };
		argumentsShort = new String[] { shortAnnotatedTypeName(requiredType, this.options.nonNullAnnotationName) };
	} else {
		arguments      = new String[] { new String(requiredType.nullAnnotatedReadableName(this.options, false)) };
		argumentsShort = new String[] { new String(requiredType.nullAnnotatedReadableName(this.options, true)) };
	}
	this.handle(problemId, arguments, argumentsShort, expression.sourceStart, expression.sourceEnd);
}

