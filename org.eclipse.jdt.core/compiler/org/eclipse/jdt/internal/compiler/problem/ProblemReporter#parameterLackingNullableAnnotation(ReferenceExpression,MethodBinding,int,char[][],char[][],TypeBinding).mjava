public void parameterLackingNullableAnnotation(ReferenceExpression location, MethodBinding descriptorMethod, int idx,
				char[][] providedAnnotationName, char/*@Nullable*/[][] requiredAnnotationName, TypeBinding requiredType) {
	StringBuffer requiredPrefix = new StringBuffer(); 
	StringBuffer requiredShortPrefix = new StringBuffer(); 
	if (requiredAnnotationName != null) {
		requiredPrefix.append('@').append(CharOperation.toString(requiredAnnotationName)).append(' ');
		requiredShortPrefix.append('@').append(requiredAnnotationName[requiredAnnotationName.length-1]).append(' ');
	}
	TypeBinding provided = descriptorMethod.parameters[idx];
	StringBuffer methodSignature = new StringBuffer();
	methodSignature
		.append(descriptorMethod.declaringClass.readableName())
		.append('.')
		.append(descriptorMethod.readableName());
	StringBuffer shortSignature = new StringBuffer();
	shortSignature
		.append(descriptorMethod.declaringClass.shortReadableName())
		.append('.')
		.append(descriptorMethod.shortReadableName());
	this.handle(
			IProblem.ReferenceExpressionParameterMismatchPromisedNullable, 
			new String[] { String.valueOf(idx+1), 
							requiredPrefix.toString(), String.valueOf(requiredType.readableName()),
							CharOperation.toString(providedAnnotationName), String.valueOf(provided.readableName()),
							methodSignature.toString() },
			new String[] { String.valueOf(idx+1), 
							requiredShortPrefix.toString(), String.valueOf(requiredType.shortReadableName()),
							String.valueOf(providedAnnotationName[providedAnnotationName.length-1]), String.valueOf(provided.shortReadableName()),
							shortSignature.toString() },
			location.sourceStart,
			location.sourceEnd);
}

