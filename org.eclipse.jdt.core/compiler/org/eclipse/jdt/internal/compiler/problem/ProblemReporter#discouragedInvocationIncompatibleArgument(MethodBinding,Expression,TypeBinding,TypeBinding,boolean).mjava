public void discouragedInvocationIncompatibleArgument(MethodBinding method, Expression argument,
							TypeBinding expectedType, TypeBinding declaringType, boolean castable)
{
	if (castable && this.options.acceptCastableArgInDiscouragedInvocation)
		return;
	this.handle(
			castable ? IProblem.DiscouragedInvocationIncompatibleArgument : IProblem.DiscouragedInvocationArgumentNotCastable,
			new String[] {
				new String(method.readableName()),
				new String(argument.resolvedType.readableName()),
				new String(expectedType.readableName()),
				new String(declaringType.readableName())
			}, 
			new String[] {
				new String(method.shortReadableName()),
				new String(argument.resolvedType.shortReadableName()),
				new String(expectedType.shortReadableName()),
				new String(declaringType.shortReadableName())
			}, 
			argument.sourceStart, 
			argument.sourceEnd);
}

