public void exceptionTypeProblem(SourceTypeBinding type, AbstractMethodDeclaration methodDecl, TypeReference exceptionType, TypeBinding expectedType) {
	int problemId = expectedType.problemId();
	switch (problemId) {
		case NotFound : // 1
		case NotVisible : // 2
		case Ambiguous : // 3
		case InternalNameProvided : // 4
		case InheritedNameHidesEnclosingName : // 5
			this.handle(
				ExceptionTypeProblemBase + problemId,
				new String[] {new String(methodDecl.selector), new String(expectedType.readableName())},
				exceptionType.sourceStart(),
				exceptionType.sourceEnd());
			break;
		case NoError : // 0
		default :
			needImplementation(); // want to fail to see why we were here...
			break;
	}
}

