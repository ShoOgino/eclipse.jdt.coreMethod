	public void invalidEnclosingType(
		Expression expression,
		TypeBinding type,
		TypeBinding enclosingType) {
		//CODE should be UPDATED according to error coding in the different type binding errors
		//The different targetted errors should be :
		//UndefinedType
		//NotVisibleType
		//AmbiguousType
		//InternalNameProvided

		int flag = UndefinedType; // default
		switch (type.problemId()) {
			case NotFound : // 1
				flag = UndefinedType;
				break;
			case NotVisible : // 2
				flag = NotVisibleType;
				break;
			case Ambiguous : // 3
				flag = AmbiguousType;
				break;
			case InternalNameProvided :
				flag = InternalTypeNameProvided;
				break;
			case NoError : // 0
			default :
				needImplementation(); // want to fail to see why we were here...
				break;
		}

		this.handle(
			flag,
			new String[] {
				new String(enclosingType.readableName())
					+ "."
					+ new String(type.readableName())},
			expression.sourceStart,
			expression.sourceEnd);
	}

