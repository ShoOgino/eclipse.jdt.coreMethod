//static X valueOf(String name) {
// X[] values;
// for (int i = (values = $VALUES).length; --i >= 0;) {
// 		 X value;
// 		 if (name.equals(value = values[i].name())) return value;
// }
// throw new IllegalArgumentException(name);
//}		
public void generateSyntheticBodyForEnumValueOf(SyntheticMethodBinding methodBinding) {
	ClassScope scope = ((SourceTypeBinding)methodBinding.declaringClass).scope;
	FieldBinding enumValuesSyntheticfield = scope.referenceContext.enumValuesSyntheticfield;
	initializeMaxLocals(methodBinding);
	BranchLabel loopCond = new BranchLabel(this);
	BranchLabel loopStart = new BranchLabel(this);
	BranchLabel wrongConstant = new BranchLabel(this);

	this.getstatic(enumValuesSyntheticfield);
	this.dup();
	this.astore_1();
	this.arraylength();
	this.istore_2();
	this.goto_(loopCond);
	loopStart.place();
	this.aload_0();
	this.aload_1();
	this.iload_2();
	this.aaload();
	this.dup();
	this.astore_3();
	this.invokeJavaLangEnumname(this.classFile.referenceBinding);
	this.invokeStringEquals();
	this.ifeq(wrongConstant);
	this.aload_3();
	this.areturn();
	wrongConstant.place();
	loopCond.place();
	this.iinc(2, -1);		
	this.iload_2();
	this.ifge(loopStart);
	this.newJavaLangIllegalArgumentException();
	this.dup();
	this.aload_0();
	this.invokeJavaLangIllegalArgumentExceptionStringConstructor();
	this.athrow();
}

