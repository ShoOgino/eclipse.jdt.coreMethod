/**
 * The equivalent code performs a string conversion:
 *
 * @param oper1 org.eclipse.jdt.internal.compiler.lookup.BlockScope
 * @param oper1 org.eclipse.jdt.internal.compiler.ast.Expression
 * @param oper2 org.eclipse.jdt.internal.compiler.ast.Expression
 */
public void generateStringAppend(BlockScope blockScope, Expression oper1, Expression oper2) {
	int pc;
	if (oper1 == null) {
		/* Operand is already on the stack, and maybe nil:
		note type1 is always to  java.lang.String here.*/
		this.newStringBuffer();
		this.dup_x1();
		this.swap();
		// If argument is reference type, need to transform it 
		// into a string (handles null case)
		this.invokeStringValueOf(T_Object);
		this.invokeStringBufferStringConstructor();
	} else {
		pc = position;
		oper1.generateOptimizedStringBufferCreation(blockScope, this, oper1.implicitConversion & 0xF);
		this.recordPositionsFrom(pc, oper1);
	}
	pc = position;
	oper2.generateOptimizedStringBuffer(blockScope, this, oper2.implicitConversion & 0xF);
	this.recordPositionsFrom(pc, oper2);
	this.invokeStringBufferToString();
}

