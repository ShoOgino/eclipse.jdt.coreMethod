/**
 * @param key1 the given name
 * @param key2 the given signature
 * @param value the given index
 * @return the new index
 */
private int putInNameAndTypeCacheIfAbsent(final char[] key1, final char[] key2, int value) {
	int index ;
	Object key1Value = this.nameAndTypeCacheForFieldsAndMethods.get(key1);
	if (key1Value == null) {
		CachedIndexEntry cachedIndexEntry = new CachedIndexEntry(key2, value);
		index = -value;
		this.nameAndTypeCacheForFieldsAndMethods.put(key1, cachedIndexEntry);
	} else if (key1Value instanceof CachedIndexEntry) {
		// adding a second entry
		CachedIndexEntry entry = (CachedIndexEntry) key1Value;
		if (CharOperation.equals(key2, entry.signature)) {
			index = entry.index;
		} else {
			CharArrayCache charArrayCache = new CharArrayCache();
			charArrayCache.putIfAbsent(entry.signature, entry.index);
			index = charArrayCache.putIfAbsent(key2, value);
			this.nameAndTypeCacheForFieldsAndMethods.put(key1, charArrayCache);			
		}
	} else {
		CharArrayCache charArrayCache = (CharArrayCache) key1Value;
		index = charArrayCache.putIfAbsent(key2, value);
	}
	return index;
}

