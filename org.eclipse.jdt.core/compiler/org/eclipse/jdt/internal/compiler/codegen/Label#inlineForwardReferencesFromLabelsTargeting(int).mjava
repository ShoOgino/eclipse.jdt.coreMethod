	/*
	 * Some placed labels might be branching to a goto bytecode which we can optimize better.
	 */
	public void inlineForwardReferencesFromLabelsTargeting(int gotoLocation) {
		/*
		 Code required to optimized unreachable gotos.
			public boolean isBranchTarget(int location) {
				Label[] labels = codeStream.labels;
				for (int i = codeStream.countLabels - 1; i >= 0; i--){
					Label label = labels[i];
					if ((label.position == location) && label.isStandardLabel()){
						return true;
					}
				}
				return false;
			}
		 */

		Label[] labels = codeStream.labels;
		for (int i = codeStream.countLabels - 1; i >= 0; i--) {
			Label label = labels[i];
			if ((label.position == gotoLocation) && label.isStandardLabel()) {
				this.appendForwardReferencesFrom(label);
				/*
				 Code required to optimized unreachable gotos.
					label.position = POS_NOT_SET;
				*/
			} else {
				break; // same target labels should be contiguous
			}
		}
	}

