public void init(ClassFile targetClassFile) {
	this.classFile = targetClassFile;
	this.constantPool = targetClassFile.constantPool;
	this.bCodeStream = targetClassFile.contents;
	this.classFileOffset = targetClassFile.contentsOffset;
	this.startingClassFileOffset = this.classFileOffset;
	this.pcToSourceMapSize = 0;
	this.lastEntryPC = 0;
	int length = this.visibleLocals.length;
	if (noVisibleLocals.length < length) {
		noVisibleLocals = new LocalVariableBinding[length];
	}
	System.arraycopy(noVisibleLocals, 0, this.visibleLocals, 0, length);
	this.visibleLocalsCount = 0;

	length = this.locals.length;
	if (noLocals.length < length) {
		noLocals = new LocalVariableBinding[length];
	}
	System.arraycopy(noLocals, 0, this.locals, 0, length);
	this.allLocalsCounter = 0;

	length = this.exceptionLabels.length;
	if (noExceptionHandlers.length < length) {
		noExceptionHandlers = new ExceptionLabel[length];
	}
	System.arraycopy(noExceptionHandlers, 0, this.exceptionLabels, 0, length);
	this.exceptionLabelsCounter = 0;

	length = this.labels.length;
	if (noLabels.length < length) {
		noLabels = new BranchLabel[length];
	}
	System.arraycopy(noLabels, 0, this.labels, 0, length);
	this.countLabels = 0;
	this.lastAbruptCompletion = -1;

	this.stackMax = 0;
	this.stackDepth = 0;
	this.maxLocals = 0;
	this.position = 0;
}

