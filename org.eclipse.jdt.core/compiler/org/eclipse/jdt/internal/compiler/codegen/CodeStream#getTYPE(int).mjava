public void getTYPE(int baseTypeID) {
	countLabels = 0;
	switch (baseTypeID) {
		case T_byte :
			// getstatic: java.lang.Byte.TYPE			
			if (DEBUG) System.out.println(position + "\t\tgetstatic: java.lang.Byte.TYPE"); //$NON-NLS-1$
			generateFieldAccess(
					OPC_getstatic,
					1,
					QualifiedNamesConstants.JavaLangByteConstantPoolName,
					QualifiedNamesConstants.TYPE,
					QualifiedNamesConstants.JavaLangClassSignature);
			break;
		case T_short :
			// getstatic: java.lang.Short.TYPE			
			if (DEBUG) System.out.println(position + "\t\tgetstatic: java.lang.Short.TYPE"); //$NON-NLS-1$
			generateFieldAccess(
					OPC_getstatic,
					1,
					QualifiedNamesConstants.JavaLangShortConstantPoolName,
					QualifiedNamesConstants.TYPE,
					QualifiedNamesConstants.JavaLangClassSignature);
			break;
		case T_char :
			// getstatic: java.lang.Character.TYPE			
			if (DEBUG) System.out.println(position + "\t\tgetstatic: java.lang.Character.TYPE"); //$NON-NLS-1$
			generateFieldAccess(
					OPC_getstatic,
					1,
					QualifiedNamesConstants.JavaLangCharacterConstantPoolName,
					QualifiedNamesConstants.TYPE,
					QualifiedNamesConstants.JavaLangClassSignature);
			break;
		case T_int :
			// getstatic: java.lang.Integer.TYPE			
			if (DEBUG) System.out.println(position + "\t\tgetstatic: java.lang.Integer.TYPE"); //$NON-NLS-1$
			generateFieldAccess(
					OPC_getstatic,
					1,
					QualifiedNamesConstants.JavaLangIntegerConstantPoolName,
					QualifiedNamesConstants.TYPE,
					QualifiedNamesConstants.JavaLangClassSignature);
			break;
		case T_long :
			// getstatic: java.lang.Long.TYPE			
			if (DEBUG) System.out.println(position + "\t\tgetstatic: java.lang.Long.TYPE"); //$NON-NLS-1$
			generateFieldAccess(
					OPC_getstatic,
					1,
					QualifiedNamesConstants.JavaLangLongConstantPoolName,
					QualifiedNamesConstants.TYPE,
					QualifiedNamesConstants.JavaLangClassSignature);
			break;
		case T_float :
			// getstatic: java.lang.Float.TYPE			
			if (DEBUG) System.out.println(position + "\t\tgetstatic: java.lang.Float.TYPE"); //$NON-NLS-1$
			generateFieldAccess(
					OPC_getstatic,
					1,
					QualifiedNamesConstants.JavaLangFloatConstantPoolName,
					QualifiedNamesConstants.TYPE,
					QualifiedNamesConstants.JavaLangClassSignature);
			break;
		case T_double :
			// getstatic: java.lang.Double.TYPE			
			if (DEBUG) System.out.println(position + "\t\tgetstatic: java.lang.Double.TYPE"); //$NON-NLS-1$
			generateFieldAccess(
					OPC_getstatic,
					1,
					QualifiedNamesConstants.JavaLangDoubleConstantPoolName,
					QualifiedNamesConstants.TYPE,
					QualifiedNamesConstants.JavaLangClassSignature);
			break;
		case T_boolean :
			// getstatic: java.lang.Boolean.TYPE			
			if (DEBUG) System.out.println(position + "\t\tgetstatic: java.lang.Boolean.TYPE"); //$NON-NLS-1$
			generateFieldAccess(
					OPC_getstatic,
					1,
					QualifiedNamesConstants.JavaLangBooleanConstantPoolName,
					QualifiedNamesConstants.TYPE,
					QualifiedNamesConstants.JavaLangClassSignature);
			break;
		case T_void :
			// getstatic: java.lang.Void.TYPE
			if (DEBUG) System.out.println(position + "\t\tgetstatic: java.lang.Void.TYPE"); //$NON-NLS-1$
			generateFieldAccess(
					OPC_getstatic,
					1,
					QualifiedNamesConstants.JavaLangVoidConstantPoolName,
					QualifiedNamesConstants.TYPE,
					QualifiedNamesConstants.JavaLangClassSignature);
			break;
	}
}

