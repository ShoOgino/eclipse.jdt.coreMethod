	public void getTYPE(int baseTypeID) {
		countLabels = 0;
		if (++stackDepth > stackMax)
			stackMax = stackDepth;
		try {
			position++;
			bCodeStream[classFileOffset++] = OPC_getstatic;
		} catch (IndexOutOfBoundsException e) {
			resizeByteArray(OPC_getstatic);
		}
		switch (baseTypeID) {
			// getstatic: java.lang.Byte.TYPE			
			case T_byte :
				writeUnsignedShort(constantPool.literalIndexForJavaLangByteTYPE());
				break;
				// getstatic: java.lang.Short.TYPE			
			case T_short :
				writeUnsignedShort(constantPool.literalIndexForJavaLangShortTYPE());
				break;
				// getstatic: java.lang.Character.TYPE			
			case T_char :
				writeUnsignedShort(constantPool.literalIndexForJavaLangCharacterTYPE());
				break;
				// getstatic: java.lang.Integer.TYPE			
			case T_int :
				writeUnsignedShort(constantPool.literalIndexForJavaLangIntegerTYPE());
				break;
				// getstatic: java.lang.Long.TYPE			
			case T_long :
				writeUnsignedShort(constantPool.literalIndexForJavaLangLongTYPE());
				break;
				// getstatic: java.lang.Float.TYPE			
			case T_float :
				writeUnsignedShort(constantPool.literalIndexForJavaLangFloatTYPE());
				break;
				// getstatic: java.lang.Double.TYPE			
			case T_double :
				writeUnsignedShort(constantPool.literalIndexForJavaLangDoubleTYPE());
				break;
				// getstatic: java.lang.Boolean.TYPE			
			case T_boolean :
				writeUnsignedShort(constantPool.literalIndexForJavaLangBooleanTYPE());
				break;
				// getstatic: java.lang.Void.TYPE
			case T_void :
				writeUnsignedShort(constantPool.literalIndexForJavaLangVoidTYPE());
				break;
		}
	}

