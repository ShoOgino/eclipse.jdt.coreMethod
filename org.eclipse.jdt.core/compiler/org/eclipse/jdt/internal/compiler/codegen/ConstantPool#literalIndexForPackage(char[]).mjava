	public int literalIndexForPackage(final char[] packageName) {
		int index;
		if ((index = this.packageCache.putIfAbsent(packageName, this.currentIndex)) < 0) {
			// The entry doesn't exit yet
			this.currentIndex++;
			if ((index = -index) > 0xFFFF){
				this.classFile.referenceBinding.scope.problemReporter().noMoreAvailableSpaceInConstantPool(this.classFile.referenceBinding.scope.referenceType());
			}
			// Write the tag first
			int length = this.offsets.length;
			if (length <= index) {
				// resize
				System.arraycopy(this.offsets, 0, (this.offsets = new int[index * 2]), 0, length);
			}
			this.offsets[index] = this.currentOffset;
			writeU1(PackageTag);
			// Then the string index
			int stringIndexOffset = this.currentOffset;
			if (this.currentOffset + 2 >= this.poolContent.length) {
				resizePoolContents(2);
			}
			this.currentOffset+=2;

			final int stringIndex = literalIndex(packageName);
			this.poolContent[stringIndexOffset++] = (byte) (stringIndex >> 8);
			this.poolContent[stringIndexOffset] = (byte) stringIndex;
		}
		return index;
	}

