public void generateOuterAccess(Object[] mappingSequence, ASTNode invocationSite, Binding target, Scope scope) {
    if (mappingSequence == null) {
        if (target instanceof LocalVariableBinding) {
            scope.problemReporter().needImplementation(); //TODO (philippe) should improve local emulation failure reporting
        } else {
            scope.problemReporter().noSuchEnclosingInstance((ReferenceBinding)target, invocationSite, false);
            this.currentFrame.addStackItem((ReferenceBinding)target);
        }
        return;
    }
    if (mappingSequence == BlockScope.NoEnclosingInstanceInConstructorCall) {
        scope.problemReporter().noSuchEnclosingInstance((ReferenceBinding)target, invocationSite, true);
        this.currentFrame.addStackItem((ReferenceBinding)target);
        return;
    } else if (mappingSequence == BlockScope.NoEnclosingInstanceInStaticContext) {
        scope.problemReporter().noSuchEnclosingInstance((ReferenceBinding)target, invocationSite, false);
        this.currentFrame.addStackItem((ReferenceBinding)target);
        return;
    }

    if (mappingSequence == BlockScope.EmulationPathToImplicitThis) {
        this.aload_0();
        return;
    } else if (mappingSequence[0] instanceof FieldBinding) {
        FieldBinding fieldBinding = (FieldBinding) mappingSequence[0];
        this.aload_0();
        this.getfield(fieldBinding);
    } else {
        load((LocalVariableBinding) mappingSequence[0]);
    }
    for (int i = 1, length = mappingSequence.length; i < length; i++) {
        if (mappingSequence[i] instanceof FieldBinding) {
            FieldBinding fieldBinding = (FieldBinding) mappingSequence[i];
            this.getfield(fieldBinding);
        } else {
            this.invokestatic((MethodBinding) mappingSequence[i]);
        }
    }
}

