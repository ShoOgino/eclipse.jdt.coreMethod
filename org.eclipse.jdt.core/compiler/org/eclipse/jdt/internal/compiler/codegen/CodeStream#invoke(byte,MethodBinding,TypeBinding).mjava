public void invoke(byte opcode, MethodBinding methodBinding, TypeBinding declaringClass) {
	if (declaringClass == null) declaringClass = methodBinding.declaringClass;
    if (declaringClass.isNestedType()) {
        this.classFile.recordInnerClasses(declaringClass);
    }
    // compute receiverAndArgsSize
    int receiverAndArgsSize;
    switch(opcode) {
    	case Opcodes.OPC_invokestatic :
    		receiverAndArgsSize = 0; // no receiver
    		break;
    	case Opcodes.OPC_invokeinterface :
    	case Opcodes.OPC_invokevirtual :
    		receiverAndArgsSize = 1; // receiver
    		break;
    	case Opcodes.OPC_invokespecial :
    		receiverAndArgsSize = 1; // receiver
    		if (methodBinding.isConstructor()) {
    			if (declaringClass.isNestedType()) {
        			ReferenceBinding nestedType = (ReferenceBinding) declaringClass;
    				// enclosing instances
    				TypeBinding[] syntheticArgumentTypes = nestedType.syntheticEnclosingInstanceTypes();
    				if (syntheticArgumentTypes != null) {
    					for (int i = 0, max = syntheticArgumentTypes.length; i < max; i++) {
    						switch (syntheticArgumentTypes[i].id)  {
    							case TypeIds.T_double :
    							case TypeIds.T_long :
	    							receiverAndArgsSize += 2;
									break;
    							default: 
	    							receiverAndArgsSize++;
    								break;
    						}
    					}
    				}
    				// outer local variables
    				SyntheticArgumentBinding[] syntheticArguments = nestedType.syntheticOuterLocalVariables();
    				if (syntheticArguments != null) {
    					for (int i = 0, max = syntheticArguments.length; i < max; i++) {
    						switch (syntheticArguments[i].id)  {
    							case TypeIds.T_double :
    							case TypeIds.T_long :
	    							receiverAndArgsSize += 2;
									break;
    							default: 
	    							receiverAndArgsSize++;
    								break;
    						}    						
    					}
    				}
    			}
    			if (declaringClass.isEnum()) {
    				// adding String (name) and int (ordinal)
    				receiverAndArgsSize += 2;
    			}
    		}    		
    		break;
    	default :
    		return; // should not occur
    		
    }
	for (int i = methodBinding.parameters.length - 1; i >= 0; i--) {
		switch (methodBinding.parameters[i].id) {
			case TypeIds.T_double :
			case TypeIds.T_long :
				receiverAndArgsSize += 2;
				break;
			default :
				receiverAndArgsSize ++;
				break;
		}
	}
	// compute return type size
	int returnTypeSize;
	switch (methodBinding.returnType.id) {
		case TypeIds.T_double :
		case TypeIds.T_long :
			returnTypeSize = 2;
			break;
		case TypeIds.T_void :
			returnTypeSize = 0;
			break;
		default :
			returnTypeSize = 1;
			break;
	}
	invoke(
			opcode, 
			receiverAndArgsSize, 
			returnTypeSize, 
			declaringClass.constantPoolName(), 
			methodBinding.selector, 
			methodBinding.signature(this.classFile));
}

