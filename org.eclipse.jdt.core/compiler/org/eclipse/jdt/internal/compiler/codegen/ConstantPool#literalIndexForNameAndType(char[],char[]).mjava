public int literalIndexForNameAndType(char[] name, char[] signature) {
    int index;
    if ((index = putInNameAndTypeCacheIfAbsent(name, signature, this.currentIndex)) < 0) {
        // The entry doesn't exit yet
        this.currentIndex++;
        if ((index = -index) > 0xFFFF){
            this.classFile.referenceBinding.scope.problemReporter().noMoreAvailableSpaceInConstantPool(this.classFile.referenceBinding.scope.referenceType());
        }
        int length = this.offsets.length;
        if (length <= index) {
        	// resize
            System.arraycopy(this.offsets, 0, (this.offsets = new int[index * 2]), 0, length);
        }
        this.offsets[index] = this.currentOffset;
        writeU1(NameAndTypeTag);
        int nameIndexOffset = this.currentOffset;
        if (this.currentOffset + 4 >= this.poolContent.length) {
            resizePoolContents(4);
        }
        this.currentOffset+=4;

        final int nameIndex = literalIndex(name);
        final int typeIndex = literalIndex(signature);
        this.poolContent[nameIndexOffset++] = (byte) (nameIndex >> 8);
        this.poolContent[nameIndexOffset++] = (byte) nameIndex;
        this.poolContent[nameIndexOffset++] = (byte) (typeIndex >> 8);
        this.poolContent[nameIndexOffset] = (byte) typeIndex;
    }
    return index;
}

