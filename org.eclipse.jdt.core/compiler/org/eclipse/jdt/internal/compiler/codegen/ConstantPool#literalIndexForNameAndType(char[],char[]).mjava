public int literalIndexForNameAndType(char[] name, char[] signature) {
	int index;
	if ((index = putInNameAndTypeCacheIfAbsent(name, signature, currentIndex)) < 0) {
		// The entry doesn't exit yet
		currentIndex++;
		if ((index = -index) > 0xFFFF){
			this.classFile.referenceBinding.scope.problemReporter().noMoreAvailableSpaceInConstantPool(this.classFile.referenceBinding.scope.referenceType());
		}
		writeU1(NameAndTypeTag);
		int nameIndexOffset = this.currentOffset;
		if (currentOffset + 4 >= poolContent.length) {
			resizePoolContents(4);
		}
		currentOffset+=4;
		
		final int nameIndex = literalIndex(name);
		final int typeIndex = literalIndex(signature);
		poolContent[nameIndexOffset++] = (byte) (nameIndex >> 8);
		poolContent[nameIndexOffset++] = (byte) nameIndex;
		poolContent[nameIndexOffset++] = (byte) (typeIndex >> 8);
		poolContent[nameIndexOffset] = (byte) typeIndex;
	}
	return index;
}

