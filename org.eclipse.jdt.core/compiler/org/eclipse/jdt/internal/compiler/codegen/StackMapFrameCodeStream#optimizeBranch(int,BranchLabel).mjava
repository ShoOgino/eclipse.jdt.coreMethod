public void optimizeBranch(int oldPosition, BranchLabel lbl) {
	super.optimizeBranch(oldPosition, lbl);
	if (lbl.forwardReferenceCount() > 0) {
		StackMapFrame frame = this.frames;
		loop: while (frame != null) {
			if (frame.pc == oldPosition) {
				frame.pc = this.position;
				if (frame.prevFrame.pc == this.position) {
					// remove the current frame
					StackMapFrame prev = frame.prevFrame;
					frame.prevFrame = null;
					prev.nextFrame = null;
					this.frames = prev;
				}
				break loop;
			}
		}
	} else {
		StackMapFrame frame = this.frames;
		loop: while (frame != null) {
			if (frame.pc == oldPosition) {
				if ((frame.tagBits & StackMapFrame.USED) != 0) {
					frame.pc = this.position;
					if (frame.prevFrame.pc == this.position) {
						// remove the current frame
						StackMapFrame prev = frame.prevFrame;
						frame.prevFrame = null;
						prev.nextFrame = null;
						this.frames = prev;
					}
				} else {
					// we completely remove this entry if the prevFrame has the same position
					StackMapFrame prev = frame.prevFrame;
					frame.prevFrame = null;
					prev.nextFrame = null;
					this.frames = prev;
				}
				break loop;
			}
		}
	}
}

