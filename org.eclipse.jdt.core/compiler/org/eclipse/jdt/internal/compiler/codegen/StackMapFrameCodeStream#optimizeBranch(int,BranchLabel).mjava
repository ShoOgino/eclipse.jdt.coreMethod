public void optimizeBranch(int oldPosition, BranchLabel lbl) {
	super.optimizeBranch(oldPosition, lbl);
	int frameIndex = this.frames.size() - 1;
	loop: while(frameIndex > 0) {
		StackMapFrame frame = (StackMapFrame) this.frames.get(frameIndex);
		if (frame.pc == oldPosition) {
			if (this.framePositions.remove(new Integer(oldPosition))) {
				this.framePositions.add(new Integer(this.position));
			}
			if (this.variablesModificationsPositions.remove(new Integer(oldPosition))) {
				this.variablesModificationsPositions.add(new Integer(this.position));
			}
			frame.pc = this.position;
			StackMapFrame previousFrame = (StackMapFrame) this.frames.get(frameIndex - 1);
			if (previousFrame.pc == this.position) {
				// remove the current frame
				this.frames.set(frameIndex - 1, frame);
				this.frames.remove(frameIndex);
			}
			break loop;
		} else if (frame.pc > oldPosition) {
			return;
		}
		frameIndex--;
	}
}

