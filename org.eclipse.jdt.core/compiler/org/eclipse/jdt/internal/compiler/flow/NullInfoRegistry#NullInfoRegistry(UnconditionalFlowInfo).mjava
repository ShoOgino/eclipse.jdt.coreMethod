/**
 * Make a new null info registry, using an upstream flow info. All definite
 * assignments of the upstream are carried forward, since a try block may
 * exit before its first statement.
 * @param upstream - UnconditionalFlowInfo: the flow info before we enter the
 * 		try block; only definite assignments are considered; this parameter is
 *  	not modified by this constructor
 */
public NullInfoRegistry(UnconditionalFlowInfo upstream) {
	if ((upstream.tagBits & NULL_FLAG_MASK) != 0) {
		long a1, a2, a3, b1nb2, b3, b4;
		a1 = this.nullAssignmentStatusBit1 = 
			(b1nb2 = upstream.nullAssignmentStatusBit1 
					&  ~upstream.nullAssignmentStatusBit2)
				& (b3 = upstream.nullAssignmentValueBit1)
				& ~(b4 = upstream.nullAssignmentValueBit2);
		a2 = this.nullAssignmentStatusBit2 =
			b1nb2 & ~b3 & b4;
		a3 = this.nullAssignmentValueBit1 =
			b1nb2 & b3 & b4;
		if ((a1 | a2 | a3) != 0) {
			this.tagBits |= NULL_FLAG_MASK;
		}
		if (upstream.extra != null) {
			this.extra = new long[extraLength][];
			int length= upstream.extra[2].length;
			for (int i = 2; i < extraLength; i++) {
				this.extra[i] = new long[length];
			}
			for (int i = 2; i < length; i++) {
				a1 = this.extra[i][2] = 
					(b1nb2 = upstream.extra[i][2] 
							& ~upstream.extra[i][3])
						& (b3 = upstream.extra[i][4])
						& ~(b4 = upstream.extra[i][5]);
				a2 = this.extra[i][3] =
					b1nb2 & ~b3 & b4;
				a3 = this.extra[i][4] =
					b1nb2 & b3 & b4;
				if ((a1 | a2 | a3) != 0) {
					this.tagBits |= NULL_FLAG_MASK;
				}
			}
		}
	}
}

