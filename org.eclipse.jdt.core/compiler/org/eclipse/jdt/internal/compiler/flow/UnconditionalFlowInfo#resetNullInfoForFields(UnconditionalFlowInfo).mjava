public void resetNullInfoForFields(UnconditionalFlowInfo fieldResetFlow) {
	if (this != DEAD_END) {
		long mask = this.maxFieldCount < BitCacheSize ? (-1L << this.maxFieldCount) : 0L; 
		mask |= fieldResetFlow.constantFieldsMask;
		// first reset normal bits:
		this.nullBit1 = (this.nullBit1 & mask) | fieldResetFlow.nullBit1;
		this.nullBit2 = (this.nullBit2 & mask) | fieldResetFlow.nullBit2;
		this.nullBit3 = (this.nullBit3 & mask) | fieldResetFlow.nullBit3;
		this.nullBit4 = (this.nullBit4 & mask) | fieldResetFlow.nullBit4;

		if (this.maxFieldCount >= BitCacheSize && this.extra != null) {
			// use extra vector
			int localsStartIndex = this.maxFieldCount/BitCacheSize - 1;
			int localsStartOffset = this.maxFieldCount % BitCacheSize;
			int len = Math.min(localsStartIndex+1, this.extra[2].length);
			for (int vectorIndex = 0; vectorIndex < len; vectorIndex++) {
				if (fieldResetFlow.extraConstantFieldMask != null) {
				    if (vectorIndex >= fieldResetFlow.extraConstantFieldMask.length) {
				    	// no constant fields after this, just mask all fields
				    	if (vectorIndex == localsStartIndex) {
				    		// some locals, some fields at this vectorIndex
				    		mask = -1L << localsStartOffset;
				    	} else {
				    		// all fields here
				    		mask = 0L;
				    	}
				    } else {
				    	if (vectorIndex == localsStartIndex) {
				    		// some locals, some fields at this vectorIndex
				    		mask = ((-1 << localsStartOffset) | fieldResetFlow.extraConstantFieldMask[vectorIndex]);
				    	} else {
				    		// all fields here
				    		mask = 0L | fieldResetFlow.extraConstantFieldMask[vectorIndex];
				    	}
				    	
				    }
				} else {
					if (vectorIndex == localsStartIndex) {
						// some locals, some fields at this vectorIndex
						mask = -1L << localsStartOffset;
					} else {
						// all fields here
						mask = 0L;
					}
				}
			    long reset1, reset2, reset3, reset4;
			    if (fieldResetFlow.extra != null && fieldResetFlow.extra[2].length > vectorIndex) {
			    	reset1 = fieldResetFlow.extra[2][vectorIndex];
			    	reset2 = fieldResetFlow.extra[3][vectorIndex];
			    	reset3 = fieldResetFlow.extra[4][vectorIndex];
			    	reset4 = fieldResetFlow.extra[5][vectorIndex];
			    } else {
			    	// no status recorded in fieldResetFlow, use def unknown instead:
			    	reset1 = reset4 = 1;
			    	reset2 = reset3 = 0;
			    }
				this.extra[2][vectorIndex] = (this.extra[2][vectorIndex] & mask) | reset1;
				this.extra[3][vectorIndex] = (this.extra[3][vectorIndex] & mask) | reset2;
				this.extra[4][vectorIndex] = (this.extra[4][vectorIndex] & mask) | reset3;
				this.extra[5][vectorIndex] = (this.extra[5][vectorIndex] & mask) | reset4;
			}
		}
	}
}

