	public void complainIfUnusedExceptionHandlers(AbstractMethodDeclaration method) {
		MethodScope scope = method.scope;
		// can optionally skip overriding methods
		if ((method.binding.modifiers & (CompilerModifiers.AccOverriding | CompilerModifiers.AccImplementing)) != 0
		        && !scope.compilerOptions().reportUnusedDeclaredThrownExceptionWhenOverriding) {
		    return;
		}
		    
		// report errors for unreachable exception handlers
		for (int i = 0, count = handledExceptions.length; i < count; i++) {
			int index = indexes.get(handledExceptions[i]);
			int cacheIndex = index / BitCacheSize;
			int bitMask = 1 << (index % BitCacheSize);
			if ((isReached[cacheIndex] & bitMask) == 0) {
				scope.problemReporter().unusedDeclaredThrownException(
					handledExceptions[index],
					method,
					method.thrownExceptions[index]);
			}
		}
	}

