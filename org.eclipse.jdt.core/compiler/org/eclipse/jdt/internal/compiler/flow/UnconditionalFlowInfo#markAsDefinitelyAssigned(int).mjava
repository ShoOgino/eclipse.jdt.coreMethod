/**
 * Record a definite assignment at a given position.
 * It deals with the dual representation of the InitializationInfo2:
 * bits for the first 64 entries, then an array of booleans.
 */
final private void markAsDefinitelyAssigned(int position) {
	if (this != DeadEnd) {

		// position is zero-based
		if (position < BitCacheSize) {
			// use bits
			long mask;
			definiteInits |= (mask = 1L << position);
			potentialInits |= mask;
		} else {
			// use extra vector
			int vectorIndex = (position / BitCacheSize) - 1;
			if (extraDefiniteInits == null) {
				int length;
				extraDefiniteInits = new long[length = vectorIndex + 1];
				extraPotentialInits = new long[length];
			} else {
				int oldLength; // might need to grow the arrays
				if (vectorIndex >= (oldLength = extraDefiniteInits.length)) {
					System.arraycopy(extraDefiniteInits, 0, (extraDefiniteInits = new long[vectorIndex + 1]), 0, oldLength);
					System.arraycopy(extraPotentialInits, 0, (extraPotentialInits = new long[vectorIndex + 1]), 0, oldLength);
				}
			}
			long mask;
			extraDefiniteInits[vectorIndex] |= (mask = 1L << (position % BitCacheSize));
			extraPotentialInits[vectorIndex] |= mask;
		}
	}
}

