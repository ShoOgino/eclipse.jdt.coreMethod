/**
 * All the infos originate in TypeDeclaration.analyseCode(). So making sure that this method is called for every info that is sent into
 * methods/constructors should be sufficient
 */
public void addConstantFieldsMask(UnconditionalFlowInfo other) {
	this.constantFieldsMask |= other.constantFieldsMask;
    if (other.extraConstantFieldMask != null) {
    	int oldLength = 0;
    	int otherLen = other.extraConstantFieldMask.length;
    	if (this.extraConstantFieldMask != null) {
    		oldLength = this.extraConstantFieldMask.length;
	    	if (otherLen > (oldLength = this.extraConstantFieldMask.length)) {
				System.arraycopy(this.extraConstantFieldMask, 0, (this.extraConstantFieldMask = new long[otherLen]), 0, oldLength);
				for (int i = 0; i < oldLength; i++) {
					this.extraConstantFieldMask[i] |= other.extraConstantFieldMask[i];
				}
			} else {
				for (int i = 0; i < otherLen; i++) {
					this.extraConstantFieldMask[i] |= other.extraConstantFieldMask[i];
				}
			}
    	} else {
    		this.extraConstantFieldMask = new long[otherLen];
    	}
    	for (int i = oldLength; i < otherLen; i++) {
			this.extraConstantFieldMask[i] = other.extraConstantFieldMask[i];
		}
	}
}

