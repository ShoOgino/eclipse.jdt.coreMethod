public void markAsComparedEqualToNonNull(LocalVariableBinding local) {
	this.tagBits |= NULL_FLAG_MASK;
	int position;
	// position is zero-based
	if ((position = local.id + this.maxFieldCount) < BitCacheSize) {
		// use bits
		this.nullAssignmentValueBit2 |= (1L << position);
	} 
	else {
		// use extra vector
		int vectorIndex = (position / BitCacheSize) - 1;
		if (this.extra == null) {
			int length = vectorIndex + 1;
			this.extra = new long[extraLength][];
			for (int j = 2 /* do not care about non null info */;
					j < extraLength; j++) {
				this.extra[j] = new long[length];
			}
		}
		else {
			int oldLength;
			if (vectorIndex >= (oldLength = this.extra[0].length)) {
				int newLength = vectorIndex + 1;
				for (int j = 2 /* do not care about non null info */; 
						j < extraLength; j++) {
					System.arraycopy(this.extra[j], 0, 
						(this.extra[j] = new long[newLength]), 0, 
						oldLength);
				}
			}
		}
		this.extra[5][vectorIndex] |= (1L << (position % BitCacheSize));
	}
}

