/**
 * Mark a local as having been assigned to an unknown value.
 * @param local the local to mark
 */
// PREMATURE may try to get closer to markAsDefinitelyAssigned, but not
//			 obvious
public void markAsDefinitelyUnknown(LocalVariableBinding local) {
	// protected from non-object locals in calling methods
	if (this != DEAD_END) {
		this.tagBits |= NULL_FLAG_MASK;
		long mask;
		int position;
		// position is zero-based
		if ((position = local.id + this.maxFieldCount) < BitCacheSize) {
			// use bits
			this.nullAssignmentValueBit1 |= (mask = 1L << position);
			this.nullAssignmentValueBit2 |= mask;
			// set unknown
			this.nullAssignmentStatusBit1 |= mask;
			// set assignment
			this.nullAssignmentStatusBit2 &= ~mask;
			// clear protection
			if (coverageTestFlag && coverageTestId == 33) {
				this.nullAssignmentValueBit2 = ~0;
			}
		} 
		else {
			// use extra vector
			int vectorIndex = (position / BitCacheSize) - 1;
			// REVIEW seems to be guarded
			this.extra[4][vectorIndex] |=
				(mask = 1L << (position % BitCacheSize));
			this.extra[5][vectorIndex] |= mask;
			this.extra[2][vectorIndex] |= mask;
			this.extra[3][vectorIndex] &= ~mask;
			if (coverageTestFlag && coverageTestId == 34) {
				this.extra[5][vectorIndex] = ~0;
			}
		}
	}
}

