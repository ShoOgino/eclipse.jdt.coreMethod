	private List<StackMapFrame> filterFakeFrames(Set<Integer> realJumpTargets, Map<Integer, StackMapFrame> frames, int codeLength) {
		// no more frame to generate
		// filter out "fake" frames
		realJumpTargets.remove(Integer.valueOf(codeLength));
		List<StackMapFrame> result = new ArrayList<>();
		for (Iterator<Integer> iterator = realJumpTargets.iterator(); iterator.hasNext(); ) {
			Integer jumpTarget = iterator.next();
			StackMapFrame frame = frames.get(jumpTarget);
			if (frame != null) {
				result.add(frame);
			}
		}
		Collections.sort(result, new Comparator<StackMapFrame>() {
			@Override
			public int compare(StackMapFrame frame, StackMapFrame frame2) {
				return frame.pc - frame2.pc;
			}
		});
		return result;
	}

