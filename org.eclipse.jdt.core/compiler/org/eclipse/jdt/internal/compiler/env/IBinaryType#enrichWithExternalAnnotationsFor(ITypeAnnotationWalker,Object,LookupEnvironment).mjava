/**
 * Answer a type annotation walker that takes into consideration also external annotations.
 * @param walker previous walker, may be empty, otherwise it will be returned unchanged
 * @param member if either a IBinaryField or a IBinaryMethod is provided, answer a walker specifically for that member
 * @param environment for use by the walker
 * @return either a matching walker with data from external annotations or the walker provided via argument 'walker'.
 */
ITypeAnnotationWalker enrichWithExternalAnnotationsFor(ITypeAnnotationWalker walker, Object member, LookupEnvironment environment);

