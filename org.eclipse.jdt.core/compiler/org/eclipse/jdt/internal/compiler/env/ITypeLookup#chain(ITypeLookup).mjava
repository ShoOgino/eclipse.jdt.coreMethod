	/**
	 * Returns a composed TypeLookup that represents a short circuiting TypeLookup which returns
	 * the better answer between this TypeLookup and other
	 *   
	 * @param other
	 * @return Chained TypeLookup
	 */
	default ITypeLookup chain(ITypeLookup other) {
		NameEnvironmentAnswer suggestedAnswer = null;
		return (typeName, qualifiedPackageName, qualifiedBinaryFileName, binaryOnly) -> {
			NameEnvironmentAnswer answer = findClass(typeName, qualifiedPackageName, qualifiedBinaryFileName, binaryOnly);
			if (answer != null) {
				if (!answer.ignoreIfBetter()) {
					if (answer.isBetter(suggestedAnswer))
						return answer;
				} else if (answer.isBetter(suggestedAnswer))
					// remember suggestion and keep looking
					return orBetter.apply(answer, other).findClass(typeName, qualifiedPackageName, qualifiedBinaryFileName, binaryOnly);
			}
			return orBetter.apply(suggestedAnswer, other).findClass(typeName, qualifiedPackageName, qualifiedBinaryFileName);
		};
	}

