	private List filterFakeFrames(Set realJumpTargets, Map frames, int codeLength) {
		// no more frame to generate
		// filter out "fake" frames
		realJumpTargets.remove(Integer.valueOf(codeLength));
		List result = new ArrayList();
		for (Iterator iterator = realJumpTargets.iterator(); iterator.hasNext(); ) {
			Integer jumpTarget = (Integer) iterator.next();
			StackMapFrame frame = (StackMapFrame) frames.get(jumpTarget);
			if (frame != null) {
				result.add(frame);
			}
		}
		Collections.sort(result, new Comparator() {
			public int compare(Object o1, Object o2) {
				StackMapFrame frame = (StackMapFrame) o1;
				StackMapFrame frame2 = (StackMapFrame) o2;
				return frame.pc - frame2.pc;
			}
		});
		return result;
	}

