/*
* Update the bodyStart of the corresponding parse node
*/
public void notifySourceElementRequestor(FieldDeclaration fieldDeclaration) {
	
	// range check
	boolean isInRange = 
				scanner.initialPosition <= fieldDeclaration.declarationSourceStart
				&& scanner.eofPosition >= fieldDeclaration.declarationSourceEnd;

	if (fieldDeclaration.isField()) {
		int fieldEndPosition = fieldDeclaration.declarationSourceEnd;
		if (fieldDeclaration instanceof SourceFieldDeclaration) {
			fieldEndPosition = ((SourceFieldDeclaration) fieldDeclaration).fieldEndPosition;
			if (fieldEndPosition == 0) {
				// use the declaration source end by default
				fieldEndPosition = fieldDeclaration.declarationSourceEnd;
			}
		}
		if (isInRange) {
			requestor.enterField(
				fieldDeclaration.declarationSourceStart, 
				fieldDeclaration.modifiers & AccJustFlag, 
				returnTypeName(fieldDeclaration.type), 
				fieldDeclaration.name, 
				fieldDeclaration.sourceStart, 
				fieldDeclaration.sourceEnd); 
		}
		this.visitIfNeeded(fieldDeclaration);
		if (isInRange){
			requestor.exitField(fieldEndPosition);
		}

	} else {
		if (isInRange){
			requestor.enterInitializer(
				fieldDeclaration.declarationSourceStart,
				fieldDeclaration.modifiers); 
		}
		this.visitIfNeeded((Initializer)fieldDeclaration);
		if (isInRange){
			requestor.exitInitializer(fieldDeclaration.declarationSourceEnd);
		}
	}
}

