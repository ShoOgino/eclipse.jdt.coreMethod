	/**
	 * (c)1998 Object Technology International.
	 * (c)1998 International Business Machines Corporation.
	 * 
	 * 
	 * @return String
	 * @param relativeOffset int
	 */
	public char[] utf8At(
		int relativeOffset,
		int bytesAvailable,
		boolean testValidity)
		throws ClassFormatException {
		int x, y, z;
		int length = bytesAvailable;
		char outputBuf[] = new char[bytesAvailable];
		int outputPos = 0;
		int readOffset = structOffset + relativeOffset;

		while (length != 0) {
			x = reference[readOffset++] & 0xFF;
			length--;
			if ((0x80 & x) != 0) {
				if (testValidity) {
					if ((0x40 & x) == 0) {
						throw new ClassFormatException(ClassFormatException.ErrMalformedUtf8);
					}
					if (length < 1) {
						throw new ClassFormatException(ClassFormatException.ErrMalformedUtf8);
					}
				}
				y = this.reference[readOffset++] & 0xFF;
				length--;
				if (testValidity) {
					if ((y & 0xC0) != 0x80) {
						throw new ClassFormatException(ClassFormatException.ErrMalformedUtf8);
					}
				}
				if ((x & 0x20) != 0) {
					if (testValidity && (length < 1)) {
						throw new ClassFormatException(ClassFormatException.ErrMalformedUtf8);
					}
					z = this.reference[readOffset++] & 0xFF;
					length--;
					if (testValidity && ((z & 0xC0) != 0x80)) {
						throw new ClassFormatException(ClassFormatException.ErrMalformedUtf8);
					}
					x = ((x & 0x1F) << 12) + ((y & 0x3F) << 6) + (z & 0x3F);
					if (testValidity && (x < 0x0800)) {
						throw new ClassFormatException(ClassFormatException.ErrMalformedUtf8);
					}
				} else {
					x = ((x & 0x1F) << 6) + (y & 0x3F);
					if (testValidity && !((x == 0) || (x >= 0x80))) {
						throw new ClassFormatException(ClassFormatException.ErrMalformedUtf8);
					}
				}
			} else {
				if (testValidity && x == 0) {
					throw new ClassFormatException(ClassFormatException.ErrMalformedUtf8);
				}
			}
			outputBuf[outputPos++] = (char) x;
		}

		if (outputPos != bytesAvailable) {
			System.arraycopy(outputBuf, 0, (outputBuf = new char[outputPos]), 0, outputPos);
		}
		return outputBuf;
	}

