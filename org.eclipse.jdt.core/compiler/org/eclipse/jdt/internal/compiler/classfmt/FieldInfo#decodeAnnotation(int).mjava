private int decodeAnnotation(int offset) {
	int readOffset = offset;
	int utf8Offset = this.constantPoolOffsets[u2At(offset)] - structOffset;
	char[] typeName = utf8At(utf8Offset + 3, u2At(utf8Offset + 1));
	typeName = Signature.toCharArray(typeName);
	CharOperation.replace(typeName, '/', '.');
	char[][] qualifiedTypeName = CharOperation.splitOn('.', typeName);
	int numberOfPairs = u2At(offset + 2);
	readOffset += 4;
	if (qualifiedTypeName.length == 3) {
		char[] lastPart = qualifiedTypeName[2];
		if (lastPart[0] == 'D') {
			if (CharOperation.equals(qualifiedTypeName, TypeConstants.JAVA_LANG_DEPRECATED)) {
				this.tagBits |= TagBits.AnnotationDeprecated;
				return readOffset;		
			}
		}
	}
	for (int i = 0; i < numberOfPairs; i++) {
		readOffset += 2;
		readOffset = decodeElementValue(readOffset);
	}
	return readOffset;
}

