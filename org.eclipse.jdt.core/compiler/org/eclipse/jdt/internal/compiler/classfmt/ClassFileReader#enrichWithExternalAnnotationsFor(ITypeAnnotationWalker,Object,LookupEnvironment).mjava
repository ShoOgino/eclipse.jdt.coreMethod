/**
 * Conditionally add external annotations to the mix.
 * If 'member' is given it must be either of IBinaryField or IBinaryMethod, in which case we're seeking annotations for that member.
 * Otherwise we're seeking annotations for top-level elements of a type (type parameters & super types).
 */
@Override
public ITypeAnnotationWalker enrichWithExternalAnnotationsFor(ITypeAnnotationWalker walker, Object member, LookupEnvironment environment) {
	if (walker == ITypeAnnotationWalker.EMPTY_ANNOTATION_WALKER && this.annotationProvider != null) {
		if (member == null) {
			return this.annotationProvider.forTypeHeader(environment);
		} else if (member instanceof IBinaryField) {
			IBinaryField field = (IBinaryField) member;
			char[] fieldSignature = field.getGenericSignature();
			if (fieldSignature == null)
				fieldSignature = field.getTypeName();
			return this.annotationProvider.forField(field.getName(), fieldSignature, environment);
		} else if (member instanceof IBinaryMethod) {
			IBinaryMethod method = (IBinaryMethod) member;
			char[] methodSignature = method.getGenericSignature();
			if (methodSignature == null)
				methodSignature = method.getMethodDescriptor();
			return this.annotationProvider.forMethod(method.isConstructor() ? TypeConstants.INIT : method.getSelector(), methodSignature, environment);
		}
	}
	return walker;
}

