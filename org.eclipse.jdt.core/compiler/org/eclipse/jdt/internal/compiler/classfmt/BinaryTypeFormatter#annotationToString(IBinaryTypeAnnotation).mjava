	public static String annotationToString(IBinaryTypeAnnotation typeAnnotation) {
		StringBuffer buffer = new StringBuffer();
		buffer.append(typeAnnotation.getAnnotation());
		buffer.append(' ');
		// Not fully decoding it here, just including all the information in the string
		buffer.append("target_type=").append(typeAnnotation.getTargetType()); //$NON-NLS-1$
		buffer.append(", info=").append(typeAnnotation.getSupertypeIndex()); //$NON-NLS-1$
		buffer.append(", info2=").append(typeAnnotation.getBoundIndex()); //$NON-NLS-1$
		int[] theTypePath = typeAnnotation.getTypePath();
		if (theTypePath != null && theTypePath.length != 0) {
			buffer.append(", location=["); //$NON-NLS-1$
			for (int i = 0, max = theTypePath.length; i < max; i += 2) {
				if (i > 0) {
					buffer.append(", "); //$NON-NLS-1$
				}
				switch (theTypePath[i]) {
					case 0:
						buffer.append("ARRAY"); //$NON-NLS-1$
						break;
					case 1:
						buffer.append("INNER_TYPE"); //$NON-NLS-1$
						break;
					case 2:
						buffer.append("WILDCARD"); //$NON-NLS-1$
						break;
					case 3:
						buffer.append("TYPE_ARGUMENT(").append(theTypePath[i+1]).append(')'); //$NON-NLS-1$
						break;
				}
			}
			buffer.append(']');
		}
		return buffer.toString();
	}

