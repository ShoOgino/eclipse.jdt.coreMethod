private boolean hasStructuralAnnotationChanges(IBinaryAnnotation[] currentAnnotations, IBinaryAnnotation[] otherAnnotations) {
	if (currentAnnotations == otherAnnotations)
		return false;

	int currentAnnotationsLength = currentAnnotations == null ? 0 : currentAnnotations.length;
	int otherAnnotationsLength = otherAnnotations == null ? 0 : otherAnnotations.length;
	if (currentAnnotationsLength != otherAnnotationsLength)
		return true;
	for (int i = 0; i < currentAnnotationsLength; i++) {
		if (!CharOperation.equals(currentAnnotations[i].getTypeName(), otherAnnotations[i].getTypeName()))
			return true;
		IBinaryElementValuePair[] currentPairs = currentAnnotations[i].getElementValuePairs();
		IBinaryElementValuePair[] otherPairs = otherAnnotations[i].getElementValuePairs();
		int currentPairsLength = currentPairs == null ? 0 : currentPairs.length;
		int otherPairsLength = otherPairs == null ? 0 : otherPairs.length;
		if (currentPairsLength != otherPairsLength)
			return true;
		for (int j = 0; j < currentPairsLength; j++) {
			if (!CharOperation.equals(currentPairs[j].getName(), otherPairs[j].getName()))
				return true;
			final Object value = currentPairs[j].getValue();
			final Object value2 = otherPairs[j].getValue();
			if (value instanceof Object[]) {
				Object[] currentValues = (Object[]) value;
				if (value2 instanceof Object[]) {
					Object[] currentValues2 = (Object[]) value2;
					final int length = currentValues.length;
					if (length != currentValues2.length) {
						return true;
					}
					for (int n = 0; n < length; n++) {
						if (!currentValues[n].equals(currentValues2[n])) {
							return true;
						}
					}
					return false;
				}
				return true;
			} else if (!value.equals(value2)) {
				return true;
			}
		}
	}
	return false;
}

