	public TypeBinding resolveTypeExpecting(
		BlockScope scope,
		TypeBinding expectedType) {

		this.setExpectedType(expectedType); // needed in case of generic method invocation
		TypeBinding expressionType = this.resolveType(scope);
		if (expressionType == null) return null;
		if (expressionType == expectedType) return expressionType;
		
		if (scope.isBoxingCompatibleWith(expressionType, expectedType)) {
			this.computeConversion(scope, expectedType, expressionType);
		} else if (!expressionType.isCompatibleWith(expectedType)) {
			scope.problemReporter().typeMismatchError(expressionType, expectedType, this);
			return null;
		}
		return expressionType;
	}

