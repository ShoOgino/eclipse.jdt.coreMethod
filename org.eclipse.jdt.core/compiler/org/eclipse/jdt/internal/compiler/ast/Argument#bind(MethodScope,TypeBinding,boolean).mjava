public void bind(MethodScope scope, TypeBinding typeBinding, boolean used) {
	if (this.type != null) this.type.binding = typeBinding; // record the resolved type into the type reference
	int modifierFlag = this.modifiers;
	if ((this.binding = scope.duplicateName(this.name)) != null) {
		//the name already exist....may carry on with the first binding ....
		scope.problemReporter().redefineArgument(this);
	} else {
		scope.addLocalVariable(this.binding = new LocalVariableBinding(this.name, typeBinding, modifierFlag, true)); //true stand for argument instead of just local
		if (isTypeUseDeprecated(typeBinding, scope))
			scope.problemReporter().deprecatedType(typeBinding, this.type);
		this.binding.declaration = this;
		this.binding.used = used;
	}
}

