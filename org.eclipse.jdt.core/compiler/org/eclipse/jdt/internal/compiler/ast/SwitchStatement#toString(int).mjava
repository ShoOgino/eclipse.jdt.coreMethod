public String toString(int tab){
	/* slow code */
	
	String inFront , s = tabString(tab) ;
	inFront = s ;
	s = s + "switch ("/*nonNLS*/ + testExpression.toStringExpression() + ") "/*nonNLS*/;
	if (statements == null)
	{ 	s = s + "{}"/*nonNLS*/ ; 
		return s;}
	else
		s = s + "{"/*nonNLS*/;

	s = s + (explicitDeclarations != 0
				? "// ---scope needed for "/*nonNLS*/+String.valueOf(explicitDeclarations) +" locals------------ \n"/*nonNLS*/
				: "// ---NO scope needed------ \n"/*nonNLS*/) ;
		
	int i = 0;
	String tabulation = "  "/*nonNLS*/;
	try	{while(true){
		//use instanceof in order not to polluate classes with behavior only needed for printing purpose.
		if ( statements[i]  instanceof Expression)
			s = s + "\n"/*nonNLS*/ + inFront + tabulation;
		if ( statements[i]  instanceof Break)
			s = s + statements[i].toString(0) ;
		else	
			s = s + "\n"/*nonNLS*/ + statements[i].toString(tab+2) ;
		//=============	
		if ( (statements[i] instanceof Case) || (statements[i] instanceof DefaultCase))
		{	i++;
			while(! ((statements[i] instanceof Case) || (statements[i] instanceof DefaultCase)))
			{	if ( (statements[i] instanceof Expression) || (statements[i] instanceof Break))
					s = s +  statements[i].toString(0) +" ; "/*nonNLS*/;
				else
					s = s + "\n"/*nonNLS*/ + statements[i].toString(tab+6) + " ; "/*nonNLS*/;
				i++;}}
		else
		{	s = s + " ;"/*nonNLS*/ ;
			i++;}}}
	catch(IndexOutOfBoundsException e){};
	s = s + "}"/*nonNLS*/;
	return s;}

