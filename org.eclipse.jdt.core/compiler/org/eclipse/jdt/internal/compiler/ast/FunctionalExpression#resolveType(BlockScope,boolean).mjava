	public TypeBinding resolveType(BlockScope blockScope, boolean skipKosherCheck) {
		this.constant = Constant.NotAConstant;
		this.enclosingScope = blockScope;
		MethodBinding sam = this.expectedType == null ? null : this.expectedType.getSingleAbstractMethod(blockScope, argumentsTypeElided());
		if (sam == null) {
			blockScope.problemReporter().targetTypeIsNotAFunctionalInterface(this);
			return null;
		}
		if (!sam.isValidBinding()) {
			return reportSamProblem(blockScope, sam);
		}
		
		this.descriptor = sam;
		if (skipKosherCheck || kosherDescriptor(blockScope, sam, true)) {
			if (this.expectedType instanceof IntersectionTypeBinding18) {
				ReferenceBinding[] intersectingTypes =  ((IntersectionTypeBinding18)this.expectedType).intersectingTypes;
				for (int t = 0, max = intersectingTypes.length; t < max; t++) {
					if (intersectingTypes[t].findSuperTypeOriginatingFrom(TypeIds.T_JavaIoSerializable, false /*Serializable is not a class*/) != null) {
						this.isSerializable = true;
						break;
					}
				}
			} else if (this.expectedType.findSuperTypeOriginatingFrom(TypeIds.T_JavaIoSerializable, false /*Serializable is not a class*/) != null) {
				this.isSerializable = true;
			}
			LookupEnvironment environment = blockScope.environment();
			if (environment.globalOptions.isAnnotationBasedNullAnalysisEnabled) {
				ImplicitNullAnnotationVerifier.ensureNullnessIsKnown(sam, blockScope);
				NullAnnotationMatching.checkForContradictions(sam, this, blockScope);
			}
			return this.resolvedType = this.expectedType;		
		}
		
		return this.resolvedType = null;
	}

