	public FlowInfo analyseCode(
		BlockScope currentScope,
		FlowContext flowContext,
		FlowInfo flowInfo,
		boolean valueRequired) {
			
		// determine the rank until which we now we do not need any actual value for the field access
		int otherBindingsCount = otherBindings == null ? 0 : otherBindings.length;

		boolean needValue = otherBindingsCount == 0 ? valueRequired : !this.otherBindings[0].isStatic();
		boolean complyTo14 = currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4;
		switch (bits & RestrictiveFlagMASK) {
			case Binding.FIELD : // reading a field
				if (needValue || complyTo14) {
					manageSyntheticAccessIfNecessary(currentScope, (FieldBinding) binding, this.actualReceiverType, 0, flowInfo);
				}
				if (this.indexOfFirstFieldBinding == 1) { // was an implicit reference to the first field binding
					FieldBinding fieldBinding = (FieldBinding) binding;
					ReferenceBinding declaringClass = fieldBinding.declaringClass;
					// check if accessing enum static field in initializer					
					if (declaringClass.isEnum()) {
						MethodScope methodScope = currentScope.methodScope();
						SourceTypeBinding sourceType = methodScope.enclosingSourceType();
						if (fieldBinding.isStatic()
								&& (sourceType == declaringClass || sourceType.superclass == declaringClass) // enum constant body
								&& fieldBinding.constant() == NotAConstant
								&& !methodScope.isStatic
								&& methodScope.isInsideInitializerOrConstructor()) {
							currentScope.problemReporter().enumStaticFieldUsedDuringInitialization(fieldBinding, this);
						}
					}				
					// check if reading a final blank field
					if (fieldBinding.isBlankFinal()
							&& currentScope.allowBlankFinalFieldAssignment(fieldBinding)
							&& !flowInfo.isDefinitelyAssigned(fieldBinding)) {
						currentScope.problemReporter().uninitializedBlankFinalField(fieldBinding, this);
					}
				}
				break;
			case Binding.LOCAL : // reading a local variable
				LocalVariableBinding localBinding;
				if (!flowInfo
					.isDefinitelyAssigned(localBinding = (LocalVariableBinding) binding)) {
					currentScope.problemReporter().uninitializedLocalVariable(localBinding, this);
				}
				if (flowInfo.isReachable()) {
					localBinding.useFlag = LocalVariableBinding.USED;
				} else if (localBinding.useFlag == LocalVariableBinding.UNUSED) {
					localBinding.useFlag = LocalVariableBinding.FAKE_USED;
				}
				this.checkNullStatus(currentScope, flowContext, flowInfo, FlowInfo.NON_NULL);
		}
		if (needValue) {
			manageEnclosingInstanceAccessIfNecessary(currentScope, flowInfo);
			// only for first binding
		}
		if (otherBindings != null) {
			for (int i = 0; i < otherBindingsCount; i++) {
				needValue = i < otherBindingsCount-1 ? !otherBindings[i+1].isStatic() : valueRequired;
				if (needValue || complyTo14) {
					TypeBinding lastReceiverType = getGenericCast(i);
					if (lastReceiverType == null) {
						if (i == 0) {
							 lastReceiverType = ((VariableBinding)binding).type;
						} else {
							lastReceiverType = otherBindings[i-1].type;
						}
					}
					manageSyntheticAccessIfNecessary(
						currentScope, 
						otherBindings[i], 
						lastReceiverType,
						i + 1,
						flowInfo);
				}
			}
		}
		return flowInfo;
	}

