	private ReferenceBinding findGroundTargetType(BlockScope blockScope, ReferenceBinding targetType, boolean argumentTypesElided) {
		if (!targetType.isValidBinding())
			return null;
		ParameterizedTypeBinding withWildCards = InferenceContext18.parameterizedWithWildcard(targetType);
		if (withWildCards != null) {
			ReferenceBinding genericType = withWildCards.genericType();
			if (!argumentTypesElided) {
				// invoke 18.5.3 Functional Interface Parameterization Inference
				InferenceContext18 ctx = new InferenceContext18(blockScope);
				TypeBinding[] q = ctx.createBoundsForFunctionalInterfaceParameterizationInference(withWildCards);
				if (q == null || q.length != this.arguments.length) {
					// fail  TODO: can this still happen here?
				} else {
					if (ctx.reduceWithEqualityConstraints(this.argumentTypes, q)) {
						TypeBinding[] a = withWildCards.arguments; // a is not-null by construction of parameterizedWithWildcard()
						TypeBinding[] aprime = ctx.getFunctionInterfaceArgumentSolutions(a);
						// TODO If F<A'1, ..., A'm> is a well-formed type, ...
						return blockScope.environment().createParameterizedType(genericType, aprime, genericType.enclosingType());
					}
				}
			} else {
				// non-wildcard parameterization (9.8) of the target type
				TypeBinding[] types = withWildCards.getNonWildcardParameterization(blockScope);
				if (types == null)
					return null;
				return blockScope.environment().createParameterizedType(genericType, types, genericType.enclosingType());
			}
		}
		return targetType;
	}

