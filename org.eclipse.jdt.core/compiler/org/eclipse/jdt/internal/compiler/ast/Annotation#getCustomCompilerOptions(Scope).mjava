	public CompilerOptions getCustomCompilerOptions(Scope scope) {
		CompilerOptions options = scope.compilerOptions();
		long warningLevel = options.warningThreshold;
		long originalWarningLevel = warningLevel;
		MemberValuePair[] pairs = this.memberValuePairs();
		pairLoop: for (int i = 0, length = pairs.length; i < length; i++) {
			MemberValuePair pair = pairs[i];
			if (CharOperation.equals(pair.name, TypeConstants.VALUE)) {
				Expression value = pair.value;
				if (value instanceof ArrayInitializer) {
					ArrayInitializer initializer = (ArrayInitializer) value;
					Expression[] inits = initializer.expressions;
					for (int j = 0, initsLength = inits.length; j < initsLength; j++) {
						Constant cst = inits[j].constant;
						if (cst != Constant.NotAConstant && cst.typeID() == T_JavaLangString) {
							warningLevel &= ~getSuppressedWarningLevel(cst.stringValue());
							if (warningLevel == 0) break pairLoop;
						}
					}
				} else {
					Constant cst = value.constant;
					if (cst != Constant.NotAConstant && cst.typeID() == T_JavaLangString) {
						warningLevel &= ~getSuppressedWarningLevel(cst.stringValue());
						if (warningLevel == 0) break pairLoop;
					}
				}
				break pairLoop;
			}
		}
		if (originalWarningLevel != warningLevel) {
			options = new CompilerOptions(options);
			options.warningThreshold = warningLevel;
		}
		return options;
	}

