	public TypeBinding resolveTypeEnclosing(BlockScope scope, ReferenceBinding enclosingType) {

		TypeBinding memberType = scope.getMemberType(token, enclosingType);
		if (!memberType.isValidBinding()) {
			this.resolvedType = memberType;
			scope.problemReporter().invalidEnclosingType(this, memberType, enclosingType);
			return null;
		}
		if (isTypeUseDeprecated(memberType, scope))
			scope.problemReporter().deprecatedType(memberType, this);
		memberType = scope.environment().convertToRawType(memberType);
		if (memberType.isRawType() && scope.compilerOptions().reportRawTypeReference) {
			scope.problemReporter().rawTypeReference(this, memberType);
		}
		return this.resolvedType = memberType;
	}

