/*
 * No need to emulate access to protected fields since not implicitly accessed
 */
public void manageSyntheticWriteAccessIfNecessary(BlockScope currentScope){
	if (binding.isPrivate()) {
		if (currentScope.enclosingSourceType() != binding.declaringClass) {
			syntheticWriteAccessor = ((SourceTypeBinding) binding.declaringClass).addSyntheticMethod(binding, false);
			currentScope.problemReporter().needToEmulateFieldWriteAccess(binding, this);
		}
		
	} else if (receiver instanceof QualifiedSuperReference){ // qualified super

		// qualified super need emulation always
		SourceTypeBinding destinationType = (SourceTypeBinding)(((QualifiedSuperReference)receiver).currentCompatibleType);
		syntheticWriteAccessor = destinationType.addSyntheticMethod(binding, false);
		currentScope.problemReporter().needToEmulateFieldWriteAccess(binding, this);

	} else if (binding.isProtected()) {

		SourceTypeBinding enclosingSourceType;
		if (((bits & DepthMASK) != 0) 
				&& binding.declaringClass.getPackage() 
					!= (enclosingSourceType = currentScope.enclosingSourceType()).getPackage()){

			SourceTypeBinding currentCompatibleType = (SourceTypeBinding)enclosingSourceType.enclosingTypeAt((bits & DepthMASK) >> DepthSHIFT);
			syntheticWriteAccessor = currentCompatibleType.addSyntheticMethod(binding, false);
			currentScope.problemReporter().needToEmulateFieldWriteAccess(binding, this);
		}
	}
}

