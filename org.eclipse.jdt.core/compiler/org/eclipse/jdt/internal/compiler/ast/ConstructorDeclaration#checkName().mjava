	public void checkName() {
		//look if the name of the method is correct
		//and proceed with the resolution of the special constructor statement 

		if (!CharOperation.equals(scope.enclosingSourceType().sourceName, selector))
			scope.problemReporter().missingReturnType(this);

		// if null ==> an error has occurs at parsing time ....
		if (constructorCall != null && binding != null) {
			// e.g. using super() in java.lang.Object
			if ((binding.declaringClass.id == T_Object)
				&& (constructorCall.accessMode != ExplicitConstructorCall.This)) {
				if (constructorCall.accessMode == ExplicitConstructorCall.Super) {
					scope.problemReporter().cannotUseSuperInJavaLangObject(constructorCall);
				}
				constructorCall = null;
				return;
			}
			constructorCall.resolve(scope);
		}
	}

