	private void checkNullComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse) {
		int rightStatus = this.right.nullStatus(flowInfo);
		int leftStatus = this.left.nullStatus(flowInfo);
		// check if either is a method annotated @NonNull and compared to null:
		if (leftStatus == FlowInfo.NON_NULL && rightStatus == FlowInfo.NULL) {
			if (this.left instanceof MessageSend) { 
				scope.problemReporter().messageSendRedundantCheckOnNonNull(((MessageSend) this.left).binding, this.left);
			}
			// TODO: handle all kinds of expressions (cf. also https://bugs.eclipse.org/364326)
		} else if (leftStatus == FlowInfo.NULL && rightStatus == FlowInfo.NON_NULL) {
			if (this.right instanceof MessageSend) {
				scope.problemReporter().messageSendRedundantCheckOnNonNull(((MessageSend) this.right).binding, this.right);
			}
			// TODO: handle all kinds of expressions (cf. also https://bugs.eclipse.org/364326)
		}

		VariableBinding var = this.left.variableBinding(scope);
		if (var != null && (var.type.tagBits & TagBits.IsBaseType) == 0) {
			checkVariableComparison(scope, flowContext, flowInfo, initsWhenTrue, initsWhenFalse, var, rightStatus, this.left);
		}
		var = this.right.variableBinding(scope);
		if (var != null && (var.type.tagBits & TagBits.IsBaseType) == 0) {
			checkVariableComparison(scope, flowContext, flowInfo, initsWhenTrue, initsWhenFalse, var, leftStatus, this.right);
		}
	}

