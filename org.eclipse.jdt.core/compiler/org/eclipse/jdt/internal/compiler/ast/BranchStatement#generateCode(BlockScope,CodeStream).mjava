/**
 * Branch code generation
 *
 *   generate the finallyInvocationSequence.
 */
public void generateCode(BlockScope currentScope, CodeStream codeStream) {

	if ((bits & IsReachable) == 0) {
		return;
	}
	int pc = codeStream.position;

	// generation of code responsible for invoking the finally 
	// blocks in sequence
	if (subroutines != null){
		for (int i = 0, max = subroutines.length; i < max; i++){
			SubRoutineStatement sub = subroutines[i];
			sub.generateSubRoutineInvocation(currentScope, codeStream);
			if (sub.isSubRoutineEscaping()) {
					codeStream.recordPositionsFrom(pc, this.sourceStart);
					SubRoutineStatement.reenterAnyExceptionHandlers(subroutines, i, codeStream);
					return;
			}
			sub.exitAnyExceptionHandler();
		}
	}
	codeStream.goto_(targetLabel);
	codeStream.recordPositionsFrom(pc, this.sourceStart);
	SubRoutineStatement.reenterAnyExceptionHandlers(subroutines, -1, codeStream);
}

