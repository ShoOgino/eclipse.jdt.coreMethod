	// pre: !argumentTypeElided()
	// try to merge null annotations from descriptor into binding, complaining about any incompatibilities found
	private void mergeParameterNullAnnotations(BlockScope currentScope) {
		if (this.descriptor.parameterNonNullness == null)
			return;
		if (this.binding.parameterNonNullness == null) {
			this.binding.parameterNonNullness = this.descriptor.parameterNonNullness;
			return;
		}
		LookupEnvironment env = currentScope.environment();
		Boolean[] ourNonNullness = this.binding.parameterNonNullness;
		Boolean[] descNonNullness = this.descriptor.parameterNonNullness;
		int len = Math.min(ourNonNullness.length, descNonNullness.length);
		for (int i = 0; i < len; i++) {
			if (ourNonNullness[i] == null) {
				ourNonNullness[i] = descNonNullness[i];
			} else if (ourNonNullness[i] != descNonNullness[i]) {
				if (ourNonNullness[i] == Boolean.TRUE) { // requested @NonNull not provided
					char[][] inheritedAnnotationName = null;
					if (descNonNullness[i] == Boolean.FALSE)
						inheritedAnnotationName = env.getNullableAnnotationName();
					currentScope.problemReporter().illegalRedefinitionToNonNullParameter(this.arguments[i], this.descriptor.declaringClass, inheritedAnnotationName);
				}
			}			
		}
	}

