	@Override
	public void resolve(BlockScope scope) {
		boolean hasPatternVariable = (this.bits & ASTNode.HasInstancePatternExpression) != 0;
	 	BlockScope trueScope = null;
	 	BlockScope falseScope = null;
	 	if (hasPatternVariable) {
	 		trueScope = this.patternScope;
	 	 	this.condition.resolvePatternVariable(trueScope, true);
	 	}
		TypeBinding type = this.condition.resolveTypeExpecting(hasPatternVariable ? trueScope : scope, TypeBinding.BOOLEAN);
		this.condition.computeConversion(scope, type, type);
		if (this.action != null) {
			if (hasPatternVariable) {
				if (this.action.doesNotCompleteNormally()) {
					falseScope = (BlockScope) scope.parent;
				}
			}
			this.action.resolve(hasPatternVariable ? trueScope : scope);
			if (falseScope != null)
				this.condition.resolvePatternVariable(falseScope, false);
		}
	}

