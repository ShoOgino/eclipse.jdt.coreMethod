	/*
	 * When unit result is about to be accepted, removed back pointers
	 * to compiler structures.
	 */
	public void cleanUp() {

		if (this.types != null) {
			for (int i = 0, max = this.types.length; i < max; i++) {
				cleanUp(this.types[i]);
			}
			if (this.allLocalTypes != null) {
				for (int i = 0, max = this.allLocalTypes.length; i < max; i++) {
					allLocalTypes[i].scope = null; // local members are already in the list
				}
			}
		}
		ClassFile[] classFiles = compilationResult.getClassFiles();
		for (int i = 0, max = classFiles.length; i < max; i++) {
			// clear the classFile back pointer to the bindings
			ClassFile classFile = classFiles[i];
			// null out the type's scope backpointers
			((SourceTypeBinding) classFile.referenceBinding).scope = null; // TODO: should no longer be necessary
			// null out the classfile backpointer to a type binding
			classFile.referenceBinding = null;
			classFile.codeStream = null; // codeStream holds onto ast and scopes
			classFile.innerClassesBindings = null;
		}
	}

