	public TypeBinding checkAgainstFinalTargetType(TypeBinding targetType) {
		// in 1.8 if treated as a poly expression:
		if (isPolyExpression()) {
			TypeBinding valueIfTrueType = this.valueIfTrue.checkAgainstFinalTargetType(targetType);
			TypeBinding valueIfFalseType = this.valueIfFalse.checkAgainstFinalTargetType(targetType);
			if (valueIfTrueType != null && !valueIfTrueType.isCompatibleWith(targetType, this.polyExpressionScope)) {
				this.polyExpressionScope.problemReporter().typeMismatchError(valueIfTrueType, targetType, this.valueIfTrue, null);
			}
			if (valueIfFalseType != null && !valueIfFalseType.isCompatibleWith(targetType, this.polyExpressionScope)) {
				this.polyExpressionScope.problemReporter().typeMismatchError(valueIfFalseType, targetType, this.valueIfFalse, null);
			}
			this.resolvedType = targetType;
		}
		return this.resolvedType;
	}

