	public char[] signature() {
		char [] signature = this.binding.signature();
		if (this.binding.isConstructor()) {
			// The implementation function is a constructor, which returns void, but the adjusted method type does return the new instance
			signature = CharOperation.concat(CharOperation.subarray(signature, 0, signature.length - 1), this.binding.declaringClass.signature());
		} else {
			// Adjust for captured variables - if not static and if receiver is not captured
			if (!(this.binding.isStatic() || this.haveReceiver)) {
				signature = CharOperation.concat(LPAR, this.binding.declaringClass.signature(), CharOperation.subarray(signature, 1, -1));
			}
		}
		return signature;
	}

