	public TypeBinding resolveType(BlockScope scope) {

		constant = NotAConstant;

		if (this.receiver == null) {
			this.receiverType = scope.enclosingSourceType();
		}
		else {
			this.receiverType = receiver.resolveType(scope);
		}
		if (this.receiverType == null) {
			return null;
		}
		// the case receiverType.isArrayType and token = 'length' is handled by the scope API
		this.codegenBinding = this.binding = scope.getField(this.receiverType, this.token, this);
		if (!this.binding.isValidBinding()) {
			constant = NotAConstant;
			scope.problemReporter().invalidField(this, this.receiverType);
			return null;
		}

		if (isFieldUseDeprecated(binding, scope, (this.bits & IsStrictlyAssignedMASK) !=0)) {
			scope.problemReporter().deprecatedField(this.binding, this);
		}
		return this.resolvedType = binding.type;
	}

