	/**
	 * Get a resolved copy of this lambda for use by type inference, as to avoid spilling any premature
	 * type results into the original lambda.
	 * 
	 * @param targetType the target functional type against which inference is attempted, must be a non-null valid functional type 
	 * @return a resolved copy of 'this' or null if significant errors where encountered
	 */
	public LambdaExpression getResolvedCopyForInferenceTargeting(TypeBinding targetType) {
		LambdaExpression lambda = this.resolvedCopies != null ? this.resolvedCopies.get(targetType) : null;
		if (lambda == null) {
			lambda = getResolvedCopyForInferenceTargeting0(targetType);
			if (this.resolvedCopies == null)
				this.resolvedCopies = new HashMap<TypeBinding, LambdaExpression>();
			this.resolvedCopies.put(targetType, lambda);
		}
		return lambda;
	}

