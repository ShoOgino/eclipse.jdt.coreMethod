	public void generateCode(
		BlockScope currentScope,
		CodeStream codeStream,
		boolean valueRequired) {
		int pc = codeStream.position;
		if (constant != NotAConstant) {
			if (valueRequired) {
				codeStream.generateConstant(constant, implicitConversion);
			}
		} else {
			switch (bits & RestrictiveFlagMASK) {
				case FIELD : // reading a field
					FieldBinding fieldBinding;
					if (valueRequired) {
						if ((fieldBinding = (FieldBinding) binding).constant == NotAConstant) {
							// directly use inlined value for constant fields
							boolean isStatic;
							if (!(isStatic = fieldBinding.isStatic())) {
								if ((bits & DepthMASK) != 0) {
									Object[] emulationPath =
										currentScope.getExactEmulationPath(
											currentScope.enclosingSourceType().enclosingTypeAt(
												(bits & DepthMASK) >> DepthSHIFT));
									if (emulationPath == null) {
										// internal error, per construction we should have found it
										currentScope.problemReporter().needImplementation();
									} else {
										codeStream.generateOuterAccess(emulationPath, this, currentScope);
									}
								} else {
									generateReceiver(codeStream);
								}
							}
							// managing private access							
							if ((syntheticAccessors == null) || (syntheticAccessors[READ] == null)) {
								if (isStatic) {
									codeStream.getstatic(fieldBinding);
								} else {
									codeStream.getfield(fieldBinding);
								}
							} else {
								codeStream.invokestatic(syntheticAccessors[READ]);
							}
							codeStream.generateImplicitConversion(implicitConversion);
						} else { // directly use the inlined value
							codeStream.generateConstant(fieldBinding.constant, implicitConversion);
						}
					}
					break;
				case LOCAL : // reading a local
					LocalVariableBinding localBinding = (LocalVariableBinding) binding;
					if (valueRequired) {
						// outer local?
						if ((bits & DepthMASK) != 0) {
							// outer local can be reached either through a synthetic arg or a synthetic field
							VariableBinding[] path = currentScope.getEmulationPath(localBinding);
							if (path == null) {
								// emulation was not possible (should not happen per construction)
								currentScope.problemReporter().needImplementation();
							} else {
								codeStream.generateOuterAccess(path, this, currentScope);
							}
						} else {
							// regular local variable read
							codeStream.load(localBinding);
						}
						codeStream.generateImplicitConversion(implicitConversion);
					}
			}
		}
		codeStream.recordPositionsFrom(pc, this);
	}

