	public boolean resolve(Scope scope) {
		boolean errorsExist = false;
		ModuleDeclaration exportingModule = (ModuleDeclaration)scope.referenceContext();
		ModuleBinding src = exportingModule.moduleBinding;
		PackageBinding pkg = this.resolvedPackage = src != null ? src.getExportedPackage(this.pkgName) : null;
		if (pkg == null) {
			// TODO: need a check for empty package as well
			scope.problemReporter().invalidExportReference(IProblem.ExportedPackageDoesNotExistOrIsEmpty, this);
			return false;
		}
		if (this.isTargeted()) {
			Set<ModuleBinding> modules = new HashSet<ModuleBinding>();
			for (int i = 0; i < this.targets.length; i++) {
				ModuleReference ref = this.targets[i];
				if (ref.resolve(scope) != null) {
					if (!modules.add(ref.binding)) {
						scope.problemReporter().duplicateModuleReference(IProblem.DuplicateExports, ref);
						errorsExist = true;
					}
				}
			}
		}
		return !errorsExist;
	}

