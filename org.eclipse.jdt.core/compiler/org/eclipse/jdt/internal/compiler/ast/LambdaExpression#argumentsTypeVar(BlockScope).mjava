	private boolean argumentsTypeVar(BlockScope blockScope) {
		if (blockScope.compilerOptions().complianceLevel < ClassFileConstants.getComplianceLevelForJavaVersion(ClassFileConstants.MAJOR_VERSION_11)) return false;
		boolean retval = false, isVar = false, mixReported = false;
		Argument[] args =  this.arguments;
		for (int i = 0, l = args.length; i < l; ++i) {
			Argument arg = args[i];
			TypeReference type = arg.type;
			if (type == null) continue;
			boolean prev = isVar;
			retval |= isVar = type.isTypeNameVar(blockScope);
			if (i > 0 && prev != isVar && !mixReported) { // report only once per list
				blockScope.problemReporter().varCannotBeMixedWithNonVarParams(isVar ? arg : args[i - 1]);
				mixReported = true;
			}
			if (isVar && (type.dimensions() > 0 || type.extraDimensions() > 0)) {
				blockScope.problemReporter().varLocalCannotBeArray(arg);
			}
		}
		return retval;
	}

