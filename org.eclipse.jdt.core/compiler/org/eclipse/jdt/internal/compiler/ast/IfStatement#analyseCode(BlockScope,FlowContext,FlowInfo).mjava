	public FlowInfo analyseCode(
		BlockScope currentScope,
		FlowContext flowContext,
		FlowInfo flowInfo) {

		FlowInfo thenFlowInfo, elseFlowInfo;

		// process the condition
		flowInfo = condition.analyseCode(currentScope, flowContext, flowInfo);

		Constant cst = this.condition.optimizedBooleanConstant();
		boolean isConditionOptimizedTrue = cst != NotAConstant && cst.booleanValue() == true;
		boolean isConditionOptimizedFalse = cst != NotAConstant && cst.booleanValue() == false;
		
		// process the THEN part
		if (isConditionOptimizedFalse) {
			//thenFlowInfo = conditionInfo.initsWhenTrue().copy().setReachMode(FlowInfo.CHECK_POT_INIT_FAKE_REACHABLE);
			thenFlowInfo = flowInfo.initsWhenTrue().copy().setReachMode(FlowInfo.UNREACHABLE); // revert
			
		} else {
			thenFlowInfo = flowInfo.initsWhenTrue().copy();
		}
		if (this.thenStatement != null) {
			// Save info for code gen
			thenInitStateIndex =
				currentScope.methodScope().recordInitializationStates(thenFlowInfo);
			if (!thenFlowInfo.complainIfUnreachable(thenStatement, currentScope, false)) {
				thenFlowInfo =
					thenStatement.analyseCode(currentScope, flowContext, thenFlowInfo);
			}
		};
		// optimizing the jump around the ELSE part
		this.thenExit = !thenFlowInfo.isReachable();

		// process the ELSE part
		if (isConditionOptimizedTrue) {
			//elseFlowInfo = conditionInfo.initsWhenFalse().copy().setReachMode(FlowInfo.CHECK_POT_INIT_FAKE_REACHABLE);
			elseFlowInfo = flowInfo.initsWhenFalse().copy().setReachMode(FlowInfo.UNREACHABLE); // revert
		} else {
			elseFlowInfo = flowInfo.initsWhenFalse().copy();
		}
		if (this.elseStatement != null) {
			// Save info for code gen
			elseInitStateIndex =
				currentScope.methodScope().recordInitializationStates(elseFlowInfo);
			if (!elseFlowInfo.complainIfUnreachable(elseStatement, currentScope, false)) {
				elseFlowInfo =
					elseStatement.analyseCode(currentScope, flowContext, elseFlowInfo);
			}
		}

		boolean elseExit = !elseFlowInfo.isReachable();
		
		// merge THEN & ELSE initializations
		FlowInfo mergedInfo;
		if (isConditionOptimizedTrue){
			if (!this.thenExit) {
				mergedInfo = thenFlowInfo;
			} else {
				mergedInfo = elseFlowInfo.setReachMode(FlowInfo.UNREACHABLE);
			}

		} else if (isConditionOptimizedFalse) {
			if (!elseExit) {
				mergedInfo = elseFlowInfo;
			} else {
				mergedInfo = thenFlowInfo.setReachMode(FlowInfo.UNREACHABLE);
			}

		} else {
			mergedInfo = thenFlowInfo.mergedWith(elseFlowInfo.unconditionalInits());
		}
		mergedInitStateIndex =
			currentScope.methodScope().recordInitializationStates(mergedInfo);
		return mergedInfo;
	}

