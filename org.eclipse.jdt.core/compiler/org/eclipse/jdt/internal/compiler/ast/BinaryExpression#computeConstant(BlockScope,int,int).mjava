	public void computeConstant(BlockScope scope, int leftId, int rightId) {

		//compute the constant when valid
		if ((left.constant != Constant.NotAConstant)
			&& (right.constant != Constant.NotAConstant)) {
			try {
				constant =
					Constant.computeConstantOperation(
						left.constant,
						leftId,
						(bits & OperatorMASK) >> OperatorSHIFT,
						right.constant,
						rightId);
			} catch (ArithmeticException e) {
				constant = Constant.NotAConstant;
				// 1.2 no longer throws an exception at compile-time
				//scope.problemReporter().compileTimeConstantThrowsArithmeticException(this);
			}
		} else {
			constant = Constant.NotAConstant;
			//add some work for the boolean operators & |  
			optimizedBooleanConstant(
				leftId,
				(bits & OperatorMASK) >> OperatorSHIFT,
				rightId);
		}
	}

