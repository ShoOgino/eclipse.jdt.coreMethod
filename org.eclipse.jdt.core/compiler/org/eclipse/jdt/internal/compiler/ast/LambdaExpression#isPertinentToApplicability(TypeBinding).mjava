	public boolean isPertinentToApplicability(TypeBinding targetType) {
		
		// Add the rule about type variable of the generic method.
		
		final MethodBinding sam = targetType.getSingleAbstractMethod(this.enclosingScope); // cached/cheap call.
		
		if (sam == null || !sam.isValidBinding())
			return true;
		
		if (sam.parameters.length != this.argumentTypes.length)
			return true;
		
		if (argumentsTypeElided())
			return false;
		
		Expression [] returnExpressions = this.resultExpressions;
		for (int i = 0, length = returnExpressions.length; i < length; i++) {
			if (!returnExpressions[i].isPertinentToApplicability(targetType))
				return false;
		}
		
		return true;
	}

