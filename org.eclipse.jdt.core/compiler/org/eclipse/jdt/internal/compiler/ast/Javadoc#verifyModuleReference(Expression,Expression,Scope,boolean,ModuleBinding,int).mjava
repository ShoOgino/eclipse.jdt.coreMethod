	private boolean verifyModuleReference(Expression reference, Expression typeReference, Scope scope, boolean source15, ModuleBinding moduleType, int modifiers) {
		boolean bindingFound = false;
		if (moduleType!= null && moduleType.isValidBinding()) {
			int scopeModifiers = -1;

			ModuleBinding mBinding = scope.module();

			if (mBinding == null) {
				scope.problemReporter().javadocInvalidModuleQualification(typeReference.sourceStart, typeReference.sourceEnd, scopeModifiers);
				return bindingFound;
			}

			if (mBinding.equals(moduleType)) {
				bindingFound = true;
			} else {
				ModuleBinding[] bindings = mBinding.getAllRequiredModules();
				for (ModuleBinding binding : bindings) {
					if (moduleType.equals(binding)) {
						bindingFound = true;
						break;
					}
				}
			}

			if (!bindingFound) {
				if (!canBeSeen(scope.problemReporter().options.reportInvalidJavadocTagsVisibility, moduleType.modifiers)) {
					scope.problemReporter().javadocHiddenReference(typeReference.sourceStart, typeReference.sourceEnd, scope, moduleType.modifiers);
					return bindingFound;
				}
			}
		}
		return bindingFound;
	}

