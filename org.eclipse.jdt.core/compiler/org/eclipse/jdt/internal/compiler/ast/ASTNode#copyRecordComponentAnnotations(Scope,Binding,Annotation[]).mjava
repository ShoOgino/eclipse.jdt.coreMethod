	public static Annotation[] copyRecordComponentAnnotations(Scope scope, Binding recipient, Annotation[] annotations) {
		if (annotations == null || annotations.length == 0 || recipient == null)
			return null;

		long recipientTargetMask = 0;
		switch (recipient.kind()) {
			case Binding.LOCAL:
				assert recipient.isParameter(); // only for implicit canonical constructor arguments
				recipientTargetMask = recipient.isParameter() ? TagBits.AnnotationForParameter : TagBits.AnnotationForLocalVariable;
				break;
			case Binding.FIELD:
				recipientTargetMask = TagBits.AnnotationForField;
				break;
			case Binding.METHOD:
				MethodBinding method = (MethodBinding) recipient;
				recipientTargetMask = method.isConstructor() ? TagBits.AnnotationForConstructor : TagBits.AnnotationForMethod;
				break;
			case Binding.RECORD_COMPONENT:
				// Use it on record component itself to filter out non-record component annotations.
				recipientTargetMask = TagBits.AnnotationForRecordComponent;
				break;
			default:
				return null;
		}
		// TODO: Null Analysis Address via bug 562478?

		recipientTargetMask |= TagBits.AnnotationForTypeUse;
		List<AnnotationBinding> relevantAnnotations = new ArrayList<>();
		Annotation[] filteredAnnotations = ASTNode.getRelevantAnnotations(annotations, recipientTargetMask, relevantAnnotations);
		AnnotationBinding [] recipientAnnotations = relevantAnnotations.toArray(new AnnotationBinding[relevantAnnotations.size()]);
		recipient.setAnnotations(recipientAnnotations, scope, true /* forceStore*/);// forceStore since we require at codegen
		return filteredAnnotations;
	}

