	public TypeBinding resolveType(BlockScope scope) {

		constant = NotAConstant;
		TypeBinding expressionType = expression.resolveType(scope);
		TypeBinding checkedType = type.resolveType(scope, true /* check bounds*/);
		if (expressionType == null || checkedType == null)
			return null;

		if (checkedType.isTypeVariable() || checkedType.isBoundParameterizedType() || checkedType.isGenericType()) {
			scope.problemReporter().illegalInstanceOfGenericType(checkedType, this);
		} else {
			boolean isLegal = checkCastTypesCompatibility(scope, checkedType, expressionType, null);
			if (!isLegal) {
				scope.problemReporter().notCompatibleTypesError(this, expressionType, checkedType);
			}
		}
		return this.resolvedType = BooleanBinding;
	}

