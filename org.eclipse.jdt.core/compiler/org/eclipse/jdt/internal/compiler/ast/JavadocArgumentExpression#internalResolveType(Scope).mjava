	/*
	 * Resolves type on a Block or Class scope.
	 */
	private TypeBinding internalResolveType(Scope scope) {
		this.constant = Constant.NotAConstant;
		if (this.resolvedType != null) // is a shared type reference which was already resolved
			return this.resolvedType.isValidBinding() ? this.resolvedType : null; // already reported error

		if (this.argument != null) {
			TypeReference typeRef = this.argument.type;
			if (typeRef != null) {
				this.resolvedType = typeRef.getTypeBinding(scope);
				typeRef.resolvedType = this.resolvedType;
				// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=195374
				// reproduce javadoc 1.3.1 / 1.4.2 behavior
				if (typeRef instanceof SingleTypeReference && 
						this.resolvedType.leafComponentType().enclosingType() != null &&
						scope.compilerOptions().complianceLevel <= ClassFileConstants.JDK1_4) {
					scope.problemReporter().javadocInvalidMemberTypeQualification(this.sourceStart, this.sourceEnd, scope.getDeclarationModifiers());
					// https://bugs.eclipse.org/bugs/show_bug.cgi?id=228648
					// do not return now but report unresolved reference as expected depending on compliance settings
				}
				if (!this.resolvedType.isValidBinding()) {
					scope.problemReporter().javadocInvalidType(typeRef, this.resolvedType, scope.getDeclarationModifiers());
					return null;
				}
				if (isTypeUseDeprecated(this.resolvedType, scope)) {
					scope.problemReporter().javadocDeprecatedType(this.resolvedType, typeRef, scope.getDeclarationModifiers());
				}
				return this.resolvedType = scope.environment().convertToRawType(this.resolvedType,  true /*force the conversion of enclosing types*/);
			}
		}
		return null;
	}

