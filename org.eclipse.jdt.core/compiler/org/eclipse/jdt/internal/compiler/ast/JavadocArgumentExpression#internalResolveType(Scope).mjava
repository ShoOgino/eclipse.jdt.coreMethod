	/*
	 * Resolves type on a Block or Class scope.
	 */
	private TypeBinding internalResolveType(Scope scope) {
		this.constant = NotAConstant;
		if (this.resolvedType != null) { // is a shared type reference which was already resolved
			if (!this.resolvedType.isValidBinding()) {
				return null; // already reported error
			}
		}
		else {
			if (this.argument != null) {
				TypeReference typeRef = this.argument.type;
				if (typeRef != null) {
					this.resolvedType = typeRef.getTypeBinding(scope);
					if (!this.resolvedType.isValidBinding()) {
						scope.problemReporter().javadocInvalidType(typeRef, this.resolvedType, scope.getModifiers());
						return null;
					}
					if (isTypeUseDeprecated(this.resolvedType, scope)) {
						scope.problemReporter().javadocDeprecatedType(this.resolvedType, typeRef, scope.getModifiers());
						return null;
					}
					return this.resolvedType;
				}
			}
		}
		return null;
	}

