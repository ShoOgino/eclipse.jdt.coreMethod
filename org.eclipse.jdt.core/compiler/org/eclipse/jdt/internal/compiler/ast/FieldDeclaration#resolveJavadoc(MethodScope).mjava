public void resolveJavadoc(MethodScope initializationScope) {
	if (this.javadoc != null) {
		FieldBinding previousField = initializationScope.initializedField;
		int previousFieldID = initializationScope.lastVisibleFieldID;
		try {
			initializationScope.initializedField = this.binding;
			if (this.binding != null)
				initializationScope.lastVisibleFieldID = this.binding.id;
			this.javadoc.resolve(initializationScope);
		} finally {
			initializationScope.initializedField = previousField;
			initializationScope.lastVisibleFieldID = previousFieldID;
		}
	} else if (this.binding != null && this.binding.declaringClass != null && !this.binding.declaringClass.isLocalType()) {
		// Set javadoc visibility
		int javadocVisibility = this.binding.modifiers & ExtraCompilerModifiers.AccVisibilityMASK;
		ProblemReporter reporter = initializationScope.problemReporter();
		int severity = reporter.computeSeverity(IProblem.JavadocMissing);
		if (severity != ProblemSeverities.Ignore) {
			ClassScope classScope = initializationScope.enclosingClassScope();
			if (classScope != null) {
				javadocVisibility = Util.computeOuterMostVisibility(classScope.referenceType(), javadocVisibility);
			}
			int javadocModifiers = (this.binding.modifiers & ~ExtraCompilerModifiers.AccVisibilityMASK) | javadocVisibility;
			reporter.javadocMissing(this.sourceStart, this.sourceEnd, severity, javadocModifiers);
		}
	}
}

