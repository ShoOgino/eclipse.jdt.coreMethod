	static TypeBinding maybeMarkArrayContentsNonNull(Scope scope, TypeBinding typeBinding, int sourceStart, int dimensions, Consumer<TypeBinding> leafConsumer) {
		LookupEnvironment environment = scope.environment();
		if (environment.usesNullTypeAnnotations()
				&& scope.hasDefaultNullnessFor(Binding.DefaultLocationArrayContents, sourceStart)) {
			AnnotationBinding nonNullAnnotation = environment.getNonNullAnnotation();
			typeBinding = addNonNullToDimensions(scope, typeBinding, nonNullAnnotation, dimensions);

			TypeBinding leafComponentType = typeBinding.leafComponentType();
			if ((leafComponentType.tagBits & TagBits.AnnotationNullMASK) == 0 && leafComponentType.acceptsNonNullDefault()) {
				if (leafConsumer != null)
					leafConsumer.accept(leafComponentType);
				TypeBinding nonNullLeafComponentType = scope.environment().createAnnotatedType(leafComponentType,
						new AnnotationBinding[] { nonNullAnnotation });
				typeBinding = scope.createArrayType(nonNullLeafComponentType, typeBinding.dimensions(),
						typeBinding.getTypeAnnotations());
			}
		}
		return typeBinding;
	}

