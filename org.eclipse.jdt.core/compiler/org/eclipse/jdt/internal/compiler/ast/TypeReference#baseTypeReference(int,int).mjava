	/*
	 * Answer a base type reference (can be an array of base type).
	 */
	public static final TypeReference baseTypeReference(int baseType, int dim) {

		if (dim == 0) {
			switch (baseType) {
				case (T_void) :
					return new SingleTypeReference(VoidBinding.simpleName, 0);
				case (T_boolean) :
					return new SingleTypeReference(BooleanBinding.simpleName, 0);
				case (T_char) :
					return new SingleTypeReference(CharBinding.simpleName, 0);
				case (T_float) :
					return new SingleTypeReference(FloatBinding.simpleName, 0);
				case (T_double) :
					return new SingleTypeReference(DoubleBinding.simpleName, 0);
				case (T_byte) :
					return new SingleTypeReference(ByteBinding.simpleName, 0);
				case (T_short) :
					return new SingleTypeReference(ShortBinding.simpleName, 0);
				case (T_int) :
					return new SingleTypeReference(IntBinding.simpleName, 0);
				default : //T_long	
					return new SingleTypeReference(LongBinding.simpleName, 0);
			}
		}
		switch (baseType) {
			case (T_void) :
				return new ArrayTypeReference(VoidBinding.simpleName, dim, 0);
			case (T_boolean) :
				return new ArrayTypeReference(BooleanBinding.simpleName, dim, 0);
			case (T_char) :
				return new ArrayTypeReference(CharBinding.simpleName, dim, 0);
			case (T_float) :
				return new ArrayTypeReference(FloatBinding.simpleName, dim, 0);
			case (T_double) :
				return new ArrayTypeReference(DoubleBinding.simpleName, dim, 0);
			case (T_byte) :
				return new ArrayTypeReference(ByteBinding.simpleName, dim, 0);
			case (T_short) :
				return new ArrayTypeReference(ShortBinding.simpleName, dim, 0);
			case (T_int) :
				return new ArrayTypeReference(IntBinding.simpleName, dim, 0);
			default : //T_long	
				return new ArrayTypeReference(LongBinding.simpleName, dim, 0);
		}
	}

