public VariableBinding variableBinding(Scope scope) {
	// if this is a *static* field and its actualResolvedType is the type in which we currently are asking for the binding,
	// we can safely return the field binding
	if (scope != null) {
		CompilerOptions options = scope.compilerOptions();
		if(!options.includeFieldsInNullAnalysis) return null;
		if (this.binding != null && (this.bits & RestrictiveFlagMASK) == Binding.FIELD) {
			FieldBinding fieldBinding;
			if (this.otherBindings == null) {
				fieldBinding = (FieldBinding) this.binding;
			} else {
				fieldBinding = this.otherBindings[this.otherBindings.length - 1];
			}
			if (fieldBinding.isStatic()) {
				// does the static field belong to the current type or one of the enclosing ones?
				ClassScope enclosingClass = scope.enclosingClassScope();
				while (enclosingClass != null) {
					TypeDeclaration type = enclosingClass.referenceContext;
					if (type != null && fieldBinding.declaringClass.original() == type.binding)
						return fieldBinding;
					enclosingClass = enclosingClass.enclosingClassScope();
				}
			}
		}
	}
	return null;
}

