	public TypeBinding checkFieldAccess(BlockScope scope) {
	
		FieldBinding fieldBinding = (FieldBinding) binding;
		
		bits &= ~RestrictiveFlagMASK; // clear bits
		bits |= Binding.FIELD;
		MethodScope methodScope = scope.methodScope();
		boolean isStatic = fieldBinding.isStatic();
		if (!isStatic) {
			// must check for the static status....
			if (methodScope.isStatic) {
				scope.problemReporter().staticFieldAccessToNonStaticVariable(this, fieldBinding);
				this.constant = Constant.NotAConstant;
				return fieldBinding.type;
			}
		}
		this.constant = fieldBinding.constant();
	
		if (isFieldUseDeprecated(fieldBinding, scope, (this.bits & IsStrictlyAssigned) !=0))
			scope.problemReporter().deprecatedField(fieldBinding, this);
	
		if ((this.bits & IsStrictlyAssigned) == 0
				&& methodScope.enclosingSourceType() == fieldBinding.original().declaringClass
				&& methodScope.lastVisibleFieldID >= 0
				&& fieldBinding.id >= methodScope.lastVisibleFieldID
				&& (!fieldBinding.isStatic() || methodScope.isStatic)) {
			scope.problemReporter().forwardReference(this, 0, methodScope.enclosingSourceType());
			this.bits |= ASTNode.IgnoreNoEffectAssignCheck;
		}
		return fieldBinding.type;
	
	}

