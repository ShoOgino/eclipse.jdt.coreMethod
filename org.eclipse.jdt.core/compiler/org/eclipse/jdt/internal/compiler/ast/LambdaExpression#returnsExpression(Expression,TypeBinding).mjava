	public void returnsExpression(Expression expression, TypeBinding resultType) {
		if (this.original == this) // not in overload resolution context.
			return;
		if (this.body instanceof Expression) {
			this.original.valueCompatible = resultType != null && resultType.id != TypeIds.T_void;
			this.original.resultExpressions = new Expression[1];
			this.original.resultExpressions[0] = expression;
			return; // void compatibility determined via statementExpression()
		}
		if (expression != null) {
			this.original.returnsValue = true;
			this.original.voidCompatible = false;
			this.original.valueCompatible = !this.original.returnsVoid;
			if (resultType != null) {
				Expression [] returnExpressions = this.original.resultExpressions;
				int resultsLength = returnExpressions.length;
				System.arraycopy(returnExpressions, 0, returnExpressions = new Expression[resultsLength + 1], 0, resultsLength);
				returnExpressions[resultsLength] = expression;
				this.original.resultExpressions = returnExpressions;
			}
		} else {
			this.original.returnsVoid = true;
			this.original.valueCompatible = false;
			this.original.voidCompatible = !this.original.returnsValue;
		}
	}

