	public void recordStringLiteral(StringLiteral literal, boolean fromRecovery) {
		if (this.stringLiteralsStart != null) {
			if (this.stringLiteralsStart.contains(literal.sourceStart)) return;
			this.stringLiteralsStart.add(literal.sourceStart);
		} else if (fromRecovery) {
			this.stringLiteralsStart = new HashSetOfInt(this.stringLiteralsPtr + STRING_LITERALS_INCREMENT);
			for (int i = 0; i < this.stringLiteralsPtr; i++) {
				this.stringLiteralsStart.add(this.stringLiterals[i].sourceStart);
			}

			if (this.stringLiteralsStart.contains(literal.sourceStart)) return;
			this.stringLiteralsStart.add(literal.sourceStart);
		}

		if (this.stringLiterals == null) {
			this.stringLiterals = new StringLiteral[STRING_LITERALS_INCREMENT];
			this.stringLiteralsPtr = 0;
		} else {
			int stackLength = this.stringLiterals.length;
			if (this.stringLiteralsPtr == stackLength) {
				System.arraycopy(
					this.stringLiterals,
					0,
					this.stringLiterals = new StringLiteral[stackLength + STRING_LITERALS_INCREMENT],
					0,
					stackLength);
			}
		}
		this.stringLiterals[this.stringLiteralsPtr++] = literal;
	}

