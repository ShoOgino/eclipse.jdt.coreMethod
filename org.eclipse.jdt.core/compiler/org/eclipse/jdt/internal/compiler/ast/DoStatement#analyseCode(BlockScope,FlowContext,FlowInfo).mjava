	public FlowInfo analyseCode(
		BlockScope currentScope,
		FlowContext flowContext,
		FlowInfo flowInfo) {

		breakLabel = new Label();
		continueLabel = new Label();
		LoopingFlowContext loopingContext =
			new LoopingFlowContext(
				flowContext,
				flowInfo,
				this,
				breakLabel,
				continueLabel,
				currentScope);

		Constant cst = condition.constant;
		boolean isConditionTrue = cst != Constant.NotAConstant && cst.booleanValue() == true;
		cst = condition.optimizedBooleanConstant();
		boolean isConditionOptimizedTrue = cst != Constant.NotAConstant && cst.booleanValue() == true;
		boolean isConditionOptimizedFalse = cst != Constant.NotAConstant && cst.booleanValue() == false;

		int previousMode = flowInfo.reachMode();
				
		UnconditionalFlowInfo actionInfo = flowInfo.nullInfoLessUnconditionalCopy();
		// we need to collect the contribution to nulls of the coming paths through the
		// loop, be they falling through normally or branched to break, continue labels
		// or catch blocks
		if ((action != null) && !action.isEmptyBlock()) {
			actionInfo = action.
				analyseCode(currentScope, loopingContext, actionInfo).
				unconditionalInits();

			// code generation can be optimized when no need to continue in the loop
			if ((actionInfo.tagBits & 
					loopingContext.initsOnContinue.tagBits & 
					FlowInfo.UNREACHABLE) != 0) {
				continueLabel = null;
			}
		}
		/* Reset reach mode, to address following scenario.
		 *   final blank;
		 *   do { if (true) break; else blank = 0; } while(false);
		 *   blank = 1; // may be initialized already 
		 */
		actionInfo.setReachMode(previousMode);
		
		LoopingFlowContext condLoopContext;
		FlowInfo condInfo =
			condition.analyseCode(
				currentScope,
				(condLoopContext =
					new LoopingFlowContext(flowContext,	flowInfo, this, null, 
						null, currentScope)),
				(action == null
					? actionInfo
					: (actionInfo.mergedWith(loopingContext.initsOnContinue))).copy());
		if (!isConditionOptimizedFalse && continueLabel != null) {
			loopingContext.complainOnDeferredFinalChecks(currentScope, condInfo);
			condLoopContext.complainOnDeferredFinalChecks(currentScope, condInfo);
			UnconditionalFlowInfo checkFlowInfo;
			loopingContext.complainOnDeferredNullChecks(currentScope, 
					checkFlowInfo = actionInfo.
						addPotentialNullInfoFrom(
						  condInfo.initsWhenTrue().unconditionalInits()));
			condLoopContext.complainOnDeferredNullChecks(currentScope, 
					checkFlowInfo);
		}

		// end of loop
		FlowInfo mergedInfo = FlowInfo.mergedOptimizedBranches(
				loopingContext.initsOnBreak, 
				isConditionOptimizedTrue,
				(condInfo.tagBits & FlowInfo.UNREACHABLE) == 0 ?
						flowInfo.addInitializationsFrom(condInfo.initsWhenFalse()) : condInfo, 
					// recover null inits from before condition analysis
				false, // never consider opt false case for DO loop, since break can always occur (47776)
				!isConditionTrue /*do{}while(true); unreachable(); */);
		mergedInitStateIndex = currentScope.methodScope().recordInitializationStates(mergedInfo);
		return mergedInfo;
	}

