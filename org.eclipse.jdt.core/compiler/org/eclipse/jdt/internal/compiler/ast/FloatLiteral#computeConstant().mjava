	public void computeConstant() {
		//the source is correctly formated so the exception should never occurs
		Float computedValue;
		try {
			computedValue = Float.valueOf(String.valueOf(source));
		} catch (NumberFormatException e) {
			/*
			 * this can happen if this is an hexadecimal floating-point literal and the libraries used 
			 * are < 1.5
			 */
			computedValue = new Float(Util.getFloatingPoint(source));
		}

		if (computedValue.doubleValue() > Float.MAX_VALUE) {
			return; //may be Infinity
		}
		if (computedValue.floatValue() < Float_MIN_VALUE) {
			// see 1F6IGUU
			//only a true 0 can be made of zeros
			//1.00000000e-46f is illegal ....
			label : for (int i = 0; i < source.length; i++) {
				switch (source[i]) {
					case '.' :
					case 'f' :
					case 'F' :
					case '0' :
					case 'x' :
					case 'X' :
						break;
					case 'e' :
					case 'E' :
					case 'p' :
					case 'P' :
						break label; //exposant are valid !....
					default :
						return; //error
				}
			}
		}
		constant = Constant.fromValue(value = computedValue.floatValue());
	}

