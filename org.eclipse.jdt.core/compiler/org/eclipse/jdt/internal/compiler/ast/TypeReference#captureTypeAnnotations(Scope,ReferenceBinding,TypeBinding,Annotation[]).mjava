// If typeArgumentAnnotations contain any that are evaluated by the compiler
// create/retrieve a parameterized type binding
// capturing the effect of these annotations into the resolved type binding.
protected TypeBinding captureTypeAnnotations(Scope scope, ReferenceBinding enclosingType, TypeBinding argType, Annotation[] typeArgumentAnnotations) {
	if (!scope.compilerOptions().isAnnotationBasedNullAnalysisEnabled
			|| typeArgumentAnnotations == null 
			|| !(argType instanceof ReferenceBinding))
	{
		return argType;
	}
    int annotLen = typeArgumentAnnotations.length;
    long annotationBits = 0L;
    for (int i = 0; i < annotLen; i++) {
		if (typeArgumentAnnotations[i] instanceof MarkerAnnotation) {
			AnnotationBinding compilerAnnotation = ((MarkerAnnotation)typeArgumentAnnotations[i]).getCompilerAnnotation();
			if (compilerAnnotation != null) {
				switch (compilerAnnotation.getAnnotationType().id) {
					case TypeIds.T_ConfiguredAnnotationNonNull :
						annotationBits |= TagBits.AnnotationNonNull;
						break;
					case TypeIds.T_ConfiguredAnnotationNullable :
						annotationBits |= TagBits.AnnotationNullable;
						break;
					default: // no other annotations are currently handled
				}
			}
		}
	}
	return scope.environment().createParameterizedType((ReferenceBinding) argType, Binding.NO_TYPES, annotationBits, enclosingType);
}

