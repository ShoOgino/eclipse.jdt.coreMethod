	/**
	 * Compute the bit pattern for recognized standard annotations the compiler may need to act upon
	 */
	private long detectStandardAnnotation(Scope scope, ReferenceBinding annotationType, MemberValuePair valueAttribute) {
		long tagBits = 0;
		switch (annotationType.id) {
			// retention annotation
			case TypeIds.T_JavaLangAnnotationRetention :
				if (valueAttribute != null) {
					Expression expr = valueAttribute.value;
					if (expr instanceof NameReference) {
						FieldBinding field = ((NameReference) expr).fieldBinding();
						if (field != null && field.declaringClass.id == T_JavaLangAnnotationRetentionPolicy) {
							tagBits |= getRetentionPolicy(field.name);
						}
					}
				}
			// target annotation
			case TypeIds.T_JavaLangAnnotationTarget :		
				if (valueAttribute != null) {
					Expression expr = valueAttribute.value;
					if (expr instanceof ArrayInitializer) {
						ArrayInitializer initializer = (ArrayInitializer) expr;
						for (int i = 0, length = initializer.expressions.length; i < length; i++) {
							Expression initExpr = initializer.expressions[i];
							if (initExpr instanceof NameReference) {
								FieldBinding field = ((NameReference) initExpr).fieldBinding();
								if (field != null && field.declaringClass.id == T_JavaLangAnnotationElementType) {
									long element = getTargetElementType(field.name);
									if ((tagBits & element) != 0) {
										scope.problemReporter().duplicateTargetInTargetAnnotation(annotationType, (NameReference)initExpr);
									} else {
										tagBits |= element;
									}
								}							
							}
						}
					} else if (expr instanceof NameReference) {
						FieldBinding field = ((NameReference) expr).fieldBinding();
						if (field != null && field.declaringClass.id == T_JavaLangAnnotationElementType) {
							tagBits |= getTargetElementType(field.name);
						}
					}
				}
			// marker annotations
			case TypeIds.T_JavaLangDeprecated :
				tagBits |= TagBits.AnnotationDeprecated;
				break;
			case TypeIds.T_JavaLangAnnotationDocumented :
				tagBits |= TagBits.AnnotationDocumented;
				break;
			case TypeIds.T_JavaLangAnnotationInherited :
				tagBits |= TagBits.AnnotationInherited;
				break;
			case TypeIds.T_JavaLangOverride :
				tagBits |= TagBits.AnnotationOverride;
				break;
			case TypeIds.T_JavaLangSuppressWarnings :
				tagBits |= TagBits.AnnotationSuppressWarnings;
				break;
		}
		return tagBits;
	}

