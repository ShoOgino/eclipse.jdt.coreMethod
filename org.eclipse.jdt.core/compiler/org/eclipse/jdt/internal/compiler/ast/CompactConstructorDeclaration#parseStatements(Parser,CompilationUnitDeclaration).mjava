	@Override
	public void parseStatements(Parser parser, CompilationUnitDeclaration unit) {
		parser.parse(this, unit, false);
		ASTVisitor visitor = new ASTVisitor() {
			@Override
			public boolean visit(ExplicitConstructorCall explicitConstructorCall, BlockScope skope) {
				if (explicitConstructorCall.accessMode != ExplicitConstructorCall.ImplicitSuper)
					skope.problemReporter().recordCompactConstructorHasExplicitConstructorCall(explicitConstructorCall);
				return false;
			}
			@Override
			public boolean visit(MethodDeclaration methodDeclaration, ClassScope skope) {
				return false;
			}
			@Override
			public boolean visit(LambdaExpression lambda, BlockScope skope) {
				return false;
			}
			@Override
			public boolean visit(ReturnStatement returnStatement, BlockScope skope) {
				parser.problemReporter().recordCompactConstructorHasReturnStatement(returnStatement);
				return false;
			}
		};
		unit.traverse(visitor, unit.scope);
	}

