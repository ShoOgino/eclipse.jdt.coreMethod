	private MethodDeclaration createMethodDeclaration(char[] name1, TypeReference returnType) {
		MethodDeclaration m = new MethodDeclaration(this.compilationResult);
		m.selector = name1;
		m.bits |= ASTNode.IsSynthetic;
		m.modifiers = ClassFileConstants.AccPublic;

		m.returnType = returnType;

		if (this.methods == null) { // Where is the constructor?
			this.methods = new AbstractMethodDeclaration[] { m };
		} else {
			AbstractMethodDeclaration[] newMethods;
			System.arraycopy(
				this.methods,
				0,
				newMethods = new AbstractMethodDeclaration[this.methods.length + 1],
				1,
				this.methods.length);
			newMethods[0] = m;
			this.methods = newMethods;
		}
		m.bits |= ASTNode.IsImplicit;
		return m;
	}

