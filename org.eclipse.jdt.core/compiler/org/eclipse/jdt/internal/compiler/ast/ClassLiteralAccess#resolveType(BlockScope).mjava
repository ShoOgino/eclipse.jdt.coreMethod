	public TypeBinding resolveType(BlockScope scope) {

		constant = NotAConstant;
		if ((targetType = type.resolveType(scope)) == null)
			return null;

		if (targetType.isArrayType()
			&& ((ArrayBinding) targetType).leafComponentType == VoidBinding) {
			scope.problemReporter().cannotAllocateVoidArray(this);
			return null;
		}
		ReferenceBinding classType = scope.getJavaLangClass();
		if (classType.isGenericType()) {
		    // Integer.class is of type Class<Integer>
		    this.resolvedType = scope.createParameterizedType(classType, new TypeBinding[]{ targetType }, null);
		} else {
		    this.resolvedType = classType;
		}
		return this.resolvedType;
	}

