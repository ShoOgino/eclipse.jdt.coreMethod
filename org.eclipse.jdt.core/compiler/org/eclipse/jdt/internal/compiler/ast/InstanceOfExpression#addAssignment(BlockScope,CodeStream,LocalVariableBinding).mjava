private void addAssignment(BlockScope currentScope, CodeStream codeStream, LocalVariableBinding local) {
	assert local != null;
	SingleNameReference lhs = new SingleNameReference(local.name, 0);
	lhs.binding = local;
	lhs.bits &= ~ASTNode.RestrictiveFlagMASK; // clear bits
	lhs.bits |= Binding.LOCAL;
	lhs.bits |= ASTNode.IsSecretYieldValueUsage;
	((LocalVariableBinding) lhs.binding).markReferenced(); // TODO : Can be skipped?
	Assignment assignment = new Assignment(lhs, this.expression, 0);
	assignment.generateCode(currentScope, codeStream);
	codeStream.addVariable(this.secretInstanceOfPatternExpressionValue);
}

