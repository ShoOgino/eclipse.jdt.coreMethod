	protected static TypeBinding updateOtherPolyExpression(BlockScope scope, Expression expression, TypeBinding parameterType, boolean inferenceFinished) {
		TypeBinding updatedArgumentType;
		expression.setExpressionContext(parameterType != null ? ExpressionContext.INVOCATION_CONTEXT: ExpressionContext.ASSIGNMENT_CONTEXT); // force the errors to surface.
		// perform the level of resolving suitable for the state of affairs at the enclosing context:
		if (inferenceFinished) {
			expression.setExpectedType(parameterType);
			updatedArgumentType = expression.resolveType(scope);
		} else {
			updatedArgumentType = expression.resolveTentatively(scope, parameterType);
		}
		if (updatedArgumentType == null || !updatedArgumentType.isValidBinding())
			return POLY_ERROR;
		if (expression instanceof LambdaExpression && ((LambdaExpression) expression).hasErrors())
			return POLY_ERROR;
		return updatedArgumentType;
	}

