	private int generatePermittedTypeAttributes() {
		SourceTypeBinding type = this.referenceBinding;
		int localContentsOffset = this.contentsOffset;
		ReferenceBinding[] permittedTypes = type.permittedTypes();
		int l = permittedTypes != null ? permittedTypes.length : 0;
		if (l == 0)
			return 0;

		int exSize = 8 + 2 * l;
		if (exSize + localContentsOffset >= this.contents.length) {
			resizeContents(exSize);
		}
		int attributeNameIndex =
			this.constantPool.literalIndex(AttributeNamesConstants.PermittedSubclasses);
		this.contents[localContentsOffset++] = (byte) (attributeNameIndex >> 8);
		this.contents[localContentsOffset++] = (byte) attributeNameIndex;
		int value = (l << 1) + 2;
		this.contents[localContentsOffset++] = (byte) (value >> 24);
		this.contents[localContentsOffset++] = (byte) (value >> 16);
		this.contents[localContentsOffset++] = (byte) (value >> 8);
		this.contents[localContentsOffset++] = (byte) value;
		this.contents[localContentsOffset++] = (byte) (l >> 8);
		this.contents[localContentsOffset++] = (byte) l;

		for (int i = 0; i < l; i++) {
			int permittedTypeIndex = this.constantPool.literalIndexForType(permittedTypes[i]);
			this.contents[localContentsOffset++] = (byte) (permittedTypeIndex >> 8);
			this.contents[localContentsOffset++] = (byte) permittedTypeIndex;
		}
		this.contentsOffset = localContentsOffset;
		return 1;
	}

