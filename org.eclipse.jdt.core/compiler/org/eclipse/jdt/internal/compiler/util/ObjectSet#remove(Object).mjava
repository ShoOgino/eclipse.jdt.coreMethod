	public boolean remove(Object element) {

		long hash = element.hashCode();
		int length = this.elementTable.length;
		int index = ((int)hash) % length;
		Object currentElement;
		while ((currentElement = elementTable[index]) != null) {
			if (currentElement.equals(element)){
				this.elementTable[index] = null;
				this.elementSize--;
				
				// local rehash - find the last matching element with same hashcode
				// and move it in place of the current one if any
				int next = index, lastMatching = -1;
				while (this.elementTable[next = (next + 1) % length] != null && next != index) {
					if (this.elementTable[next].hashCode() == hash){
						lastMatching = next;
					}
				}
				if (lastMatching > 0){
					this.elementTable[index] = this.elementTable[lastMatching];
					this.elementTable[lastMatching] = null;
				}
				return true;
			}
			index = (index + 1) % length;
		}
		return false;
	}

