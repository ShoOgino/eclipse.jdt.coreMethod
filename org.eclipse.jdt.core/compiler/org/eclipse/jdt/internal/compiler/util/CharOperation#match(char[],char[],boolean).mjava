/**
 * char[] pattern matching, accepting wild-cards '*' and '?'.
 *
 * When not case sensitive, the pattern is assumed to already be lowercased, the
 * name will be lowercased character per character as comparing.
 */
public static final boolean match(char[] pattern, char[] name, boolean isCaseSensitive) {

	if (name == null) return false; // null name cannot match
	if (pattern == null) return true; // null pattern is equivalent to '*'

	return match(pattern, 0, pattern.length, name, 0, name.length, isCaseSensitive);
}

