/**
 * Returns the given input stream's contents as a byte array.
 * Closes the stream before returning;
 * @throws IOException if a problem occured reading the stream.
 */
public static byte[] getInputStreamAsByteArray(InputStream stream) throws IOException {
	byte[] contents = new byte[0];
	try {
		int contentsLength = 0;
		int bytesRead = -1;
		do {
			int available= stream.available();
			
			// resize contents if needed
			if (contentsLength + available > contents.length) {
				System.arraycopy(contents, 0, contents = new byte[contentsLength + available], 0, contentsLength);
			}

			// read as many bytes as possible
			bytesRead = stream.read(contents, contentsLength, available);
			
			if (bytesRead > 0) {
				// remember length of contents
				contentsLength += bytesRead;
			}
		} while (bytesRead > 0);
		
		// resize contents if necessary
		if (contentsLength < contents.length) {
			System.arraycopy(contents, 0, contents = new byte[contentsLength], 0, contentsLength);
		}
	} finally {
		try {
			stream.close();
		} catch (IOException e) {
		}
	}
	return contents;
}

