	public void printTag(String name, HashMap parameters, boolean insertTab, boolean insertNewLine, boolean closeTag) {
		StringBuffer sb= new StringBuffer();
		sb.append("<"); //$NON-NLS-1$
		sb.append(name);
		if (parameters != null) {
			int length = parameters.size();
			Map.Entry[] entries = new Map.Entry[length];
			parameters.entrySet().toArray(entries);
			Arrays.sort(entries, new Comparator() {
				public int compare(Object o1, Object o2) {
					Map.Entry entry1 = (Map.Entry) o1;
					Map.Entry entry2 = (Map.Entry) o2;
					return ((String) entry1.getKey()).compareTo((String) entry2.getKey());
				}
			});
			for (int i = 0; i < length; i++) {
				sb.append(" "); //$NON-NLS-1$
				sb.append(entries[i].getKey());
				sb.append("=\""); //$NON-NLS-1$
				sb.append(getEscaped(String.valueOf(entries[i].getValue())));
				sb.append("\""); //$NON-NLS-1$
			}
		}
		if (closeTag) {
			sb.append("/>"); //$NON-NLS-1$
		} else {
			sb.append(">"); //$NON-NLS-1$
		}
		printString(sb.toString(), insertTab, insertNewLine);
		if (parameters != null && !closeTag)
			this.tab++;

	}

