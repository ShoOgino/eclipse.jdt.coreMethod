	private void addComponentInfo(RecordComponentBinding recordComponentBinding) {
		// check that there is enough space to write all the bytes for the field info corresponding
		// to the @fieldBinding sans accessflags for component
		/* record_component_info {
    	 *	u2 name_index;
    	 *	u2 descriptor_index;
    	 *	u2 attributes_count;
    	 *	attribute_info attributes[attributes_count];
		} */
		if (this.contentsOffset + 6 >= this.contents.length) {
			resizeContents(6);
		}
		// Now we can generate all entries into the byte array
		int nameIndex = this.constantPool.literalIndex(recordComponentBinding.name);
		this.contents[this.contentsOffset++] = (byte) (nameIndex >> 8);
		this.contents[this.contentsOffset++] = (byte) nameIndex;
		// Then the descriptorIndex
		int descriptorIndex = this.constantPool.literalIndex(recordComponentBinding.type);
		this.contents[this.contentsOffset++] = (byte) (descriptorIndex >> 8);
		this.contents[this.contentsOffset++] = (byte) descriptorIndex;
		int componentAttributeOffset = this.contentsOffset;
		int attributeNumber = 0;
		// leave some space for the number of attributes
		this.contentsOffset += 2;
		attributeNumber += addComponentAttributes(recordComponentBinding, componentAttributeOffset);
		if (this.contentsOffset + 2 >= this.contents.length) {
			resizeContents(2);
		}
		this.contents[componentAttributeOffset++] = (byte) (attributeNumber >> 8);
		this.contents[componentAttributeOffset] = (byte) attributeNumber;
	}

