	private int generateObjectMethodsBootStrapMethods(List<TypeBinding> recordList,
			int localContentsOffset, final int contentsEntries) {
		ReferenceBinding javaLangRuntimeObjectMethods = this.referenceBinding.scope.getJavaLangRuntimeObjectMethods(); 
		int numberOfBootstraps = recordList.size();
		int indexForObjectMethodBootStrap = 0;
		for (int i = 0; i < numberOfBootstraps; i++) {
			if (contentsEntries + localContentsOffset >= this.contents.length) {
				resizeContents(contentsEntries);
			}
			if (indexForObjectMethodBootStrap == 0) {
				indexForObjectMethodBootStrap = this.constantPool.literalIndexForMethodHandle(ClassFileConstants.MethodHandleRefKindInvokeStatic, javaLangRuntimeObjectMethods, 
						ConstantPool.BOOTSTRAP, ConstantPool.JAVA_LANG_RUNTIME_OBJECTMETHOD_BOOTSTRAP_SIGNATURE, false);
			}
			this.contents[localContentsOffset++] = (byte) (indexForObjectMethodBootStrap >> 8);
			this.contents[localContentsOffset++] = (byte) indexForObjectMethodBootStrap;
			
			// u2 num_bootstrap_arguments
			int numArgsLocation = localContentsOffset;
			localContentsOffset += 2;
			
			TypeBinding type = recordList.get(i);
			assert type.isRecord(); // sanity check
			char[] recordName = type.constantPoolName();
			int recordIndex = this.constantPool.literalIndexForType(recordName);
			this.contents[localContentsOffset++] = (byte) (recordIndex >> 8);
			this.contents[localContentsOffset++] = (byte) recordIndex;

			assert type instanceof SourceTypeBinding;
			SourceTypeBinding sourceType = (SourceTypeBinding) type;
			FieldBinding[] recordComponents = sourceType.getRecordComponents();
			
			int numArgs = 2 + recordComponents.length;
			this.contents[numArgsLocation++] = (byte) (numArgs >> 8);
			this.contents[numArgsLocation] = (byte) numArgs;

			String names = 
				Arrays.stream(recordComponents)
				.map(f -> new String(f.name))
				.reduce((s1, s2) -> { return s1 + ";" + s2;}) //$NON-NLS-1$
				.orElse(Util.EMPTY_STRING);
			int namesIndex = this.constantPool.literalIndex(names);
			this.contents[localContentsOffset++] = (byte) (namesIndex >> 8);
			this.contents[localContentsOffset++] = (byte) namesIndex;

			if (recordComponents.length * 2 + localContentsOffset >= this.contents.length) {
				resizeContents(recordComponents.length * 2);
			}
			for (FieldBinding field : recordComponents) {
				int methodHandleIndex = this.constantPool.literalIndexForMethodHandleFieldRef(
						ClassFileConstants.MethodHandleRefKindGetField, 
						recordName, field.name, field.type.signature());

				this.contents[localContentsOffset++] = (byte) (methodHandleIndex >> 8);
				this.contents[localContentsOffset++] = (byte) methodHandleIndex;
			}
		}
		return localContentsOffset;
	}

