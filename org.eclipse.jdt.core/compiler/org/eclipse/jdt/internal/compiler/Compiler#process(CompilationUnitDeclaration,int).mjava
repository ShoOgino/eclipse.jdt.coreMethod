	/**
	 * Process a compilation unit already parsed and build.
	 */
	public void process(CompilationUnitDeclaration unit, int i) {
		if (this.annotationProcessorManager != null) {
			this.annotationProcessorManager.processAnnotation(unit);
    		ICompilationUnit[] newUnits = this.annotationProcessorManager.getNewUnits();
			for (int j = 0, max = newUnits.length; j < max; j++) {
				this.accept(newUnits[j], null);
			}
			this.annotationProcessorManager.reset();
			if (!this.options.generateClassFiles) {
				// compiler was called with -proc:only
				return;
			}
		}

		this.parser.getMethodBodies(unit);

		// fault in fields & methods
		if (unit.scope != null)
			unit.scope.faultInTypes();

		// verify inherited methods
		if (unit.scope != null)
			unit.scope.verifyMethods(lookupEnvironment.methodVerifier());

		// type checking
		unit.resolve();

		// flow analysis
		unit.analyseCode();

		// code generation
		unit.generateCode();

		// reference info
		if (options.produceReferenceInfo && unit.scope != null)
			unit.scope.storeDependencyInfo();

		// refresh the total number of units known at this stage
		unit.compilationResult.totalUnitsKnown = totalUnits;
	}

