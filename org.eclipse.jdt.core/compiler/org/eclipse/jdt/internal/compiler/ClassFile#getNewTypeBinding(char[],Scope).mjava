	private TypeBinding getNewTypeBinding(char[] typeConstantPoolName, Scope scope) {
		char[] typeName = typeConstantPoolName;
		TypeBinding type = (TypeBinding) scope.getTypeOrPackage(CharOperation.splitOn('/', typeName));
		if (!type.isValidBinding()) {
			ProblemReferenceBinding problemReferenceBinding = (ProblemReferenceBinding) type;
			if ((problemReferenceBinding.problemId() & ProblemReasons.InternalNameProvided) != 0) {
				type = problemReferenceBinding.closestMatch();
			} else if ((problemReferenceBinding.problemId() & ProblemReasons.NotFound) != 0 && this.innerClassesBindings != null) {
				// check local inner types to see if this is a anonymous type
				Set<TypeBinding> innerTypeBindings = this.innerClassesBindings.keySet();
				for (TypeBinding binding : innerTypeBindings) {
					if (CharOperation.equals(binding.constantPoolName(), typeName)) {
						type = binding;
						break;
					}
				}
			}
		}
		return type;
	}

