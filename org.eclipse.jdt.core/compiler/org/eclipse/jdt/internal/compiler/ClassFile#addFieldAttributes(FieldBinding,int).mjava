	private int addFieldAttributes(FieldBinding fieldBinding, int fieldAttributeOffset) {
		int attributesNumber = 0;
		// 4.7.2 only static constant fields get a ConstantAttribute
		// Generate the constantValueAttribute
		Constant fieldConstant = fieldBinding.constant();
		if (fieldConstant != Constant.NotAConstant){
			attributesNumber += generateConstantValueAttribute(fieldConstant, fieldBinding, fieldAttributeOffset);
		}
		if (this.targetJDK < ClassFileConstants.JDK1_5 && fieldBinding.isSynthetic()) {
			attributesNumber += generateSyntheticAttribute();
		}
		if (fieldBinding.isDeprecated()) {
			attributesNumber += generateDeprecatedAttribute();
		}
		// add signature attribute
		char[] genericSignature = fieldBinding.genericSignature();
		if (genericSignature != null) {
			attributesNumber += generateSignatureAttribute(genericSignature);
		}
		if (this.targetJDK >= ClassFileConstants.JDK1_4) {
			FieldDeclaration fieldDeclaration = fieldBinding.sourceField();
			if (fieldDeclaration != null) {
				try {
					if (fieldDeclaration.isARecordComponent) {
						long rcMask = TagBits.AnnotationForField | TagBits.AnnotationForTypeUse;
						RecordComponent comp = getRecordComponent(fieldBinding.declaringClass, fieldBinding.name);
						assert comp != null;
						fieldDeclaration.annotations = ASTNode.getRelevantAnnotations(comp.annotations, rcMask, null);
					}
					Annotation[] annotations = fieldDeclaration.annotations;
					if (annotations != null) {
						attributesNumber += generateRuntimeAnnotations(annotations, TagBits.AnnotationForField);
					}

					if ((this.produceAttributes & ClassFileConstants.ATTR_TYPE_ANNOTATION) != 0) {
						List<AnnotationContext> allTypeAnnotationContexts = new ArrayList<>();
						if (annotations != null && (fieldDeclaration.bits & ASTNode.HasTypeAnnotations) != 0) {
							fieldDeclaration.getAllAnnotationContexts(AnnotationTargetTypeConstants.FIELD, allTypeAnnotationContexts);
						}
						TypeReference fieldType = fieldDeclaration.type;
						if (fieldType != null && ((fieldType.bits & ASTNode.HasTypeAnnotations) != 0)) {
							fieldType.getAllAnnotationContexts(AnnotationTargetTypeConstants.FIELD, allTypeAnnotationContexts);
						}
						int size = allTypeAnnotationContexts.size();
						attributesNumber = completeRuntimeTypeAnnotations(attributesNumber,
								null,
								(node) -> size > 0,
								() -> allTypeAnnotationContexts);
					}
				} finally {
					if (fieldDeclaration.isARecordComponent) {
						fieldDeclaration.annotations = null;
					}
				}
			}
		}
		if ((fieldBinding.tagBits & TagBits.HasMissingType) != 0) {
			this.missingTypes = fieldBinding.type.collectMissingTypes(this.missingTypes);
		}
		return attributesNumber;
	}

