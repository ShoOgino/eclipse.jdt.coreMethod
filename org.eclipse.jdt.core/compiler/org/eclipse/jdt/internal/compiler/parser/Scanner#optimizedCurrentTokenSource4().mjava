	final char[] optimizedCurrentTokenSource4() {
		//try to return the same char[] build only once

		char c0, c1, c2, c3;
		long hash =
			((((long) (c0 = source[startPosition])) << 18)
				+ ((c1 = source[startPosition + 1]) << 12)
				+ ((c2 = source[startPosition + 2]) << 6)
				+ (c3 = source[startPosition + 3]))
				% TableSize;
		char[][] table = charArray_length[2][(int) hash];
		int i = newEntry4;
		while (++i < InternalTableSize) {
			char[] charArray = table[i];
			if ((c0 == charArray[0])
				&& (c1 == charArray[1])
				&& (c2 == charArray[2])
				&& (c3 == charArray[3]))
				return charArray;
		}
		//---------other side---------
		i = -1;
		int max = newEntry4;
		while (++i <= max) {
			char[] charArray = table[i];
			if ((c0 == charArray[0])
				&& (c1 == charArray[1])
				&& (c2 == charArray[2])
				&& (c3 == charArray[3]))
				return charArray;
		}
		//--------add the entry-------
		if (++max >= InternalTableSize)
			max = 0;
		char[] r;
		table[max] = (r = new char[] { c0, c1, c2, c3 });
		newEntry4 = max;
		return r;

	}

