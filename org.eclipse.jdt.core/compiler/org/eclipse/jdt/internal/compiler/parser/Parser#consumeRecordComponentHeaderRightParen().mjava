protected void consumeRecordComponentHeaderRightParen() {
	// RecordComponentHeaderRightParen ::= ')'
	int length = this.astLengthStack[this.astLengthPtr--];
	this.astPtr -= length;
	TypeDeclaration td = (TypeDeclaration) this.astStack[this.astPtr];
	RecordDeclaration rd = new RecordDeclaration(td);
	this.astStack[this.astPtr] = rd;
	rd.sourceEnd = 	this.rParenPos;
	if (length != 0) {
		Argument[] args = new Argument[length];
		System.arraycopy(
				this.astStack,
				this.astPtr + 1,
				args,
				0,
				length);
		rd.setArgs(args);
		convertToFields(rd, args);
	} else {
		rd.setArgs(ASTNode.NO_ARGUMENTS);
	}
	rd.bodyStart = this.rParenPos+1;
	this.listLength = 0; // reset this.listLength after having read all parameters
	// recovery
	if (this.currentElement != null){
		this.lastCheckPoint = rd.bodyStart;
		if (this.currentElement.parseTree() == rd) return;
	}
}

