	protected void consumeArrayCreationExpression() {
		// ArrayCreationExpression ::= 'new' PrimitiveType DimWithOrWithOutExprs ArrayInitializeropt
		// ArrayCreationExpression ::= 'new' ClassOrInterfaceType DimWithOrWithOutExprs ArrayInitializeropt

		int length;
		ArrayAllocationExpression aae = new ArrayAllocationExpression();
		if (expressionLengthStack[expressionLengthPtr] != 0) {
			expressionLengthPtr--;
			aae.initializer = (ArrayInitializer) expressionStack[expressionPtr--];
		} else {
			expressionLengthPtr--;
		}

		aae.type = getTypeReference(0);
		length = (expressionLengthStack[expressionLengthPtr--]);
		expressionPtr -= length;
		System.arraycopy(
			expressionStack,
			expressionPtr + 1,
			aae.dimensions = new Expression[length],
			0,
			length);
		aae.sourceStart = intStack[intPtr--];
		if (aae.initializer == null) {
			aae.sourceEnd = endPosition;
		} else {
			aae.sourceEnd = aae.initializer.sourceEnd;
		}
		pushOnExpressionStack(aae);
	}

