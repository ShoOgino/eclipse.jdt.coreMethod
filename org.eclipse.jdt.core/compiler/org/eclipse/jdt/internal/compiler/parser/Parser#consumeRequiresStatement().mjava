protected void consumeRequiresStatement() {
	ModuleReference impt = (ModuleReference) this.astStack[this.astPtr--];
	ModuleDeclaration module = (ModuleDeclaration)this.astStack[this.astPtr];
	// flush annotations defined prior to import statements
	impt.declarationEnd = this.endStatementPosition;
	impt.declarationSourceEnd =
		flushCommentsDefinedPriorTo(impt.declarationSourceEnd);
	if (module.requires == null) {
		module.requires = new ModuleReference[1];
	}
	if (module.requiresCount + 1 > module.requires.length) {
		System.arraycopy(module.requires, 0, module.requires = new ModuleReference[module.requiresCount + 1], 0, module.requiresCount);
	}
	module.requires[module.requiresCount++] = impt;
	this.astLengthStack[this.astLengthPtr--] = 0;
	
	// recovery TBD
//	if (this.currentElement != null) {
//		this.lastCheckPoint = impt.declarationSourceEnd + 1;
//		this.currentElement = this.currentElement.add(impt, 0);
//		this.lastIgnoredToken = -1;
//		this.restartRecovery = true;
//		// used to avoid branching back into the regular automaton
//	}
}

