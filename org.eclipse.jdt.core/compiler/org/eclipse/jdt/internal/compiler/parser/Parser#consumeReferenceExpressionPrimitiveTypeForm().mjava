protected void consumeReferenceExpressionPrimitiveTypeForm() {
	// ReferenceExpression ::= PrimitiveType Dims '::' NonWildTypeArgumentsopt IdentifierOrNew

	ReferenceExpression rexp;
	TypeReference type = null;
	TypeReference [] typeArguments = null;
	SingleNameReference methodReference = null;
	int newEnd = -1;
	
	boolean newForm = this.intStack[this.intPtr--] != 0;
	if (newForm) {
		newEnd = this.intStack[this.intPtr--] + 3; // "new"
	} else {
		methodReference = (SingleNameReference) getUnspecifiedReferenceOptimized();
	}
	
	int length = this.genericsLengthStack[this.genericsLengthPtr--];
	if (length > 0) {
		this.genericsPtr -= length;
		System.arraycopy(this.genericsStack, this.genericsPtr + 1, typeArguments = new TypeReference[length], 0, length);
		this.intPtr--;  // pop type arguments source start.
	}

	type = getUnannotatedTypeReference(this.intStack[this.intPtr--]);

	if (newForm) {
		rexp = new ReferenceExpression(type, typeArguments, newEnd);
	} else {
		rexp = new ReferenceExpression(type, typeArguments, methodReference);
	}

	pushOnExpressionStack(rexp);
	if (!this.parsingJava8Plus) {
		problemReporter().referenceExpressionsNotBelow18(rexp);
	}
}

