	/*
	 * Parse an URL link reference in @see tag
	 */
	private boolean parseHref() throws InvalidInputException {
		int start = this.scanner.getCurrentTokenStartPosition();
		//int end = this.scanner.getCurrentTokenEndPosition();
		if (readTokenAndConsume() == TerminalTokens.TokenNameIdentifier) {
			//end = this.index-1;
			if (CharOperation.equals(this.scanner.getCurrentIdentifierSource(), new char[]{'a'}, false)
					&& readTokenAndConsume() == TerminalTokens.TokenNameIdentifier) {
				//end = this.index - 1;
				try {
					if (CharOperation.equals(this.scanner.getCurrentIdentifierSource(), new char[]{'h', 'r', 'e', 'f'}, false) &&
						readTokenAndConsume() == TerminalTokens.TokenNameEQUAL &&
						readTokenAndConsume() == TerminalTokens.TokenNameStringLiteral &&
						readTokenAndConsume() == TerminalTokens.TokenNameGREATER) {
						while (readTokenAndConsume() != TerminalTokens.TokenNameLESS) {
							if (this.scanner.currentPosition >= this.lineEnd) {
								this.sourceParser.problemReporter().javadocInvalidSeeUrlReference(start, this.lineEnd - 1);
								return false;
							}
						}
						if (readTokenAndConsume() == TerminalTokens.TokenNameDIVIDE	&&
							readTokenAndConsume() == TerminalTokens.TokenNameIdentifier) {
							//end = this.index - 1;
							if (CharOperation.equals(this.scanner.getCurrentIdentifierSource(), new char[]{'a'}, false)	&&
								readTokenAndConsume() == TerminalTokens.TokenNameGREATER) {
								// Valid href
								return true;
							}
						}
					}
				} catch (InvalidInputException ex) {
					// Place to change end position for error report
					//end = getEndPosition();
				}
			}
		}
		this.sourceParser.problemReporter().javadocInvalidSeeUrlReference(start, this.lineEnd - 1);
		return false;
	}

