protected void consumeStatementDo() {
	// DoStatement ::= 'do' Statement 'while' '(' Expression ')' ';'

	//the 'while' pushes a value on intStack that we need to remove
	intPtr--;

	//optimize the push/pop
	if (astLengthStack[astLengthPtr] == 0) { // silent empty statement
		astLengthStack[astLengthPtr] = 1;
		expressionLengthPtr--;
		astStack[++astPtr] = 
			new DoStatement(
				expressionStack[expressionPtr--], 
				null, 
				intStack[intPtr--], 
				endPosition); 
	} else {
		Statement statement = (Statement) astStack[astPtr];
		expressionLengthPtr--;
		astStack[astPtr] = 
			new DoStatement(
				expressionStack[expressionPtr--], 
				statement, 
				intStack[intPtr--], 
				endPosition); 
	}
}

