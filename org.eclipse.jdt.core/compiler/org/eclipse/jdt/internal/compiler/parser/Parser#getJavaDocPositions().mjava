	/*
	 * Answer back an array of sourceStart/sourceEnd positions of the available JavaDoc comments.
	 * The array is a flattened structure: 2*n entries with consecutives start and end positions.
	 *
	 * If no JavaDoc is available, then null is answered instead of an empty array.
	 *
	 * e.g. { 10, 20, 25, 45 }  --> javadoc1 from 10 to 20, javadoc2 from 25 to 45
	 */
	public int[] getJavaDocPositions() {

		int javadocCount = 0;
		for (int i = 0, max = scanner.commentPtr; i <= max; i++) {
			// javadoc only (non javadoc comment have negative end positions.)
			if (scanner.commentStops[i] > 0) {
				javadocCount++;
			}
		}
		if (javadocCount == 0)
			return null;

		int[] positions = new int[2 * javadocCount];
		int index = 0;
		for (int i = 0, max = scanner.commentPtr; i <= max; i++) {
			// javadoc only (non javadoc comment have negative end positions.)
			if (scanner.commentStops[i] > 0) {
				positions[index++] = scanner.commentStarts[i];
				positions[index++] = scanner.commentStops[i] - 1; //stop is one over			
			}
		}
		return positions;
	}

