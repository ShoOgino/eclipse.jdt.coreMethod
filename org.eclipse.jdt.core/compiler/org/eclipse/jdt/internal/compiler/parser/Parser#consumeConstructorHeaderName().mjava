	protected void consumeConstructorHeaderName() {

		/* recovering - might be an empty message send */
		if (currentElement != null) {
			if (lastIgnoredToken == TokenNamenew) { // was an allocation expression
				lastCheckPoint = scanner.startPosition;
				// force to restart at this exact position				
				restartRecovery = true;
				return;
			}
		}

		// ConstructorHeaderName ::=  Modifiersopt 'Identifier' '('
		ConstructorDeclaration cd = new ConstructorDeclaration();

		//name -- this is not really revelant but we do .....
		cd.selector = identifierStack[identifierPtr];
		long selectorSource = identifierPositionStack[identifierPtr--];
		identifierLengthPtr--;

		//modifiers
		cd.declarationSourceStart = intStack[intPtr--];
		cd.modifiers = intStack[intPtr--];

		//highlight starts at the selector starts
		cd.sourceStart = (int) (selectorSource >>> 32);
		pushOnAstStack(cd);
		cd.sourceEnd = lParenPos;
		cd.bodyStart = lParenPos + 1;
		listLength = 0; // initialize listLength before reading parameters/throws

		// recovery
		if (currentElement != null) {
			lastCheckPoint = cd.bodyStart;
			if ((currentElement instanceof RecoveredType
				&& lastIgnoredToken != TokenNameDOT)
				|| cd.modifiers != 0) {
				currentElement = currentElement.add(cd, 0);
				lastIgnoredToken = -1;
			}
		}
	}

