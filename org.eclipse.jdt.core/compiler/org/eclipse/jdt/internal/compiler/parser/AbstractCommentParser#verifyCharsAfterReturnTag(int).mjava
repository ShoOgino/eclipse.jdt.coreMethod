	/*
	 * Verify that some text exists after a @return tag. Text must be different than
	 * end of comment which may be preceeding by several '*' chars.
	 */
	private boolean verifyCharsAfterReturnTag(int startPosition) {
		// Whitespace or inline tag closing brace
		int previousPosition = this.index;
		char ch = readChar();
		boolean malformed = true;
		while (Character.isWhitespace(ch)) {
			malformed = false;
			previousPosition = this.index;
			ch = readChar();	
		}
		// End of comment
		this.starPosition = -1;
		nextChar: while (this.index<this.source.length) {
			switch (ch) {
				case '*':
					// valid whatever the number of star before last '/'
					this.starPosition = previousPosition;
					break;
				case '/':
					if (this.starPosition >= startPosition) { // valid only if a star was previous character
						return false;
					}
				default :
					// valid if any other character is encountered, even white spaces
					this.index = startPosition;
					return !malformed;
				
			}
			previousPosition = this.index;
			ch = readChar();
		}
		this.index = startPosition;
		return false;
	}

