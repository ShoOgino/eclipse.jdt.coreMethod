protected void consumeReferenceExpressionSuperForm() {
	// ReferenceExpression ::= 'super' '::' NonWildTypeArgumentsopt Identifier

	ReferenceExpression rexp;
	TypeReference [] typeArguments = null;
	SingleNameReference methodReference;
	
	methodReference = new SingleNameReference(this.identifierStack[this.identifierPtr], this.identifierPositionStack[this.identifierPtr--]);
	this.identifierLengthPtr--;
	int length = this.genericsLengthStack[this.genericsLengthPtr--];
	if (length > 0) {
		this.genericsPtr -= length;
		System.arraycopy(this.genericsStack, this.genericsPtr + 1, typeArguments = new TypeReference[length], 0, length);
		this.intPtr--;  // pop type arguments source start.
	}
	
	SuperReference superReference = new SuperReference(this.intStack[this.intPtr--], this.endPosition);
	rexp = new ReferenceExpression(superReference, typeArguments, methodReference);
	pushOnExpressionStack(rexp);
	if (!this.parsingJava8Plus) {
		problemReporter().referenceExpressionsNotBelow18(rexp);
	}
}

