	protected void pushIdentifier() {
		/*push the consumeToken on the identifier stack.
		Increase the total number of identifier in the stack.
		identifierPtr points on the next top */

		try {
			identifierStack[++identifierPtr] = scanner.getCurrentIdentifierSource();
			identifierPositionStack[identifierPtr] =
				(((long) scanner.startPosition) << 32) + (scanner.currentPosition - 1);
		} catch (IndexOutOfBoundsException e) {
			/*---stack reallaocation (identifierPtr is correct)---*/
			int oldStackLength = identifierStack.length;
			char[][] oldStack = identifierStack;
			identifierStack = new char[oldStackLength + 20][];
			System.arraycopy(oldStack, 0, identifierStack, 0, oldStackLength);
			identifierStack[identifierPtr] = scanner.getCurrentTokenSource();
			/*identifier position stack*/
			long[] oldPos = identifierPositionStack;
			identifierPositionStack = new long[oldStackLength + 20];
			System.arraycopy(oldPos, 0, identifierPositionStack, 0, oldStackLength);
			identifierPositionStack[identifierPtr] =
				(((long) scanner.startPosition) << 32) + (scanner.currentPosition - 1);
		};

		try {
			identifierLengthStack[++identifierLengthPtr] = 1;
		} catch (IndexOutOfBoundsException e) {
			/*---stack reallocation (identifierLengthPtr is correct)---*/
			int oldStackLength = identifierLengthStack.length;
			int oldStack[] = identifierLengthStack;
			identifierLengthStack = new int[oldStackLength + 10];
			System.arraycopy(oldStack, 0, identifierLengthStack, 0, oldStackLength);
			identifierLengthStack[identifierLengthPtr] = 1;
		};

	}

