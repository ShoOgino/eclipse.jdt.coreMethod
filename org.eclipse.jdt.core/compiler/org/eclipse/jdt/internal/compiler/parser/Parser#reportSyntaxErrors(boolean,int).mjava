// A P I
protected void reportSyntaxErrors(boolean isDietParse, int oldFirstToken) {
	if(referenceContext instanceof MethodDeclaration) {
		MethodDeclaration methodDeclaration = (MethodDeclaration) referenceContext;
		if(methodDeclaration.errorInSignature){
			return;
		}
	}
	compilationUnit.compilationResult.lineSeparatorPositions = scanner.getLineEnds();
	scanner.recordLineSeparator = false;
	
	int start = scanner.initialPosition;
	int end = scanner.eofPosition <= Integer.MAX_VALUE ? scanner.eofPosition - 1 : scanner.eofPosition;
	if(isDietParse) {
		TypeDeclaration[] types = this.compilationUnit.types;
		
		int[][] intervalToSkip = org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.computeDietRange(types);
		DiagnoseParser diagnoseParser = new DiagnoseParser(this, oldFirstToken, start, end, intervalToSkip[0], intervalToSkip[1], intervalToSkip[2]);
		diagnoseParser.diagnoseParse();
		
		reportSyntaxErrorsForSkippedMethod(types);
		scanner.resetTo(start, end);
	} else {
		DiagnoseParser diagnoseParser = new DiagnoseParser(this, oldFirstToken, start, end);
		diagnoseParser.diagnoseParse();
	}
}

