public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalance) {
	
	if (typeDeclaration instanceof AnonymousLocalTypeDeclaration){
		if (this.typeCount > 0) {
			// add it to the last type
			RecoveredType lastType = this.types[this.typeCount-1];
			lastType.bodyEnd = 0; // reopen type
			lastType.typeDeclaration.bodyEnd = 0; // reopen type
			lastType.typeDeclaration.declarationSourceEnd = 0; // reopen type
			lastType.bracketBalance++; // expect one closing brace
			return lastType.add(typeDeclaration, bracketBalance);
		}
	}
	if (types == null) {
		types = new RecoveredType[5];
		typeCount = 0;
	} else {
		if (typeCount == types.length) {
			System.arraycopy(
				types, 
				0, 
				(types = new RecoveredType[2 * typeCount]), 
				0, 
				typeCount); 
		}
	}
	RecoveredType element = new RecoveredType(typeDeclaration, this, bracketBalance);
	types[typeCount++] = element;

	/* if type not finished, then type becomes current */
	if (typeDeclaration.declarationSourceEnd == 0) return element;
	return this;	
}

