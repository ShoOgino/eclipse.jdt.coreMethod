	private void parseParam() throws InvalidInputException {

		// Store current token state
		int start = this.tagSourceStart;
		int end = this.tagSourceEnd;

		try {
			// Push identifier next
			int token = readTokenAndConsume();
			switch (token) {
				case TerminalTokens.TokenNameIdentifier :
					AnnotationArgument argument = new AnnotationArgument(this.scanner.getCurrentIdentifierSource(),
							this.scanner.getCurrentTokenStartPosition(),
							this.scanner.getCurrentTokenEndPosition());
					argument.declarationSourceStart = this.tagSourceStart;
					argument.declarationSourceEnd = this.tagSourceEnd;
					pushParamName(argument);
					return;
				case TerminalTokens.TokenNameEOF :
					//end = scanner.eofPosition-2;
					break;
				default :
					start = scanner.getCurrentTokenStartPosition();
					end = scanner.getCurrentTokenEndPosition();
					break;
			}
		} catch (InvalidInputException e) {
			end = getEndPosition();
		}

		// Report problem
		this.sourceParser.problemReporter().annotationMissingParamName(start, end);
		consumeToken();
	}

