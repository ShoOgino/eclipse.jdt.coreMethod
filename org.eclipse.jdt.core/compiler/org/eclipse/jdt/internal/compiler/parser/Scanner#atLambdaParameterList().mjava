private final boolean atLambdaParameterList() {

	/* The cursor is just past '(' and the parser is parsing a primary expression. Look ahead and answer true
	   if we are at the head of a lambda parameter list and false otherwise.
	*/ 

	int savedCurrentPosition = this.currentPosition;
	int savedStartPosition = this.startPosition;
	char savedCurrentCharacter = this.currentCharacter;
	char[] savedWithoutUnicodeBuffer = null;
	int savedWithoutUnicodePtr = this.withoutUnicodePtr;
	if (savedWithoutUnicodePtr != 0) {
		int length = this.withoutUnicodeBuffer.length;
		System.arraycopy(this.withoutUnicodeBuffer, 0, savedWithoutUnicodeBuffer = new char [length], 0, length);
	}
	
	boolean atLambda = false;
	
	try {
		try {
			jumpOver('(', ')', null);
		} finally {
			if (this.currentCharacter == ')') {
				boolean whiteSpace;
				do {
					this.startPosition = this.currentPosition;
					if (((this.currentCharacter = this.source[this.currentPosition++]) == '\\')	&& (this.source[this.currentPosition] == 'u')) {
						whiteSpace = jumpOverUnicodeWhiteSpace();
					} else {
						whiteSpace = CharOperation.isWhitespace(this.currentCharacter);
					}
				} while (whiteSpace);
				atLambda =  this.currentCharacter == '-' && getNextChar('>');
			}
		}
	} catch (Exception e) {
		// ignore
	} finally {
		// Restore status quo ante and return suitable value.
		this.currentPosition = savedCurrentPosition;
		this.startPosition = savedStartPosition;
		this.currentCharacter = savedCurrentCharacter;
		this.withoutUnicodePtr = savedWithoutUnicodePtr;
		if (savedWithoutUnicodePtr != 0) {
			System.arraycopy(savedWithoutUnicodeBuffer, 0, this.withoutUnicodeBuffer, 0, savedWithoutUnicodeBuffer.length);
		}
		
	}
	return atLambda;
}

