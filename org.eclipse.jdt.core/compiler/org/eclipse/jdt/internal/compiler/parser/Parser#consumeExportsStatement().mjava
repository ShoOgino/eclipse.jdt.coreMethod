protected void consumeExportsStatement() {
	ExportReference expt = (ExportReference) this.astStack[this.astPtr--];
	ModuleDeclaration module = (ModuleDeclaration)this.astStack[this.astPtr];
	// flush annotations defined prior to import statements
	expt.declarationEnd = this.endStatementPosition;
	expt.declarationSourceEnd =
		flushCommentsDefinedPriorTo(expt.declarationSourceEnd);
	if (module.exports == null)
		module.exports = new ExportReference[1];
	if (module.exportsCount + 1 > module.exports.length) {
		System.arraycopy(module.exports, 0, module.exports = new ExportReference[module.exportsCount + 1], 0, module.exportsCount);
	}
	module.exports[module.exportsCount++] = expt;
	this.astLengthStack[this.astLengthPtr--] = 0;
	
	// recovery TBD
//	if (this.currentElement != null) {
//		this.lastCheckPoint = impt.declarationSourceEnd + 1;
//		this.currentElement = this.currentElement.add(expt, 0);
//		this.lastIgnoredToken = -1;
//		this.restartRecovery = true;
//		// used to avoid branching back into the regular automaton
//	}
}

