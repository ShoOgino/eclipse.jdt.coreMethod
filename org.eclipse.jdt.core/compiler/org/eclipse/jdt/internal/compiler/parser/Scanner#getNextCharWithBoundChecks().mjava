	public final int getNextCharWithBoundChecks() {
		if (this.currentPosition >= this.eofPosition) {
			return -1;
		}
		this.currentCharacter = this.source[this.currentPosition++];
		if (this.currentPosition >= this.eofPosition) {
			this.unicodeAsBackSlash = false;
			if (this.withoutUnicodePtr != 0) {
				unicodeStore();
			}
			return this.currentCharacter;
		}
		if (this.currentCharacter == '\\' && this.source[this.currentPosition] == 'u') {
			try {
				getNextUnicodeChar();
			} catch (InvalidInputException e) {
				return -1;
			}
		} else {
			this.unicodeAsBackSlash = false;
			if (this.withoutUnicodePtr != 0) {
				unicodeStore();
			}
		}
		return this.currentCharacter;
	}

