	private Expression parseMember(TypeReference receiver) throws InvalidInputException {
		this.identifierPtr = -1;
		this.identifierLengthPtr = -1;
		int start = this.scanner.getCurrentTokenStartPosition();
		if (readConsumeToken() == TerminalTokens.TokenNameIdentifier) {
			pushIdentifier(true);
			if (readConsumeToken() == TerminalTokens.TokenNameLPAREN) {
				start = this.scanner.currentPosition;
				AnnotationMessageSend msg = null;
				try {
					msg = parseArguments(receiver);
					msg.tagSourceStart = this.tagSourceStart;
					msg.tagSourceEnd = this.tagSourceEnd;
				}
				catch (InvalidInputException e) {
					int end = this.scanner.getCurrentTokenEndPosition() < this.lineEnd ? this.scanner.getCurrentTokenEndPosition() : this.scanner.getCurrentTokenStartPosition();
					this.sourceParser.problemReporter().annotationInvalidSeeReferenceArgs(start, (end<this.lineEnd?end:(this.lineEnd-1)));
				}
				return msg;
			}
			AnnotationFieldReference field = new AnnotationFieldReference(identifierStack[0], identifierPositionStack[0]);
			field.receiver = receiver;
			field.tagSourceStart = this.tagSourceStart;
			field.tagSourceEnd = this.tagSourceEnd;
			return field;
		}
		this.sourceParser.problemReporter().annotationInvalidSeeReference(start, getEndPosition());
		return null;
	}

