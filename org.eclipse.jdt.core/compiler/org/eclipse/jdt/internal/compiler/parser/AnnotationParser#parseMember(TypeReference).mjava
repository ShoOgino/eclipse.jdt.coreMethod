	/*
	 * Parse a method reference in @see tag
	 */
	private Expression parseMember(TypeReference receiver) throws InvalidInputException {
		this.identifierPtr = -1;
		this.identifierLengthPtr = -1;
		int start = this.scanner.getCurrentTokenStartPosition();
		if (readTokenAndConsume() == TerminalTokens.TokenNameIdentifier) {
			pushIdentifier(true);
			if (readTokenAndConsume() == TerminalTokens.TokenNameLPAREN) {
				start = this.scanner.currentPosition;
				AnnotationMessageSend msg = null;
				try {
					msg = parseArguments(receiver);
					msg.tagSourceStart = this.tagSourceStart;
					msg.tagSourceEnd = this.tagSourceEnd;
				} catch (InvalidInputException e) {
					int end = this.scanner.getCurrentTokenEndPosition() < this.lineEnd ?
							this.scanner.getCurrentTokenEndPosition() :
							this.scanner.getCurrentTokenStartPosition();
					end = end < this.lineEnd ? end : (this.lineEnd - 1);
					this.sourceParser.problemReporter()	.annotationInvalidSeeReferenceArgs(start, end);
				}
				return msg;
			}
			AnnotationFieldReference field = new AnnotationFieldReference(identifierStack[0], identifierPositionStack[0]);
			field.receiver = receiver;
			field.tagSourceStart = this.tagSourceStart;
			field.tagSourceEnd = this.tagSourceEnd;
			return field;
		}
		this.sourceParser.problemReporter().annotationInvalidSeeReference(start, getEndPosition());
		return null;
	}

