	protected void consumeStatementIfWithElse() {
		// IfThenElseStatement ::=  'if' '(' Expression ')' StatementNoShortIf 'else' Statement
		// IfThenElseStatementNoShortIf ::=  'if' '(' Expression ')' StatementNoShortIf 'else' StatementNoShortIf

		int lengthE, lengthT;
		lengthE = astLengthStack[astLengthPtr--]; //first decrement

		if (((lengthT = astLengthStack[astLengthPtr]) != 0) && (lengthE != 0)) {
			expressionLengthPtr--;
			//optimize the push/pop
			astStack[--astPtr] =
				new IfStatement(
					expressionStack[expressionPtr--],
					(Statement) astStack[astPtr],
					(Statement) astStack[astPtr + 1],
					intStack[intPtr--],
					endPosition);
		} else {
			astLengthPtr--; //second decrement
			expressionLengthPtr--;
			pushOnAstStack(new IfStatement(expressionStack[expressionPtr--],
			//here only one of lengthE/T can be different 0
			(lengthT == 0) ? Block.None : (Statement) astStack[astPtr--],
				(lengthE == 0) ? Block.None : (Statement) astStack[astPtr--],
				intStack[intPtr--],
				endPosition));
		}
	}

