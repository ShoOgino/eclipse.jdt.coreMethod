protected void consumeStatementIfWithElse() {
	// IfThenElseStatement ::=  'if' '(' Expression ')' StatementNoShortIf 'else' Statement
	// IfThenElseStatementNoShortIf ::=  'if' '(' Expression ')' StatementNoShortIf 'else' StatementNoShortIf

	expressionLengthPtr--;

	// optimized {..., Then, Else } ==> {..., If }
	int elseLength = astLengthStack[astLengthPtr--];
	int thenLength = astLengthStack[astLengthPtr];

	if (thenLength != 0 && elseLength != 0) { // silent empty statement (length==0)
		//optimize the push/pop
		astStack[--astPtr] = 
			new IfStatement(
				expressionStack[expressionPtr--], 
				(Statement) astStack[astPtr], 
				(Statement) astStack[astPtr + 1], 
				intStack[intPtr--], 
				endStatementPosition); 
	} else {
		astLengthPtr--; //second decrement
		pushOnAstStack(
			new IfStatement(expressionStack[expressionPtr--],
				//here only one of then/else length can be different 0
				(thenLength == 0) ? null : (Statement) astStack[astPtr--], 
				(elseLength == 0) ? null : (Statement) astStack[astPtr--], 
				intStack[intPtr--], 
				endStatementPosition)); 
	}
}

