public void checkAnnotation() {

	if (this.currentElement != null && this.scanner.commentPtr >= 0) {
		flushAnnotationsDefinedPriorTo(endStatementPosition); // discard obsolete comments during recovery
	}
	
	int lastComment = this.scanner.commentPtr;
	
	if (this.modifiersSourceStart >= 0) {
		// eliminate comments located after modifierSourceStart if positionned
		while (lastComment >= 0 && this.scanner.commentStarts[lastComment] > modifiersSourceStart) lastComment--;
	}
	if (lastComment >= 0) {
		// consider all remaining leading comments to be part of current declaration
		this.modifiersSourceStart = scanner.commentStarts[0]; 
	
		// check deprecation in last comment if javadoc 	
		if (this.scanner.commentStops[lastComment] > 0) { 	// non javadoc comment have negative end positions
			if (checkDeprecation(
					this.scanner.commentStarts[lastComment],
					this.scanner.commentStops[lastComment] - 1, //stop is one over,
					this.scanner.source)) {
				checkAndSetModifiers(AccDeprecated);
			}
		}
	}
}

