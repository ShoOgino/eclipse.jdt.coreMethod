protected void consumeSingleExportsPkgName() {
	ExportReference expt;
	int length;
	char[][] tokens = new char[length = this.identifierLengthStack[this.identifierLengthPtr--]][];
	this.identifierPtr -= length;
	long[] positions = new long[length];
	System.arraycopy(this.identifierStack, this.identifierPtr + 1, tokens, 0, length);
	System.arraycopy(this.identifierPositionStack, this.identifierPtr + 1, positions, 0, length);
	pushOnAstStack(expt = new ExportReference(tokens, positions));

	if (this.currentToken == TokenNameSEMICOLON){
		expt.declarationSourceEnd = this.scanner.currentPosition - 1;
	} else {
		expt.declarationSourceEnd = expt.sourceEnd;
	}
	expt.declarationEnd = expt.declarationSourceEnd;
	//this.endPosition is just before the ;
	expt.declarationSourceStart = this.intStack[this.intPtr--];

	// recovery - TBD
//	if (this.currentElement != null){
//		this.lastCheckPoint = expt.declarationSourceEnd+1;
//		this.currentElement = this.currentElement.add(expt, 0);
//		this.lastIgnoredToken = -1;
//		this.restartRecovery = true; // used to avoid branching back into the regular automaton
//	}
}

