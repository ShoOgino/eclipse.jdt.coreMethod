protected void consumeAnnotationTypeMemberHeaderExtendedDims() {
	// AnnotationTypeMemberHeaderExtendedDims ::= Dimsopt
	AnnotationMethodDeclaration annotationTypeMemberDeclaration = (AnnotationMethodDeclaration) this.astStack[this.astPtr];
	int extendedDims = this.intStack[this.intPtr--];
	annotationTypeMemberDeclaration.extendedDimensions = extendedDims;
	if (extendedDims != 0) {
		TypeReference returnType = annotationTypeMemberDeclaration.returnType;
		annotationTypeMemberDeclaration.sourceEnd = this.endPosition;
		int dims = returnType.dimensions() + extendedDims;
		int baseType;
		if ((baseType = this.identifierLengthStack[this.identifierLengthPtr + 1]) < 0) {
			//it was a baseType
			int sourceStart = returnType.sourceStart;
			int sourceEnd =  returnType.sourceEnd;
			returnType = TypeReference.baseTypeReference(-baseType, dims);
			returnType.sourceStart = sourceStart;
			returnType.sourceEnd = sourceEnd;
			annotationTypeMemberDeclaration.returnType = returnType;
		} else {
			annotationTypeMemberDeclaration.returnType = this.copyDims(annotationTypeMemberDeclaration.returnType, dims);
		}
		if (this.currentToken == TokenNameSEMICOLON){ 
			annotationTypeMemberDeclaration.bodyStart = this.endPosition + 1;
		}	
	}	
}

