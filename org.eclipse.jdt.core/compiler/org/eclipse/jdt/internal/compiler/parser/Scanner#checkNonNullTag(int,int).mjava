// Check presence of non null tags.
private final void checkNonNullTag(int commentStart, int commentEnd) {
	for (int i = commentStart + 2, state = 0; state < 9;) {
		if (i >= commentEnd || i >= this.eofPosition) {
			return;
		}
		char currentChar = this.source[i++];
		switch (state) {
			case 0: // start
				if (currentChar == 'N') {
					state++;
				}
				else if (!ScannerHelper.isWhitespace(currentChar)) {
					return;
				}
				continue;
			case 1: // got a N
				switch (currentChar) {
					case 'O':
						state++;
						continue;
					case 'N':
						state = 8;
						continue;
					default:
						return;
				}
				// never get there
			case 2: // got NO
			case 4: // got NON-
				if (currentChar == 'N') {
					state++;
					continue;
				}
				return;
			case 3: // got NON
				if (currentChar == '-') {
					state++;
					continue;
				}
				return;
			case 5: // got NON-N
				if (currentChar == 'U') {
					state++;
					continue;
				}
				return;
			case 6: // got NON-NU
			case 7: // got NON-NUL
				if (currentChar == 'L') {
					state++;
					continue;
				}
				return;
			case 8:	// got NON-NULL or NN
				if (currentChar != '*' && !ScannerHelper.isWhitespace(currentChar)) {
					return;
				}
				state = 9; // got a marker
		}
	}
	// got a non null marker
	this.gotNonNullTag = true;
}

