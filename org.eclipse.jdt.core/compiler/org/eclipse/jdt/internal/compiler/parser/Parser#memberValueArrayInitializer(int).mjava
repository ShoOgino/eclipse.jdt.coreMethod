public final void memberValueArrayInitializer(int length) {
	//length is the size of the array Initializer
	//expressionPtr points on the last elt of the arrayInitializer, 
	// in other words, it has not been decremented yet.

	MemberValueArrayInitializer memberValueArrayInitializer = new MemberValueArrayInitializer();
	if (length != 0) {
		this.expressionPtr -= length;
		System.arraycopy(this.expressionStack, this.expressionPtr + 1, memberValueArrayInitializer.memberValues = new Expression[length], 0, length);
	}
	pushOnExpressionStack(memberValueArrayInitializer);
	//positionning
	memberValueArrayInitializer.sourceEnd = this.endStatementPosition;
	int searchPosition = length == 0 ? this.endPosition + 1 : memberValueArrayInitializer.memberValues[0].sourceStart;
	try {
		//does not work with comments(that contain '{') nor '{' describes as a unicode....		
		while (this.scanner.source[--searchPosition] != '{') {/*empty*/}
	} catch (IndexOutOfBoundsException ex) {
		//should never occur (except for strange cases like whose describe above)
		searchPosition = (length == 0 ? this.endPosition : memberValueArrayInitializer.memberValues[0].sourceStart) - 1;
	}
	memberValueArrayInitializer.sourceStart = searchPosition;
}

