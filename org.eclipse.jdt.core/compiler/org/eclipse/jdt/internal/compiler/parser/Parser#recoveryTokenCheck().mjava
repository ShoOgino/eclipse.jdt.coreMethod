/* Token check performed on every token shift once having entered
 * recovery mode.
 */
public void recoveryTokenCheck() {
	switch (currentToken) {
		case TokenNameLBRACE : {

			/*
			 * Recovered anonymous types are tagged a bracket balance of -2 (incremented
			 * then since headerEnd != bodyStart. Given the opening brace was already taken
			 * into account, just fix up the bracket balance and take no further action for this token.
			 */
			if (currentElement.bracketBalance == -1){
				currentElement.bracketBalance = 1; 
				break;
			}
			RecoveredElement newElement = 
				currentElement.updateOnOpeningBrace(scanner.currentPosition - 1);
			lastCheckPoint = scanner.currentPosition;				
			if (newElement != null){ // null means nothing happened
				restartRecovery = true; // opening brace detected
				currentElement = newElement;
			}
			break;
		}
		case TokenNameRBRACE : {
			endPosition = this.flushAnnotationsDefinedPriorTo(scanner.currentPosition - 1);
			RecoveredElement newElement =
				currentElement.updateOnClosingBrace(scanner.startPosition, scanner.currentPosition -1);
				lastCheckPoint = scanner.currentPosition;
				if (newElement != currentElement){
				currentElement = newElement;
			}
		}
	}
}

