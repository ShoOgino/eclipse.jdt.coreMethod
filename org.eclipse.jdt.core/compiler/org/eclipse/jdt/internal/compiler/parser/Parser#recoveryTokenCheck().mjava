/* Token check performed on every token shift once having entered
 * recovery mode.
 */
public void recoveryTokenCheck() {
	switch (currentToken) {
		case TokenNameLBRACE : 
			RecoveredElement newElement = null;
			if(!ignoreNextOpeningBrace) {
				newElement = currentElement.updateOnOpeningBrace(scanner.startPosition - 1, scanner.currentPosition - 1);
			}
			lastCheckPoint = scanner.currentPosition;				
			if (newElement != null){ // null means nothing happened
				restartRecovery = true; // opening brace detected
				currentElement = newElement;
			}
			break;
		
		case TokenNameRBRACE : 
			this.rBraceStart = scanner.startPosition - 1;
			this.rBraceEnd = scanner.currentPosition - 1;
			endPosition = this.flushCommentsDefinedPriorTo(this.rBraceEnd);
			newElement =
				currentElement.updateOnClosingBrace(scanner.startPosition, this.rBraceEnd);
				lastCheckPoint = scanner.currentPosition;
			if (newElement != currentElement){
				currentElement = newElement;
			}
			break;
		case TokenNameSEMICOLON :
			endStatementPosition = scanner.currentPosition - 1;
			endPosition = scanner.startPosition - 1; 
			// fall through
		default : {
			if (this.rBraceEnd > this.rBraceSuccessorStart && scanner.currentPosition != scanner.startPosition){
				this.rBraceSuccessorStart = scanner.startPosition;
			}
			break;
		}
	}
	ignoreNextOpeningBrace = false;
}

