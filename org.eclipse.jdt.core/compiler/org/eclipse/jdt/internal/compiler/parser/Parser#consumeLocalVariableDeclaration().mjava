	protected void consumeLocalVariableDeclaration() {
		// LocalVariableDeclaration ::= Modifiers Type VariableDeclarators ';'

		/*
		astStack : 
		expressionStack: Expression Expression ...... Expression
		identifierStack : type  identifier identifier ...... identifier
		intStack : typeDim      dim        dim               dim
		 ==>
		astStack : FieldDeclaration FieldDeclaration ...... FieldDeclaration
		expressionStack :
		identifierStack : 
		intStack : 
		  
		*/
		int variableDeclaratorsCounter = astLengthStack[astLengthPtr];
		// retrieve modifiers
		// The modifiers has been set and it is still at the right value
		// declaration starts from the modifierSourceStart
		for (int i = variableDeclaratorsCounter - 1; i >= 0; i--) {
			LocalDeclaration localDeclaration = (LocalDeclaration) astStack[astPtr - i];
			localDeclaration.declarationSourceEnd = endStatementPosition;
			// semi-colon included
		}
		// update the astStack, astPtr and astLengthStack
		int startIndex = astPtr - variablesCounter[nestedType] + 1;
		System.arraycopy(
			astStack,
			startIndex,
			astStack,
			startIndex - 1,
			variableDeclaratorsCounter);
		astPtr--; // remove the type reference
		astLengthStack[--astLengthPtr] = variableDeclaratorsCounter;
		variablesCounter[nestedType] = 0;
	}

