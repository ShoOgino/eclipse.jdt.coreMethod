	private TypeBinding getTypeBinding(char[] typeConstantPoolName, Scope scope, boolean checkcast) {
		if (typeConstantPoolName.length == 1) {
			// base type
			switch(typeConstantPoolName[0]) {
				case 'Z':
					return TypeBinding.BOOLEAN;
				case 'B':
					return TypeBinding.BYTE;
				case 'C':
					return TypeBinding.CHAR;
				case 'D':
					return TypeBinding.DOUBLE;
				case 'F':
					return TypeBinding.FLOAT;
				case 'I':
					return TypeBinding.INT;
				case 'J':
					return TypeBinding.LONG;
				case 'S':
					return TypeBinding.SHORT;
				default:
					return null;
			}
		} else if (typeConstantPoolName[0] == '[') {
			int dimensions = getDimensions(typeConstantPoolName);
			if (typeConstantPoolName.length - dimensions == 1) {
				// array of base types
				TypeBinding baseType = null;
				switch(typeConstantPoolName[typeConstantPoolName.length - 1]) {
					case 'Z':
						baseType = TypeBinding.BOOLEAN;
						break;
					case 'B':
						baseType = TypeBinding.BYTE;
						break;
					case 'C':
						baseType = TypeBinding.CHAR;
						break;
					case 'D':
						baseType = TypeBinding.DOUBLE;
						break;
					case 'F':
						baseType = TypeBinding.FLOAT;
						break;
					case 'I':
						baseType = TypeBinding.INT;
						break;
					case 'J':
						baseType = TypeBinding.LONG;
						break;
					case 'S':
						baseType = TypeBinding.SHORT;
						break;
					case 'V':
						baseType = TypeBinding.VOID;
				}
				return scope.createArrayType(baseType, dimensions);
			} else {
				// array of object types
				TypeBinding type = (TypeBinding) scope.getTypeOrPackage(
					CharOperation.splitOn('/', CharOperation.subarray(typeConstantPoolName, dimensions + 1, typeConstantPoolName.length - 1)));
				if (!type.isValidBinding()) {
					ProblemReferenceBinding problemReferenceBinding = (ProblemReferenceBinding) type;
					if ((problemReferenceBinding.problemId() & ProblemReasons.InternalNameProvided) != 0) {
						type = problemReferenceBinding.closestMatch();
					}
				}
				return scope.createArrayType(type, dimensions);
			}
		} else {
			TypeBinding type = checkcast ?
					(TypeBinding) scope.getTypeOrPackage(
							CharOperation.splitOn('/', CharOperation.subarray(typeConstantPoolName, 0, typeConstantPoolName.length)))
				: (TypeBinding) scope.getTypeOrPackage(
				CharOperation.splitOn('/', CharOperation.subarray(typeConstantPoolName, 1, typeConstantPoolName.length - 1)));
			if (!type.isValidBinding()) {
				ProblemReferenceBinding problemReferenceBinding = (ProblemReferenceBinding) type;
				if ((problemReferenceBinding.problemId() & ProblemReasons.InternalNameProvided) != 0) {
					type = problemReferenceBinding.closestMatch();
				}
			}
			return type;
		}
	}

