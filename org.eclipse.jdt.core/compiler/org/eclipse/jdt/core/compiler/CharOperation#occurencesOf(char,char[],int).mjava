	/**
	 * Returns the number of occurrences of the given character in the given array starting
	 * at the given index, 0 if any.
	 * 
	 * <br>
	 * <br>
	 * For example:
	 * <ol>
	 * <li><pre>
	 *    toBeFound = 'b'
	 *    array = { 'a' , 'b', 'b', 'a', 'b', 'a' }
	 *    start = 2
	 *    result => 2
	 * </pre>
	 * </li>
	 * <li><pre>
	 *    toBeFound = 'c'
	 *    array = { 'a' , 'b', 'b', 'a', 'b', 'a' }
	 *    start = 0
	 *    result => 0
	 * </pre>
	 * </li>
	 * </ol>
	 * 
	 * @param toBeFound the given character
	 * @param array the given array
	 * @return the number of occurrences of the given character in the given array, 0 if any
	 * @exception NullPointerException if array is null
	 * @exception ArrayIndexOutOfBoundsException if start is lower than 0
	 */
	public static final int occurencesOf(
		char toBeFound,
		char[] array,
		int start) {
		int count = 0;
		for (int i = start; i < array.length; i++)
			if (toBeFound == array[i])
				count++;
		return count;
	}

