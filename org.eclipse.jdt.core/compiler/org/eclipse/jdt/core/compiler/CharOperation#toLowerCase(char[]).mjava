	/**
	 * Answers the result of a char[] conversion to lowercase. Answers null if the given chars array is null.
	 * <br>
	 * NOTE: if no conversion was necessary, then answers back the argument one.
	 * <br>
	 * <br>
	 * For example:
	 * <ol>
	 * <li><pre>
	 *    chars = { 'a' , 'b' }
	 *    result => { 'a' , 'b' }
	 * </pre>
	 * </li>
	 * <li><pre>
	 *    array = { 'A', 'b' }
	 *    result => { 'a' , 'b' }
	 * </pre>
	 * </li>
	 * </ol>
	 * 
	 * @param chars the chars to convert
	 * @return the result of a char[] conversion to lowercase
	 */
	final static public char[] toLowerCase(char[] chars) {
		if (chars == null)
			return null;
		int length = chars.length;
		char[] lowerChars = null;
		for (int i = 0; i < length; i++) {
			char c = chars[i];
			char lc = Character.toLowerCase(c);
			if ((c != lc) || (lowerChars != null)) {
				if (lowerChars == null) {
					System.arraycopy(
						chars,
						0,
						lowerChars = new char[length],
						0,
						i);
				}
				lowerChars[i] = lc;
			}
		}
		return lowerChars == null ? chars : lowerChars;
	}

