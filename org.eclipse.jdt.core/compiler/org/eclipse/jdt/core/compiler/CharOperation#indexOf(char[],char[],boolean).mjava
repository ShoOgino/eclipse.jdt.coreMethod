	/**
	 * Answers the first index in the array for which the toBeFound array is a matching
	 * subarray following the case rule. Answers -1 if no match is found.
	 * <br>
	 * <br>
	 * For example:
	 * <ol>
	 * <li><pre>
	 *    toBeFound = { 'c' }
	 *    array = { ' a', 'b', 'c', 'd' }
	 *    result => 2
	 * </pre>
	 * </li>
	 * <li><pre>
	 *    toBeFound = { 'e' }
	 *    array = { ' a', 'b', 'c', 'd' }
	 *    result => -1
	 * </pre>
	 * </li>
	 * </ol>
	 * 
	 * @param toBeFound the subarray to search
	 * @param array the array to be searched
	 * @param isCaseSensitive flag to know if the matching should be case sensitive
	 * @return the first index in the array for which the toBeFound array is a matching
	 * subarray following the case rule, -1 otherwise
	 * @throws NullPointerException if array is null or toBeFound is null
	 * @since 3.2
	 */
	public static final int indexOf(char[] toBeFound, char[] array, boolean isCaseSensitive) {
		return indexOf(toBeFound, array, isCaseSensitive, 0);
	}

