		/**
		 * @param options the given compiler options
		 */
		public void logOptions(Map options) {
			if ((this.tagBits & Logger.XML) != 0) {
				this.printTag(Logger.OPTIONS, null, true, false);
				final Set entriesSet = options.entrySet();
				Object[] entries = entriesSet.toArray();
				Arrays.sort(entries, new Comparator() {
					public int compare(Object o1, Object o2) {
						Map.Entry entry1 = (Map.Entry) o1;
						Map.Entry entry2 = (Map.Entry) o2;
						return ((String) entry1.getKey()).compareTo((String) entry2.getKey());
					}
				});
				for (int i = 0, max = entries.length; i < max; i++) {
					Map.Entry entry = (Map.Entry) entries[i];
					String key = (String) entry.getKey();
					this.parameters.put(Logger.KEY, key);
					this.parameters.put(Logger.VALUE, entry.getValue());
					String label = getLabel(key);
					if (label != null) {
						this.parameters.put(Logger.LABEL, label);
					}
					String categoryID = getCategoryID(key);
					if (categoryID != null) {
						this.parameters.put(Logger.CATEGORY_ID, categoryID);
					}
					this.printTag(Logger.OPTION, this.parameters, true, true);
				}
				this.endTag(Logger.OPTIONS);
			}
		}

