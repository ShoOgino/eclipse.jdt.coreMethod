private void initializeKnownFileNames(String[] initialFileNames) {
	this.knownFileNames = new HashSet(initialFileNames.length * 2);
	for (int i = initialFileNames.length; --i >= 0;) {
		char[] fileName = initialFileNames[i].toCharArray();
		char[] matchingPathName = null;
		final int lastIndexOf = CharOperation.lastIndexOf('.', fileName);
		if (lastIndexOf != -1) {
			fileName = CharOperation.subarray(fileName, 0, lastIndexOf);
		}
		CharOperation.replace(fileName, '\\', '/');
		for (int j = 0; j < classpaths.length; j++){
			char[] matchCandidate = this.classpaths[j].normalizedPath();
			if (this.classpaths[j] instanceof  ClasspathDirectory && 
					CharOperation.prefixEquals(matchCandidate, fileName) && 
					(matchingPathName == null ||
							matchCandidate.length < matchingPathName.length))
				matchingPathName = matchCandidate;
		}
		if (matchingPathName == null) {
			this.knownFileNames.add(new String(fileName)); // leave as is...
		} else {
			this.knownFileNames.add(new String(CharOperation.subarray(fileName, matchingPathName.length, fileName.length)));
		}
		matchingPathName = null;
	}
}

