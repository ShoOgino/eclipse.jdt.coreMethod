public synchronized boolean isPackage(String qualifiedPackageName) {
	if (this.packageCache != null)
		return this.packageCache.contains(qualifiedPackageName);

	this.packageCache = new HashSet<>(41);
	this.packageCache.add(Util.EMPTY_STRING);
	if (this.isJrt) {
		try {
			JRTUtil.walkModuleImage(this.file, new JRTUtil.JrtFileVisitor<java.nio.file.Path>() {

				@Override
				public FileVisitResult visitPackage(java.nio.file.Path dir, java.nio.file.Path mod, BasicFileAttributes attrs) throws IOException {
					addToPackageCache(dir.toString(), true);
					return FileVisitResult.CONTINUE;
				}

				@Override
				public FileVisitResult visitFile(java.nio.file.Path dir, java.nio.file.Path mod, BasicFileAttributes attrs) throws IOException {
					return FileVisitResult.CONTINUE;
				}

				@Override
				public FileVisitResult visitModule(java.nio.file.Path mod) throws IOException {
					return FileVisitResult.CONTINUE;
				}

			}, JRTUtil.NOTIFY_PACKAGES);
		} catch (IOException e) {
			// Ignore and move on
		}
	} else {
		for (Enumeration e = this.zipFile.entries(); e.hasMoreElements(); ) {
			String fileName = ((ZipEntry) e.nextElement()).getName();
			addToPackageCache(fileName, false);
		}
	}
	return this.packageCache.contains(qualifiedPackageName);
}

