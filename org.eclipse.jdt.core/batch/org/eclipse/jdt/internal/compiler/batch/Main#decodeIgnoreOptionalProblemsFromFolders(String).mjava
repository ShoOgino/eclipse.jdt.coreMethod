private static char[][] decodeIgnoreOptionalProblemsFromFolders(String folders) {
	StringTokenizer tokenizer = new StringTokenizer(folders, File.pathSeparator);
	char[][] result = new char[2 * tokenizer.countTokens()][];
	int count = 0;
	while (tokenizer.hasMoreTokens()) {
		String fileName = tokenizer.nextToken();
		// relative folder names are created relative to the current user dir
		File file = new File(fileName);
		if (file.exists()) {
			String absolutePath = file.getAbsolutePath();
			result[count++] = absolutePath.toCharArray();
			// if the file exists, we should try to use its canonical path
			try {
				String canonicalPath = file.getCanonicalPath();
				if (!absolutePath.equals(canonicalPath)) {
					result[count++] = canonicalPath.toCharArray();
				}
			} catch (IOException e) {
				// ignore
			}
		} else {
			// if the file does not exist, use the name that was specified
			result[count++] = fileName.toCharArray();
		}
	}
	if (count < result.length) {
		char[][] shortened = new char[count][];
		System.arraycopy(result, 0, shortened, 0, count);
		result = shortened;
	}
	return result;
}

