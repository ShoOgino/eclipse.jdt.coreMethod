	/*
	 * Internal IDE API for test harness purpose
	 */
	public static void compile(String commandLine, PrintWriter writer) {
		int count = 0;
		String[] argv = new String[10];
		int startIndex = 0;
		int lastIndex = commandLine.indexOf('"');
		boolean insideQuotes = false;
		boolean insideClasspath = false;
		StringTokenizer tokenizer;
		while (lastIndex != -1) {
			if (insideQuotes) {
				if (count == argv.length) {
					System.arraycopy(argv, 0, (argv = new String[count * 2]), 0, count);
				}
				if (insideClasspath) {
					argv[count - 1] += commandLine.substring(startIndex, lastIndex);
					insideClasspath = false;
				} else {
					argv[count++] = commandLine.substring(startIndex, lastIndex);
				}
			} else {
				String subCommandLine = commandLine.substring(startIndex, lastIndex);
				if (subCommandLine.equals(File.pathSeparator)) {
					argv[count - 1] += File.pathSeparator;
					insideClasspath = true;
				} else {
					tokenizer = new StringTokenizer(subCommandLine, File.pathSeparator + " ");
					while (tokenizer.hasMoreTokens()) {
						if (count == argv.length) {
							System.arraycopy(argv, 0, (argv = new String[count * 2]), 0, count);
						}
						argv[count++] = tokenizer.nextToken();
					}
				}
			}
			startIndex = lastIndex + 1;
			lastIndex = commandLine.indexOf('"', startIndex);
			insideQuotes = !insideQuotes;
		}
		if (startIndex == 0) {
			tokenizer = new StringTokenizer(commandLine);
			while (tokenizer.hasMoreTokens()) {
				if (count == argv.length) {
					System.arraycopy(argv, 0, (argv = new String[count * 2]), 0, count);
				}
				argv[count++] = tokenizer.nextToken();
			}
		} else {
			if (startIndex + 1 <= commandLine.length()) {
				if (insideQuotes) {
					if (count == argv.length) {
						System.arraycopy(argv, 0, (argv = new String[count * 2]), 0, count);
					}
					argv[count++] = commandLine.substring(startIndex, commandLine.length());
				} else {
					tokenizer =
						new StringTokenizer(
							commandLine.substring(startIndex, commandLine.length()),
							File.pathSeparator + " ");
					while (tokenizer.hasMoreTokens()) {
						if (count == argv.length) {
							System.arraycopy(argv, 0, (argv = new String[count * 2]), 0, count);
						}
						argv[count++] = tokenizer.nextToken();
					}
				}
			}
		}
		System.arraycopy(argv, 0, argv = new String[count], 0, count);
		new Main(writer, false).compile(argv);
	}

