	/**
	 * Parses the --add-exports command line option and returns the package export definitions
	 * in the form of an IModule. Note the IModule returned only holds this specific exports-to
	 * clause and can't by itself be used as a module description.
	 *
	 * The expected format is:
	 *   --add-exports <source-module>/<package>=<target-module>(,<target-module>)*
	 * @param option
	 * @return a dummy module object with package exports
	 */
	protected static IModule extractAddonExport(String option) {
		StringTokenizer tokenizer = new StringTokenizer(option, "/"); //$NON-NLS-1$
		String source = null;
		String pack = null;
		List<String> targets = new ArrayList<>();
		if (tokenizer.hasMoreTokens()) {
			source = tokenizer.nextToken("/"); //$NON-NLS-1$
		} else {
			// Handle error
			return null;
		}
		if (tokenizer.hasMoreTokens()) {
			pack = tokenizer.nextToken("/="); //$NON-NLS-1$
		} else {
			// Handle error
			return null;
		}
		while (tokenizer.hasMoreTokens()) {
			targets.add(tokenizer.nextToken("=,")); //$NON-NLS-1$
		}
		BasicModule.PackageExport export = new PackageExport();
		export.pack = pack.toCharArray();
		export.exportedTo = new char[targets.size()][];
		for(int i = 0; i < export.exportedTo.length; i++) {
			export.exportedTo[i] = targets.get(i).toCharArray();
		}
		BasicModule module = new BasicModule(source.toCharArray(), null, false);
		module.exports = new IModule.IPackageExport[]{export};
		return module;
	}
//
//	static class PackageExport implements IPackageExport {
//		char[] name;
//		char[][] exportedTo;
//		PackageExport(char[] name) {
//			this.name = name;
//		}
//		@Override
//		public char[] name() {
//			return this.name;
//		}
//		@Override
//		public char[][] exportedTo() {
//			return this.exportedTo;
//		}
//	}
//	
//	static class Module implements IModule {
//		char[] name;
//		IPackageExport[] export;
//		boolean isAuto;
//		Module(char[] name, IPackageExport export, boolean isAuto) {
//			this.name = name;
//			this.export = new IPackageExport[]{export};
//			this.isAuto = isAuto;
//		}
//		@Override
//		public char[] name() {
//			return this.name;
//		}
//		@Override
//		public IModuleReference[] requires() {
//			return null;
//		}
//		@Override
//		public IPackageExport[] exports() {
//			return this.export;
//		}
//		@Override
//		public char[][] uses() {
//			return null;
//		}
//		@Override
//		public IService[] provides() {
//			return null;
//		}
//		@Override
//		public void setAutomatic(boolean isAuto) {
//			this.isAuto = isAuto;
//		}
//		public boolean isAutomatic() {
//			return this.isAuto;
//		}
//	}

