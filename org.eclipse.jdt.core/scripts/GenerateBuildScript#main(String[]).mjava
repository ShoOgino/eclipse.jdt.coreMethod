	public static void main(String[] args) {
		if (args.length != 5) {
			System.out.println("Usage: script_name directory gcj_exe_name dest_dir source/bin"); //$NON-NLS-1$
			return;
		}
		try {
			BufferedWriter writer = new BufferedWriter(new FileWriter(new File(args[0])));
			writer.write(HEADER);
			File sourceDir = new File(args[1]);
			if (sourceDir.exists()) {
				ArrayList collector = new ArrayList();
				collectAllFiles(sourceDir, collector, new FileFilter() {
					public boolean accept(File pathname) {
						String fileName = pathname.getAbsolutePath();
						return pathname.isDirectory() || fileName.endsWith(".rsc") || fileName.endsWith(".properties"); //$NON-NLS-1$ //$NON-NLS-2$
					}
				});
				dumpAllProperties(writer, sourceDir, collector, args[2], args[3]);
				if ("source".equals(args[4])) { //$NON-NLS-1$
					writer.write(MessageFormat.format(SOURCE_FILES, new Object[] {args[2], args[3]}));
				} else {
					collector = new ArrayList();
					collectAllFiles(sourceDir, collector, new FileFilter() {
						public boolean accept(File pathname) {
							String fileName = pathname.getAbsolutePath();
							return pathname.isDirectory() || fileName.endsWith(".class"); //$NON-NLS-1$
						}
					});
					dumpAllClassFiles(writer, sourceDir, collector, args[2], args[3]);
				}
			}
			writer.write(MessageFormat.format(FOOTER, new Object[] {args[2], args[3]}));
			writer.flush();
			writer.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

