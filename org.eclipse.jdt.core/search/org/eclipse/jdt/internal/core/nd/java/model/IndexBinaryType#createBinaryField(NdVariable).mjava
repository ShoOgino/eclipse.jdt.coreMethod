	public static IBinaryField createBinaryField(NdVariable ndVariable) {
		char[] name = ndVariable.getName().getChars();
		Constant constant = null;
		NdConstant ndConstant = ndVariable.getConstant();
		if (ndConstant != null) {
			constant = ndConstant.getConstant();
		}

		List<IBinaryTypeAnnotation> typeAnnotations = new ArrayList<>();
		NdTypeSignature type = ndVariable.getType();
		buildAnnotations(typeAnnotations, TypeAnnotationBuilder.create(), type);
		IBinaryTypeAnnotation[] typeAnnotationArray = typeAnnotations.isEmpty() ? null
				: (IBinaryTypeAnnotation[]) typeAnnotations.toArray(new IBinaryTypeAnnotation[typeAnnotations.size()]);

		IBinaryAnnotation[] annotations = toAnnotationArray(ndVariable.getAnnotations());

		CharArrayBuffer signature = new CharArrayBuffer();
		type.getSignature(signature);

		long tagBits = ndVariable.getTagBits();
		return new IndexBinaryField(annotations, constant, signature.getContents(), ndVariable.getModifiers(), name,
				tagBits, typeAnnotationArray, type.getRawType().getBinaryName());
	}

