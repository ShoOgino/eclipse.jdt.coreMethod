	public void put(Nd nd, long address, long newTargetAddress) {
		Database db = nd.getDB();
		db.getLog().start(this.putTag);
		try {
			long fieldStart = address + this.offset;
			if (this.backPointer == null) {
				throw new IllegalStateException(
						getClass().getSimpleName() + " must be associated with a " + FieldOneToMany.class.getSimpleName()); //$NON-NLS-1$
			}

			long oldTargetAddress = TARGET.get(nd, fieldStart);
			if (oldTargetAddress == newTargetAddress) {
				return;
			}

			detachFromOldTarget(nd, address, oldTargetAddress);

			TARGET.put(nd, fieldStart, newTargetAddress);
			if (newTargetAddress != 0) {
				// Note that newValue is the address of the backpointer list and record (the address of the struct
				// containing the forward pointer) is the value being inserted into the list.
				BACKPOINTER_INDEX.put(nd, fieldStart, this.backPointer.add(nd, newTargetAddress, address));
			} else {
				if (this.pointsToOwner) {
					nd.scheduleDeletion(address);
				}
			}
		} finally {
			db.getLog().end(this.putTag);
		}
	}

