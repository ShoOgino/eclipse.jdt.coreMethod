	private static void compareMethods(IBinaryMethod expectedMethod, IBinaryMethod actualMethod) {
		assertEquals("The annotated parameter count didn't match", actualMethod.getAnnotatedParametersCount(), //$NON-NLS-1$
				expectedMethod.getAnnotatedParametersCount());

		compareAnnotations(expectedMethod.getAnnotations(), actualMethod.getAnnotations());

		assertEquals("The argument names didn't match.", expectedMethod.getArgumentNames(), //$NON-NLS-1$
				actualMethod.getArgumentNames());

		if (!constantsEqual(expectedMethod.getDefaultValue(), actualMethod.getDefaultValue())) {
			throw new IllegalStateException("The default values didn't match."); //$NON-NLS-1$
		}

		assertEquals("The exception type names did not match.", expectedMethod.getExceptionTypeNames(), //$NON-NLS-1$
				actualMethod.getExceptionTypeNames());

		if (expectedMethod.getGenericSignature() != null) {
			assertEquals("The method's generic signature did not match", expectedMethod.getGenericSignature(), //$NON-NLS-1$
					actualMethod.getGenericSignature());
		}

		assertEquals("The method descriptors did not match.", expectedMethod.getMethodDescriptor(), //$NON-NLS-1$
				actualMethod.getMethodDescriptor());
		assertEquals("The modifiers didn't match.", expectedMethod.getModifiers(), actualMethod.getModifiers()); //$NON-NLS-1$

		for (int idx = 0; idx < actualMethod.getAnnotatedParametersCount(); idx++) {
			char[] classFileName = "".toCharArray(); //$NON-NLS-1$
			compareAnnotations(expectedMethod.getParameterAnnotations(idx, classFileName),
					actualMethod.getParameterAnnotations(idx, classFileName));
		}

		assertEquals("The selectors did not match", expectedMethod.getSelector(), actualMethod.getSelector()); //$NON-NLS-1$
		assertEquals("The tag bits did not match", expectedMethod.getTagBits(), actualMethod.getTagBits()); //$NON-NLS-1$

		compareTypeAnnotations(expectedMethod.getTypeAnnotations(), actualMethod.getTypeAnnotations());
	}

