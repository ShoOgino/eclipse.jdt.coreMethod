	@Override
	public IBinaryTypeAnnotation[] getTypeAnnotations() {
		List<IBinaryTypeAnnotation> result = new ArrayList<>();
		ITypeAnnotationBuilder annotationBuilder = TypeAnnotationBuilder.create();
		try (IReader rl = this.typeRef.lock()) {
			NdType type = this.typeRef.get();
			if (type != null) {
				NdTypeSignature superclass = type.getSuperclass();
				if (superclass != null) {
					buildAnnotations(result, annotationBuilder.toSupertype((short)-1), superclass);
				}

				List<NdTypeInterface> interfaces = type.getInterfaces();

				for (short interfaceIdx = 0; interfaceIdx < interfaces.size(); interfaceIdx++) {
					NdTypeInterface next = interfaces.get(interfaceIdx);

					buildAnnotations(result, annotationBuilder.toSupertype(interfaceIdx), next.getInterface());
				}
			}
		}
		return toTypeAnnotationArray(result);
	}

