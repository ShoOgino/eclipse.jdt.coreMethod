	/**
	 * Returns true iff the given resource file is up-to-date with the filesystem. Returns false
	 * if the argument is out-of-date with the file system or null.
	 * 
	 * @param file the index file to look up or null
	 * @throws CoreException 
	 */
	public boolean isUpToDate(NdResourceFile file) throws CoreException {
		if (file != null && file.isDoneIndexing()) {
			// TODO(sxenos): It would be much more efficient to mark files as being in one
			// of three states: unknown, dirty, or clean. Files would start in the unknown
			// state and move into the dirty state when we see them in a java model change
			// event. They would move into the clean state after passing this sort of
			// fingerprint test... but by caching the state of all tested files (in memory),
			// it would eliminate the vast majority of these (slow) fingerprint tests.
			
			Path locationPath = new Path(file.getLocation().getString());
			if (file.getFingerprint().test(locationPath, null).matches()) {
				return true;
			}
		}
		return false;
	}

