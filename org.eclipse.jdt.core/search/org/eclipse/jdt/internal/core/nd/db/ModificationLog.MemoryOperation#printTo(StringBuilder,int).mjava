		public void printTo(StringBuilder builder, int indent) {
			indent(builder, indent);
			switch (getOperationType()) {
				case FREE_OPERATION: builder.append("freed"); break; //$NON-NLS-1$
				case MALLOC_OPERATION: builder.append("malloc'd"); break; //$NON-NLS-1$
				case WRITE_OPERATION: builder.append("wrote"); break; //$NON-NLS-1$
			}
			builder.append(" [address "); //$NON-NLS-1$
			builder.append(this.startAddress);
			builder.append(", size "); //$NON-NLS-1$
			builder.append(this.addressSize);
			builder.append("] at time "); //$NON-NLS-1$
			builder.append(this.time);
			builder.append("\n");  //$NON-NLS-1$
			List<Tag> theStack = new ArrayList<>();
			theStack.addAll(getStack());
			Collections.reverse(theStack);
			for (Tag next : theStack) {
				indent(builder, indent + 1);
				builder.append(next.name + "\n");  //$NON-NLS-1$
			}
		}

