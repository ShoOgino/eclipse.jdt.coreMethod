	@SuppressWarnings("nls")
	public void releaseWriteLock(int establishReadLocks, boolean flush) {
		// When all locks are released we can clear the result cache.
		if (establishReadLocks == 0) {
			processDeletions();
			this.db.putLong(Database.WRITE_NUMBER_OFFSET, ++this.fWriteNumber);
			clearResultCache();
		}
		try {
			this.db.giveUpExclusiveLock(flush);
		} catch (IndexException e) {
			Package.log(e);
		}
		assert this.lockCount == -1;
		final ChangeEvent event;
		if (this.changes.isEmpty()) {
			event = null;
		} else {
			event = new ChangeEvent(this.changes);
			this.lastWriteAccess= System.currentTimeMillis();
			this.changes = new HashSet<>();
		}
		synchronized (this.mutex) {
			if (sDEBUG_LOCKS) {
				long timeHeld = this.lastWriteAccess - this.timeWriteLockAcquired;
				if (timeHeld >= LONG_WRITE_LOCK_REPORT_THRESHOLD) {
					System.out.println("Index write lock held for " + timeHeld + " ms");
				}
				decWriteLock(establishReadLocks);
			}

			if (this.lockCount < 0)
				this.lockCount= establishReadLocks;
			this.mutex.notifyAll();
			this.db.setLocked(this.lockCount != 0);
		}
		if (event != null) {
			fireChange(event);
		}
	}

