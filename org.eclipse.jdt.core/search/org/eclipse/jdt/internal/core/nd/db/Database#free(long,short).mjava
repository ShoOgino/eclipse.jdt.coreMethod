	/**
	 * Free an allocated block.
	 *
	 * @param address memory address to be freed
	 * @param poolId the same ID that was previously passed into malloc when allocating this memory address
	 */
	public void free(long address, short poolId) throws IndexException {
		assert this.fExclusiveLock;
		// TODO Look for opportunities to merge blocks
		long block = address - BLOCK_HEADER_SIZE;
		Chunk chunk = getChunk(block);
		int blocksize = - chunk.getShort(block);
		if (blocksize < 0) {
			// Already freed.
			throw new IndexException(new Status(IStatus.ERROR, Package.PLUGIN_ID, 0,
					"Already freed record " + address, new Exception())); //$NON-NLS-1$
		}
		addBlock(chunk, blocksize, block);
		this.freed += blocksize;
		this.memoryUsage.recordFree(poolId, blocksize);
	}

