	/**
	 * Returns the set of IClassFile and ICompilationUnits contained within the given IJavaElement
	 * 
	 * @throws JavaModelException
	 */
	private List<IJavaElement> getBindableElements(IJavaElement input, IProgressMonitor monitor)
			throws JavaModelException {
		List<IJavaElement> result = new ArrayList<>();
		SubMonitor subMonitor = SubMonitor.convert(monitor);
		ArrayDeque<IJavaElement> queue = new ArrayDeque<IJavaElement>();

		queue.add(input);

		while (!queue.isEmpty()) {
			subMonitor.setWorkRemaining(Math.max(queue.size(), 10)).split(1);

			IJavaElement next = queue.removeFirst();

			if (next.getElementType() == IJavaElement.COMPILATION_UNIT
					|| next.getElementType() == IJavaElement.CLASS_FILE) {
				result.add(next);
			} else if (next instanceof IParent) {
				IParent parent = (IParent) next;

				for (IJavaElement child : parent.getChildren()) {
					queue.add(child);
				}
			}
		}
		return result;
	}

