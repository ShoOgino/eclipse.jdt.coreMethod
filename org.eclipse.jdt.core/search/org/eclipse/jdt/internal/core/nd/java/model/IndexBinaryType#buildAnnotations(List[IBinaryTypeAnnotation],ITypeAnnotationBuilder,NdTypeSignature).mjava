	private static void buildAnnotations(List<IBinaryTypeAnnotation> result, ITypeAnnotationBuilder builder,
			NdTypeSignature signature) {
		if (signature == null) {
			return;
		}
		ITypeAnnotationBuilder nextAnnotations = builder;
		List<NdTypeSignature> declaringTypes = signature.getDeclaringTypeChain();

		for (NdTypeSignature next : declaringTypes) {
			buildAnnotations(result, nextAnnotations, next.getAnnotations());

			NdTypeSignature arrayArgument = next.getArrayDimensionType();
			if (arrayArgument != null) {
				buildAnnotations(result, nextAnnotations.toNextArrayDimension(), arrayArgument);
			}

			List<NdTypeArgument> typeArguments = next.getTypeArguments();
			for (int rank = 0; rank < typeArguments.size(); rank++) {
				NdTypeArgument argument = typeArguments.get(rank);

				NdTypeSignature argumentType = argument.getType();
				if (argumentType != null) {
					buildAnnotations(result, nextAnnotations.toTypeArgument(rank), argumentType);
				}
			}

			nextAnnotations = nextAnnotations.toNextNestedType();
		}
	}

