	private IBinaryMethod createBinaryMethod(NdMethod ndMethod) {
		NdMethodId methodId = ndMethod.getMethodId();

		List<IBinaryTypeAnnotation> typeAnnotations = new ArrayList<>();
		ITypeAnnotationBuilder annotationBuilder = TypeAnnotationBuilder.create();

		List<NdTypeParameter> typeParameters = ndMethod.getTypeParameters();
		for (int parameterIdx = 0; parameterIdx < typeParameters.size(); parameterIdx++) {
			NdTypeParameter next = typeParameters.get(parameterIdx);

			List<NdTypeBound> bounds = next.getBounds();
			for (int boundsIdx = 0; boundsIdx < bounds.size(); boundsIdx++) {
				NdTypeBound nextBound = bounds.get(boundsIdx);

				NdTypeSignature type = nextBound.getType();

				if (type != null) {
					buildAnnotations(typeAnnotations,
							annotationBuilder.toTypeParameter(false, parameterIdx).toTypeBound((short) boundsIdx),
							type);
				}
			}
		}

		List<NdMethodParameter> args = ndMethod.getMethodParameters();
		for (int argIdx = 0; argIdx < args.size(); argIdx++) {
			buildAnnotations(typeAnnotations, annotationBuilder.toMethodParameter((short) argIdx),
					args.get(argIdx).getAnnotations());
		}

		buildAnnotations(typeAnnotations, annotationBuilder.toMethodReturn(), ndMethod.getReturnType());

		List<NdMethodException> exceptions = ndMethod.getExceptions();

		for (int exceptionIdx = 0; exceptionIdx < exceptions.size(); exceptionIdx++) {
			NdMethodException next = exceptions.get(exceptionIdx);

			buildAnnotations(typeAnnotations, annotationBuilder.toThrows(exceptionIdx), next.getExceptionType());
		}

		return IndexBinaryMethod.create().setAnnotations(toAnnotationArray(ndMethod.getAnnotations()))
				.setModifiers(ndMethod.getModifiers()).setIsConstructor(methodId.isConstructor())
				.setArgumentNames(getArgumentNames(ndMethod)).setDefaultValue(unpackValue(ndMethod.getDefaultValue()))
				.setExceptionTypeNames(getExceptionTypeNames(ndMethod))
				.setGenericSignature(getGenericSignatureFor(ndMethod))
				.setMethodDescriptor(methodId.getMethodDescriptor())
				.setParameterAnnotations(getParameterAnnotations(ndMethod))
				.setSelector(ndMethod.getMethodId().getSelector()).setTagBits(ndMethod.getTagBits())
				.setIsClInit(methodId.isClInit()).setTypeAnnotations(toTypeAnnotationArray(typeAnnotations));
	}

