	@Override
	public void getSignature(CharArrayBuffer result) {
		NdComplexTypeSignature parentSignature = getGenericDeclaringType();

		if (parentSignature != null) {
			parentSignature.getSignature(result);
			result.append('.');
			return;
		}

		if (isTypeVariable()) {
			result.append('T');
			result.append(getVariableIdentifier().getChars());
			return;
		}

		if (isArrayType()) {
			long size = TYPE_ARGUMENTS.size(getNd(), this.address);

			if (size != 1) {
				throw new IndexException("Array types should have exactly one argument"); //$NON-NLS-1$
			}

			NdTypeArgument argument = TYPE_ARGUMENTS.get(getNd(), this.address, 0);

			result.append('[');
			argument.getType().getSignature(result);
			return;
		}

		result.append(getRawType().getFieldDescriptor().getChars());

		List<NdTypeArgument> arguments = getTypeArguments();
		if (!arguments.isEmpty()) {
			result.append('<');
			for (NdTypeArgument next : arguments) {
				next.getSignature(result);
			}
			result.append('>');
		}
	}

