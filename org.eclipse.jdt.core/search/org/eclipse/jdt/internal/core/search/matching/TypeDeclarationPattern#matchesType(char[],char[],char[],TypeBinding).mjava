	/**
	 * Returns whether the given type binding matches the given simple name pattern 
	 * qualification pattern and enclosing type name pattern.
	 */
	protected boolean matchesType(
		char[] simpleNamePattern,
		char[] qualificationPattern,
		char[] enclosingNamePattern,
		TypeBinding type) {
		if (enclosingNamePattern == null) {
			return this.matchesType(simpleNamePattern, qualificationPattern, type);
		} else {
			char[] pattern;
			if (qualificationPattern == null) {
				return matchesType(simpleNamePattern, enclosingNamePattern, type);
			} else {
				// pattern was created from a Java element: qualification is the package name.
				char[] fullQualificationPattern =
					CharOperation.concat(qualificationPattern, enclosingNamePattern, '.');
				return this.matchesType(simpleNamePattern, fullQualificationPattern, type)
					&& CharOperation.equals(
						qualification,
						CharOperation.concatWith(type.getPackage().compoundName, '.'));
			}
		}
	}

