	public void resolveDocument() {
		IPath path = new Path(this.document.getPath());
		IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(path.segment(0));
		JavaModel model = JavaModelManager.getJavaModelManager().getJavaModel();
		JavaProject javaProject = (JavaProject) model.getJavaProject(project);
		try {
			CancelableNameEnvironment nameEnvironment;
			nameEnvironment = new CancelableNameEnvironment(javaProject, DefaultWorkingCopyOwner.PRIMARY, null);
			this.options = new CompilerOptions(javaProject.getOptions(true));
			this.problemReporter =
					new ProblemReporter(
						DefaultErrorHandlingPolicies.proceedWithAllProblems(),
						this.options,
						new DefaultProblemFactory());
			this.lookupEnvironment = new LookupEnvironment(this, this.options, this.problemReporter, nameEnvironment);
		} catch (JavaModelException e) {
			if (JobManager.VERBOSE) {
				e.printStackTrace();
			}
			this.cu = null;
			return;
		}
		this.lookupEnvironment.buildTypeBindings(this.cu, null);
		this.lookupEnvironment.completeTypeBindings();
		if (this.cu.scope != null) {
			this.cu.scope.faultInTypes();
			this.cu.resolve();
		}
	}

