	/*
	 * Computes the super type names of the focus type if any.
	 */
	private void computeSuperTypeNames() {
		if (this.allSuperTypeNames != null) 
			return; // all super types have already been computed
		
		IType focusType = getFocusType();
		if (focusType == null) return;

		String fullyQualifiedName = focusType.getFullyQualifiedName();
		int lastDot = fullyQualifiedName.lastIndexOf('.');
		char[] qualification = lastDot == -1 ? CharOperation.NO_CHAR : fullyQualifiedName.substring(0, lastDot).toCharArray();
		char[] simpleName = focusType.getElementName().toCharArray();

		SuperTypeNamesCollector superTypeNamesCollector = 
			new SuperTypeNamesCollector(
				this.pattern, 
				simpleName,
				qualification,
				new MatchLocator(this.pattern, this.detailLevel, this.collector, this.scope, this.progressMonitor), // clone MatchLocator so that it has no side effect
				focusType, 
				this.progressMonitor);
		try {
			this.allSuperTypeNames = superTypeNamesCollector.collect();
		} catch (JavaModelException e) {
		}
	}

