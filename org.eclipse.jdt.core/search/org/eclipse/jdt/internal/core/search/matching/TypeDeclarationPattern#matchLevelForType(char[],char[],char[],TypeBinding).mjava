/**
 * Returns whether the given type binding matches the given simple name pattern 
 * qualification pattern and enclosing type name pattern.
 */
protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, char[] enclosingNamePattern, TypeBinding type) {
	if (enclosingNamePattern == null) {
		return this.matchLevelForType(simpleNamePattern, qualificationPattern, type);
	} else {
		if (qualificationPattern == null) {
			return matchLevelForType(simpleNamePattern, enclosingNamePattern, type);
		} else {
			// pattern was created from a Java element: qualification is the package name.
			char[] fullQualificationPattern = CharOperation.concat(qualificationPattern, enclosingNamePattern, '.');
			if (type instanceof ProblemReferenceBinding) { 
				// case of an import reference while serching for ALL_OCCURENCES of a type (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=37166)
				return IMPOSSIBLE_MATCH;
			} else if (CharOperation.equals(pkg, CharOperation.concatWith(type.getPackage().compoundName, '.'))) {
				return this.matchLevelForType(simpleNamePattern, fullQualificationPattern, type);
			} else {
				return IMPOSSIBLE_MATCH;
			}
		}
	}
}

