/**
 * Returns whether this package reference pattern matches the given type reference.
 * Look at resolved information only if specified.
 */
private boolean matches(QualifiedTypeReference typeRef, boolean resolve) {
	if (!resolve) {
		if (this.pkgName != null) {
			switch (this.matchMode) {
				case EXACT_MATCH:
				case PREFIX_MATCH:
					return CharOperation.prefixEquals(this.pkgName, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive);
				case PATTERN_MATCH:
					char[] pattern = this.pkgName[this.pkgName.length-1] == '*' ? this.pkgName : CharOperation.concat(this.pkgName, ".*"/*nonNLS*/.toCharArray());
					return CharOperation.match(pattern, CharOperation.concatWith(typeRef.tokens, '.'), this.isCaseSensitive);
			}
		}
	} else {
		TypeBinding typeBinding = typeRef.binding;
		if (typeBinding != null){
			if (typeBinding instanceof ArrayBinding) {
				typeBinding = ((ArrayBinding)typeBinding).leafComponentType;
			}
			if (typeBinding instanceof ReferenceBinding) {
				PackageBinding pkgBinding = ((ReferenceBinding)typeBinding).fPackage;
				return this.matches(pkgBinding.compoundName);
			}
			return false;
		}
			
	}
	return true;
}

