/**
 * @return Returns the methodBinding.
 */
public MethodBinding getMethodBinding() {
	if (this.methodBinding == null) {
		IJavaElement focus = ((InternalSearchPattern) this).focus;
		MethodBinding binding = null;
		if (focus != null && this.unitScope != null && focus.getElementType() == IJavaElement.METHOD) {
			IMethod method = (IMethod) focus;
			this.declaringTypeBinding = this.unitScope.getType(method.getDeclaringType().getElementName().toCharArray());
			if (this.declaringTypeBinding.isValidBinding() && !this.declaringTypeBinding.isBaseType()) {
				if (this.declaringTypeBinding.isArrayType()) {
					this.declaringTypeBinding = this.declaringTypeBinding.leafComponentType();
				}
			}
			if (this.declaringTypeBinding.isValidBinding()) {
				if (this.declaringTypeBinding.isValidBinding() && !this.declaringTypeBinding.isBaseType()) {
					String[] parameterTypes = method.getParameterTypes();
					int length = parameterTypes.length;
					TypeBinding[] parameters = new TypeBinding[length];
					for (int i=0;  i<length; i++) {
						parameters[i] = this.unitScope.getType(Signature.toCharArray(parameterTypes[i].toCharArray()));
					}
					ReferenceBinding referenceBinding = (ReferenceBinding) this.declaringTypeBinding;
					binding = referenceBinding.getExactMethod(this.selector, parameters);
				}
			}
		}
		this.methodBinding = binding != null ? binding : new ProblemMethodBinding(selector, null, ProblemReasons.NotFound);
	}
	return this.methodBinding;
}

