/*
 * Parse the given compiation unit and build its type bindings.
 * Don't build methods and fields.
 */
protected CompilationUnitDeclaration buildBindings(ICompilationUnit compilationUnit) throws JavaModelException {
	final IFile file = (IFile) compilationUnit.getResource();
	final String fileName = file.getFullPath().lastSegment();
	final char[] mainTypeName = fileName.substring(0, fileName.length() - 5).toCharArray();

	// source unit
	IBuffer buffer = compilationUnit.getBuffer();
	final char[] source = 
		compilationUnit.isWorkingCopy()
			? (buffer == null ? null : buffer.getCharacters())
			: Util.getResourceContentsAsCharArray(file);
	org.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit = 
		new org.eclipse.jdt.internal.compiler.env.ICompilationUnit() {
			public char[] getContents() { return source; }
			public char[] getFileName() { return fileName.toCharArray(); }
			public char[] getMainTypeName() { return mainTypeName; }
			public char[][] getPackageName() { return null; }
		};

	CompilationResult compilationResult = new CompilationResult(sourceUnit, 1, 1, 0);
	CompilationUnitDeclaration unit = this.locator.basicParser().dietParse(sourceUnit, compilationResult);
	if (unit != null) {
		this.locator.lookupEnvironment.buildTypeBindings(unit);
		this.locator.lookupEnvironment.completeTypeBindings(unit, false);
	}
	return unit;
}

