	/**
	 * Returns whether this type pattern matches the given import reference.
	 * Look at resolved information only if specified.
	 */
	private boolean matches(ImportReference importRef, boolean resolve) {

		if (importRef.onDemand)
			return false;

		char[][] tokens = importRef.tokens;
		int importLength = tokens.length;

		if (this.qualification != null) {
			char[][] qualificationTokens = CharOperation.splitOn('.', this.qualification);
			int qualificationLength = qualificationTokens.length;
			if (qualificationLength + 1 > importLength)
				return false;
			for (int i = 0; i < qualificationLength; i++) {
				if (!this.matchesName(qualificationTokens[i], tokens[i])) {
					return false;
				}
			}
			if (this.simpleName != null
				&& !this.matchesName(this.simpleName, tokens[qualificationLength])) {
				return false;
			}
		} else {
			if (this.simpleName != null) {
				for (int i = 0; i < importLength; i++) {
					if (this.matchesName(this.simpleName, tokens[i])) {
						return true;
					}
				}
				return false;
			}
		}
		return true;
	}

