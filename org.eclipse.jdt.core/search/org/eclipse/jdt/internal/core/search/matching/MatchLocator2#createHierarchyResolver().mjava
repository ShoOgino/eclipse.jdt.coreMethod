	/*
	 * Creates hierarchy resolver if needed. 
	 * Returns whether focus is visible.
	 */
	protected boolean createHierarchyResolver() {
		// create hierarchy resolver if scope is a hierarchy scope
		if (this.scope instanceof HierarchyScope) {
			IType focusType = ((HierarchyScope)this.scope).focusType;
			if (focusType != null) {
				if (!focusType.isBinary()) {
					// cache all types in the focus' compilation unit (even secondary types)
					this.accept((ICompilationUnit)focusType.getCompilationUnit());
				}
				
				char[] fullyQualifiedName = focusType.getFullyQualifiedName().toCharArray();
				this.hierarchyResolver = new HierarchyResolver(this.lookupEnvironment, null/*hierarchy is not going to be computed*/);
				if (this.hierarchyResolver.setFocusType(CharOperation.splitOn('.', fullyQualifiedName)) == null) {
					// focus type is not visible from this project
					return false;
				}
			} else {
				this.hierarchyResolver = null;
			}
		} else {
			this.hierarchyResolver = null;
		}
		return true;
	}

