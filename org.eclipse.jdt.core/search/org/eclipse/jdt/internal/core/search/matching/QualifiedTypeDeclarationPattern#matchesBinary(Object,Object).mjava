/**
 * @see SearchPattern#matchesBinary(Object, Object)
 */
public boolean matchesBinary(Object binaryInfo, Object enclosingBinaryInfo) {
	if (!(binaryInfo instanceof IBinaryType)) return false;

	IBinaryType type = (IBinaryType)binaryInfo;
	char[] typeName = (char[]) type.getName().clone();
	CharOperation.replace(typeName, '/', '.');
	if (!matchesType(this.simpleName, this.qualification, typeName)) return false;

	switch (this.classOrInterface) {
		case CLASS_SUFFIX:
			return !type.isInterface();
		case INTERFACE_SUFFIX:
			return type.isInterface();
		case TYPE_SUFFIX: // nothing
	}
	return true;
}

