/**
 * Returns whether the given type declaration has an implicit constructor reference that matches
 * this constructor pattern.
 * Look at resolved information only if specified.
 */
private int matchLevel(TypeDeclaration type, boolean resolve) {
	if (resolve) {
		// find default constructor
		AbstractMethodDeclaration[] methods = type.methods;
		if (methods != null) {
			for (int i = 0, length = methods.length; i < length; i++) {
				AbstractMethodDeclaration method = methods[i];
				if (method.isDefaultConstructor()
						&& method.sourceStart < type.bodyStart) { // if synthetic
					return this.matchLevel((ConstructorDeclaration)method, true);
				}
			}
		}
		return IMPOSSIBLE_MATCH;
	} else {
		// Need to wait for all the constructor bodies to have been parsed
		return this.needsResolve ? POSSIBLE_MATCH : ACCURATE_MATCH;
	}
}

