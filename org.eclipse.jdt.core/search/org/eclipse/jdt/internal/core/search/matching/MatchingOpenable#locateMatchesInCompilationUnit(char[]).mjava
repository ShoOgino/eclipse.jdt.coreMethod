private void locateMatchesInCompilationUnit(char[] source) throws CoreException {
	if (this.parsedUnit == null) { // case where no binding resolution is needed
		// create match set	
		this.matchSet = new MatchSet(this.locator);
		this.locator.parser.matchSet = this.matchSet;
		
		// diet parse
		char[] qualifiedName = this.getQualifiedName();
		if (qualifiedName == null || (this.parsedUnit = (CompilationUnitDeclaration)this.locator.parsedUnits.get(qualifiedName)) == null) {
			this.parsedUnit = this.locator.dietParse(source);
		}
	}
	if (this.parsedUnit != null && this.parsedUnit != ALREADY_RESOLVED) {
		try {
			this.locator.parser.matchSet = this.matchSet;
			this.locator.parser.scanner.setSource(source);
			this.locator.parser.parseBodies(this.parsedUnit);
			// report matches that don't need resolve
			this.matchSet.cuHasBeenResolved = false;
			this.matchSet.reportMatching(parsedUnit);
			
			// resolve if needed
			if (this.matchSet.needsResolve() && this.parsedUnit.types != null) {
				if (!this.locator.compilationAborted) {
					try {
						if (this.parsedUnit.scope == null) {
							// bindings were not created (case of a FieldReferencePattern that doesn't need resolve, 
							// but we need to resolve because of a SingleNameReference being a potential match)
							MatchingOpenable[] openables = this.locator.matchingOpenables.getMatchingOpenables(this.openable.getJavaProject().getPackageFragmentRoots());
							this.locator.createAndResolveBindings(openables);
						}
						if (this.parsedUnit.scope != null) {
							this.parsedUnit.scope.faultInTypes();
							this.parsedUnit.resolve();
						}
						// report matches that needed resolve
						this.matchSet.cuHasBeenResolved = true;
						this.matchSet.reportMatching(this.parsedUnit);
					} catch (AbortCompilation e) {
						// could not resolve: report innacurate matches
						this.matchSet.cuHasBeenResolved = true;
						this.matchSet.reportMatching(this.parsedUnit);
						if (!(e instanceof AbortCompilationUnit)) {
							// problem with class path
							throw e;
						}
					}
				} else {
					// problem ocured while completing the bindings for the base classes
					// -> report innacurate matches
					this.matchSet.cuHasBeenResolved = true;
					this.matchSet.reportMatching(this.parsedUnit);
				}
			}
		} finally {
			this.locator.parser.matchSet = null;
		}
	}
}

