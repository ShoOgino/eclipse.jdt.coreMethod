	private int extractArgCount(char[] signature) throws ClassFormatException {
		int indexOfClosingParen = CharOperation.lastIndexOf(')', signature);
		if (indexOfClosingParen == 1) {
			// there is no parameter
			return 0;
		}
		if (indexOfClosingParen == -1) {
			throw new ClassFormatException(ClassFormatException.ErrInvalidMethodSignature);
		}
		int parameterTypesCounter = 0;
		for (int i = 1; i < indexOfClosingParen; i++) {
			switch (signature[i]) {
				case 'B' :
				case 'C' :
				case 'D' :
				case 'F' :
				case 'I' :
				case 'J' :
				case 'S' :
				case 'Z' :
					parameterTypesCounter++;
					break;
				case 'L' :
					int indexOfSemiColon = CharOperation.indexOf(';', signature, i + 1);
					if (indexOfSemiColon == -1)
						throw new ClassFormatException(ClassFormatException.ErrInvalidMethodSignature);
					parameterTypesCounter++;
					i = indexOfSemiColon;
					break;
				case '[' :
					break;
				default :
					throw new ClassFormatException(ClassFormatException.ErrInvalidMethodSignature);
			}
		}
		return parameterTypesCounter;
	}

