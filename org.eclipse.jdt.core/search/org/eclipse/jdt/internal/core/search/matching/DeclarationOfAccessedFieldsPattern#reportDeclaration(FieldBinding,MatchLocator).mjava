private void reportDeclaration(FieldBinding fieldBinding, MatchLocator locator) throws CoreException {
	ReferenceBinding declaringClass = fieldBinding.declaringClass;
	IType type = locator.lookupType(declaringClass);
	if (type == null) return; // case of a secondary type
	char[] name = fieldBinding.name;
	IField field = type.getField(new String(name));
	if (this.knownFields.contains(field)) return;
	this.knownFields.add(field);
	IResource resource = type.getUnderlyingResource();
	boolean isBinary = type.isBinary();
	IBinaryType info = null;
	if (isBinary) {
		if (resource == null) {
			resource = type.getJavaProject().getProject();
		}
		info = locator.getBinaryInfo((org.eclipse.jdt.internal.core.ClassFile)type.getClassFile(), resource);
		locator.reportBinaryMatch(resource, field, info, IJavaSearchResultCollector.EXACT_MATCH);
	} else {
		TypeDeclaration typeDecl = ((SourceTypeBinding)declaringClass).scope.referenceContext;
		FieldDeclaration fieldDecl = null;
		FieldDeclaration[] fieldDecls = typeDecl.fields;
		for (int i = 0, length = fieldDecls.length; i < length; i++) {
			if (CharOperation.equals(name, fieldDecls[i].name)) {
				fieldDecl = fieldDecls[i];
				break;
			}
		} 
		if (fieldDecl != null) {
			locator.report(resource, fieldDecl.sourceStart, fieldDecl.sourceEnd, field, IJavaSearchResultCollector.EXACT_MATCH);
		}
	}
}

