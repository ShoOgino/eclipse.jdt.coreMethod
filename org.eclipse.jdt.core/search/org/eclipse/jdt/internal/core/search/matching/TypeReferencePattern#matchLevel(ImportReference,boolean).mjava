/**
 * Returns whether this type pattern matches the given import reference.
 * Look at resolved information only if specified.
 */
private int matchLevel(ImportReference importRef, boolean resolve) {

	if (importRef.onDemand) return IMPOSSIBLE_MATCH;

	char[][] tokens = importRef.tokens;
	int importLength = tokens.length;
	
	if (this.qualification != null){
		char[][] qualificationTokens = CharOperation.splitOn('.', this.qualification);
		int qualificationLength = qualificationTokens.length;
		if (qualificationLength+1 > importLength) return IMPOSSIBLE_MATCH;
		for (int i = 0; i < qualificationLength; i++){
			if (!this.matchesName(qualificationTokens[i], tokens[i])) {
				return IMPOSSIBLE_MATCH;
			}
		}
		if (this.simpleName == null || this.matchesName(this.simpleName, tokens[qualificationLength])) {
			return ACCURATE_MATCH;
		} else {
			return IMPOSSIBLE_MATCH;
		}
	} else {
		if (this.simpleName == null) {
			return ACCURATE_MATCH;
		} else {
			for (int i = 0; i < importLength; i++){
				if (this.matchesName(this.simpleName, tokens[i])){
					return ACCURATE_MATCH;
				}
			}
			return IMPOSSIBLE_MATCH;
		}
	}
}

