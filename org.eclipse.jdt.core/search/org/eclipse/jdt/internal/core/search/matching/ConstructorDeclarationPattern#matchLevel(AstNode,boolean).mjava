/**
 * @see SearchPattern#matchLevel(AstNode, boolean)
 */
public int matchLevel(AstNode node, boolean resolve) {
	if (!(node instanceof ConstructorDeclaration)) return IMPOSSIBLE_MATCH;

	ConstructorDeclaration constructor = (ConstructorDeclaration)node;

	if (resolve) {
		return this.matchLevel(constructor.binding);
	} else {
		// constructor name is stored in selector field
		if (this.declaringSimpleName != null 
				&& !this.matchesName(this.declaringSimpleName, constructor.selector))
			return IMPOSSIBLE_MATCH;
			
		// parameter types
		int parameterCount = this.parameterSimpleNames == null ? -1 : this.parameterSimpleNames.length;
		if (parameterCount > -1) {
			int argumentCount = constructor.arguments == null ? 0 : constructor.arguments.length;
			if (parameterCount != argumentCount)
				return IMPOSSIBLE_MATCH;
		}

		return this.needsResolve ? POSSIBLE_MATCH : ACCURATE_MATCH;
	}
}

