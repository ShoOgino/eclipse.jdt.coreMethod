//public void match(AstNode node, MatchingNodeSet nodeSet) - SKIP IT
//public void match(ConstructorDeclaration node, MatchingNodeSet nodeSet) - SKIP IT
public void match(Expression node, MatchingNodeSet nodeSet) { // interested in MessageSend
	if (!this.pattern.findReferences) return;
	if (!(node instanceof MessageSend)) return;

	MessageSend messageSend = (MessageSend) node;
	if (!matchesName(this.pattern.selector, messageSend.selector)) return;
	if (this.pattern.parameterSimpleNames != null) {
		int length = this.pattern.parameterSimpleNames.length;
		AstNode[] args = messageSend.arguments;
		int argsLength = args == null ? 0 : args.length;
		if (length != argsLength) return;
	}

	nodeSet.addMatch(node, this.pattern.mustResolve ? POTENTIAL_MATCH : ACCURATE_MATCH);
}

