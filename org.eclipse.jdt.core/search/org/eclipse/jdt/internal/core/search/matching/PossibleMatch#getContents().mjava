public char[] getContents() {
	char[] contents = (this.source == NO_SOURCE_FILE) ? null : this.source;
	if (this.source == null) {
		if (this.openable instanceof AbstractClassFile) {
			String fileName = getSourceFileName();
			if (fileName == NO_SOURCE_FILE_NAME) return CharOperation.NO_CHAR;

			SourceMapper sourceMapper = this.openable.getSourceMapper();
			if (sourceMapper != null) {
				if (this.openable instanceof ClassFile) {
					IType type = ((ClassFile) this.openable).getType();
					contents = sourceMapper.findSource(type, fileName);
				} else if (this.openable instanceof ModularClassFile) {
					// FIXME(SHMOD): not working
					try {
						IModuleDescription module = ((ModularClassFile) this.openable).getModule();
						contents = sourceMapper.findSource(module.getElementName()); // FIXME(SHMOD)
					} catch (JavaModelException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
			}
		} else {
			contents = this.document.getCharContents();
		}
		this.source = (contents == null) ? NO_SOURCE_FILE : contents;
	}
	return contents;
}

