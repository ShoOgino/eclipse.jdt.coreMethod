	void acceptMatch(String relativePath, String containerPath, char separator, SearchPattern pattern, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope) {

		if (scope instanceof JavaSearchScope) {
			JavaSearchScope javaSearchScope = (JavaSearchScope) scope;
			// Get document path access restriction from java search scope
			// Note that requestor has to verify if needed whether the document violates the access restriction or not
			AccessRuleSet access = javaSearchScope.getAccessRuleSet(relativePath, containerPath);
			if (access != JavaSearchScope.NOT_ENCLOSED) { // scope encloses the document path
				StringBuffer documentPath = new StringBuffer(containerPath.length() + 1 + relativePath.length());
				documentPath.append(containerPath);
				documentPath.append(separator);
				documentPath.append(relativePath);
				if (!requestor.acceptIndexMatch(documentPath.toString(), pattern, participant, access))
					throw new OperationCanceledException();
			}
		} else {
			StringBuffer buffer = new StringBuffer(containerPath.length() + 1 + relativePath.length());
			buffer.append(containerPath);
			buffer.append(separator);
			buffer.append(relativePath);
			String documentPath = buffer.toString();
			if (scope.encloses(documentPath))
				if (!requestor.acceptIndexMatch(documentPath, pattern, participant, null))
					throw new OperationCanceledException();

		}
	}

