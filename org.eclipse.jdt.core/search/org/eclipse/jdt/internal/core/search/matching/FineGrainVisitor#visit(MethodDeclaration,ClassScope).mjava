public boolean visit(MethodDeclaration methodDeclaration, ClassScope scope) {
	if (this.completed) return false;
	if ((this.fineGrain & PARAMETER_TYPE_DECLARATION_TYPE_REFERENCE) != 0) {
		Argument[] arguments = methodDeclaration.arguments;
		if (arguments != null) {
			int argLength = arguments.length;
			for (int i=0; i<argLength; i++) {
				report(arguments[i].type, scope);
			}
		}
	}
	if ((this.fineGrain & THROWS_CLAUSE_TYPE_REFERENCE) != 0) {
		TypeReference[] thrownExceptions = methodDeclaration.thrownExceptions;
		if (thrownExceptions != null) {
			int thrownLength = thrownExceptions.length;
			for (int i=0; i<thrownLength; i++) {
				report(thrownExceptions[i], scope);
				if (this.completed) return false;
			}
		}
	}
	if ((this.fineGrain & RETURN_TYPE_REFERENCE) != 0) {
		report(methodDeclaration.returnType, scope);
	}
	return !this.completed;
}

