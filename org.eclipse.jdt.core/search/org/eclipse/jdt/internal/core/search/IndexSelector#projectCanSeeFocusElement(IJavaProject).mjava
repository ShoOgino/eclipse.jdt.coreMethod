/**
 * Returns whether elements of the given project can see the focus element
 * either because the focus is part of the project, or because it is 
 * accesible throught the project's classpath
 */
private boolean projectCanSeeFocusElement(IJavaProject project) {
	try {
		while (!(this.focus instanceof IJavaProject) && !(this.focus instanceof JarPackageFragmentRoot)) {
			this.focus = this.focus.getParent();
		}
		if (this.focus instanceof JarPackageFragmentRoot) {
			// this.focus is part of a jar
			JarPackageFragmentRoot root = (JarPackageFragmentRoot)this.focus;
			IPath rootPath = root.getPath();
			IClasspathEntry[] entries = project.getResolvedClasspath(true);
			for (int i = 0, length = entries.length; i < length; i++) {
				IClasspathEntry entry = entries[i];
				if ((entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY) 
					&& entry.getPath().equals(rootPath)) {
						return true;
				}
			}
			return false;
		} else {
			// this.focus is part of a project
			IJavaProject focusProject = (IJavaProject)this.focus;
			if (project.equals(focusProject)) {
				return true;
			} else {
				IPath focusPath = focusProject.getProject().getFullPath();
				IClasspathEntry[] entries = project.getResolvedClasspath(true);
				for (int i = 0, length = entries.length; i < length; i++) {
					IClasspathEntry entry = entries[i];
					if ((entry.getEntryKind() == IClasspathEntry.CPE_PROJECT) 
						&& entry.getPath().equals(focusPath)) {
							return true;
					}
				}
				return false;
			}
		}
	} catch (JavaModelException e) {
		return false;
	}
}

