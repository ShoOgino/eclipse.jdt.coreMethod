/**
 * Returns whether this type pattern matches the given name reference.
 * Look at resolved information only if specified.
 */
private boolean matches(NameReference nameRef, boolean resolve) {
	Binding binding = nameRef.binding;
	if (!resolve || binding == null || !binding.isValidBinding()) {
		if (this.simpleName != null) {
			if (nameRef instanceof SingleNameReference) {
				return this.matchesName(this.simpleName, ((SingleNameReference)nameRef).token);
			} else { // QualifiedNameReference
				char[][] tokens = ((QualifiedNameReference)nameRef).tokens;
				for (int i = 0, max = tokens.length; i < max; i++){
					if (this.matchesName(this.simpleName, tokens[i])) return true;
				}
				return false;
			}				
		}
	} else {
		if (nameRef instanceof SingleNameReference){
			if (binding instanceof TypeBinding){
				if (!this.matchesType(this.simpleName, this.qualification, (TypeBinding) binding)){
					return false;
				}
			} else {
				return false; // must be a type binding
			}
		} else { // QualifiedNameReference
			TypeBinding typeBinding = null;
			QualifiedNameReference qNameRef = (QualifiedNameReference)nameRef;
			char[][] tokens = qNameRef.tokens;
			int lastIndex = tokens.length-1;
			switch (qNameRef.bits & Statement.RestrictiveFlagMASK) {
				case BindingIds.FIELD : // reading a field
					typeBinding = ((FieldBinding)binding).declaringClass;
					// no valid match amongst fields
					int otherBindingsCount = qNameRef.otherBindings == null ? 0 : qNameRef.otherBindings.length;			
					lastIndex -= otherBindingsCount + 1;
					if (lastIndex < 0) return false;
					break;
				case BindingIds.LOCAL : // reading a local variable
					return false; // no type match in it
				case BindingIds.TYPE : //=============only type ==============
					typeBinding = (TypeBinding)binding;
			}
			// try to match all enclosing types for which the token matches as well.
			while (typeBinding != null && lastIndex >= 0){
				if (matchesName(this.simpleName, tokens[lastIndex--])
					&& matchesType(this.simpleName, this.qualification, typeBinding)) return true;
					//&& matchesAsSubtype(this.simpleName, this.qualification, typeBinding)) return true;
				if (typeBinding instanceof ReferenceBinding){
					typeBinding = ((ReferenceBinding)typeBinding).enclosingType();
				} else {
					typeBinding = null;
				}
			}
			return false;
		} 
	}
	return true;
}

