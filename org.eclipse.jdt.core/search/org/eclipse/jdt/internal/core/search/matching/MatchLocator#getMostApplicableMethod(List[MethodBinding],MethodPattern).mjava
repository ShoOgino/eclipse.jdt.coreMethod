/**
 * Selects the most applicable method (though similar but not to be confused with its namesake in jls)
 * All this machinery for that elusive uncommon case referred in bug 431357.
 */
private MethodBinding getMostApplicableMethod(List<MethodBinding> possibleMethods, MethodPattern methodPattern) {
	int size = possibleMethods.size();
	MethodBinding result = size != 0 ? possibleMethods.get(0) : null;
	if (size > 1) {
		// can cache but may not be worth since this is not a common case
		Map<Integer, List<String>> methodPatternReverseNames = getSplitNames(methodPattern.parameterQualifications, methodPattern.parameterSimpleNames);
		int len = possibleMethods.size();
		int[][] resultMaps = new int[len][];
		for (int i = 0; i < len; ++i) resultMaps[i] = getResultMap(methodPatternReverseNames, getSplitNames(possibleMethods.get(i)));
		result = possibleMethods.get(getMaxResult(resultMaps));
	}
	return result;
}

