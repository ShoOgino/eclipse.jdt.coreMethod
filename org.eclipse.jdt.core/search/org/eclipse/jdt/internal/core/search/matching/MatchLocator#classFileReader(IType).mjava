public static IBinaryType classFileReader(IType type) {
	IOrdinaryClassFile classFile = type.getClassFile();
	JavaModelManager manager = JavaModelManager.getJavaModelManager();
	if (classFile.isOpen())
		return (IBinaryType)manager.getInfo(type);

	PackageFragment pkg = (PackageFragment) type.getPackageFragment();
	IPackageFragmentRoot root = (IPackageFragmentRoot) pkg.getParent();
	try {
		if (!root.isArchive())
			return Util.newClassFileReader(((JavaElement) type).resource());

		String rootPath = root.getPath().toOSString();
		if (org.eclipse.jdt.internal.compiler.util.Util.isJrt(rootPath)) {
			String classFileName = classFile.getElementName();
			String path = Util.concatWith(pkg.names, classFileName, '/');
			return ClassFileReader.readFromJrt(new File(rootPath), null, path);
		} else {
			ZipFile zipFile = null;
			try {
				IPath zipPath = root.getPath();
				if (JavaModelManager.ZIP_ACCESS_VERBOSE)
					System.out.println("(" + Thread.currentThread() + ") [MatchLocator.classFileReader()] Creating ZipFile on " + zipPath); //$NON-NLS-1$	//$NON-NLS-2$
				zipFile = manager.getZipFile(zipPath);
				String classFileName = classFile.getElementName();
				String path = Util.concatWith(pkg.names, classFileName, '/');
				return ClassFileReader.read(zipFile, path);
			} finally {
				manager.closeZipFile(zipFile);
			}
		}
	} catch (ClassFormatException | CoreException | IOException e) {
		// invalid class file: return null
	}
	return null;
}

