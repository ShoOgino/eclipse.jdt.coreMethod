	/**
	 * @see SearchPattern#matchesBinary(Object, Object)
	 */
	public boolean matchesBinary(Object binaryInfo, Object enclosingBinaryInfo) {
		if (!(binaryInfo instanceof IBinaryType))
			return false;

		IBinaryType type = (IBinaryType) binaryInfo;

		// fully qualified name
		char[] typeName = (char[]) type.getName().clone();
		CharOperation.replace(typeName, '/', '.');
		char[] enclosingTypeName =
			this.enclosingTypeNames == null
				? null
				: CharOperation.concatWith(this.enclosingTypeNames, '.');
		if (!this
			.matchesType(
				this.simpleName,
				this.qualification,
				enclosingTypeName,
				typeName)) {
			return false;
		}

		// class or interface
		switch (this.classOrInterface) {
			case CLASS_SUFFIX :
				if (type.isInterface())
					return false;
				break;
			case INTERFACE_SUFFIX :
				if (!type.isInterface())
					return false;
				break;
		}

		return true;
	}

