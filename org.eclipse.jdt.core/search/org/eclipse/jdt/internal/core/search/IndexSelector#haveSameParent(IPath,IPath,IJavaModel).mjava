/**
 * Returns whether the given jars are referenced in the classpath of the same project.
 */
private boolean haveSameParent(IPath jarPath1, IPath jarPath2, IJavaModel model) {
	if (jarPath1.equals(jarPath2)) {
		return true;
	}
	try {
		IJavaProject[] projects = model.getJavaProjects();
		for (int i = 0, length = projects.length; i < length; i++) {
			IJavaProject project = projects[i];
			IClasspathEntry[] entries = ((JavaProject)project).getExpandedClasspath(true);
			boolean referencesJar1 = false;
			boolean referencesJar2 = false;
			for (int j = 0, length2 = entries.length; j < length2; j++) {
				IClasspathEntry entry = entries[j];
				if (entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY) {
					IPath entryPath = entry.getPath();
					if (entryPath.equals(jarPath1)) {
						referencesJar1 = true;
					} else if (entryPath.equals(jarPath2)) {
						referencesJar2 = true;
					}
				}
			}
			if (referencesJar1 && referencesJar2) {
				return true;
			}
		
		}
	} catch (JavaModelException e) {
		e.printStackTrace();
	}	
	return false;
}

