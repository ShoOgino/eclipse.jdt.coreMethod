/**
 * Atomic exitRead/enterWrite: Allows to keep monitor in between
 * exit read and next enter write.
 * When writing is over, all readers are granted permissing to restart
 * concurrently.
 * This is the same as:
 * <pre>
 * synchronized(monitor) {
 *   monitor.exitRead();
 *   monitor.enterWrite();
 * }
 * </pre>
 */
public synchronized void exitReadEnterWrite() {
	this.exitRead();
	this.enterWrite();
} 

