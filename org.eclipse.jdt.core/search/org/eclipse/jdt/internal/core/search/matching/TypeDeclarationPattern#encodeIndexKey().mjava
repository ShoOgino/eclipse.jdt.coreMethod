/*
 * classOrInterface / package / simpleName / enclosingTypeNames
 */
public char[] encodeIndexKey() {
	char[] packageName = this.isCaseSensitive ? pkg : null;
	switch(this.classOrInterface) {
		case CLASS_SUFFIX :
			if (packageName == null) 
				return new char[] {CLASS_SUFFIX, SEPARATOR};
			break;
		case INTERFACE_SUFFIX :
			if (packageName == null) 
				return new char[] {INTERFACE_SUFFIX, SEPARATOR};
			break;
		default :
			return CharOperation.NO_CHAR; // cannot do better given encoding
	}

	char[] typeName = this.isCaseSensitive ? this.simpleName : null;
	if (typeName != null && this.matchMode == PATTERN_MATCH) {
		int starPos = CharOperation.indexOf('*', typeName);
		switch(starPos) {
			case -1 :
				break;
			case 0 :
				typeName = null;
				break;
			default : 
				typeName = CharOperation.subarray(typeName, 0, starPos);
		}
	}

	int packageLength = packageName.length;
	int enclosingTypeNamesLength = 0;
	if (this.enclosingTypeNames != null)
		for (int i = 0, length = this.enclosingTypeNames.length; i < length; i++)
			enclosingTypeNamesLength += this.enclosingTypeNames[i].length + 1;
	int pos = 0;
	int typeNameLength = typeName == null ? 0 : typeName.length;
	int resultLength = pos + packageLength + typeNameLength + enclosingTypeNamesLength + 4;
	char[] result = new char[resultLength];
	result[pos++] = this.classOrInterface;
	result[pos++] = SEPARATOR;
	if (packageLength > 0) {
		System.arraycopy(packageName, 0, result, pos, packageLength);
		pos += packageLength;
	}
	result[pos++] = SEPARATOR;
	if (typeName != null) {
		System.arraycopy(typeName, 0, result, pos, typeNameLength);
		pos += typeNameLength;

		result[pos++] = SEPARATOR;
		if (enclosingTypeNames != null) {
			for (int i = 0, length = this.enclosingTypeNames.length; i < length; i++) {
				int enclosingTypeNameLength = this.enclosingTypeNames[i].length;
				System.arraycopy(this.enclosingTypeNames[i], 0, result, pos, enclosingTypeNameLength);
				pos += enclosingTypeNameLength;
				result[pos++] = SEPARATOR;
			}
		}
	}
	if (pos != resultLength) {
		System.arraycopy(result, 0, result = new char[pos], 0, pos);
	}
	return result;
}

