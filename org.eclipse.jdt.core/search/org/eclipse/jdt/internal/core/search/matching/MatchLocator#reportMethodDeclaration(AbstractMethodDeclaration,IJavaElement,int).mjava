/**
 * Reports the given method declaration to the search requestor.
 */
public void reportMethodDeclaration(AbstractMethodDeclaration methodDeclaration, IJavaElement parent, int accuracy) throws CoreException {
	IJavaElement enclosingElement;
	if (parent instanceof IType) {
		// create method handle
		enclosingElement = createMethodHandle(methodDeclaration, (IType)parent);
		if (enclosingElement == null) return;
	} else {
		enclosingElement = parent;
	}

	// compute source positions of the selector 
	Scanner scanner = parser.scanner;
	int nameSourceStart = methodDeclaration.sourceStart;
	scanner.setSource(this.currentPotentialMatch.getContents());
	scanner.resetTo(nameSourceStart, methodDeclaration.sourceEnd);
	try {
		scanner.getNextToken();
	} catch (InvalidInputException e) {
		// ignore
	}
	int nameSourceEnd = scanner.currentPosition - 1;

	// accept method declaration
	report(nameSourceStart, nameSourceEnd, enclosingElement, accuracy);
}

