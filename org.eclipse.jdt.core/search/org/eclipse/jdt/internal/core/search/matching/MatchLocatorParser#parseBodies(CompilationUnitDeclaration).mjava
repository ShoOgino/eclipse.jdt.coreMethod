/**
 * Parses the method bodies in the given compilation unit
 */
public void parseBodies(CompilationUnitDeclaration unit) {
	TypeDeclaration[] types = unit.types;
	if (types == null) return;

	if (this.matchContainer != this.matchSet.matchContainer || this.localDeclarationVisitor == null) {
		this.matchContainer = this.matchSet.matchContainer;
		if ((this.matchContainer & PatternLocator.CLASS_CONTAINER) != 0) {
			this.localDeclarationVisitor = (this.matchContainer & PatternLocator.METHOD_CONTAINER) != 0
				? new ClassAndMethodDeclarationVisitor()
				: new ClassButNoMethodDeclarationVisitor();
		} else {
			this.localDeclarationVisitor = (this.matchContainer & PatternLocator.METHOD_CONTAINER) != 0
				? new MethodButNoClassDeclarationVisitor()
				: new NoClassNoMethodDeclarationVisitor();
		}
	}

	for (int i = 0; i < types.length; i++) {
		TypeDeclaration type = types[i];
		this.patternLocator.match(type, this.matchSet);
		this.parseBodies(type, unit);
	}
}

