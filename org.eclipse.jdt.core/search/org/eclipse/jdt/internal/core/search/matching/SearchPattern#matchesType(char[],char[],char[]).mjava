/**
 * Returns whether the given type binding matches the given simple name pattern 
 * and qualification pattern.
 */
protected boolean matchesType(char[] simpleNamePattern, char[] qualificationPattern, char[] fullyQualifiedTypeName) {
	// NOTE: if case insensitive search then simpleNamePattern & qualificationPattern are assumed to be lowercase
	char[] pattern;
	if (simpleNamePattern == null) {
		if (qualificationPattern == null) return true;
		pattern = CharOperation.concat(qualificationPattern, ONE_STAR, '.');
	} else {
		pattern = qualificationPattern == null
			? CharOperation.concat(ONE_STAR, simpleNamePattern)
			: CharOperation.concat(qualificationPattern, simpleNamePattern, '.');
	}
	return CharOperation.match(pattern, fullyQualifiedTypeName, this.isCaseSensitive);
}

