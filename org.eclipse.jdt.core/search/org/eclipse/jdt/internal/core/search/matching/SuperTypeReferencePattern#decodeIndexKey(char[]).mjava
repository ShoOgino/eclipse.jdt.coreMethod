/*
 * superSimpleName / superQualification / superClassOrInterface /  simpleName / enclosingTypeName / pkgName / classOrInterface modifiers
 */
public void decodeIndexKey(char[] key) {
	int slash = -1;
	this.superSimpleName = CharOperation.subarray(key, slash + 1, slash = CharOperation.indexOf(SEPARATOR, key, slash + 1));
	int oldSlash = slash;
	slash = CharOperation.indexOf(SEPARATOR, key, slash + 1);
	this.superQualification = (slash == oldSlash + 1)
		? null // could not have been known at index time
		: CharOperation.subarray(key, oldSlash + 1, slash);
	this.superClassOrInterface = key[slash + 1];
	slash += 2;
	this.simpleName = CharOperation.subarray(key, slash + 1, slash = CharOperation.indexOf(SEPARATOR, key, slash + 1));
	oldSlash = slash;
	slash = CharOperation.indexOf(SEPARATOR, key, slash + 1);
	if (slash == oldSlash + 1) { // could not have been known at index time
		this.enclosingTypeName = null;
	} else {
		this.enclosingTypeName = (slash == oldSlash + 2 && key[oldSlash + 1] == ONE_ZERO[0])
			? ONE_ZERO
			: CharOperation.subarray(key, oldSlash + 1, slash);
	}
	oldSlash = slash;
	slash = CharOperation.indexOf(SEPARATOR, key, slash + 1);
	this.pkgName = (slash == oldSlash + 1)
		? null // could not have been known at index time
		: CharOperation.subarray(key, oldSlash + 1, slash);
	this.classOrInterface = key[slash + 1];
	this.modifiers = key[slash + 2]; // implicit cast to int type
}

