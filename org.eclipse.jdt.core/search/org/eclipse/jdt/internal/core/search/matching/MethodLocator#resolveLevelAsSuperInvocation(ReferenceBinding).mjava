/*
 * Return whether the given type binding or one of its possible super interfaces
 * matches a type in the declaring type names hierarchy.
 */
protected boolean resolveLevelAsSuperInvocation(ReferenceBinding type) {
	char[][] compoundName = type.compoundName;
	for (int i = 0, max = this.allSuperDeclaringTypeNames.length; i < max; i++) {
		if (CharOperation.equals(this.allSuperDeclaringTypeNames[i], compoundName)) {
			return true;
		}
	}

	// maybe super interfaces?
	if (type.isInterface()) {
		ReferenceBinding[] interfaces = type.superInterfaces();
		if (interfaces == null) return false;
		for (int i = 0; i < interfaces.length; i++) {
			if (resolveLevelAsSuperInvocation(interfaces[i])) {
				return true;
			}
		}
	}
	return false;
}

