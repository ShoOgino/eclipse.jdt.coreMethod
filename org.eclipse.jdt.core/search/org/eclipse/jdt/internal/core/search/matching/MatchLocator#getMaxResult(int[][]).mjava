/** returns the row index which has the highest column entry.
 * TODO: rewrite this code with list when (if) we move to 1.8 [with FP constructs].
 */
private int  getMaxResult(int[][] resultsMap) {
	int rows = resultsMap.length;
	int cols = resultsMap[0].length;
	List <Integer> candidates = new ArrayList<Integer>();
	candidates.add(0); //default row

	for (int j = 0; j < cols; ++j) {
		int current = resultsMap[0][j];
		for (int i = 1; i < rows; ++i) {
			int tmp = resultsMap[i][j];
			if (tmp < current) continue;
			if (tmp > current)  {
				current = tmp;
				candidates.clear();
			}
			candidates.add(i);// there is atleast one element always.
		}
		if (candidates.size() <= 1) break; // found
	}
	return candidates.get(0);
}

