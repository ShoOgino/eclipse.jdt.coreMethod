public MethodBinding getMethodBinding(IMethod method) {
	if (this.unitScope == null) return null;
	// Try to get binding from cache
	Binding binding = (Binding) this.bindings.get(method);
	if (binding != null) {
		if (binding instanceof MethodBinding && binding.isValidBinding())
			return (MethodBinding) binding;
		return null;
	}
	//	Get binding from unit scope
	String typeName = method.getDeclaringType().getElementName();
	TypeBinding declaringTypeBinding = getType(typeName, typeName.toCharArray());
	if (declaringTypeBinding != null) {
		if (declaringTypeBinding.isArrayType()) {
			declaringTypeBinding = declaringTypeBinding.leafComponentType();
		}
		if (!declaringTypeBinding.isBaseType()) {
			String[] parameterTypes = method.getParameterTypes();
			int paramTypeslength = parameterTypes.length;
			char[][] paramTypesChars = new char[paramTypeslength][];
			for (int i=0;  i<paramTypeslength; i++) {
				paramTypesChars[i] = Signature.toCharArray(parameterTypes[i].toCharArray());
			}
			ReferenceBinding referenceBinding = (ReferenceBinding) declaringTypeBinding;
			MethodBinding[] methods = referenceBinding.getMethods(method.getElementName().toCharArray());
			int methodsLength = methods.length;
			TypeVariableBinding[] refTypeVariables = referenceBinding.typeVariables();
			int typeVarLength = refTypeVariables==null ? 0 : refTypeVariables.length;
			for (int i=0; i<methodsLength; i++) {
				TypeBinding[] methodParameters = methods[i].parameters;
				int paramLength = methodParameters==null ? 0 : methodParameters.length;
				TypeVariableBinding[] methodTypeVariables = methods[i].typeVariables;
				int methTypeVarLength = methodTypeVariables==null ? 0 : methodTypeVariables.length;
				boolean found = paramLength == paramTypeslength;
				if (found) {
					for (int p=0; found && p<paramLength; p++) {
						if (CharOperation.equals(methodParameters[p].erasure().shortReadableName(), paramTypesChars[p])) {
							// param erasure match
						} else {
							// type variable
							boolean foundVar = true;
							for (int v=0; foundVar && v<typeVarLength; v++) {
								if (!CharOperation.equals(refTypeVariables[v].sourceName, paramTypesChars[p])) {
									foundVar = false;
								}
							}
							if (!foundVar) {
								foundVar = true;
								for (int v=0; foundVar && v<methTypeVarLength; v++) {
									if (!CharOperation.equals(methodTypeVariables[v].sourceName, paramTypesChars[p])) {
										foundVar = false;
									}
								}
								if (!foundVar) found = false;
							}
						}
					}
				}
				if (found) {
					this.bindings.put(method, methods[i]);
					return methods[i];
				}
			}
//			methodBinding = referenceBinding.getExactMethod(method.getElementName().toCharArray(), parameters);
//			this.bindings.put(method, methodBinding);
//			return methodBinding;
		}
	}
	this.bindings.put(method, new ProblemMethodBinding(method.getElementName().toCharArray(), null, ProblemReasons.NotFound));
	return null;
}

