public MethodBinding getMethodBinding(IMethod method) {
	if (this.unitScope == null) return null;
	// Try to get binding from cache
	Binding binding = (Binding) this.bindings.get(method);
	if (binding != null) {
		if (binding instanceof MethodBinding && binding.isValidBinding())
			return (MethodBinding) binding;
		return null;
	}
	//	Get binding from unit scope
	MethodBinding methodBinding = null;
	String typeName = method.getDeclaringType().getElementName();
	TypeBinding declaringTypeBinding = getType(typeName, typeName.toCharArray());
	if (declaringTypeBinding != null) {
		if (declaringTypeBinding.isArrayType()) {
			declaringTypeBinding = declaringTypeBinding.leafComponentType();
		}
		if (!declaringTypeBinding.isBaseType()) {
			String[] parameterTypes = method.getParameterTypes();
			int length = parameterTypes.length;
			TypeBinding[] parameters = new TypeBinding[length];
			for (int i=0;  i<length; i++) {
				parameters[i] = this.unitScope.getType(Signature.toCharArray(parameterTypes[i].toCharArray()));
			}
			ReferenceBinding referenceBinding = (ReferenceBinding) declaringTypeBinding;
			methodBinding = referenceBinding.getExactMethod(method.getElementName().toCharArray(), parameters);
			this.bindings.put(method, methodBinding);
			return methodBinding;
		}
	}
	this.bindings.put(method, new ProblemMethodBinding(method.getElementName().toCharArray(), null, ProblemReasons.NotFound));
	return null;
}

