/**
 * @see SearchPattern#matchesBinary
 */
public boolean matchesBinary(Object binaryInfo, Object enclosingBinaryInfo) {
	if (!(binaryInfo instanceof IBinaryType)) return false;
	IBinaryType type = (IBinaryType) binaryInfo;
	if (!this.checkOnlySuperinterfaces) {
		char[] vmName = type.getSuperclassName();
		if (vmName != null) {
			char[] superclassName = (char[]) vmName.clone();
			CharOperation.replace(vmName, '/', '.');
			if (matchesType(this.superSimpleName, this.superQualification, superclassName))
				return true;
		}
	}

	char[][] superInterfaces = type.getInterfaceNames();
	if (superInterfaces != null) {
		for (int i = 0, max = superInterfaces.length; i < max; i++) {
			char[] superInterfaceName = (char[]) superInterfaces[i].clone();
			CharOperation.replace(superInterfaceName, '/', '.');
			if (matchesType(this.superSimpleName, this.superQualification, superInterfaceName))
				return true;
		}
	}
	return false;
}

