/**
 * @see SearchPattern#matchesBinary(Object, Object)
 */
public boolean matchesBinary(Object binaryInfo, Object enclosingBinaryInfo) {
	if (!this.findDeclarations) return false; // only relevant for declarations
	if (!(binaryInfo instanceof IBinaryMethod)) return false;

	IBinaryMethod method = (IBinaryMethod) binaryInfo;
	if (!method.isConstructor()) return false;

	// declaring type
	if (enclosingBinaryInfo != null) {
		IBinaryType declaring = (IBinaryType) enclosingBinaryInfo;
		char[] declaringTypeName = (char[]) declaring.getName().clone();
		CharOperation.replace(declaringTypeName, '/', '.');
		if (!matchesType(this.declaringSimpleName, this.declaringQualification, declaringTypeName))
			return false;
	}

	// parameter types
	int parameterCount = this.parameterSimpleNames == null ? -1 : this.parameterSimpleNames.length;
	if (parameterCount > -1) {
		String methodDescriptor = new String(method.getMethodDescriptor()).replace('/', '.');
		String[] arguments = Signature.getParameterTypes(methodDescriptor);
		if (parameterCount != arguments.length) return false;
		for (int i = 0; i < parameterCount; i++)
			if (!matchesType(this.parameterSimpleNames[i], this.parameterQualifications[i],  Signature.toString(arguments[i]).toCharArray()))
				return false;
	}
	return true;
}

