public void add(IJavaProject javaProject, boolean includesPrereqProjects, Hashtable visitedProjects) throws JavaModelException {
	IProject project = javaProject.getProject();
	if (!project.isAccessible() || visitedProjects.get(project) != null) return;
	visitedProjects.put(project, project);

	this.addEnclosingProjectOrJar(project.getFullPath());

	IWorkspaceRoot root = project.getWorkspace().getRoot();
	IClasspathEntry[] entries = javaProject.getResolvedClasspath(true);
	IJavaModel model = javaProject.getJavaModel();
	for (int i = 0, length = entries.length; i < length; i++) {
		IClasspathEntry entry = entries[i];
		switch (entry.getEntryKind()) {
			case IClasspathEntry.CPE_LIBRARY:
				IPath path = entry.getPath();
				this.add(path, true);
				this.addEnclosingProjectOrJar(path);
				break;
			case IClasspathEntry.CPE_PROJECT:
				if (includesPrereqProjects) {
					this.add(model.getJavaProject(entry.getPath().lastSegment()), true, visitedProjects);
				}
				break;
			case IClasspathEntry.CPE_SOURCE:
				this.add(entry.getPath(), true);
				break;
		}
	}
}

