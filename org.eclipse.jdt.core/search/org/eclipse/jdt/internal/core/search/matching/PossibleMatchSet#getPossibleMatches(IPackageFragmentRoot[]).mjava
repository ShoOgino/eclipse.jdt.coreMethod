public PossibleMatch[] getPossibleMatches(IPackageFragmentRoot[] roots) {
	PossibleMatch[] result = new PossibleMatch[this.elementCount];
	int index = 0;
	HashSet<IPath> processedHash = new HashSet<>();
	for (int i = 0, length = roots.length; i < length; i++) {
		IPath path = roots[i].getPath();
		ObjectVector possibleMatches = (ObjectVector) this.rootsToPossibleMatches.get(path);
		if (possibleMatches != null && !processedHash.contains(path)) {
			possibleMatches.copyInto(result, index);
			index += possibleMatches.size();
			processedHash.add(path);
		}
	}
	if (index < this.elementCount)
		System.arraycopy(result, 0, result = new PossibleMatch[index], 0, index);
	return result;
}

