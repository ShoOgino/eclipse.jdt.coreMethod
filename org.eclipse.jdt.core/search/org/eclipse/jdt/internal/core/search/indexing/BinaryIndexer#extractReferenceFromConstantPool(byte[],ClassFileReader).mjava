	/**
	 * Extract all type, method, field and interface method references from the constant pool
	 */
	private void extractReferenceFromConstantPool(
		byte[] contents,
		ClassFileReader reader)
		throws ClassFormatException {
		int[] constantPoolOffsets = reader.getConstantPoolOffsets();
		int constantPoolCount = constantPoolOffsets.length;
		for (int i = 1; i < constantPoolCount; i++) {
			int tag = reader.u1At(constantPoolOffsets[i]);
			/**
			 * u1 tag
			 * u2 class_index
			 * u2 name_and_type_index
			 */
			char[] className = null;
			char[] name = null;
			char[] type = null;
			switch (tag) {
				case ClassFileStruct.FieldRefTag :
					// add reference to the class/interface and field name and type
					//				className = extractClassName(constantPoolOffsets, reader, i);
					name = extractName(constantPoolOffsets, reader, i);
					//				type = extractType(constantPoolOffsets, reader, i);
					addFieldReference(name);
					break;
				case ClassFileStruct.MethodRefTag :
					// add reference to the class and method name and type
				case ClassFileStruct.InterfaceMethodRefTag :
					// add reference to the interface and method name and type
					name = extractName(constantPoolOffsets, reader, i);
					type = extractType(constantPoolOffsets, reader, i);
					addMethodReference(name, extractArgCount(type));
			}
		}
	}

