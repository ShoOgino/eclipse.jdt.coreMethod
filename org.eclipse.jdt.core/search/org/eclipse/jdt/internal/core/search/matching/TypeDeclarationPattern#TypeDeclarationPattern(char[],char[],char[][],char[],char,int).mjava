public TypeDeclarationPattern(
		char[] moduleNames,
		char[] pkg,
		char[][] enclosingTypeNames,
		char[] simpleName,
		char typeSuffix,
		int matchRule) {

		this(matchRule);
		addModuleNames(moduleNames);
		this.pkg = this.isCaseSensitive ? pkg : CharOperation.toLowerCase(pkg);
		if (this.isCaseSensitive || enclosingTypeNames == null) {
			this.enclosingTypeNames = enclosingTypeNames;
		} else {
			int length = enclosingTypeNames.length;
			this.enclosingTypeNames = new char[length][];
			for (int i = 0; i < length; i++)
				this.enclosingTypeNames[i] = CharOperation.toLowerCase(enclosingTypeNames[i]);
		}
		this.simpleName = (this.isCaseSensitive || this.isCamelCase) ? simpleName : CharOperation.toLowerCase(simpleName);
		this.typeSuffix = typeSuffix;

		this.mustResolve = (this.pkg != null && this.enclosingTypeNames != null) || typeSuffix != TYPE_SUFFIX;
	}

