private void reportMatching(PackageVisibilityStatement[] psvs, MatchingNodeSet nodeSet, IModuleDescription moduleDesc)
		throws JavaModelException, CoreException {
	if (psvs != null && psvs.length > 0) {
		IPackageExport[] pkgExports = moduleDesc.getExportedPackages();
		for (int i = 0, l = psvs.length; i < l; i++) {
			PackageVisibilityStatement psv = psvs[i];
			ImportReference importRef = psv.pkgRef;
			Integer level = (Integer) nodeSet.matchingNodes.removeKey(importRef);
			if (level != null) {
				Binding binding = this.unitScope.getImport(CharOperation.subarray(importRef.tokens, 0, importRef.tokens.length), true, false);
				this.patternLocator.matchReportImportRef(importRef, binding, pkgExports[i], level.intValue(), this);
			}
			ModuleReference[] tgts = psv.targets;
			if (tgts == null || tgts.length == 0) return;
			for (ModuleReference tgt : tgts) {
				level = (Integer) nodeSet.matchingNodes.removeKey(tgt);
				if (level != null) {
					this.patternLocator.matchReportReference(tgt, pkgExports[i], tgt.resolve(this.unitScope), level.intValue(), this);
				}
			}
		}
	}
}

