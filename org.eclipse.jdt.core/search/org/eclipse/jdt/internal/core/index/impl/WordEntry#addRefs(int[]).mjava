	/**
	 * Adds a set of references and records the change in footprint.
	 */
	public void addRefs(int[] refs) {
		int[] newRefs = new int[fNumRefs + refs.length];
		int pos1 = 0;
		int pos2 = 0;
		int posNew = 0;
		int compare;
		int r1 = 0;
		int r2 = 0;
		while (pos1 < fNumRefs || pos2 < refs.length) {
			if (pos1 >= fNumRefs) {
				r2 = refs[pos2];
				compare = -1;
			} else
				if (pos2 >= refs.length) {
					compare = 1;
					r1 = fRefs[pos1];
				} else {
					r1 = fRefs[pos1];
					r2 = refs[pos2];
					compare = r2 - r1;
				}
			if (compare > 0) {
				newRefs[posNew] = r1;
				posNew++;
				pos1++;
			} else {
				if (r2 != 0) {
					newRefs[posNew] = r2;
					posNew++;
				}
				pos2++;
			}
		}
		fRefs = newRefs;
		fNumRefs = posNew;
		/*for (int i = 0; i < refs.length; i++)
		addRef(refs[i]);
		int[] newRefs = new int[fNumRefs];
		System.arraycopy(fRefs, 0, newRefs, 0, fNumRefs);
		fRefs = newRefs;
		Util.sort(fRefs);*/
	}

