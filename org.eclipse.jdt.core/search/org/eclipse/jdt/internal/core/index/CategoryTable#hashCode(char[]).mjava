	/* (non-Javadoc)
	 * 
	 * The hash code computation is done by using half of the 32 characters last
	 * characters of the given array instead of only half of the 16 last ones for the
	 * super implementation...
	 * 
	 * @see org.eclipse.jdt.internal.compiler.util.HashtableOfObject#hashCode(char[])
	 */
	protected int hashCode(char[] array) {
		int length = array.length;
		int hash = length == 0 ? 31 : array[0];
		if (length < 16) {
			for (int i = length; --i > 0;)
				hash = (hash * 31) + array[i];
		} else {
			// 16 characters is enough to compute a decent hash code, don't waste time examining every character
			for (int i = length - 1, last = i > 32 ? i - 32 : 0; i > last; i -= 2)
				hash = (hash * 31) + array[i];
			
		}
		return hash & 0x7FFFFFFF;
		
	}

