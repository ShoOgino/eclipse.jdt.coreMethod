private void writeCategoryTable(char[] categoryName, HashtableOfObject wordsToDocs, DataOutputStream stream) throws IOException {
	// append the file with the document number arrays & remember the offsets
	Object[] values = wordsToDocs.valueTable;
	for (int i = 0, l = values.length; i < l; i++) {
		Object o = values[i];
		if (o != null) {
			int[] documentNumbers = o instanceof int[] ? (int[]) o : ((IntList) o).asArray();
			int length = documentNumbers.length;
			if (length == 1) {
				values[i] = new Integer(-documentNumbers[0]); // store an array of 1 element by negating the documentNumber (can be zero)
			} else {
				values[i] = new Integer(stream.size());
				writeDocumentNumbers(documentNumbers, stream);
			}
		}
	}

	// append the file with the arrays followed by the words & offsets
	this.categoryOffsets.put(categoryName, stream.size()); // remember the offset to the start of the table
	this.categoryTables.put(categoryName, null); // flush cached table
	stream.writeInt(wordsToDocs.elementSize);
	char[][] words = wordsToDocs.keyTable;
	for (int i = 0, l = words.length; i < l; i++) {
		if (words[i] != null) {
			Util.writeUTF(stream, words[i]);
			stream.writeInt(((Integer) values[i]).intValue()); // offset in the file of the array of document numbers
		}
	}
}

