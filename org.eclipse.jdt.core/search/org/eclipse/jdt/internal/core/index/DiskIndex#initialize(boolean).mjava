void initialize(boolean reuseExistingFile) throws IOException {
	if (this.indexFile.exists()) {
		if (reuseExistingFile) {
			FileInputStream stream = new FileInputStream(this.indexFile);
			this.streamBuffer = new byte[BUFFER_READ_SIZE];
			try {
				char[] signature = readStreamChars(stream);
				if (!CharOperation.equals(signature, SIGNATURE_CHARS)) {
					throw new IOException(Messages.exception_wrongFormat); 
				}
				this.headerInfoOffset = readStreamInt(stream);
				if (this.headerInfoOffset > 0) { // file is empty if its not set
					readHeaderInfo(stream);
				}
			} finally {
				stream.close();
			}
			return;
		}
		if (!this.indexFile.delete()) {
			if (DEBUG)
				System.out.println("initialize - Failed to delete index " + this.indexFile); //$NON-NLS-1$
			throw new IOException("Failed to delete index " + this.indexFile); //$NON-NLS-1$
		}
	}
	if (this.indexFile.createNewFile()) {
		RandomAccessFile file = new RandomAccessFile(this.indexFile, "rw"); //$NON-NLS-1$
		try {
			file.writeUTF(SIGNATURE);
			file.writeInt(-1); // file is empty
		} finally {
			file.close();
		}
	} else {
		if (DEBUG)
			System.out.println("initialize - Failed to create new index " + this.indexFile); //$NON-NLS-1$
		throw new IOException("Failed to create new index " + this.indexFile); //$NON-NLS-1$
	}
}

