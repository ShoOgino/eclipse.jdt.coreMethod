public int getFirstBlockLocationForPrefix(char[] prefix) {
	int min = 0;
	int size = firstWordsInBlocks.size();
	int max = size - 1;
	int match = -1;
	while (min <= max) {
		int mid = (min + max) / 2;
		FirstWordInBlock entry = (FirstWordInBlock) firstWordsInBlocks.elementAt(mid);
		int compare = Util.startsWith(entry.word, prefix);
		if (compare == 0) {
			match = mid;
			break;
		}
		if (compare >= 0) {
			max = mid - 1;
		} else {
			match = mid; // not perfect match, but could be inside
			min = mid + 1;
		}
	}
	if (max < 0) return -1;

	// no match at all, might be some matching entries inside max block
	if (match < 0){
		match = max;
	} else {
		// look for possible matches inside previous blocks
		while (match > 0){
			FirstWordInBlock entry = (FirstWordInBlock) firstWordsInBlocks.elementAt(match);
			if (!CharOperation.startsWith(entry.word, prefix)){
				break;
			}
			match--;
		}
	}
	return match;
}

