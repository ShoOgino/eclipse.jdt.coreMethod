	public PDOMType addType(IBinaryType binaryType, IProgressMonitor monitor) {
		char[] binaryName = binaryType.getName();
		logInfo("adding binary type " + new String(binaryName));

		PDOMTypeId name = createTypeIdFromBinaryName(binaryName);
		PDOMType type = name.findTypeByResourceAddress(this.resource.address);

		if (type == null) {
			type = new PDOMType(getPDOM(), this.resource);
		}

		type.setTypeId(name);
		type.setSuperclass(createTypeIdFromBinaryName(binaryType.getSuperclassName()));
		type.setModifiers(binaryType.getModifiers());
		type.setDeclaringType(createTypeIdFromBinaryName(binaryType.getEnclosingTypeName()));

		IBinaryAnnotation[] annotations = binaryType.getAnnotations();
		if (annotations != null) {
			for (IBinaryAnnotation next : annotations) {
				createAnnotation(next).setParent(type);
			}
		}

		type.setDeclaringMethod(createMethodId(binaryType.getEnclosingTypeName(), binaryType.getEnclosingMethod()));

		IBinaryField[] fields = binaryType.getFields();

		if (fields != null) {
			for (IBinaryField nextField : fields) {
				PDOMVariable variable = new PDOMVariable(getPDOM(), type);

				variable.setType(createTypeIdFromFieldDescriptor(nextField.getTypeName()));
				variable.setName(new String(nextField.getName()));

				IBinaryAnnotation[] binaryAnnotations = nextField.getAnnotations();
				if (binaryAnnotations != null) {
					for (IBinaryAnnotation nextAnnotation : binaryAnnotations) {
						createAnnotation(nextAnnotation).setParent(variable);
					}
				}

				variable.setConstant(PDOMConstant.create(getPDOM(), nextField.getConstant()));
				variable.setModifiers(nextField.getModifiers());

				// TODO(sxenos): Finish pulling in the rest of the fields from IBinaryField
			}
		}

		// genericSignature = binaryType.getGenericSignature();

		char[][] interfaces = binaryType.getInterfaceNames();
		if (interfaces != null) {
			for (char[] next : interfaces) {
				new PDOMTypeInterface(getPDOM(), type, createTypeIdFromBinaryName(next));
			}
		}

		return type;
	}

