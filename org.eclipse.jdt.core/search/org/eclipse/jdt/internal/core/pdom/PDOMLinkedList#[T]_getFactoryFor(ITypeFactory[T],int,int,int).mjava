	public static <T> ITypeFactory<PDOMLinkedList<T>> getFactoryFor(
			final ITypeFactory<T> elementFactory, final int recordsInFirstBlock, final int recordsInSubsequentBlocks,
			final int metadataBitsPerElement) {

		return new AbstractTypeFactory<PDOMLinkedList<T>>() {
			public PDOMLinkedList<T> create(PDOM dom, long record) {
				return new PDOMLinkedList<T>(dom, record, elementFactory, recordsInFirstBlock, recordsInSubsequentBlocks, metadataBitsPerElement);
			}

			@Override
			public int getRecordSize() {
				return PDOMRawLinkedList.recordSize(elementFactory.getRecordSize(), recordsInFirstBlock,
						metadataBitsPerElement);
			}

			@Override
			public Class<?> getElementClass() {
				return PDOMLinkedList.class;
			}

			@Override
			public boolean hasDestructor() {
				return true;
			}

			@Override
			public void destructFields(PDOM dom, long record) {
				create(dom, record).destruct();
			}

			@Override
			public void destruct(PDOM dom, long record) {
				destructFields(dom, record);
			}
		};
	}

