	public static ITypeFactory<BTree> getFactory(final int degree, final IBTreeComparator cmp) {
		return new AbstractTypeFactory<BTree>() {
			@Override
			public BTree create(PDOM dom, long address) {
				return new BTree(dom, address, degree, cmp);
			}

			@Override
			public int getRecordSize() {
				return RECORD_SIZE;
			}

			@Override
			public Class<?> getElementClass() {
				return BTree.class;
			}

			@Override
			public void destruct(PDOM dom, long address) {
				destructFields(dom, address);
			}

			@Override
			public void destructFields(PDOM dom, long address) {
				create(dom, address).destruct();
			}
		};
	}

