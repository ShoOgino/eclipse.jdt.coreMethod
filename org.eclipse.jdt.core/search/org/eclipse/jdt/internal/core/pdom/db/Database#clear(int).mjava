	/**
	 * Empty the contents of the Database, make it ready to start again
	 * @throws IndexException
	 */
	public void clear(int version) throws IndexException {
		assert fExclusiveLock;
		removeChunksFromCache();

		fVersion= version;
		// Clear the first chunk.
		fHeaderChunk.clear(0, CHUNK_SIZE);
		// Chunks have been removed from the cache, so we may just reset the array of chunks.
		fChunks = new Chunk[] {null};
		fChunksUsed = fChunksAllocated = fChunks.length;
		try {
			fHeaderChunk.flush();	// Zero out header chunk.
			fFile.getChannel().truncate(CHUNK_SIZE);	// Truncate database.
		} catch (IOException e) {
			Package.log(e);
		}
		malloced = freed = 0;
		/*
		 * This is for debugging purposes in order to simulate having a very large PDOM database.
		 * This will set aside the specified number of chunks.
		 * Nothing uses these chunks so subsequent allocations come after these fillers.
		 * The special function createNewChunks allocates all of these chunks at once.
		 * 524288 for a file starting at 2G
		 * 8388608 for a file starting at 32G
		 *
		 */
		long setasideChunks = Long.getLong("org.eclipse.cdt.core.parser.pdom.dense.recptr.setaside.chunks", 0); //$NON-NLS-1$
		if (setasideChunks != 0) {
			setVersion(getVersion());
			createNewChunks((int) setasideChunks);
			flush();
		}
	}

