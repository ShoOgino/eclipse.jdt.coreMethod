	/**
	 *
	 * @param value
	 *            accepts all values returned from {@link {@link IBinaryElementValuePair#getValue()}
	 */
	public PDOMConstant createFromMixedType(Object value) {
		if (value instanceof Constant) {
			Constant constant = (Constant) value;

			return PDOMConstant.create(getPDOM(), constant);
		} else if (value instanceof ClassSignature) {
			ClassSignature signature = (ClassSignature) value;

			String binaryName = JavaNames.binaryNameToFieldDescriptor(new String(signature.getTypeName()));
			PDOMTypeSignature typeId = this.index.createTypeId(binaryName);
			return PDOMConstantClass.create(getPDOM(), typeId);
		} else if (value instanceof IBinaryAnnotation) {
			IBinaryAnnotation binaryAnnotation = (IBinaryAnnotation) value;

			return PDOMConstantAnnotation.create(getPDOM(), createAnnotation(binaryAnnotation));
		} else if (value instanceof Object[]) {
			PDOMConstantArray result = new PDOMConstantArray(getPDOM());
			Object[] array = (Object[]) value;

			for (Object next : array) {
				PDOMConstant nextConstant = createFromMixedType(next);
				nextConstant.setParent(result);
			}
			return result;
		} else if (value instanceof EnumConstantSignature) {
			EnumConstantSignature signature = (EnumConstantSignature) value;

			PDOMConstantEnum result = PDOMConstantEnum.create(createTypeIdFromBinaryName(signature.getTypeName()),
					new String(signature.getEnumConstantName()));

			return result;
		}
		throw new IllegalStateException("Unknown constant type " + value.getClass().getName()); //$NON-NLS-1$
	}

