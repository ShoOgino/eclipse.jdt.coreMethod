	public static <T> AutoTypeFactory<T> create(Class<T> objectClass, int size, IDestructableField allFieldsDestructor,
			IRefCountedField refcountImplementation, boolean isRefCounted) {
		String fullyQualifiedClassName = objectClass.getName();

		boolean hasUserDestructor = IDestructable.class.isAssignableFrom(objectClass);

		Constructor<T> constructor;
		try {
			constructor = objectClass.getConstructor(new Class<?>[] { PDOM.class, long.class });
		} catch (NoSuchMethodException | SecurityException e) {
			throw new IllegalArgumentException("The node class " + fullyQualifiedClassName //$NON-NLS-1$
					+ " does not have an appropriate constructor for it to be used with PDOM"); //$NON-NLS-1$
		}

		return new AutoTypeFactory<T>(objectClass, constructor, size, allFieldsDestructor, hasUserDestructor,
				refcountImplementation, isRefCounted);
	}

