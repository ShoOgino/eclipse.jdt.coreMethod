/**
 * Returns a search pattern based on a given Java element. 
 * The pattern is used to trigger the appropriate search, and can be parameterized as follows:
 *
 * @param element the java element the search pattern is based on
 * @param limitTo determines the nature of the expected matches
 * 	<ul>
 * 		<li><code>IJavaSearchConstants.DECLARATIONS</code>: will search declarations matching with the corresponding
 * 			element. In case the element is a method, declarations of matching methods in subtypes will also
 *  		be found, allowing to find declarations of abstract methods, etc.
 *
 *		 <li><code>IJavaSearchConstants.REFERENCES</code>: will search references to the given element.
 *
 *		 <li><code>IJavaSearchConstants.ALL_OCCURRENCES</code>: will search for either declarations or references as specified
 *  		above.
 *
 *		 <li><code>IJavaSearchConstants.IMPLEMENTORS</code>: for interface, will find all types which implements a given interface.
 *	</ul>
 * @return a search pattern for a java element or <code>null</code> if the given element is ill-formed
 */
public static ISearchPattern createSearchPattern(IJavaElement element, int limitTo) {

	return SearchPattern.createPattern(element, limitTo);
}

