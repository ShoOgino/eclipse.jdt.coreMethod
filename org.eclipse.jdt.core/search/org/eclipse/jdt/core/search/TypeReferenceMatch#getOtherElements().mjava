/**
 * Returns other elements also enclosing the type reference. This typically can
 * happen for multiple fields or local variable declarations.
 *<p>
 * For example,
 * <ul>
 * 	<li>searching for the references to the type <code>Test</code> in
 *         <pre>
 *         public class Test {
 *             Test test1, test2, test3;
 *             void method() {}
 *         }
 *         </pre>
 * 		will return one match whose other elements is an array of two fields: 
 * 		{@link IField test2} and {@link IField test3}.
 * 	</li>
 * 	<li>searching for the references to the type <code>Test</code> in
 * 		<pre>
 *         public class Test {
 *             String str;
 *             void method() {
 *                 Test local1, local2, local3;
 *             }
 *         }
 *         </pre>
 * 		will return one match whose other elements is an array of two local 
 * 		variables: {@link ILocalVariable local2} and {@link ILocalVariable local3}.
 * 	</li>
 * </ul>
 * 
 * @return the other elements of the search match, or <code>null</code> if none
 * @since 3.2
 */
public final IJavaElement[] getOtherElements() {
	IJavaElement localElement = localElement();
	if (localElement == null || localElement.getElementType() != IJavaElement.ANNOTATION) {
		return this.otherElements;
	}
	return null;
}

