/**
 * Accepts a top-level or a member interface.
 *
 * @param packageName the dot-separated name of the package of the interface
 * @param simpleTypeName the simple name of the interface
 * @param enclosingTypeNames if the interface is a member type, 
 *          the simple names of the enclosing types from the outer-most to the
 *          direct parent of the interface (e.g. if the interface is x.y.A$B$I then
 *          the enclosing types are [A, B]. This is an empty array if the interface
 *          is a top-level type.
 * @param path the full path to the resource containing the interface. If the resource is a .class file
 *          or a .java file, this is the full path in the workspace to this resource. If the
 *          resource is an archive (i.e. a .zip or .jar file), the path is composed of 2 paths separated
 *		 	 by <code>IJavaSearchScope.JAR_FILE_ENTRY_SEPARATOR</code>: 
 *			 the first path is the full OS path to the archive (if it is an external archive), 
 *			 or the workspace relative <code>IPath</code> to the archive (if it is an internal archive), 
 * 		 the second path is the path to the resource inside the archive.
 * */
void acceptInterface(char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path);

