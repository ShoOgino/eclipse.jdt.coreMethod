	/*
	 * Returns the type parameter names of the given type.
	 *
	private static char[][] typeParameterNames(IType type) {
		char[][] paramNames = null;
		try {
			if (type instanceof BinaryType) {
				paramNames = ((BinaryType) type).getTypeParameterNames();
			} else if (type instanceof SourceType) {
				paramNames = ((SourceType) type).getTypeParameterNames();
			}
		}
		catch (JavaModelException jme) {
			return null;
		}
		return paramNames;
	}
	*/
	/**
	 * Decode the given index key in this pattern. The decoded index key is used by 
	 * {@link #matchesDecodedKey(SearchPattern)} to find out if the corresponding index entry 
	 * should be considered.
	 * <p>
	 * This method should be re-implemented in subclasses that need to decode an index key.
	 * </p>
	 * 
	 * @param key the given index key
	 */
	public void decodeIndexKey(char[] key) {
		// called from findIndexMatches(), override as necessary
	}

