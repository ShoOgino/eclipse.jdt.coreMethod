	/**
	 * Creates a search pattern with the rule to apply for matching index keys. 
	 * It can be exact match, prefix match, pattern match or regexp match.
	 * Rule can also be combined with a case sensitivity flag.
	 * 
	 * @param matchRule one of R_EXACT_MATCH, R_PREFIX_MATCH, R_PATTERN_MATCH, R_REGEXP_MATCH combined with R_CASE_SENSITIVE,
	 *   e.g. R_EXACT_MATCH | R_CASE_SENSITIVE if an exact and case sensitive match is requested, 
	 *   or R_PREFIX_MATCH if a prefix non case sensitive match is requested.
	 * [TODO (frederic) Expand spec for matchRule to allow R_ERASURE_MATCH ?
     * If yes, we have a problem because getMatchRule() locks in set of existing values.]
	 */
	public SearchPattern(int matchRule) {
		this.matchRule = matchRule;
		// Exact match backward compatibility
//		if ((matchRule & (R_PATTERN_MATCH | R_PREFIX_MATCH | R_REGEXP_MATCH)) == 0) {
//			// Implicit exact match
//			this.matchRule |= R_FULL_MATCH;
//		}
		if ((matchRule & (R_EQUIVALENT_MATCH | R_ERASURE_MATCH )) == 0) {
			// Full match is implicit mode
			this.matchRule |= R_FULL_MATCH;
		}
	}

