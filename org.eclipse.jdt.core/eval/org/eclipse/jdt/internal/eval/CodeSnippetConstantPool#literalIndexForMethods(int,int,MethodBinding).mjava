	/**
	 * This method returns the index into the constantPool corresponding 
	 * nameAndType constant with nameIndex, typeIndex.
	 *
	 * @param int nameIndex
	 * @param int nameIndex
	 * @param org.eclipse.jdt.internal.compiler.lookup.MethodBinding a methodBinding
	 * @return <CODE>int</CODE>
	 */
	public int literalIndexForMethods(
		int nameIndex,
		int typeIndex,
		MethodBinding key) {
		int index;
		int indexOfWellKnownMethodNameAndType;
		if ((indexOfWellKnownMethodNameAndType =
			super.indexOfWellKnownMethodNameAndType(key))
			== -1) {
			if ((indexOfWellKnownMethodNameAndType =
				indexOfWellKnownMethodNameAndType(key))
				== -1) {
				// check if the entry exists
				if ((index = nameAndTypeCacheForMethods.get(key)) == -1) {
					// The entry doesn't exit yet
					index = nameAndTypeCacheForMethods.put(key, currentIndex++);
					writeU1(NameAndTypeTag);
					writeU2(nameIndex);
					writeU2(typeIndex);
				}
			} else {
				if ((index = wellKnownMethodNameAndTypes[indexOfWellKnownMethodNameAndType])
					== 0) {
					index =
						wellKnownMethodNameAndTypes[indexOfWellKnownMethodNameAndType] = currentIndex++;
					writeU1(NameAndTypeTag);
					writeU2(nameIndex);
					writeU2(typeIndex);
				}
			}
		} else {
			index = super.literalIndexForMethods(nameIndex, typeIndex, key);
		}
		return index;
	}

