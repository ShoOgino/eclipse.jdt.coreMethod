	/**
	 * @see org.eclipse.jdt.core.eval.IEvaluationContext
	 */
	public void evaluateImports(
		INameEnvironment environment,
		IRequestor requestor,
		IProblemFactory problemFactory) {
		for (int i = 0; i < this.imports.length; i++) {
			IProblem[] problems = new IProblem[] { null };
			char[] importDeclaration = this.imports[i];
			char[][] splitDeclaration = CharOperation.splitOn('.', importDeclaration);
			int splitLength = splitDeclaration.length;
			if (splitLength > 0) {
				char[] packageName = splitDeclaration[splitLength - 1];
				if (packageName.length == 1 && packageName[0] == '*') {
					char[][] parentName;
					switch (splitLength) {
						case 1 :
							parentName = null;
							break;
						case 2 :
							parentName = null;
							packageName = splitDeclaration[splitLength - 2];
							break;
						default :
							parentName = CharOperation.subarray(splitDeclaration, 0, splitLength - 2);
							packageName = splitDeclaration[splitLength - 2];
					}
					if (!environment.isPackage(parentName, packageName)) {
						problems[0] =
							problemFactory.createProblem(
								importDeclaration,
								ProblemIrritants.ImportProblemBase + ProblemReasons.NotFound,
								new String[] { new String(importDeclaration)},
								ProblemSeverities.Warning,
								0,
								importDeclaration.length - 1,
								i);
					}
				} else {
					if (environment.findType(splitDeclaration) == null) {
						problems[0] =
							problemFactory.createProblem(
								importDeclaration,
								ProblemIrritants.ImportProblemBase + ProblemReasons.NotFound,
								new String[] { new String(importDeclaration)},
								ProblemSeverities.Warning,
								0,
								importDeclaration.length - 1,
								i);
					}
				}
			} else {
				problems[0] =
					problemFactory.createProblem(
						importDeclaration,
						ProblemIrritants.ImportProblemBase + ProblemReasons.NotFound,
						new String[] { new String(importDeclaration)},
						ProblemSeverities.Warning,
						0,
						importDeclaration.length - 1,
						i);
			}
			if (problems[0] != null) {
				requestor.acceptProblem(
					problems[0],
					importDeclaration,
					EvaluationResult.T_IMPORT);
			}
		}
	}

