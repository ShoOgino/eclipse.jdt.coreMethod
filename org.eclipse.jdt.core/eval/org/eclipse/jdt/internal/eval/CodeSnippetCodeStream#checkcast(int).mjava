protected void checkcast(int baseId) {
	this.countLabels = 0;
	if (classFileOffset + 2 >= bCodeStream.length) {
		resizeByteArray();
	}
	this.position++;
	this.bCodeStream[this.classFileOffset++] = OPC_checkcast;
	switch (baseId) {
		case T_byte :
			writeUnsignedShort(this.constantPool.literalIndexForType(QualifiedNamesConstants.JavaLangByteConstantPoolName));
			break;
		case T_short :
			writeUnsignedShort(this.constantPool.literalIndexForType(QualifiedNamesConstants.JavaLangShortConstantPoolName));
			break;
		case T_char :
			writeUnsignedShort(this.constantPool.literalIndexForType(QualifiedNamesConstants.JavaLangCharacterConstantPoolName));
			break;
		case T_int :
			writeUnsignedShort(this.constantPool.literalIndexForType(QualifiedNamesConstants.JavaLangIntegerConstantPoolName));
			break;
		case T_long :
			writeUnsignedShort(this.constantPool.literalIndexForType(QualifiedNamesConstants.JavaLangLongConstantPoolName));
			break;
		case T_float :
			writeUnsignedShort(this.constantPool.literalIndexForType(QualifiedNamesConstants.JavaLangFloatConstantPoolName));
			break;
		case T_double :
			writeUnsignedShort(this.constantPool.literalIndexForType(QualifiedNamesConstants.JavaLangDoubleConstantPoolName));
			break;
		case T_boolean :
			writeUnsignedShort(this.constantPool.literalIndexForType(QualifiedNamesConstants.JavaLangBooleanConstantPoolName));
	}
}

