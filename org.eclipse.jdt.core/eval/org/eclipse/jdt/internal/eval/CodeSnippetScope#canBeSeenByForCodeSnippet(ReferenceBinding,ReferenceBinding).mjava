	public final boolean canBeSeenByForCodeSnippet(
		ReferenceBinding referenceBinding,
		ReferenceBinding receiverType) {
		if (referenceBinding.isPublic())
			return true;

		if (receiverType == referenceBinding)
			return true;

		if (referenceBinding.isProtected()) {
			// answer true if the receiver (or its enclosing type) is the superclass 
			//	of the receiverType or in the same package
			return receiverType.fPackage == referenceBinding.fPackage
				|| referenceBinding.isSuperclassOf(receiverType)
				|| referenceBinding.enclosingType().isSuperclassOf(receiverType);
			// protected types always have an enclosing one
		}

		if (referenceBinding.isPrivate()) {
			// answer true if the receiver and the receiverType have a common enclosingType
			// already know they are not the identical type
			ReferenceBinding outerInvocationType = receiverType;
			ReferenceBinding temp = outerInvocationType.enclosingType();
			while (temp != null) {
				outerInvocationType = temp;
				temp = temp.enclosingType();
			}

			ReferenceBinding outerDeclaringClass = referenceBinding;
			temp = outerDeclaringClass.enclosingType();
			while (temp != null) {
				outerDeclaringClass = temp;
				temp = temp.enclosingType();
			}
			return outerInvocationType == outerDeclaringClass;
		}

		// isDefault()
		return receiverType.fPackage == referenceBinding.fPackage;
	}

