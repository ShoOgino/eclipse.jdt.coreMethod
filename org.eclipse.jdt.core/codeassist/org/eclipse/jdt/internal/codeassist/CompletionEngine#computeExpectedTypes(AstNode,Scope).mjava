	private void computeExpectedTypes(AstNode parent, Scope scope){
		int expectedTypeCount = 0;
		expectedTypes = new TypeBinding[1];
		
		if(parent instanceof AbstractVariableDeclaration) {
			TypeBinding binding = ((AbstractVariableDeclaration)parent).type.binding;
			if(binding != null) {
				expectedTypes[expectedTypeCount++] = binding;
			}
		} else if(parent instanceof Assignment) {
			TypeBinding binding = ((Assignment)parent).lhsType;
			if(binding != null) {
				expectedTypes[expectedTypeCount++] = binding;
			}
		} else if(parent instanceof ReturnStatement) {
			MethodBinding methodBinding = ((AbstractMethodDeclaration) scope.methodScope().referenceContext).binding;
			TypeBinding binding = methodBinding  == null ? null : methodBinding.returnType;
			if(binding != null) {
				expectedTypes[expectedTypeCount++] = binding;
			}
		}
		
		System.arraycopy(expectedTypes, 0, expectedTypes = new TypeBinding[expectedTypeCount], 0, expectedTypeCount);
	}

