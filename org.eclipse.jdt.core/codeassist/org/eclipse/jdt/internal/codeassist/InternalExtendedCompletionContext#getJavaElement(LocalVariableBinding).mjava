	private JavaElement getJavaElement(LocalVariableBinding binding) {
		LocalDeclaration local = binding.declaration;
		
		JavaElement parent = null;
		ReferenceContext referenceContext = binding.declaringScope.referenceContext();
		if (referenceContext instanceof AbstractMethodDeclaration) {
			AbstractMethodDeclaration methodDeclaration = (AbstractMethodDeclaration) referenceContext;
			parent = this.getJavaElementOfCompilationUnit(methodDeclaration.binding);
		} else if (referenceContext instanceof TypeDeclaration){
			// Local variable is declared inside an initializer
			TypeDeclaration typeDeclaration = (TypeDeclaration) referenceContext;
			
			IType type = (IType)this.getJavaElementOfCompilationUnit(typeDeclaration.binding);
			if (type != null) {
				try {
					IInitializer[] initializers = type.getInitializers();
					if (initializers != null) {
						done : for (int i = 0; i < initializers.length; i++) {
							IInitializer initializer = initializers[i];
							ISourceRange sourceRange = initializer.getSourceRange();
							if (sourceRange != null) {
								int initializerStart = sourceRange.getOffset();
								int initializerEnd = initializerStart + sourceRange.getLength();
								if (initializerStart <= local.sourceStart &&
										local.sourceEnd <= initializerEnd) {
									parent = (JavaElement)initializer;
									break done;
								}
							}
						}
					}
				} catch (JavaModelException e) {
					return null;
				}
			}
		}
		if (parent == null) return null;
		
		return new LocalVariable(
				parent,
				new String(local.name),
				local.declarationSourceStart,
				local.declarationSourceEnd,
				local.sourceStart,
				local.sourceEnd,
				Util.typeSignature(local.type),
				binding.declaration.annotations);
	}

