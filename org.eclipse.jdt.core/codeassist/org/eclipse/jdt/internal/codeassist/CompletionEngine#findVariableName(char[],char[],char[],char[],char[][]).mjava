	// Helper method for private void findVariableNames(char[] name, TypeReference type )
	private void findVariableName(char[] token, char[] qualifiedPackageName, char[] qualifiedSourceName, char[] sourceName, char[][] excludeNames){
			if(sourceName == null || sourceName.length == 0)
				return;
			
			char[][] names = computeNames(sourceName);
			next : for(int i = 0 ; i < names.length ; i++){
				char[] name = names[i];
				
				if (!CharOperation.prefixEquals(token, name, false))
					continue next;
				
				// completion must be an identifier (not a keyword, ...).
				try{
					identifierScanner.setSourceBuffer(name);
					if(identifierScanner.getNextToken() != identifierScanner.TokenNameIdentifier)
						continue next;
				} catch(InvalidInputException e){
					continue next;
				}
				
				for(int j = 0 ; j < excludeNames.length ; j++){
					if(CharOperation.equals(name, excludeNames[j], false))
						continue next;
				}
				
				// accept result
				requestor.acceptVariableName(
					qualifiedPackageName,
					qualifiedSourceName,
					name,
					name,
					startPosition,
					endPosition);
			}
	}

