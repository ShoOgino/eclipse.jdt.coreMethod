	/**
	 * One result of the search consists of a new class.
	 * @param packageName char[]
	 * @param className char[]
	 * @param modifiers int
	 *
	 * NOTE - All package and type names are presented in their readable form:
	 *    Package names are in the form "a.b.c".
	 *    Nested type names are in the qualified form "A.M".
	 *    The default package is represented by an empty array.
	 */
	public void acceptClass(char[] packageName, char[] className, int modifiers) {
		if (CharOperation.equals(className, this.selectedIdentifier)) {
			if (this.qualifiedSelection != null
				&& !CharOperation.equals(
					this.qualifiedSelection,
					CharOperation.concat(packageName, className, '.'))) {
				return;
			}
			
			if(mustQualifyType(packageName, className)) {
				char[][] acceptedClass = new char[2][];
				acceptedClass[0] = packageName;
				acceptedClass[1] = className;
				
				if(this.acceptedClasses == null) {
					this.acceptedClasses = new char[10][][];
					this.acceptedClassesCount = 0;
				}
				int length = this.acceptedClasses.length;
				if(length == this.acceptedClassesCount) {
					System.arraycopy(this.acceptedClasses, 0, this.acceptedClasses = new char[(length + 1)* 2][][], 0, length);
				}
				this.acceptedClasses[this.acceptedClassesCount++] = acceptedClass;
				
			} else {
				this.noProposal = false;
				this.requestor.acceptClass(
					packageName,
					className,
					false,
					false,
					this.actualSelectionStart,
					this.actualSelectionEnd);
				this.acceptedAnswer = true;
			}
		}
	}

