	private void findImplementations(ModuleDeclaration module, int index) {
		
//		TypeReference reference = module.services[index].serviceImpl;
//		char[][] tokens = reference.getTypeName();
//		char[] typeName = CharOperation.concatWithAll(tokens, '.');
//
//		if (typeName.length == 0) {
//			this.completionToken = CharOperation.ALL_PREFIX;
//		} else if (reference instanceof CompletionOnProvidesImplementationsQualifiedTypeReference) {
//			CompletionOnQualifiedTypeReference qReference = (CompletionOnQualifiedTypeReference) reference;
//			if (qReference.completionIdentifier != null) {
//				this.completionToken = CharOperation.concatAll(typeName, qReference.completionIdentifier, '.');
//			}
//		} else {
//			 char[] lastToken = tokens[tokens.length - 1];
//			 this.completionToken = lastToken != null && lastToken.length == 0 ? 
//					 CharOperation.concat(typeName, new char[]{'.'}) :lastToken;
//		}
//		setSourceRange(reference.sourceStart, reference.sourceEnd);
//		findImplementations(this.completionToken, this.unitScope, module, index);
	}

