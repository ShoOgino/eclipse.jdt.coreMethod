	public void acceptAnnotation(char[] packageName, char[] typeName, int modifiers, AccessRestriction accessRestriction) {
		if (CharOperation.equals(typeName, this.selectedIdentifier)) {
			if(mustQualifyType(packageName, typeName)) {
				char[][] acceptedAnnotation = new char[2][];
				acceptedAnnotation[0] = packageName;
				acceptedAnnotation[1] = typeName;
				
				if(this.acceptedAnnotations == null) {
					this.acceptedAnnotations = new char[10][][];
					this.acceptedAnnotationsCount = 0;
				}
				int length = this.acceptedAnnotations.length;
				if(length == this.acceptedAnnotationsCount) {
					System.arraycopy(this.acceptedAnnotations, 0, this.acceptedAnnotations = new char[(length + 1)* 2][][], 0, length);
				}
				this.acceptedAnnotations[this.acceptedAnnotationsCount++] = acceptedAnnotation;
				
			} else {
				this.noProposal = false;
				this.requestor.acceptAnnotation(
					packageName,
					typeName,
					false,
					null,
					this.actualSelectionStart,
					this.actualSelectionEnd);
				this.acceptedAnswer = true;
			}
		}
	}

