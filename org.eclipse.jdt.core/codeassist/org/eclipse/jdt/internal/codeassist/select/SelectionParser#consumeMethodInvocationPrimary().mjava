	protected void consumeMethodInvocationPrimary() {
		//optimize the push/pop
		//MethodInvocation ::= Primary '.' 'Identifier' '(' ArgumentListopt ')'

		char[] selector = identifierStack[identifierPtr];
		if (!(selector == this.assistIdentifier()
			&& CharOperation.equals(selector, SUPER))) {
			super.consumeMethodInvocationPrimary();
			return;
		}
		ExplicitConstructorCall constructorCall =
			new SelectionOnExplicitConstructorCall(ExplicitConstructorCall.Super);
		constructorCall.sourceEnd = rParenPos;
		int length;
		if ((length = expressionLengthStack[expressionLengthPtr--]) != 0) {
			expressionPtr -= length;
			System.arraycopy(
				expressionStack,
				expressionPtr + 1,
				constructorCall.arguments = new Expression[length],
				0,
				length);
		}
		constructorCall.qualification = expressionStack[expressionPtr--];
		constructorCall.sourceStart = constructorCall.qualification.sourceStart;

		pushOnAstStack(constructorCall);
		this.assistNode = constructorCall;
		this.lastCheckPoint = constructorCall.sourceEnd + 1;
		restartRecovery = true; // force to restart in recovery mode
		isOrphanCompletionNode = true;
	}

