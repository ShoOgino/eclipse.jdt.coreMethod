	public TypeBinding resolveType(BlockScope scope) {
		super.resolveType(scope);
	
		// tolerate some error cases
		if (binding == null || 
				!(binding.isValidBinding() || 
					binding.problemId() == ProblemReasons.NotVisible))
			throw new SelectionNodeFound();
		if (anonymousType == null)
			throw new SelectionNodeFound(binding);
	
		// if selecting a type for an anonymous type creation, we have to
		// find its target super constructor (if extending a class) or its target 
		// super interface (if extending an interface)
		if (anonymousType.binding.superInterfaces == NoSuperInterfaces) {
			// find the constructor binding inside the super constructor call
			ConstructorDeclaration constructor = (ConstructorDeclaration) anonymousType.declarationOf(binding);
			throw new SelectionNodeFound(constructor.constructorCall.binding);
		} else {
			// open on the only superinterface
			throw new SelectionNodeFound(anonymousType.binding.superInterfaces[0]);
		}
	}

