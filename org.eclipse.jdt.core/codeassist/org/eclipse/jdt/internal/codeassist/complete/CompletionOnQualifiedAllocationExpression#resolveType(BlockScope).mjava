public TypeBinding resolveType(BlockScope scope) {
	TypeBinding typeBinding = null;
	if (enclosingInstance != null) {
		TypeBinding enclosingType = enclosingInstance.resolveType(scope);
		if (enclosingType == null || !(enclosingType instanceof ReferenceBinding)) {
			throw new CompletionNodeFound();
		}
		typeBinding = ((SingleTypeReference) type).resolveTypeEnclosing(scope, (ReferenceBinding) enclosingType);
		if (!(typeBinding instanceof ReferenceBinding))
			throw new CompletionNodeFound(); // no need to continue if its an array or base type
		if (typeBinding.isInterface()) // handle the anonymous class definition case
			typeBinding = scope.getJavaLangObject();
	} else {
		typeBinding = type.resolveType(scope);
		if (!(typeBinding instanceof ReferenceBinding))
			throw new CompletionNodeFound(); // no need to continue if its an array or base type
	}

	throw new CompletionNodeFound(this, typeBinding, scope);
}

