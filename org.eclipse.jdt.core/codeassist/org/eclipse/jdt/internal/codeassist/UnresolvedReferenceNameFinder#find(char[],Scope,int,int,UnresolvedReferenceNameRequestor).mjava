	private MethodDeclaration find(char[] startWith, Scope s, int from, int to, UnresolvedReferenceNameRequestor nameRequestor) {
		this.requestor = nameRequestor;
		
		// reinitialize completion scanner to be usable as a normal scanner
		this.completionScanner.cursorLocation = 0;
		
		// reinitialize completionIdentifier
		this.completionScanner.prefix = startWith;
		
		// compute location of the end of the current block
		this.completionScanner.resetTo(from + 1, to);
		this.completionScanner.jumpOverBlock();
		
		this.completionScanner.startRecordingIdentifiers();
		
		MethodDeclaration fakeMethod = this.parser.parseStatementsAfterCompletion(
				from,
				this.completionScanner.startPosition - 1,
				s.compilationUnitScope().referenceContext);
		
		this.completionScanner.stopRecordingIdentifiers();
		
		this.potentialVariableNames = this.completionScanner.potentialVariableNames;
		this.potentialVariableNameStarts = this.completionScanner.potentialVariableNameStarts;
		this.potentialVariableNamesPtr = this.completionScanner.potentialVariableNamesPtr;
		
		this.parentsPtr = -1;
		this.parentsz = new ASTNode[10];
		
		return fakeMethod;
	}

