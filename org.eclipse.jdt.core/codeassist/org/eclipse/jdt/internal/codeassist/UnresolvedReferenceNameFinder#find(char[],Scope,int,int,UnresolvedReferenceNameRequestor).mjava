	private MethodDeclaration find(char[] startWith, Scope s, int from, int to, UnresolvedReferenceNameRequestor nameRequestor) {
		this.requestor = nameRequestor;
		
		// reinitialize completion scanner to be usable as a normal scanner
		this.completionScanner.cursorLocation = 0;
		
		// reinitialize completionIdentifier
		this.completionScanner.prefix = startWith;
		
		// compute location of the end of the current block
		this.completionScanner.resetTo(from + 1, to);
		this.completionScanner.jumpOverBlock();
		
		int blockEnd = this.completionScanner.startPosition - 1;
		
		int maxEnd =
			this.completionScanner.getLineEnd(
					this.completionScanner.getLineNumber(from) + MAX_LINE_COUNT);
		
		int end;
		if (maxEnd < 0) {
			end = blockEnd;
		} else {
			end = maxEnd < blockEnd ? maxEnd : blockEnd;
		}
		
		this.completionScanner.startRecordingIdentifiers();
		
		MethodDeclaration fakeMethod = this.parser.parseStatementsAfterCompletion(
				from,
				end,
				s.compilationUnitScope().referenceContext);
		
		this.completionScanner.stopRecordingIdentifiers();
		
		if(!this.initPotentialNamesTables()) return null;
		
		this.parentsPtr = -1;
		this.parents = new ASTNode[10];
		
		return fakeMethod;
	}

