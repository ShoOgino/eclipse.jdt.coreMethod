	private void findAnonymousType(
		ReferenceBinding currentType,
		TypeBinding[] argTypes,
		Scope scope,
		InvocationSite invocationSite) {

		if (currentType.isInterface()) {
			char[] completion = CharOperation.NO_CHAR;
			// nothing to insert - do not want to replace the existing selector & arguments
			if (this.source == null
				|| this.source.length <= this.endPosition
				|| this.source[this.endPosition] != ')')
				completion = new char[] { ')' };
			int relevance = computeBaseRelevance();
			relevance += computeRelevanceForInterestingProposal();
			
			this.noProposal = false;
			this.requestor.acceptAnonymousType(
				currentType.qualifiedPackageName(),
				currentType.qualifiedSourceName(),
				CharOperation.NO_CHAR_CHAR,
				CharOperation.NO_CHAR_CHAR,
				CharOperation.NO_CHAR_CHAR,
				completion,
				IConstants.AccPublic,
				this.endPosition - this.offset,
				this.endPosition - this.offset,
				relevance);
		} else {
			findConstructors(
				currentType,
				argTypes,
				scope,
				invocationSite,
				true);
		}
	}

