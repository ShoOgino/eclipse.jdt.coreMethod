	private void findMethods(
		char[] selector,
		TypeBinding[] argTypes,
		ReferenceBinding receiverType,
		Scope scope,
		ObjectVector methodsFound,
		boolean onlyStaticMethods,
		boolean exactMatch,
		boolean isCompletingDeclaration,
		InvocationSite invocationSite) {

		if (selector == null)
			return;

		ReferenceBinding currentType = receiverType;
		if (currentType.isInterface()) {
			if(!isCompletingDeclaration){
				findLocalMethods(
					selector,
					argTypes,
					currentType.methods(),
					scope,
					methodsFound,
					onlyStaticMethods,
					exactMatch,
					receiverType,
					invocationSite);
			}

			ReferenceBinding[] itsInterfaces = currentType.superInterfaces();
			if (itsInterfaces != NoSuperInterfaces) {
				ReferenceBinding[][] interfacesToVisit = new ReferenceBinding[5][];
				int lastPosition = 0;
				interfacesToVisit[lastPosition] = itsInterfaces;

				for (int i = 0; i <= lastPosition; i++) {
					ReferenceBinding[] interfaces = interfacesToVisit[i];

					for (int j = 0, length = interfaces.length; j < length; j++) {
						currentType = interfaces[j];

						if ((currentType.tagBits & TagBits.InterfaceVisited) == 0) {
							// if interface as not already been visited
							currentType.tagBits |= TagBits.InterfaceVisited;

							if(isCompletingDeclaration){

								findLocalMethodDeclarations(
									selector,
									currentType.methods(),
									scope,
									methodsFound,
									onlyStaticMethods,
									exactMatch,
									receiverType);

							} else {

								findLocalMethods(
									selector,
									argTypes,
									currentType.methods(),
									scope,
									methodsFound,
									onlyStaticMethods,
									exactMatch,
									receiverType,
									invocationSite);
							}

							itsInterfaces = currentType.superInterfaces();
							if (itsInterfaces != NoSuperInterfaces) {

								if (++lastPosition == interfacesToVisit.length)
									System.arraycopy(
										interfacesToVisit,
										0,
										interfacesToVisit = new ReferenceBinding[lastPosition * 2][],
										0,
										lastPosition);
								interfacesToVisit[lastPosition] = itsInterfaces;
							}
						}
					}
				}

				// bit reinitialization
				for (int i = 0; i <= lastPosition; i++) {
					ReferenceBinding[] interfaces = interfacesToVisit[i];

					for (int j = 0, length = interfaces.length; j < length; j++){
						interfaces[j].tagBits &= ~TagBits.InterfaceVisited;
					}
				}
			}
			currentType = scope.getJavaLangObject();
		}
		
		if(isCompletingDeclaration && currentType != null)
			currentType = currentType.superclass();
		
		while (currentType != null) {

			if(isCompletingDeclaration){

				findLocalMethodDeclarations(
					selector,
					currentType.methods(),
					scope,
					methodsFound,
					onlyStaticMethods,
					exactMatch,
					receiverType);

			} else{

				findLocalMethods(
					selector,
					argTypes,
					currentType.methods(),
					scope,
					methodsFound,
					onlyStaticMethods,
					exactMatch,
					receiverType,
					invocationSite);
			}
			currentType = currentType.superclass();
		}
	}

