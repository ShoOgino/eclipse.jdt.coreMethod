	private char[][] computeNames(char[] sourceName, boolean forArray){
		char[][] names = new char[5][];
		int nameCount = 0;
		boolean previousIsUpperCase = false;
		for(int i = sourceName.length - 1 ; i >= 0 ; i--){
			boolean isUpperCase = Character.isUpperCase(sourceName[i]);
			if(isUpperCase && !previousIsUpperCase){
				char[] name = CharOperation.subarray(sourceName,i,sourceName.length);
				if(name.length > 1){
					if(nameCount == names.length) {
						System.arraycopy(names, 0, names = new char[nameCount * 2][], 0, nameCount);
					}
					name[0] = Character.toLowerCase(name[0]);
					
					if(forArray) {
						int length = name.length;
						if (name[length-1] == 's'){
							System.arraycopy(name, 0, name = new char[length + 2], 0, length);
							name[length] = 'e';
							name[length+1] = 's';
						} else {
							System.arraycopy(name, 0, name = new char[length + 1], 0, length);
							name[length] = 's';
						}
					}					
					names[nameCount++] = name;
				}
			}
			previousIsUpperCase = isUpperCase;
		}
		if(nameCount == 0){
			char[] name = CharOperation.toLowerCase(sourceName);
			if(forArray) {
				int length = name.length;
				if (name[length-1] == 's'){
					System.arraycopy(name, 0, name = new char[length + 2], 0, length);
					name[length] = 'e';
					name[length+1] = 's';
				} else {
					System.arraycopy(name, 0, name = new char[length + 1], 0, length);
					name[length] = 's';
				}
			}					
			names[nameCount++] = name;
			
		}
		System.arraycopy(names, 0, names = new char[nameCount][], 0, nameCount);
		return names;
	}

