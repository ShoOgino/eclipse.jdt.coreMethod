	public static char[] getSignature(Binding binding) {
		char[] result = null;
		switch(binding.bindingType()) {
			case BindingIds.TYPE:
				TypeBinding typeBinding = (TypeBinding)binding;
				if(typeBinding.isLocalType()) {
					LocalTypeBinding localTypeBinding = (LocalTypeBinding)typeBinding;
					if(localTypeBinding.isAnonymousType()) {
						typeBinding = localTypeBinding.superclass();
					} else {
						localTypeBinding.setConstantPoolName(typeBinding.sourceName());
					}
				}
				result = typeBinding.genericTypeSignature();
				break;
			case BindingIds.METHOD:
				MethodBinding methodBinding = (MethodBinding)binding;
				int oldMod = methodBinding.modifiers;
				//TODO remove the next line when method from binary type will be able to generate generic siganute
				methodBinding.modifiers |= CompilerModifiers.AccGenericSignature;
				result = methodBinding.genericSignature(); 
				if(result == null) {
					result = methodBinding.signature();
				}
				methodBinding.modifiers = oldMod;
				break;
		}
		result = CharOperation.replaceOnCopy(result, '/', '.');
		return result;
	}

