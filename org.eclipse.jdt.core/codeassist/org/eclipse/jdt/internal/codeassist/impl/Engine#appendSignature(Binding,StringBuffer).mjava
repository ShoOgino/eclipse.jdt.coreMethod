	private static void appendSignature(Binding binding, StringBuffer sig) {
		switch(binding.bindingType()) {
			case BindingIds.TYPE:
				if(binding instanceof BaseTypeBinding) {
					BaseTypeBinding baseTypeBinding = (BaseTypeBinding) binding;
					sig.append(baseTypeBinding.constantPoolName());
				} else if(binding instanceof TypeVariableBinding) {
					TypeVariableBinding typeVariableBinding = (TypeVariableBinding) binding;
					sig.append(CharOperation.concat('T', typeVariableBinding.sourceName(), ';'));
				} else if(binding instanceof ParameterizedTypeBinding) {
					ParameterizedTypeBinding parameterizedTypeBinding = (ParameterizedTypeBinding) binding;
					if (parameterizedTypeBinding.isMemberType() && parameterizedTypeBinding.enclosingType().isParameterizedType()) {
						String tmpSig = getSignature(parameterizedTypeBinding.enclosingType());
						sig.append(tmpSig.substring(0, tmpSig.length()-1));
						sig.append('.');
						sig.append(parameterizedTypeBinding.sourceName());
					} else {
						String tmpSig = getSignature(parameterizedTypeBinding.type);
						sig.append(tmpSig.substring(0, tmpSig.length()-1));
					}	   	    
					if (parameterizedTypeBinding.arguments != null) {
					    sig.append('<');
					    for (int i = 0, length = parameterizedTypeBinding.arguments.length; i < length; i++) {
					        appendSignature(parameterizedTypeBinding.arguments[i], sig);
					    }
					    sig.append('>'); //$NON-NLS-1$
					}
					sig.append(';');
				} else {
					TypeBinding typeBinding = (TypeBinding) binding;
					sig.append('L');
					char[] qualifiedPackageName = typeBinding.qualifiedPackageName();
					if(qualifiedPackageName != null && qualifiedPackageName.length > 0) {
						sig.append(typeBinding.qualifiedPackageName());
						sig.append('.');
					}
					sig.append(CharOperation.replaceOnCopy(typeBinding.qualifiedSourceName(), '.', '$'));
					sig.append(';');
				}
				break;
		}
	}

