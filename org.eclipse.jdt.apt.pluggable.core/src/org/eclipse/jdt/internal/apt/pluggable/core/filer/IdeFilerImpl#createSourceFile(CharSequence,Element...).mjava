	/**
	 * @param originatingElements should all be source types; binary types (ie elements in jar files)
	 * will be ignored.
	 * @see javax.annotation.processing.Filer#createSourceFile(java.lang.CharSequence, javax.lang.model.element.Element[])
	 */
	@Override
	public JavaFileObject createSourceFile(CharSequence name, Element... originatingElements)
			throws IOException 
	{
		// Pre-emptively check parameters here, rather than later on when the resource is written and closed.
		if (null == name) {
			throw new IllegalArgumentException("Name is null");
		}
		//TODO: check whether file has already been generated in this run
		Set<IFile> parentFiles = new HashSet<IFile>(originatingElements.length);
		for (Element elem : originatingElements) {
			IFile enclosing = _env.getEnclosingIFile(elem);
			if (null != enclosing) {
				parentFiles.add(enclosing);
			}
		}
		return new IdeOutputJavaFileObject(_env, name, parentFiles);
	}

