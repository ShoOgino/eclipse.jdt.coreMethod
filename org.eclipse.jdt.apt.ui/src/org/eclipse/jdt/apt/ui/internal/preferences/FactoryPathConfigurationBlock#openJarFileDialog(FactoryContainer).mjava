	/**
	 * @param original null, or an existing list entry to be edited
	 * @return a list of additional factory containers to be added
	 */
	private FactoryContainer[] openJarFileDialog(FactoryContainer original) {
		IWorkspaceRoot root= fJProj.getProject().getWorkspace().getRoot();
		IPath[] existingPaths = getExistingPaths(FactoryContainer.FactoryType.WKSPJAR, original);
		if (original == null) {
			IPath[] results= BuildPathDialogAccess.chooseJAREntries(getShell(), fJProj.getPath(), existingPaths);
			if (results == null) {
				return null;
			}
			ArrayList<FactoryContainer> res= new ArrayList<FactoryContainer>();
			for (int i= 0; i < results.length; i++) {
				IResource resource= root.findMember(results[i]);
				if (resource instanceof IFile) {
					res.add(FactoryPath.newWkspJarFactoryContainer(results[i]));
				}
				//TODO: handle missing jars
			}
			return res.toArray(new FactoryContainer[res.size()]);
		}
		else {
			IPath result= BuildPathDialogAccess.configureJAREntry(getShell(), new Path(original.getId()), existingPaths);
			if (result == null) {
				return null;
			}
			IResource resource= root.findMember(result);
			if (resource instanceof IFile) {
				FactoryContainer[] edited = new FactoryContainer[1];
				edited[0]= FactoryPath.newWkspJarFactoryContainer(result);
				return edited;
			}
			//TODO: handle missing jars
			return null;
 		}
	}

