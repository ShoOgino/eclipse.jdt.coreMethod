	/**
	 * If there are changed settings, save them and ask user whether to rebuild.
	 * This is called by performOk() and performApply().
	 * @param container null when called from performApply().
	 * @return false to abort exiting the preference pane.
	 */
	protected boolean processChanges(IWorkbenchPreferenceContainer container) {
		
		boolean projectSpecificnessChanged = false;
		boolean isProjectSpecific= (fProject != null) && fBlockControl.getEnabled();
		if (fOriginallyHadProjectSettings ^ isProjectSpecific) {
			// the project-specificness changed.
			projectSpecificnessChanged= true;
		} else if ((fProject != null) && !isProjectSpecific) {
			// no project specific data, and there never was, and this
			// is a project preferences pane, so nothing could have changed.
			return true;
		}

		if (!projectSpecificnessChanged && !settingsChanged(fLookupOrder[0])) {
			return true;
		}
		
		int response= 1; // "NO" rebuild unless we put up the dialog.
		String[] strings= getFullBuildDialogStrings(fProject == null);
		if (strings != null) {
			MessageDialog dialog= new MessageDialog(
					getShell(), 
					strings[0], 
					null, 
					strings[1], 
					MessageDialog.QUESTION, 
					new String[] { 
						IDialogConstants.YES_LABEL, 
						IDialogConstants.NO_LABEL, 
						IDialogConstants.CANCEL_LABEL 
					}, 
					2);
			response= dialog.open();
		}
		if (response == 0 || response == 1) { // "YES" or "NO" - either way, save.
			saveSettings();
			if (container == null) {
				// we're doing an Apply, so update the reference values.
				cacheOriginalValues();
			}
		}
		if (response == 0) { // "YES", rebuild
			if (container != null) {
				// build after dialog exits
				container.registerUpdateJob(CoreUtility.getBuildJob(fProject));
			} else {
				// build immediately
				CoreUtility.getBuildJob(fProject).schedule();
			}
		} else if (response != 1) { // "CANCEL" - no save, no rebuild.
			return false;
		}
		return true;
	}

