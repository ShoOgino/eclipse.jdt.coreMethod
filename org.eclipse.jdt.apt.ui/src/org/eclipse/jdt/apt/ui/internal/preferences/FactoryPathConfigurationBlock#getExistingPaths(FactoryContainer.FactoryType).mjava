	/**
	 * Get all the containers of a certain type currently on the list.
	 * The format of the returned paths will depend on the container type:
	 * for EXTJAR it will be an absolute path; for WKSPJAR it will be a
	 * path relative to the workspace root; for VARJAR it will be a path
	 * whose first segment is the name of a classpath variable.
	 * @param type may not be PLUGIN
	 * @return an array, possibly empty (but never null)
	 */
	private IPath[] getExistingPaths(FactoryContainer.FactoryType type) {
		if (type == FactoryContainer.FactoryType.PLUGIN) {
			throw new IllegalArgumentException();
		}
		List<FactoryContainer> all = getListContents();
		// find out how many entries there are of this type
		int countType = 0;
		for (FactoryContainer fc : all) {
			if (fc.getType() == type) {
				++countType;
			}
		}
		// create an array of paths, one per entry of this type 
		IPath[] some = new IPath[countType];
		int i = 0;
		for (FactoryContainer fc : all) {
			if (fc.getType() == type) {
				some[i++] = new Path(fc.getId());
			}
		}
		return some;
	}

