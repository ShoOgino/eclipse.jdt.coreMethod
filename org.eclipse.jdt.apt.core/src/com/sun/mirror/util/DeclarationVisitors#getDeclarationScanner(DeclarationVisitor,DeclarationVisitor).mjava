    /**
     * Return a <tt>DeclarationVisitor</tt> that will scan the
     * declaration structure, visiting declarations contained in
     * another declaration.  For example, when visiting a class, the
     * fields, methods, constructors, etc. of the class are also
     * visited.  The order in which the contained declarations are scanned is
     * not specified.
     *
     * <p>The <tt>pre</tt> and <tt>post</tt>
     * <tt>DeclarationVisitor</tt> parameters specify,
     * respectively, the processing the scanner will do before or
     * after visiting the contained declarations.  If only one of pre
     * and post processing is needed, use {@link
     * DeclarationVisitors#NO_OP DeclarationVisitors.NO_OP} for the
     * other parameter.
     * 
     * @param pre visitor representing processing to do before
     * visiting contained declarations.
     *
     * @param post visitor representing processing to do after
     * visiting contained declarations.
     */
    public static DeclarationVisitor getDeclarationScanner(DeclarationVisitor pre,
							   DeclarationVisitor post) {
	return new DeclarationScanner(pre, post);
    }

