	/**
	 * Check integrity of data structures.
	 * @return true always, so that it can be called within an assert to turn it off at runtime
	 */
	private synchronized boolean checkIntegrity() throws IllegalStateException
	{
		if (ENABLE_INTEGRITY_CHECKS) {
			// Every working copy in the working copy dependency map should be
			// in the
			// _workingCopies list and should not be in the _hiddenBuiltTypes
			// list.
			for (ICompilationUnit wc : _parentToGenWorkingCopies.getValueSet()) {
				if (!_workingCopies.containsValue(wc)) {
					String s = "Dependency map contains a working copy that is not in the regular list: " + //$NON-NLS-1$
							wc.getElementName();
					AptPlugin.log(new IllegalStateException(s), s);
				}
				if (_hiddenBuiltTypes.containsValue(wc)) {
					String s = "Dependency map contains a working copy that is on the hidden list: " + //$NON-NLS-1$
							wc.getElementName();
					AptPlugin.log(new IllegalStateException(s), s);
				}
			}
			// Every entry in the hidden type list should be a working copy
			for (ICompilationUnit hidden : _hiddenBuiltTypes.values()) {
				if (!hidden.isWorkingCopy()) {
					String s = "Hidden list contains a compilation unit that is not a working copy: " + //$NON-NLS-1$
							hidden.getElementName();
					AptPlugin.log(new IllegalStateException(s), s);
				}
			}
		}
		return true;
	}

