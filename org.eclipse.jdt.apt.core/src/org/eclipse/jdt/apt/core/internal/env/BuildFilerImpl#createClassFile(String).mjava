    @Override
	public OutputStream createClassFile(String typeName) throws IOException
    {
    	if (typeName == null)
    		throw new IllegalArgumentException("Type name cannot be null"); //$NON-NLS-1$
    	if ("".equals(typeName)) //$NON-NLS-1$
    		throw new IllegalArgumentException("Type name cannot be empty"); //$NON-NLS-1$

    	_env.checkValid();
    	try {
			_env.validateTypeName(typeName);
		} catch (CoreException e) {
			throw new IOException(e);
		}
		_generatedClassFiles = true;

		// We do not want to write to disk during reconcile
		if (_env.getPhase() == Phase.RECONCILE) {
			return new NoOpOutputStream();
		}

    	GeneratedSourceFolderManager gsfm = _env.getAptProject().getGeneratedSourceFolderManager(_env.isTestCode());
    	IPath path;
    	try
    	{
    		 path = gsfm.getBinaryOutputLocation();
    	}
    	catch ( Exception e )
    	{
    		// TODO - stop throwing this exception
    		AptPlugin.log(e, "Failure getting the output file"); //$NON-NLS-1$
    		throw new IOException(e);
    	}

    	path = path.append(typeName.replace('.', File.separatorChar) + ".class"); //$NON-NLS-1$

        IFile file = getEnv().getProject().getFile(path);
        return new BinaryFileOutputStream(file, _env);
    }

