    /**
     * @return the binding correspond to the given type.
     *         Return null if the type is an error marker.
     * @throws NonEclipseImplementationException
     */

    public static ITypeBinding getTypeBinding(TypeMirror type)
        throws NonEclipseImplementationException
    {	
        if(type == null ) return null;
        if( type instanceof EclipseMirrorImpl ){
            final EclipseMirrorImpl impl = (EclipseMirrorImpl)type;
            switch(impl.kind() )
            {
                case TYPE_PRIMITIVE: return ((PrimitiveTypeImpl)type).getTypeBinding();
                case TYPE_VOID:  	 return VoidTypeImpl.VOID_TYPE_BINDING;
                case TYPE_ERROR: 	 return null;
                case TYPE_ARRAY: 	 return ((ArrayTypeImpl)type).getArrayBinding();
                case TYPE_WILDCARD:  return ((WildcardTypeImpl)type).getWildcardBinding();
                default: return ((TypeDeclarationImpl)type).getTypeBinding();
            }
        }

        throw new NonEclipseImplementationException("only applicable to eclipse type system objects." +
                                                    " Found " + type.getClass().getName());
    }

