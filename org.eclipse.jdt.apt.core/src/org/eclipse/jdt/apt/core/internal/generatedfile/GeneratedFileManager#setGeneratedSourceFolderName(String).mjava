	/**
	 * Sets the name of the generated soruce folder.  The source folder will not be created 
	 * and will not be added to the project's source paths (i.e., after a call to
	 * setGeneratedSourceFolderName, isGeneratedSourceFolderConfigured() will return false.)  
	 * To properly have the new generated source folder configured, call #ensureGeneratedSourceFolder(). 
	 * 
	 * @param s The string name of the new generated source folder.  This should be relative 
	 * to the project root.  Absolute paths are not supported.  The specified string should be 
	 * a valid folder name for the file system, and should not be an existing source folder for the 
	 * project.  
	 * 
	 * @see #getGeneratedSourceFolder()
	 * @see #getGeneratedSourceFolderName()
	 * @see #isGeneratedSourceFolderConfigured()
	 */
	private void setGeneratedSourceFolderName( String s ) 
	{
		// bail if they specify null, empty-string or don't change the name of the source folder
		if ( s == null || s.length() == 0 || s.equals( getGeneratedSourceFolderName() ) )
			return;
		
		projectClean( true );

		IFolder srcFolder;
		synchronized ( this )
		{
			// We are not going to delete any directories or change the classpath
			// since this could happen during a build. 
			// see ensureGeneratedSourceFolder() 
			_generatedSourceFolderName = s;
			// save _generatedSrcFolder off to avoid race conditions
			srcFolder = _generatedSourceFolder;
		}
		
		// delete generatedSourceFolder
		if( srcFolder == null )
			ensureGeneratedSourceFolder(null);
	}

