    	@Override
		public void preVisit(ASTNode node)
    	{
    		final int startingOffset = node.getStartPosition();
    		final int endingOffset = startingOffset + node.getLength();
    		// starting offset is inclusive
    		int startIndex = Arrays.binarySearch(_sortedStartingOffset, startingOffset);
    		// ending offset is exclusive
    		int endIndex = Arrays.binarySearch(_sortedStartingOffset, endingOffset);
    		if( startIndex < 0 )
    			startIndex = - startIndex - 1;
    		if( endIndex < 0 )
    			endIndex = - endIndex - 1;
    		else
    			// endIndex needs to be exclusive and we want to
    			// include the 'endIndex'th entry in our computation.
    			endIndex ++;
    		if( startIndex >= _sortedStartingOffset.length )
    			return;

    		for( int i=startIndex; i<endIndex; i++ ){
    			if( _endingOffsets[i] == 0 )
    				_endingOffsets[i] = endingOffset;
    			else if( endingOffset < _endingOffsets[i] )
    				_endingOffsets[i] = endingOffset;
    		}
    	}

