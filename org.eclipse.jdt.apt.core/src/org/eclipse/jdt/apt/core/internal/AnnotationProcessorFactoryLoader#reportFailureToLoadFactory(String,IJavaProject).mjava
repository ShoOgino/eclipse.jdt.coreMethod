	/** 
	 * Enter a marker for a factory class that could not be loaded.
	 * Note that if a jar is missing, we won't be able to load its factory
	 * names, and thus we won't even try loading its factory classes; but
	 * we can still fail to load a factory class if, for instance, the
	 * jar is corrupted or the factory constructor throws an exception.  
	 * See class comments for information about the lifecycle of these markers.
	 * @param factoryName the fully qualified class name of the factory
	 * @param jproj must not be null
	 */
	private void reportFailureToLoadFactory(String factoryName, IJavaProject jproj) {
		IProject project = jproj.getProject();
		try {
			String message = Messages.bind(
					Messages.AnnotationProcessorFactoryLoader_unableToLoadFactoryClass, 
					new String[] {factoryName, project.getName()});
			IMarker marker = project.createMarker(AptPlugin.APT_BUILD_PROBLEM_MARKER);
			marker.setAttributes(
					new String[] {
						IMarker.MESSAGE, 
						IMarker.SEVERITY,
						IMarker.LOCATION
					},
					new Object[] {
						message,
						IStatus.ERROR,
						Messages.AnnotationProcessorFactoryLoader_factorypath
					}
				);
		} catch (CoreException e) {
			AptPlugin.log(e, "Unable to create build problem marker"); //$NON-NLS-1$
		}
	}

