    public TypeMirror getErasure(TypeMirror t)
    {
        if( t == null ) return null;
        
        if(t instanceof EclipseMirrorImpl){
            final EclipseMirrorImpl impl = (EclipseMirrorImpl)t;
            final ITypeBinding binding;
            switch( impl.kind() )
            {
                case TYPE_PRIMITIVE:
                case TYPE_VOID:
                case TYPE_ERROR:
                    return t;
                case TYPE_ARRAY:
                    binding = ((ArrayTypeImpl)t).getArrayBinding();
                    break;
                case TYPE_WILDCARD:
                    binding = ((WildcardTypeImpl)t).getWildcardBinding();                   
                    break;
                default:
                    binding = ((TypeDeclarationImpl)t).getTypeBinding();
            }
            final ITypeBinding erasure = binding.getErasure();
            if( erasure == binding ) return t;
            TypeMirror m_erasure = Factory.createTypeMirror(erasure, impl.getEnvironment() );
            if( m_erasure == null )
                return Factory.createErrorClassType(erasure);
            return m_erasure;
        }

        throw new NonEclipseImplementationException("only applicable to eclipse type system objects." +
                                                    " Found " + t.getClass().getName());
    }

