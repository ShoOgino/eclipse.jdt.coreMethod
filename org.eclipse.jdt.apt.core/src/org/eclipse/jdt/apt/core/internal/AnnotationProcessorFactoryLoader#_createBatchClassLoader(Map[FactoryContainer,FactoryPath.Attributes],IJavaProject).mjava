	/**
	 * Returns the batch class loader or null if none
	 */
	private ClassLoader _createBatchClassLoader(Map<FactoryContainer, FactoryPath.Attributes> containers,
			IJavaProject p) {		
		ArrayList<File> fileList = new ArrayList<File>( containers.size() );
		for (Map.Entry<FactoryContainer, FactoryPath.Attributes> entry : containers.entrySet()) {
			FactoryPath.Attributes attr = entry.getValue();
			FactoryContainer fc = entry.getKey();
			if (attr.runInBatchMode() && fc instanceof JarFactoryContainer) {
				
				JarFactoryContainer jfc = (JarFactoryContainer)fc;
				File f = jfc.getJarFile();
				fileList.add( f );
				
			}
		}
		
		ClassLoader result = null;
		// Try to use the iterative CL as parent, so we can resolve classes within it
		synchronized (cacheMutex) {
			ClassLoader parentCL = _iterativeLoaders.get(p);
			if (parentCL == null) {
				parentCL = getParentClassLoader();
			}
			
			if ( fileList.size() > 0 ) {
				result = createClassLoader( fileList, parentCL);
				_batchLoaders.put(p, result);
			}
		}
		return result;
	}

