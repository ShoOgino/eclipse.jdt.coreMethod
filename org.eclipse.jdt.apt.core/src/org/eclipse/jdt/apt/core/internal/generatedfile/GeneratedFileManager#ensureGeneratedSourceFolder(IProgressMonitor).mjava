	/**
	 *  Creates the generated source folder if it doesn't exist, and adds it as a source path
	 *  to the project.  To access the generated source folder, but not have it be created
	 *  or added as a source path, use getGeneratedSourceFolder().  Note that this method 
	 *  will take a resource lock if the generated source folder needs to be created on disk, 
	 *  and it will take a java model lock if the project's source paths need to be updated.
	 *  Care should be taken when calling this method to ensure that locking behavior is correct.    
	 *  
	 *  @param progressMonitor the progress monitor.  This can be null. 
	 *  
	 *  @return true if the generatedSourceFolder is added to the project's classpath entries,
	 *  false if it is not added to the project's classpath entries.  
	 *  
	 *  @see #getGeneratedSourceFolder()
	 *  @see #isGeneratedSourceFolderConfigured()
	 */
	public boolean ensureGeneratedSourceFolder( IProgressMonitor progressMonitor )
		throws CoreException
	{
		synchronized( this )
		{
			if ( _generatedSourceFolder != null )
				return false;
		}
		
		// don't take any locks in while creating the folder, since we are doing file-system operations
		IFolder srcFolder = getGeneratedSourceFolder();
		srcFolder.refreshLocal( IResource.DEPTH_INFINITE, progressMonitor );
		if (!srcFolder.exists())
			srcFolder.create(true, false, progressMonitor );
			
		//
		// make sure __generated_src dir is on the cp if not already
		//
		boolean addedToSourcePath = updateProjectClasspath( _javaProject, srcFolder, progressMonitor );
		
		synchronized ( this )
		{
			_generatedSourceFolder = srcFolder;
			return addedToSourcePath;
		}
	}

