    public static TypeDeclarationImpl createReferenceType(ITypeBinding binding, BaseProcessorEnv env)
    {
        if(binding == null || binding.isNullType()) return null;
        // "Recovered" bindings are bindings to unresolved types.  The type itself may be considered
        // to exist (as an ErrorType) but there is no declaration.
        if (binding.isRecovered()) return null;

        TypeDeclarationImpl mirror = null;
        // must test for annotation type before interface since annotation
        // is an interface
        if( binding.isAnnotation() )
            mirror = new AnnotationDeclarationImpl(binding, env);
        else if (binding.isInterface() )
            mirror = new InterfaceDeclarationImpl(binding, env);
        // must test for enum first since enum is also a class.
        else if( binding.isEnum() )
        	mirror = new EnumDeclarationImpl(binding, env);
        else if( binding.isClass() )
            mirror = new ClassDeclarationImpl(binding, env);
        else
            throw new IllegalStateException("cannot create type declaration from " + binding); //$NON-NLS-1$

        return mirror;
    }

