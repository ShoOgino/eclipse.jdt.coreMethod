    private TypeDeclaration getTypeDeclarationInBatch(String name)
    {	
    	if( name == null || _astRoots == null ) return null;
		// get rid of the generics parts.
		final int index = name.indexOf('<');
		if( index != -1 )
			name = name.substring(0, index);
		
		// first see if it is one of the well known types.
		// any AST is as good as the other.
		ITypeBinding typeBinding = null;
		String typeKey = BindingKey.createTypeBindingKey(name);
		if( _astRoots.length > 0 ){
			_astRoots[0].getAST().resolveWellKnownType(name);
			
			if(typeBinding == null){
				// then look into the current compilation units			
				ASTNode node = null;
				for( int i=0, len=_astRoots.length; i<len; i++ )
					node = _astRoots[i].findDeclaringNode(typeKey);			
				if( node != null ){
					final int nodeType = node.getNodeType();
					if( nodeType == ASTNode.TYPE_DECLARATION ||
						nodeType == ASTNode.ANNOTATION_TYPE_DECLARATION ||
						nodeType == ASTNode.ENUM_DECLARATION )
					typeBinding = ((AbstractTypeDeclaration)node).resolveBinding();
				}
			}
			if( typeBinding != null )
				return Factory.createReferenceType(typeBinding, this);
		}

		// finally go search for it in the universe.
		typeBinding = getTypeDefinitionBindingFromName(name);
		if( typeBinding != null ){			
			return Factory.createReferenceType(typeBinding, this);
		}

		return null;
    }  

