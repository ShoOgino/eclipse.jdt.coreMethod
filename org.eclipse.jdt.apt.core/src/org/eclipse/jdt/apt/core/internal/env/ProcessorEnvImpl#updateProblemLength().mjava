    /**
     * Determine the ending offset of any problems on the current resource that doesn't have one by
     * traversing the ast for the. We will only walk the ast once to determine the ending 
     * offsets of all the marker infos that do not have the information set.
     */
    private void updateProblemLength()
    {
    	// for those markers that doesn't have an ending offset, figure it out by
    	// traversing the ast.
    	// we do it once just before we post the marker so we only have to walk the ast 
    	// once.
    	int count = 0;
    	for( Map.Entry<IFile, List<IProblem>> entry : _allProblems.entrySet() ){  
    		if( _file.equals(entry.getKey()) ){
    			for(IProblem problem : entry.getValue() ){
    				if( problem.getSourceEnd() == -1 )
    					count ++;
    			}    				
    		}
    		else{
    			for(IProblem problem : entry.getValue() ){
    				if( problem.getSourceEnd() < problem.getSourceStart() )
    					problem.setSourceEnd(problem.getSourceStart());
    			}
    		}
    	}
    	if( count > 0 ){
	    	final int[] startingOffsets = new int[count];
	    	int index = 0;
	    	
	    	for( Map.Entry<IFile, List<IProblem>> entry : _allProblems.entrySet() ){  
	    		if( entry.getKey() == _file ){
	    			for(IProblem problem : entry.getValue() ){
	    				if( problem.getSourceEnd() == -1 )
	    					startingOffsets[index++] = problem.getSourceStart();
	    			}    				
	    		}
	    	}
	    	
	    	final EndingOffsetFinder lfinder = new EndingOffsetFinder(startingOffsets);
	    	_astCompilationUnit.accept( lfinder );
	    	
	    	for( Map.Entry<IFile, List<IProblem>> entry : _allProblems.entrySet() ){  
	    		if( _file.equals(entry.getKey()) ){
	    			for(IProblem problem : entry.getValue() ){
	    				if( problem.getSourceEnd() == -1 ){
	    					int startingOffset = problem.getSourceStart();
	    					int endingOffset = lfinder.getEndingOffset(startingOffset);
	    	    			if( endingOffset == 0 )
	    	    				endingOffset = startingOffset;
	    	    			problem.setSourceEnd(endingOffset);	    	    			
	    				}
	    			}    				
	    		}
	    	}
    	}
    }

