	/**
	 * 
	 * @param parentFile
	 * @param typeName
	 * @param contents
	 * @param progressMonitor
	 * @param charsetName
	 * @return - the newly created IFile
	 * @throws CoreException
	 * @throws UnsupportedEncodingException
	 */
	public IFile generateFileDuringBuild(
			IFile parentFile,
			IProject project,
			String typeName, 
			String contents, 
			IProgressMonitor progressMonitor,
			String charsetName ) 
		throws CoreException, UnsupportedEncodingException
	{
		try
		{		

		// create folder for generated source files
		IFolder folder = project.getFolder( GENERATED_SOURCE_FOLDER_NAME );
		if (!folder.exists())
			folder.create(true, false, null);

		// split the type name into its parts
		String[] parts = typeName.split( "\\.");

		//  create folders for the package parts
		int i = 0;
		for ( ;i < parts.length - 1; i++ )
		{
			folder = folder.getFolder( parts[i] );
			if ( !folder.exists() )
				folder.create( true, false, null );
		}
		
		String fileName = parts[i] + ".java";		
		IFile file = folder.getFile( fileName );

		byte[] bytes;
		if ( charsetName == null || charsetName == "" )
			bytes = contents.getBytes();
		else
			bytes = contents.getBytes( charsetName );
		InputStream is = new ByteArrayInputStream( bytes );
		
		if ( !file.exists() )
		{
			file.create( is, true, progressMonitor );
		}
		else
		{
			makeReadOnly( file, false );
			file.setContents( is, true, true, progressMonitor );
		}
		
		file.setDerived( true );
		
		makeReadOnly( file, true );
		
		updateFileMaps( typeName, parentFile, file );
		return file;
		}
		catch ( Throwable t )
		{
			t.printStackTrace();
		}
		
		return null;
	}

