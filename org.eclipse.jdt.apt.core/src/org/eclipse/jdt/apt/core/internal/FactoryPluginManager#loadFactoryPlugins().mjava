    /**
	 * Discover and instantiate annotation processor factories by searching for plugins
	 * which contribute to org.eclipse.jdt.apt.core.annotationProcessorFactory.
	 * The first time this method is called, it will load all the plugin factories.
	 * Subsequent calls will be ignored.
	 */
	private static synchronized void loadFactoryPlugins() {
		if (mapsInitialized) {
			return;
		}
		IExtensionPoint extensionPoint = Platform.getExtensionRegistry().getExtensionPoint(
				AptPlugin.PLUGIN_ID, // name of plugin that exposes this extension point
				"annotationProcessorFactory"); //$NON-NLS-1$ - extension id

		// Iterate over all declared extensions of this extension point.
		// A single plugin may extend the extension point more than once, although it's not recommended.
		for (IExtension extension : extensionPoint.getExtensions())
		{
			// Iterate over the children of the extension to find one named "factories".
			for(IConfigurationElement factories : extension.getConfigurationElements())
			{
				if ("factories".equals(factories.getName())) { //$NON-NLS-1$ - name of configElement
					loadJava5Factories(extension, factories);
				}
				else if ("java6processors".equals(factories.getName())) { //$NON-NLS-1$ - name of configElement
					loadJava6Factories(extension, factories);
				}

			}
		}
		mapsInitialized = true;
	}

