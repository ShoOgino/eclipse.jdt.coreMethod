    public void close()
    {
        try
        {
            String contents = _sw.toString();
            super.close();
            GeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager(_env.getProject());
            Phase phase = _env.getPhase();
		
            if ( phase == Phase.RECONCILE )
            {
            	ICompilationUnit parentCompilationUnit = _env.getCompilationUnit();
                FileGenerationResult result  = gfm.generateFileDuringReconcile( 
                    parentCompilationUnit, _typeName, contents, parentCompilationUnit.getOwner(), null, null );
				if ( result != null )
					_env.addGeneratedFile(result.getFile(), result.isModified());
            }
            else if ( phase == Phase.BUILD)	
            {
				FileGenerationResult result = gfm.generateFileDuringBuild( _env.getFile(), _env.getJavaProject(), _typeName, contents, null /* progress monitor */, _charsetName );
				_env.addGeneratedFile( result.getFile(), result.isModified());
            }
            else
            {
                assert false : "Unexpected phase value: " + phase ; //$NON-NLS-1$
            }
        }
        catch ( JavaModelException jme )
        {
            // TODO:  handle this exception in a nicer way.
            AptPlugin.log(jme, "Unexpected failure closing the JavaSourceFilePrintWriter"); //$NON-NLS-1$
            throw new RuntimeException( jme );
        }
        catch ( CoreException ce )
        {
            // TODO:  handle this exception
            AptPlugin.log(ce, "Unexpected failure closing the JavaSourceFilePrintWriter"); //$NON-NLS-1$
            throw new RuntimeException( ce );
        }
        catch( UnsupportedEncodingException use )
        {
        	AptPlugin.log(use, "Could not encode"); //$NON-NLS-1$
        	// TODO: handle this exception
        	throw new RuntimeException( use );
        }
    }

