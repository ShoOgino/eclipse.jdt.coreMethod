    void postMarkers()
    {
    	// for those markers that doesn't have an ending offset, figure it out by
    	// traversing the ast.
    	// we do it once just before we post the marker so we only have to walk the ast 
    	// once.
    	int count = 0;
    	for( MarkerInfo markerInfo : _markerInfos ){    		
    		if( markerInfo._markerAttrs.get(IMarker.CHAR_END) == null ) 
    			count ++;
    	}
    	if( count > 0 ){
	    	final int[] startingOffsets = new int[count];
	    	int index = 0;
	    	for( MarkerInfo markerInfo : _markerInfos ){    		
	    		if( markerInfo._markerAttrs.get(IMarker.CHAR_END) == null ){
	    			final Integer startingOffset = (Integer)markerInfo._markerAttrs.get(IMarker.CHAR_START);
	    			startingOffsets[index++] = startingOffset.intValue();
	    		}
	    	}
	    	
	    	final EndingOffsetFinder lfinder = new EndingOffsetFinder(startingOffsets);
	    	_astCompilationUnit.accept( lfinder );
	    	
	    	for( MarkerInfo markerInfo : _markerInfos ){    		
	    		if( markerInfo._markerAttrs.get(IMarker.CHAR_END) == null ){
	    			final int startingOffset = 
	    				((Integer)markerInfo._markerAttrs.get(IMarker.CHAR_START)).intValue();
	    			int endingOffset = lfinder.getEndingOffset(startingOffset);
	    			if( endingOffset == 0 )
	    				endingOffset = startingOffset;
	    			markerInfo._markerAttrs.put(IMarker.CHAR_END, endingOffset);
	    		}
	    	}
    	}
    	
		// Posting all the markers to the workspace. Doing this in a batch process
		// to minimize the amount of notification.
		try{
			// the resource of the compilation unit in the environment.
			final IResource currentResource = _file; 
	        final IWorkspaceRunnable runnable = new IWorkspaceRunnable(){
	            public void run(IProgressMonitor monitor)
	            {	            
					final String markerType = _phase == Phase.RECONCILE ?
											  RECONCILE_MARKER : BUILD_MARKER;				
	                for( MarkerInfo markerInfo : _markerInfos ){
	                    IResource resource = markerInfo._resource;
						if( resource == null )
							resource = currentResource;
						try{
		                    final IMarker marker = resource.createMarker(markerType);
		                    marker.setAttributes(markerInfo._markerAttrs);
						}
						catch(CoreException e){
							throw new IllegalStateException(e);
						}
	                }
	            };
	        };
			currentResource.getWorkspace().run(runnable, currentResource, IWorkspace.AVOID_UPDATE, null );

		}
		catch(CoreException e){
			throw new IllegalStateException(e);
		}
		finally{
			_markerInfos.clear();
		}
    }

