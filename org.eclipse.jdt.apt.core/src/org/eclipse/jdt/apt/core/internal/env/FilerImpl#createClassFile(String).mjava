    /**  
     * Creates a new class file, and returns a stream for writing to it. The 
     * file's name and path (relative to the root of all newly created class 
     * files) is based on the name of the type being written. 
     *  
     * @param name - canonical (fully qualified) name of the type being written 
     * @return -a stream for writing to the new file 
     */
    public OutputStream createClassFile(String name) throws IOException 
    {
    	_env.checkValid();
		_generatedClassFiles = true;
    	GeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager( _env.getProject() );
    	File f = null;
    	
    	try 
    	{
    		f = gfm.getGeneratedSourceFolderOutputLocation();
    	}
    	catch ( Exception e )
    	{
    		// TODO - stop throwing this exception
    		AptPlugin.log(e, "Failure getting the output file"); //$NON-NLS-1$
    		throw new IOException();
    	}
    	
    	f = new File( f, name.replace( '.', File.separatorChar ) + ".class" ); //$NON-NLS-1$
  
        // REVIEW: for no apparent reason it is sometimes necessary to create the
        // parent dir, else an IOException occurs creating f..
        File p = f.getParentFile();
        FileSystemUtil.mkdirs( p );
    	
        return new FileOutputStream( f );
    }

