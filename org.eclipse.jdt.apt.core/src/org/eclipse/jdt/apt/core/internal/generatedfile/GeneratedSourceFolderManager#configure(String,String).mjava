	/**
	 * Sets the name of the generated soruce folder.  The source folder will not be created 
	 * and will not be added to the project's source paths.  If there is an existing source
	 * folder, it will be deleted.
	 * To properly have the new generated source folder configured, call #ensureGeneratedSourceFolder(). 
	 * 
	 * @param newValue The string name of the new generated source folder.  This should be relative 
	 * to the project root.  Absolute paths are not supported.  The specified string should be 
	 * a valid folder name for the file system, and should not be an existing source folder for the 
	 * project.  
	 * 
	 * @see #getFolder()
	 * @see #getFolderName()
	 */
	private void configure( String newValue, String oldValue ) 
	{
		
		// bail if they specify null, empty-string or don't change the name of the source folder
		if ( newValue == null || 
			 newValue.length() == 0 || 
			 newValue.equals(oldValue) )
			return;
		
		_aptProject.projectClean( true );

		IFolder srcFolder = null;
		synchronized ( this )
		{
			_generatedSourceFolderName = newValue;
			srcFolder = _generatedSourceFolder;
		}
		
		// if the preference change occur before we actually
		// initialized the _generatedSourceFolder. 
		// This may happen when the pre-processor resource change event occurs after
		// the preference change event.
		if( oldValue != null && srcFolder == null ){
			srcFolder = _aptProject.getJavaProject().getProject().getFolder( oldValue );
		}
		
		resetGeneratedSrcFolder(srcFolder, true);		
	}

