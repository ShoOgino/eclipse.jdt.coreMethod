	private APTResult runAPT(
			final Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories,
			final ProcessorEnvImpl processorEnv,
			final List<IFile> filesWithMissingType,
			final List<ICompilationUnit> unitsForFiles,
			final int internalRound) 
	{
		try {
			if (factories.size() == 0)
			{
				if ( AptPlugin.DEBUG ) 
					trace( "runAPT: leaving early because there are no factories", //$NON-NLS-1$ 
							processorEnv );
				return EMPTY_APT_RESULT;
			}
		
			final IFile[] files = processorEnv.getFiles();
			GeneratedFileManager gfm = _aptProject.getGeneratedFileManager();
			final Map<IFile,Set<IFile>> lastGeneratedFiles = new HashMap<IFile,Set<IFile>>();
			for( IFile parentIFile : files ){
				lastGeneratedFiles.put(parentIFile, gfm.getGeneratedFilesForParent(parentIFile));
			}
			
			boolean mixedModeDispatch = shouldDispatchToBatchProcessor(factories, processorEnv);
			final Set<AnnotationProcessorFactory> currentRoundDispatchedBatchFactories;
			if( mixedModeDispatch ){
				currentRoundDispatchedBatchFactories = new LinkedHashSet<AnnotationProcessorFactory>();
				runAPTInMixedMode(factories, currentRoundDispatchedBatchFactories, processorEnv, filesWithMissingType, unitsForFiles, internalRound);
			}
			else{
				currentRoundDispatchedBatchFactories = Collections.emptySet();
				runAPTInFileBasedMode(factories, processorEnv, filesWithMissingType, unitsForFiles);
			}
			

			// notify the processor listeners
			final Set<AnnotationProcessorListener> listeners = processorEnv
					.getProcessorListeners();
			for (AnnotationProcessorListener listener : listeners) {
				EclipseRoundCompleteEvent event = null;
				if (listener instanceof RoundCompleteListener) {
					if (event == null)
						event = new EclipseRoundCompleteEvent(processorEnv);
					final RoundCompleteListener rcListener = (RoundCompleteListener) listener;
					rcListener.roundComplete(event);
				}
			}

			final Map<IFile, Set<IFile>> allGeneratedFiles = processorEnv.getAllGeneratedFiles();
			final Set<IFile> modifiedGeneratedFiles = processorEnv.getModifiedGeneratedFiles();
			
			// any files that were generated for this parent on the last
			// run, but are no longer generated should be removed
			
			// BUGZILLA 103183 - reconcile-path disabled until type-generation in reconcile is turned on
			Set<IFile> allDeletedFiles = new HashSet<IFile>();
			for( IFile file : files ){
				Set<IFile> generatedFiles = allGeneratedFiles.get(file);
				if (generatedFiles == null)
					generatedFiles = Collections.emptySet();
				final Set<IFile> deletedFiles = cleanupNoLongerGeneratedFiles( 
							file, 
							processorEnv.getCompilationUnit(), 
							lastGeneratedFiles.get(file), 
							generatedFiles, 
							gfm,
							processorEnv);
				if(deletedFiles != null )
					allDeletedFiles.addAll(deletedFiles);		
			}		
			
			APTResult result = new APTResult( modifiedGeneratedFiles, 
											  allDeletedFiles, 
											  currentRoundDispatchedBatchFactories,
											  processorEnv.getTypeDependencies(), 
											  processorEnv.getProblems(), 
											  processorEnv.hasGeneratedClassFiles() || processorEnv.hasGeneratedSourceFiles());
			processorEnv.close();
			return result;

			// log unclaimed annotations.
		} catch (Throwable t) {
			AptPlugin.log(t, "Unexpected failure running APT on the file(s): " + getFileNamesForPrinting(processorEnv)); //$NON-NLS-1$
		}
		return EMPTY_APT_RESULT;
	}

