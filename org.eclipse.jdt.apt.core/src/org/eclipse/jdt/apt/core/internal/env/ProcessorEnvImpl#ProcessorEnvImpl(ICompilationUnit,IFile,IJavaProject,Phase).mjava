	private ProcessorEnvImpl(ICompilationUnit compilationUnit, IFile file, IJavaProject javaProj, Phase phase)
    {
		// if we are in reconcile, file will be null & compilationUnit will be valid
		// if we are in build, file will not be null & compilationUnit will be null
        assert ( phase == Phase.RECONCILE && compilationUnit != null && file == null ) || ( phase == Phase.BUILD && compilationUnit == null && file != null ) : "Unexpected phase value.  Use Phase.RECONCILE instead of " + phase;

        _phase = phase;
        
        String unitName = null;
		if ( compilationUnit != null )
		{
			unitName = compilationUnit.getResource().getProjectRelativePath().toString();
	        _compilationUnit = compilationUnit;
			_file = (IFile)compilationUnit.getResource();
			_source = null;
		}
		else
		{
			unitName = file.getProjectRelativePath().toString();	
			_compilationUnit = null;
			_file = file;
			char[] source = null;
			try
			{
				source = getFileContents( file );
			}
			catch( Exception e )
			{
				AptPlugin.log(e, "Failure constructing processor environment");
				// TODO:  propagate these exceptions out of APTDispatch
			}
			_source = source;
			assert _source != null : "missing source";
		}

		assert ( _source == null && _compilationUnit != null ) || ( _source != null && _compilationUnit == null ) : "Unexpected values for _compilationUnit and _source!";
		ASTNode node = createDietAST( unitName, javaProj, _compilationUnit, _source );
		_astCompilationUnit = (org.eclipse.jdt.core.dom.CompilationUnit) node;

		_javaProject = javaProj;
        _modelCompUnit2astCompUnit = new HashMap<ICompilationUnit, CompilationUnit>();
		_typeBinding2ModelCompUnit = new HashMap<ITypeBinding, ICompilationUnit>();
		_allProblems = new HashMap<IFile, List<IProblem>>(4);        
		_filer = new FilerImpl(this);
		initPrimitives(_javaProject);
		initOptions(_javaProject);
    }

