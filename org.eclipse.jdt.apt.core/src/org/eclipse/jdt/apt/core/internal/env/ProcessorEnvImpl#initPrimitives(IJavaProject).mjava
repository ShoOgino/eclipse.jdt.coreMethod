	private void initPrimitives(final IJavaProject project)
	{
		if(_primitives != null ) return;
		_primitives = new PrimitiveTypeImpl[8];
		class PrimitiveBindingRequestor extends ASTRequestor
		{	
			public void acceptBinding(String bindingKey, IBinding binding)
			{
				if( binding.getKind() == IBinding.TYPE ){
					if( "boolean".equals(binding.getName()) )
						_primitives[0] = new PrimitiveTypeImpl( (ITypeBinding)binding );
					else if( "byte".equals(binding.getName()) )
						_primitives[1] = new PrimitiveTypeImpl( (ITypeBinding)binding );
					else if( "char".equals(binding.getName()) )
						_primitives[2] = new PrimitiveTypeImpl( (ITypeBinding)binding );
					else if( "double".equals(binding.getName()) )
						_primitives[3] = new PrimitiveTypeImpl( (ITypeBinding)binding );
					else if( "float".equals(binding.getName()) )
						_primitives[4] = new PrimitiveTypeImpl( (ITypeBinding)binding );
					else if( "int".equals(binding.getName()) )
						_primitives[5] = new PrimitiveTypeImpl( (ITypeBinding)binding );
					else if( "long".equals(binding.getName()) )
						_primitives[6] = new PrimitiveTypeImpl( (ITypeBinding)binding );
					else if( "short".equals(binding.getName()) )
						_primitives[7] = new PrimitiveTypeImpl( (ITypeBinding)binding );
					else if( "void".equals(binding.getName()) )
						_voidType = new VoidTypeImpl( (ITypeBinding)binding );
					else
						System.err.println("got unexpected type " + binding.getName());
				}
				else
					System.err.println("got unexpected binding " + binding.getClass().getName() + binding );
			}
		}
		
		final String[] keys = { BindingKey.createTypeBindingKey("boolean"),
				BindingKey.createTypeBindingKey("byte"),
				BindingKey.createTypeBindingKey("char"),
				BindingKey.createTypeBindingKey("double"),
				BindingKey.createTypeBindingKey("float"),
				BindingKey.createTypeBindingKey("int"),
				BindingKey.createTypeBindingKey("long"),
				BindingKey.createTypeBindingKey("short"), 
				BindingKey.createTypeBindingKey("void")};
		
		final PrimitiveBindingRequestor requestor = new PrimitiveBindingRequestor();
		final ASTParser parser = ASTParser.newParser(AST.JLS3);
		parser.setProject(project);
		parser.setResolveBindings(true);
		parser.createASTs(ProcessorEnvImpl.NO_UNIT, keys, requestor, null);		
	}

