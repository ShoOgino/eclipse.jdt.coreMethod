		/**
		 * @return true to visit children
		 */
		public boolean visit(IResourceDelta delta) {
			switch (delta.getKind()) {
			default:
				return true;
			case IResourceDelta.ADDED :
			case IResourceDelta.REMOVED :
			case IResourceDelta.CHANGED :
				break;
			}
			// If the resource is a factory path file, then the project it
			// belongs to is affected.
			IResource res = delta.getResource();
			if (FactoryPathUtil.isFactoryPathFile(res)) {
				constructAffected();
				_affected.add(JavaCore.create(res.getProject()));
				return true;
			}
			// If the resource is a jar file named in at least one factory
			// path, then the projects owning those factorypaths are affected.
			if (res.getType() != IResource.FILE) {
				return true;
			}
			IPath resPath = res.getFullPath();
			String ext = resPath.getFileExtension();
			if (JAR_EXTENSION.equals(ext)) {
				// Lookup key is the canonical path of the resource
				String key = null;
				try {
					key = res.getLocation().toFile().getCanonicalPath();
				} catch (IOException e) {
					// if we can't figure out its canonical path, just ignore it.
					e.printStackTrace();
					return true;
				}
				Set<IJavaProject> projects = _container2Project.get(key);
				if (projects == null) {
					return true;
				}
				constructAffected();
				_affected.addAll(projects);
			}
			return true;
		}

