	/**
	 * Configure the name of the generated source folder.  If APT is enabled,
	 * remove the old folder and classpath entry and create new ones.  If
	 * disabled, simply record the new name.
	 * <p>
 	 * This should only be called on an event thread, with no locks on the project
	 * or classpath.
	 * TODO: why does this need to know the old name?  Didn't we get it in the constructor?
	 * @param oldName can be null if the old value is not known.
	 * @param newName
	 */
	public void changeFolderName(String oldName, String newName)
	{
		if (newName == null) {
			// Null is used to indicate this preference has
			// been removed, as the project has been deleted.
			// We do nothing
			return;
		}
		if (newName.equals(oldName)) {
			// No-op -- same config
			return;
		}
		
		final boolean aptEnabled = AptConfig.isEnabled(_aptProject.getJavaProject());
		if( AptPlugin.DEBUG )
			AptPlugin.trace("configure generated source directory new value = " +  //$NON-NLS-1$
					newName + 
					" old value = "  + oldName + //$NON-NLS-1$
					" APT is enabled = " + aptEnabled); //$NON-NLS-1$
		if( aptEnabled )
			// If APT is enabled, 
			// clean up the old cp entry, delete the old folder, 
			// create the new one and update the classpath.
			configure( newName, oldName );
		else
			// If APT is not enabled, the folder should not exist
			// and there should be no entry on the classpath.
			synchronized (this) {
				_generatedSourceFolderName = newName;
			}
	}

