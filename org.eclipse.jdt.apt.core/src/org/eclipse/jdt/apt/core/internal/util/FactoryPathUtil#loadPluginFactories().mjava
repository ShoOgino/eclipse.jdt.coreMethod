	/**
	 * Discover and instantiate annotation processor factories by searching for plugins
	 * which contribute to org.eclipse.jdt.apt.core.annotationProcessorFactory.
	 * This method should only be called once, at startup.
	 */
	public static synchronized void loadPluginFactories() {
		assert PLUGIN_FACTORY_MAP.size() == 0 : "loadPluginFactoryMap() was called more than once"; //$NON-NLS-1$

		IExtensionPoint extensionPoint = Platform.getExtensionRegistry().getExtensionPoint(
				AptPlugin.PLUGIN_ID, // name of plugin that exposes this extension point
				"annotationProcessorFactory"); //$NON-NLS-1$ - extension id

		// Iterate over all declared extensions of this extension point.  
		// A single plugin may extend the extension point more than once, although it's not recommended.
		for (IExtension extension : extensionPoint.getExtensions())
		{
			// Iterate over the children of the extension to find one named "factories".
			for(IConfigurationElement factories : extension.getConfigurationElements())
			{
				if (!"factories".equals(factories.getName())) { //$NON-NLS-1$ - name of configElement 
					continue;
				}
				
				// Get enableDefault.  If the attribute is missing, default to true.
				String enableDefaultStr = factories.getAttribute("enableDefault"); //$NON-NLS-1$
				boolean enableDefault = true;
				if ("false".equals(enableDefaultStr)) { //$NON-NLS-1$
					enableDefault = false;
				}
				
				// Create and cache a PluginFactoryContainer for this plugin.
				String pluginId = extension.getNamespace();
				PluginFactoryContainer pfc = new PluginFactoryContainer(pluginId, enableDefault);
				PLUGIN_CONTAINER_MAP.put(pluginId, pfc);
				
				// Iterate over the children of the "factories" element to find all the ones named "factory".
				for (IConfigurationElement factory : factories.getChildren()) {
					if (!"factory".equals(factory.getName())) { //$NON-NLS-1$
						continue;
					}
					try {
						Object execExt = factory.createExecutableExtension("class"); //$NON-NLS-1$ - attribute name
						if (execExt instanceof AnnotationProcessorFactory){
							String factoryName = execExt.getClass().getName();
							PLUGIN_FACTORY_MAP.put( factoryName, (AnnotationProcessorFactory)execExt );
							pfc.addFactoryName(factoryName);
						}
					} catch(CoreException e) {
							e.printStackTrace();
					}
				}
			}
		}
	}

