	/** 
	 * Enter a marker for a factory class that could not be loaded.
	 * Note that if a jar is missing, we won't be able to load its factory
	 * names, and thus we won't even try loading its factory classes; but
	 * we can still fail to load a factory class if, for instance, the
	 * jar is corrupted or the factory constructor throws an exception.  
	 * See {@link AnnotationProcessorFactoryLoader} for information about 
	 * the lifecycle of these markers.
	 */
	private void reportFailureToLoadFactories() {
		for (String factoryName : _failedFactories) {
			try {
				String message = Messages.bind(
						Messages.AnnotationProcessorFactoryLoader_unableToLoadFactoryClass, 
						new String[] {factoryName, _project.getName()});
				IMarker marker = _project.createMarker(AptPlugin.APT_LOADER_PROBLEM_MARKER);
				marker.setAttributes(
						new String[] {
							IMarker.MESSAGE, 
							IMarker.SEVERITY,
							IMarker.LOCATION,
							IMarker.SOURCE_ID
						},
						new Object[] {
							message,
							IStatus.ERROR,
							Messages.AnnotationProcessorFactoryLoader_factorypath,
							AptPlugin.APT_MARKER_SOURCE_ID
						}
					);
			} catch (CoreException e) {
				AptPlugin.log(e, "Unable to create build problem marker"); //$NON-NLS-1$
			}
		}
	}

