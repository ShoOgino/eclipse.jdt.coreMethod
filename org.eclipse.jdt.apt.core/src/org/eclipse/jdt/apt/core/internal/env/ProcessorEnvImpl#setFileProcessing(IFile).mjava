	public void setFileProcessing(IFile file){		
		if( file == null )
			throw new IllegalStateException("missing file"); //$NON-NLS-1$
		// already in per-file mode.
		if( !_batchMode ){
			// this is a no-op
			if(  file.equals(_file) )
				return;
			
			_astRoot = null;
			_file = null;
			_curSource = null;
			
			// need to match up the file with the ast.
			if( _files != null ){
				for( int i=0, len=_files.length; i<len; i++ ){
					if( file.equals(_files[i]) ){
						_file = file;
						if( _astUnits != null ){
							_astRoot = _astUnits[i];		
							_curSource = _sources[i];
						}
						else{
							try{
								_curSource = ProcessorEnvImpl.getFileContents( _files[i] );
							}
							catch( Exception e ){
								// TODO:  propagate these exceptions out of APTDispatch
								e.printStackTrace();
							}
							_astRoot = (CompilationUnit)createDietAST(_files[i].toString(), _javaProject, null, _curSource );
						}
					}
				}
			}
 
			if( _file == null )
				throw new IllegalStateException(
						"file " +  //$NON-NLS-1$
						file.getName() + 
						" is not in the list to be processed."); //$NON-NLS-1$
		}
		else{
			_batchMode = false;
			if( _files != null ){
				for( int i=0, len=_files.length; i<len; i++ ){
					if( _files[i] == file ){
						try{
							_curSource = ProcessorEnvImpl.getFileContents( _files[i] );
						}
						catch( Exception e ){
							// TODO:  propagate these exceptions out of APTDispatch
							e.printStackTrace();
						}	
						_astRoot = (CompilationUnit)createDietAST(_files[i].toString(), _javaProject, null, _curSource );
						_file = file;
					}
				}
			}
			if( _astRoot == null )
				throw new IllegalStateException(
						"file " +  //$NON-NLS-1$
						file.getName() + 
						" is not in the list to be processed."); //$NON-NLS-1$
		}
	}

