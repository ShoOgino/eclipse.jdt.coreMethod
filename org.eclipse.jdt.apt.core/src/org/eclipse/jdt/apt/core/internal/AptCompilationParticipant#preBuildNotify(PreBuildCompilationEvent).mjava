	private CompilationParticipantResult preBuildNotify( PreBuildCompilationEvent pbce )
	{		
		if ( pbce == null )
			return EMPTY_PRE_BUILD_COMPILATION_RESULT;

		IFile[] buildFiles = pbce.getFiles();
		IJavaProject javaProject = pbce.getJavaProject();
		
		if ( buildFiles == null || buildFiles.length == 0 )
			return EMPTY_PRE_BUILD_COMPILATION_RESULT;
		
		// Don't dispatch on pre-1.5 project. They cannot legally have annotations
		String javaVersion = javaProject.getOption("org.eclipse.jdt.core.compiler.source", true); //$NON-NLS-1$
		
		// Check for 1.3 or 1.4, as we don't want this to break in the future when 1.6
		// is a possibility
		if ("1.3".equals(javaVersion) || "1.4".equals(javaVersion)) { //$NON-NLS-1$ //$NON-NLS-2$
			return EMPTY_PRE_BUILD_COMPILATION_RESULT;
		}

	
		List<AnnotationProcessorFactory> factories = _factoryLoader.getFactoriesForProject( javaProject );	
	
		APTResult result = APTDispatch.runAPTDuringBuild(factories, buildFiles, javaProject, pbce.isFullBuild());
		Set<IFile> newFiles = result.getNewFiles();			
		Set<IFile> deletedFiles = result.getDeletedFiles();
		
		// see if APT updated a project's source path
		boolean sourcePathChanged = result.getSourcePathChanged();
		
		// for apt, new files will always trump deleted files
		for ( IFile df : deletedFiles )
			if ( newFiles.contains( df ) )
				deletedFiles.remove( df );

		return new PreBuildCompilationResult( 
				newFiles.toArray( new IFile[ newFiles.size() ] ), 
				deletedFiles.toArray( new IFile[ deletedFiles.size() ] ), 
				result.getNewDependencies(), 
				result.getProblems(), 
				sourcePathChanged );
	}

