	private CompilationParticipantResult preBuildNotify( PreBuildCompilationEvent pbce )
	{		
		if ( pbce == null )
			return EMPTY_PRE_BUILD_COMPILATION_RESULT;

		IFile[] buildFiles = pbce.getFiles();
		IJavaProject javaProject = pbce.getJavaProject();
		
		if ( buildFiles == null || buildFiles.length == 0 )
			return EMPTY_PRE_BUILD_COMPILATION_RESULT;
		
		// Don't dispatch on pre-1.5 project. They cannot legally have annotations
		String javaVersion = javaProject.getOption("org.eclipse.jdt.core.compiler.source", true); //$NON-NLS-1$
		
		// Check for 1.3 or 1.4, as we don't want this to break in the future when 1.6
		// is a possibility
		if ("1.3".equals(javaVersion) || "1.4".equals(javaVersion)) { //$NON-NLS-1$ //$NON-NLS-2$
			return EMPTY_PRE_BUILD_COMPILATION_RESULT;
		}			
	
		// If we're in batch mode, we need to reset the classloaders
		// for the batch processors before we begin
		boolean isFullBuild = pbce.isFullBuild();
		try {
			if (isFullBuild && pbce.getRound() == 0) {
				AnnotationProcessorFactoryLoader.getLoader().resetBatchProcessors(pbce.getJavaProject());
				_previousRoundsBatchFactories.clear();
			}
			
			Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories =
				AnnotationProcessorFactoryLoader.getLoader().getFactoriesAndAttributesForProject(javaProject);
			
			APTResult result = APTDispatch.runAPTDuringBuild(factories, _previousRoundsBatchFactories, buildFiles, javaProject, isFullBuild);
			Set<IFile> newFiles = result.getNewFiles();			
			Set<IFile> deletedFiles = new HashSet<IFile>();
			_previousRoundsBatchFactories.addAll(result.getDispatchedBatchFactory());
			
			// for apt, new files will always trump deleted files
			for ( IFile df : result.getDeletedFiles() ){
				if ( !newFiles.contains( df ) ){
					deletedFiles.add(df);
				}
			}
	
			return new PreBuildCompilationResult( 
					newFiles.toArray( new IFile[ newFiles.size() ] ), 
					deletedFiles.toArray( new IFile[ deletedFiles.size() ] ), 
					result.getNewDependencies(), 
					result.getProblems());
		}
		finally {
			if (isFullBuild) {
				// In order to keep from locking jars, we explicitly close any batch-based
				// classloaders we opened
				AnnotationProcessorFactoryLoader.getLoader().closeBatchClassLoader();
			}
		}
	}

