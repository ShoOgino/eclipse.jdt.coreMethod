    public ArrayType getArrayType(TypeMirror componentType)
    {
        if( componentType == null ) return null;
        if( componentType instanceof EclipseMirrorImpl ){
            final EclipseMirrorImpl impl = (EclipseMirrorImpl)componentType;
            // the leaf type of the array
            final ITypeBinding leaf;
            final int dimension;
            switch( impl.kind() )
            {
                case TYPE_ERROR:
                    throw new IllegalArgumentException("cannot create an array from error type"); //$NON-NLS-1$
                case TYPE_VOID:
                    throw new IllegalArgumentException("cannot create an array from void type"); //$NON-NLS-1$
                case TYPE_PRIMITIVE:
                    leaf = ((PrimitiveTypeImpl)componentType).getTypeBinding();
                    dimension = 1;
                    break;
                case TYPE_ARRAY:
                    final ITypeBinding array = ((ArrayTypeImpl)componentType).getArrayBinding();
                    dimension = array.getDimensions() + 1;
                    leaf = array.getElementType();
                    break;
                case TYPE_WILDCARD:
                    leaf = ((WildcardTypeImpl)componentType).getWildcardBinding();
                    dimension = 1;
                    break;
                default:
                    leaf = ((TypeDeclarationImpl)componentType).getTypeBinding();
                    dimension = 1;
            }
            if( leaf == null || leaf.isParameterizedType() )
                throw new IllegalArgumentException("illegal component type: " + componentType); //$NON-NLS-1$

            final String bindingKey = BindingKey.createArrayTypeBindingKey(leaf.getKey(), dimension);
			final ITypeBinding arrayType = _env.getTypeBinding(bindingKey);
			if(arrayType == null)
				return null;
			return (ArrayType)Factory.createTypeMirror(arrayType, _env); 
        }
		
        throw new NonEclipseImplementationException("only applicable to eclipse type system objects." +
                                                    " Found " + componentType.getClass().getName());
                                                
    }

