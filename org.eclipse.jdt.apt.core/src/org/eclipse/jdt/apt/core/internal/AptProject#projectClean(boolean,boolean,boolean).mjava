	/**
	 * Invoked whenever a project is cleaned.  This will remove any state kept about
	 * generated files for the given project.  If the deleteFiles flag is specified, 
	 * then the contents of the generated source folder will be deleted. 
	 *
	 * @param deleteFiles true if the contents of the generated source folder are to be
	 * deleted, false otherwise.
	 */
	
	public void projectClean( boolean deleteFiles, boolean cleanMain, boolean cleanTest )
	{
		if(cleanMain)
			_main_gfm.projectCleaned();
		if(cleanTest)
			_test_gfm.projectCleaned();
		
		// delete the contents of the generated source folder, but don't delete
		// the generated source folder because that will cause a classpath change,
		// which will force the next build to be a full build.
		if ( deleteFiles )
		{
			if (cleanMain) {
				IFolder f = _main_gsfm.getFolder();
				if (f != null && f.exists()) {
					try {
						IResource[] members = f.members();
						for (int i = 0; i < members.length; i++) {
							FileSystemUtil.deleteDerivedResources(members[i]);
						}
					} catch (CoreException ce) {
						AptPlugin.log(ce, "Could not delete generated files"); //$NON-NLS-1$
					}
				}
			}
			if (cleanMain) {
				IFolder f = _test_gsfm.getFolder();
				if (f != null && f.exists()) {
					try {
						IResource[] members = f.members();
						for (int i = 0; i < members.length; i++) {
							FileSystemUtil.deleteDerivedResources(members[i]);
						}
					} catch (CoreException ce) {
						AptPlugin.log(ce, "Could not delete generated files"); //$NON-NLS-1$
					}
				}
			}
		}
	}

