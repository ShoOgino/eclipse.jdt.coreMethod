	@Override
	public boolean isSubTypeCompatible(EclipseMirrorType type) {
		// Operate on erasures - ignore generics for now
		// Also ignore boxing for now
		ITypeBinding thisErased = getTypeBinding().getErasure();
		ITypeBinding typeErased = type.getTypeBinding().getErasure();
		
		if (kind() == MirrorKind.TYPE_CLASS) {
			if (type.kind() == MirrorKind.TYPE_CLASS)
				return isSubClassOf(thisErased, typeErased);
			if (type.kind() == MirrorKind.TYPE_INTERFACE)
				return isImplementorOf(thisErased, typeErased);
			return false;
		}
		else { //kind() == MirrorKind.TYPE_INTERFACE
			if (type.kind() == MirrorKind.TYPE_INTERFACE)
				return isImplementorOf(thisErased, typeErased);
			if (type.kind() == MirrorKind.TYPE_CLASS)
				return "java.lang.Object".equals(getQualifiedName()); //$NON-NLS-1$
			return false;
		}
	}

