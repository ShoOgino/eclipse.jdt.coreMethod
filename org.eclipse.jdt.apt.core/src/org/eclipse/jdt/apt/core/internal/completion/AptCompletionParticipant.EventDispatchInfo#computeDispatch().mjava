		/** 
		 * Compute the factory that we should dispatch to. 
		 * The factory that supports the type of the outermost annotation is the winner. 
		 * (Not necessarily the factory that supports the anntotation that completion is actually
		 * happenining. This is to match the semantics of APT compilation dispatch.)
		 */ 
		synchronized void computeDispatch(){
			if( assistant != null ) return;
			
			final AnnotationsImpl enclosings = (AnnotationsImpl)aptEvent.getEnclosingAnnotations();
			final String annoTypename = enclosings.getOuterMostTypeName();		
			final List<EclipseAnnotationProcessorFactory> factories = 
				getParticipatingFactories(aptEvent.getJavaProject());
			
			if( factories != null )
			{
				for(int i=0, len=factories.size(); i<len; i++ ){
					final EclipseAnnotationProcessorFactory f = factories.get(i);
					final Collection<String> supported = f.supportedAnnotationTypes();
					if( supported.contains(annoTypename) ){
						final CompletionEnvImpl env = getCompletionEnv();
						final Set<AnnotationTypeDeclaration> annoTypes = enclosings.computeAnnotationTypes();
						final AnnotationCompletionAssistant aptAssistant = f.getCodeAssistantFor(annoTypes, env );
						if( aptAssistant != null ){
							assistant = aptAssistant;						
							return;
						}
					}
				}
			}
			assistant = NO_OP_ASSISTANT;
		}

