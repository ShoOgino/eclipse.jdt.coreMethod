	/**
	 * Returns all the plugin factory containers that have been registered
	 * as plugins. Note that this does not take into account any factory
	 * plugins that have been disabled by the user's configuration
	 */
	public static List<PluginFactoryContainer> getAllPluginFactoryContainers()
	{
		List<PluginFactoryContainer> factories = new ArrayList<PluginFactoryContainer>();
	
		IExtensionPoint extension = Platform.getExtensionRegistry().getExtensionPoint(
				"org.eclipse.jdt.apt.core",  //$NON-NLS-1$ - name of plugin that exposes this extension
				"annotationProcessorFactory"); //$NON-NLS-1$ - extension id

		IExtension[] extensions =  extension.getExtensions();
		for(int i = 0; i < extensions.length; i++) 
		{
			PluginFactoryContainer container = null;
			IConfigurationElement [] configElements = extensions[i].getConfigurationElements();
			for(int j = 0; j < configElements.length; j++)
			{
				String elementName = configElements[j].getName();
				if ( "factory".equals( elementName ) ) //$NON-NLS-1$ - name of configElement 
				{ 
					if ( container == null )
					{
						container = new PluginFactoryContainer(extensions[i].getNamespace());
						factories.add( container );
					}
					container.addFactoryName( configElements[j].getAttribute("class") );
				}
			}
		}
		return factories;
	}

