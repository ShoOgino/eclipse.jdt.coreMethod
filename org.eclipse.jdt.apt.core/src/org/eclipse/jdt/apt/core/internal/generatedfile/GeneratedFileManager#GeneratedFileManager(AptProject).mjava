	/**
	 * Construction can only take place from within 
	 * the factory method, getGeneratedFileManager().
	 */
	public GeneratedFileManager(final AptProject aptProject) {
		_aptProject = aptProject;
		final IJavaProject javaProject = aptProject.getJavaProject();
		
		// register a preference listener so that we can watch for changes 
		// to the gen src dir at the project scope...
		IScopeContext projScope = new ProjectScope(aptProject.getJavaProject().getProject());
		IEclipsePreferences projPrefs = projScope.getNode(AptPlugin.PLUGIN_ID);
		IPreferenceChangeListener projListener = new IPreferenceChangeListener() {
			public void preferenceChange(PreferenceChangeEvent event) {
				if (AptPreferenceConstants.APT_GENSRCDIR.equals(event.getKey())) {
					final boolean aptEnabled = AptConfig.isEnabled(_aptProject.getJavaProject());
					if( AptPlugin.DEBUG )
						AptPlugin.trace("configure generated source directory new value = " +  //$NON-NLS-1$
								event.getNewValue() + 
								" old value = "  + event.getOldValue() + //$NON-NLS-1$
								" APT is enabled = " + aptEnabled); //$NON-NLS-1$
					// If APT is enabled, 
					// clean up the old cp entry, deleted the old folder and 
					// create the new one and update the classpath.
					if( aptEnabled )
						configureGeneratedSourceFolder( (String)event.getNewValue(), (String)event.getOldValue() );
					else
						setGenratedSourceFolderName((String)event.getNewValue());
				}
				else if(AptPreferenceConstants.APT_ENABLED.equals(event.getKey()) ){
					final String newValue = (String)event.getNewValue();
					final String oldValue = (String)event.getOldValue();
					if( AptPlugin.DEBUG ){
						AptPlugin.trace("Got preference change event for " + AptPreferenceConstants.APT_ENABLED ); //$NON-NLS-1$
					}
					
					// no-op;
					if(newValue.equals(oldValue)){
						return;
					}
					
					final boolean isEnabling = Boolean.parseBoolean(newValue);
					if( AptPlugin.DEBUG ){
						if( isEnabling )
							AptPlugin.trace("enabling APT"); //$NON-NLS-1$
						else
							AptPlugin.trace("diabling APT"); //$NON-NLS-1$
					}
					if( isEnabling )
						configureGeneratedSourceFolder();
					else{
						final IFolder srcFolder = getGeneratedSourceFolder();
						projectClean(true);
						resetGeneratedSrcFolder(srcFolder, false);
					}
				}
			}
		};
		projPrefs.addPreferenceChangeListener(projListener);
		
		// ...and at the workspace scope.
		// Note we check all projects, even those that have project-specific
		// settings, when the workspace setting changes.  For projects with
		// project-specific settings, the value of the setting won't change 
		// so the request will be ignored.
		IScopeContext wkspScope = new InstanceScope();
		IEclipsePreferences wkspPrefs = wkspScope.getNode(AptPlugin.PLUGIN_ID);
		IPreferenceChangeListener wkspListener = new IPreferenceChangeListener() {
			public void preferenceChange(PreferenceChangeEvent event) {
				if (AptPreferenceConstants.APT_GENSRCDIR.equals(event.getKey())) {
					configureGeneratedSourceFolder( AptConfig.getGenSrcDir(javaProject), null );
				}
			}
		};
		wkspPrefs.addPreferenceChangeListener(wkspListener);
		
		// get generated source dir from config 
		// default value is set in org.eclipse.jdt.apt.core.internal.util.AptCorePreferenceInitializer
		_generatedSourceFolderName = AptConfig.getString( javaProject, AptPreferenceConstants.APT_GENSRCDIR);
		// properly initialize the GeneratedFileManager if project path is up-to-date and the generated 
		// source folder is there.
		final IFolder folder = javaProject.getProject().getFolder(_generatedSourceFolderName);
		if(folder.exists()){
			boolean uptodate = false;
			try{
				uptodate = isProjectClassPathUpToDate(javaProject, null, folder.getFullPath(), null);
			}catch(JavaModelException e){
				e.printStackTrace();
			}
			if( uptodate )
				_generatedSourceFolder = folder;
		}	
	}

