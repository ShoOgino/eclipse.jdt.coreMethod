	/**
	 * Schedule a job to delete the generated source folder and remove it
	 * from the classpath. 
	 *
	 * @param recreate <code>true</code> to recreate the generated source folder.
	 */
	private void resetGeneratedSrcFolder(final IFolder srcFolder, final boolean recreate){
		
		// clean up the classpath so that when we actually delete the 
		// generated source folder and won't cause a classpath error.
		// (which will cause us to re-add the folder to correct 
		// the classpath problem)
		if( srcFolder != null ){
		  	try{	
		  		removeFromProjectClasspath( _aptProject.getJavaProject(), srcFolder, null );		
			}catch(JavaModelException e){
				AptPlugin.log( e, "Error occurred deleting old generated src folder " + srcFolder.getName() ); //$NON-NLS-1$
			}
		}
		if( recreate )
			ensureGeneratedSourceFolder();
		 
		// schedule the deletion job.
		final IWorkspaceRunnable runnable = new IWorkspaceRunnable(){
            public void run(IProgressMonitor monitor)
            {		
            	if( srcFolder != null ){
	            	try{
	            		srcFolder.delete(true, false, null);
	            	}catch(CoreException e){
	            		AptPlugin.log(e, "failed to delete old generated source folder " + srcFolder.getName() ); //$NON-NLS-1$
	            	}catch(OperationCanceledException cancel){
	            		AptPlugin.log(cancel, "deletion of generated source folder got cancelled"); //$NON-NLS-1$
	            	}
            	}
            };
        };
        IWorkspace ws = _aptProject.getJavaProject().getProject().getWorkspace();
        try{
        	ws.run(runnable, ws.getRoot(), IWorkspace.AVOID_UPDATE, null);
        }catch(CoreException e){
    		AptPlugin.log(e, "Runnable for deleting old generated source folder " + srcFolder.getName() + " failed."); //$NON-NLS-1$ //$NON-NLS-2$
    	}
	}

