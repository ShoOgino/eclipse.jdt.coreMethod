    private ProcessorEnvImpl( IFile file, IJavaProject javaProj, Phase phase )
    {
        assert phase == Phase.BUILD : "Unexpected phase value.  Use Phase.BUILD instead of " + phase;
        
    	_compilationUnit = null; 
		
		char[] source = null;
		
		try
		{
			source = getFileContents( file );
		}
		catch( Exception e )
		{
			// TODO:  propagate these exceptions out of APTDispatch
			e.printStackTrace();	
		}
		
		_source = source;
		assert _source != null : "missing source";
	
		ASTParser p = ASTParser.newParser( AST.JLS3 );
		p.setSource( _source );
		p.setResolveBindings( true );
		p.setProject( javaProj );
		p.setUnitName( file.getProjectRelativePath().toString() );
		p.setFocalPosition( 0 );
		p.setKind( ASTParser.K_COMPILATION_UNIT );
		ASTNode node = p.createAST( null );		
		_astCompilationUnit = (org.eclipse.jdt.core.dom.CompilationUnit) node;
        _phase = phase;
        _file = file;
		_javaProject = javaProj;
		_modelCompUnit2astCompUnit = new HashMap<ICompilationUnit, CompilationUnit>();
		_typeBinding2ModelCompUnit = new HashMap<ITypeBinding, ICompilationUnit>();
        _markerInfos = new ArrayList<MarkerInfo>(4);
		_filer = new FilerImpl(this);
    }

