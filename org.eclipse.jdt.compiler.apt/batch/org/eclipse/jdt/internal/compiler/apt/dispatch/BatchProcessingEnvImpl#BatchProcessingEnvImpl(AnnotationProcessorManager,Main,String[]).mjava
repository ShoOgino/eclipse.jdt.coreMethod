	public BatchProcessingEnvImpl(AnnotationProcessorManager dispatchManager, Main batchCompiler,
			String[] commandLineArguments) 
	{
		_compiler = batchCompiler;
		_dispatchManager = dispatchManager;
		if (batchCompiler instanceof EclipseCompiler) {
			_fileManager = ((EclipseCompiler) batchCompiler).fileManager;
		} else {
			String encoding = (String) batchCompiler.options.get(CompilerOptions.OPTION_Encoding);
			Charset charset = encoding != null ? Charset.forName(encoding) : null;
			JavaFileManager manager = new EclipseFileManager(batchCompiler, batchCompiler.compilerLocale, charset);
			ArrayList<String> options = new ArrayList<String>();
			for (String argument : commandLineArguments) {
				options.add(argument);
			}
    		for (Iterator<String> iterator = options.iterator(); iterator.hasNext(); ) {
    			manager.handleOption(iterator.next(), iterator);
    		}
			_fileManager = manager;
		}
		//TODO: parse processor -A options
		_filer = new BatchFilerImpl(_dispatchManager, this);
		_messager = new BatchMessagerImpl(_compiler.batchCompiler.problemReporter);
		_elementUtils = new ElementsImpl(this);
	}

