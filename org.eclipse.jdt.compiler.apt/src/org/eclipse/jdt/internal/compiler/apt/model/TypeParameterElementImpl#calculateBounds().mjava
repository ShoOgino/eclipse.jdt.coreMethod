	// This code is drawn from org.eclipse.jdt.core.dom.TypeBinding.getTypeBounds()
	private List<? extends TypeMirror> calculateBounds() {
		TypeVariableBinding typeVariableBinding = (TypeVariableBinding)_binding;
		ReferenceBinding varSuperclass = typeVariableBinding.superclass();
		TypeBinding firstClassOrArrayBound = typeVariableBinding.firstBound;
		int boundsLength = 0;
		if (firstClassOrArrayBound != null) {
			if (firstClassOrArrayBound == varSuperclass) {
				boundsLength++;
			} else if (firstClassOrArrayBound.isArrayType()) { // capture of ? extends/super arrayType
				boundsLength++;
			} else {
				firstClassOrArrayBound = null;
			}
		}
		ReferenceBinding[] superinterfaces = typeVariableBinding.superInterfaces();
		int superinterfacesLength = 0;
		if (superinterfaces != null) {
			superinterfacesLength = superinterfaces.length;
			boundsLength += superinterfacesLength;
		}
		if (boundsLength != 0) {
			List<TypeMirror> typeBounds = new ArrayList<TypeMirror>(boundsLength);
			if (firstClassOrArrayBound != null) {
				TypeMirror typeBinding = Factory.newTypeMirror(firstClassOrArrayBound);
				if (typeBinding == null) {
					return Collections.emptyList();
				}
				typeBounds.add(typeBinding);
			}
			if (superinterfaces != null) {
				for (int i = 0; i < superinterfacesLength; i++) {
					TypeMirror typeBinding = Factory.newTypeMirror(superinterfaces[i]);
					if (typeBinding == null) {
						return Collections.emptyList();
					}
					typeBounds.add(typeBinding);
				}
			}
			return Collections.unmodifiableList(typeBounds);
		}
		return Collections.emptyList();
	}

