	/*
	 * (non-Javadoc)
	 * @see javax.lang.model.type.DeclaredType#getTypeArguments()
	 * @see javax.lang.model.element.TypeElement#getTypeParameters().
	 */
	@Override
	public List<? extends TypeMirror> getTypeArguments() {
		//TODO: what should this method do for generic types, as opposed to parameterized types?
		//E.g., class <T1> Foo {}, get the class as a type, what are its type arguments?
		ReferenceBinding binding = (ReferenceBinding)_binding;
		if (!binding.isParameterizedType()) {
			return Collections.emptyList();
		}
		ParameterizedTypeBinding ptb = (ParameterizedTypeBinding)_binding;
		List<TypeMirror> args = new ArrayList<TypeMirror>(ptb.arguments.length);
		for (TypeBinding arg : ptb.arguments) {
			args.add(_env.getFactory().newTypeMirror(arg));
		}
		return Collections.unmodifiableList(args);
	}

