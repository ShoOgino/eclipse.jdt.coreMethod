	@Override
	public Set<? extends Element> getRootElements()
	{
		Set<Element> elements = new HashSet<Element>(_units.length);
		for (CompilationUnitDeclaration unit : _units) {
			if (null == unit.scope || null == unit.scope.topLevelTypes)
				continue;
			for (SourceTypeBinding binding : unit.scope.topLevelTypes) {
				Element element = _factory.newElement(binding);
				if (null == element) {
					throw new IllegalArgumentException("Top-level type binding could not be converted to element: " + binding); //$NON-NLS-1$
				}
				elements.add(element);
			}
		}
		if (this._binaryTypes != null) {
			for (BinaryTypeBinding typeBinding : _binaryTypes) {
				TypeElement element = (TypeElement)_factory.newElement(typeBinding);
				if (null == element) {
					throw new IllegalArgumentException("Top-level type binding could not be converted to element: " + typeBinding); //$NON-NLS-1$
				}
				elements.add(element);
			}
		}
		return elements;
	}

