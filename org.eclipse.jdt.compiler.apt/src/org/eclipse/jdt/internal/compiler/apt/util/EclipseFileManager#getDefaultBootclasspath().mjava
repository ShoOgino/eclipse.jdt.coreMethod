	Iterable<? extends File> getDefaultBootclasspath() {
		ArrayList<File> files = new ArrayList<File>();
		String javaversion = System.getProperty("java.version");//$NON-NLS-1$
		if (javaversion != null && !javaversion.startsWith("1.6")) { //$NON-NLS-1$	
			// wrong jdk - 1.6 is required
			return null;
		}

		/*
		 * Handle >= JDK 1.6
		 */
		String javaHome = System.getProperty("java.home"); //$NON-NLS-1$
		File javaHomeFile = null;
		if (javaHome != null) {
			javaHomeFile = new File(javaHome);
			if (!javaHomeFile.exists())
				javaHomeFile = null;
		}

		addFilesFrom(javaHomeFile, "java.endorsed.dirs", "/lib/endorsed", files);//$NON-NLS-1$//$NON-NLS-2$
		if (javaHomeFile != null) {
			File[] directoriesToCheck = null;
			if (System.getProperty("os.name").startsWith("Mac")) {//$NON-NLS-1$//$NON-NLS-2$
				directoriesToCheck = new File[] { new File(javaHomeFile, "../Classes"), //$NON-NLS-1$
				};
			} else {
				directoriesToCheck = new File[] { new File(javaHomeFile, "lib") //$NON-NLS-1$
				};
			}
			File[][] jars = Main.getLibrariesFiles(directoriesToCheck);
			addFiles(jars, files);
		}
		addFilesFrom(javaHomeFile, "java.ext.dirs", "/lib/ext", files);//$NON-NLS-1$//$NON-NLS-2$
		return files;
	}

