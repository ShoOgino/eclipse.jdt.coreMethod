	@Override
	public List<? extends Element> getEnclosedElements() {
		ModuleBinding module = this.binding;
		PackageBinding[] packs = module.declaredPackages.valueTable;
		Set<PackageBinding> unique = new HashSet<>();
		for (PackageBinding p : packs) {
			if (p == null)
				continue;
			if (!p.hasCompilationUnit(true))
				continue;
			unique.add(getModulesPackageBinding(p));
		}
		if (module.isUnnamed()) {
			PackageBinding def = module.environment.defaultPackage;
			// FIXME: Does it have any impact for unnamed modules - default package combo?
			if (def != null && def.hasCompilationUnit(true)) {
				unique.add(def);
			}
		} else {
			packs = this.binding.getExports();
			for (PackageBinding pBinding : packs) {
				unique.add(getModulesPackageBinding(pBinding));
			}
			packs = this.binding.getOpens();
			for (PackageBinding pBinding : packs) {
				unique.add(getModulesPackageBinding(pBinding));
			}
		}
		List<Element> enclosed = new ArrayList<>(unique.size());
		for (PackageBinding p : unique) {
			PackageElement pElement = (PackageElement) _env.getFactory().newElement(p);
			enclosed.add(pElement);
		}
		return Collections.unmodifiableList(enclosed);
	}

