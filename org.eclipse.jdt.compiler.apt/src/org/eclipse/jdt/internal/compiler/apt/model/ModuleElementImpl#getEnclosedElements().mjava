	@Override
	public List<? extends Element> getEnclosedElements() {
		ModuleBinding module = this.binding;
		Set<PlainPackageBinding> unique = new HashSet<>();
		for (PlainPackageBinding p : module.declaredPackages.values()) {
			if (!p.hasCompilationUnit(true))
				continue;
			unique.add(p);
		}
		if (module.isUnnamed()) {
			PlainPackageBinding def = module.environment.defaultPackage;
			// FIXME: Does it have any impact for unnamed modules - default package combo?
			if (def != null && def.hasCompilationUnit(true)) {
				unique.add(def);
			}
		} else {
			for (PlainPackageBinding pBinding : this.binding.getExports()) {
				unique.add(pBinding);
			}
			for (PlainPackageBinding pBinding : this.binding.getOpens()) {
				unique.add(pBinding);
			}
		}
		List<Element> enclosed = new ArrayList<>(unique.size());
		for (PlainPackageBinding p : unique) {
			PackageElement pElement = (PackageElement) _env.getFactory().newElement(p);
			enclosed.add(pElement);
		}
		return Collections.unmodifiableList(enclosed);
	}

