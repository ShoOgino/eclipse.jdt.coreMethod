	/**
	 * Convert the JDT representation of a single constant into its javax.lang.model
	 * representation.  For instance, convert a StringConstant into a String, or
	 * a FieldBinding into a VariableElement.  This does not handle the case where
	 * value is an Object[].
	 * @param value the JDT object
	 * @param type the return type of the annotation member.  If null or not a
	 * BaseTypeBinding, this is ignored and the value is inspected to determine type.
	 * @param kind an int array whose first element will be set to the type of the
	 * converted object, represented with T_* values from TypeIds or from this class.
	 * @return
	 */
	private Object convertToJavaType(Object value, TypeBinding type, int kind[]) {
		if (value instanceof Constant) {
			if (type instanceof BaseTypeBinding) {
				kind[0] = ((BaseTypeBinding)type).id;
			}
			else {
				kind[0] = ((Constant)value).typeID();
			}
			switch (kind[0]) {
			case T_boolean:
				return ((Constant)value).booleanValue();
			case T_byte:
				return ((Constant)value).byteValue();
			case T_char:
				return ((Constant)value).charValue();
			case T_double:
				return ((Constant)value).doubleValue();
			case T_float:
				return ((Constant)value).floatValue();
			case T_int:
				try {
					return ((Constant)value).intValue();
				} catch (ShouldNotImplement e) {
					return "<error>"; //$NON-NLS-1$
				}
			case T_JavaLangString:
				return ((Constant)value).stringValue();
			case T_long:
				return ((Constant)value).longValue();
			case T_short:
				return ((Constant)value).shortValue();
			}
		} else if (value instanceof FieldBinding) {
			kind[0] = T_EnumConstant;
			return (VariableElement) _env.getFactory().newElement((FieldBinding) value);
		} else if (value instanceof TypeBinding) {
			kind[0] = T_ClassObject;
			return _env.getFactory().newTypeMirror((TypeBinding) value);
		} else if (value instanceof AnnotationBinding) {
			kind[0] = T_AnnotationMirror;
			return _env.getFactory().newAnnotationMirror((AnnotationBinding) value);
		} 
		throw new IllegalArgumentException("Unexpected type for annotation value: " + value); //$NON-NLS-1$
	}

