	/**
	 * @param value
	 *            The JDT representation of a compile-time constant. See
	 *            {@link ElementValuePair#getValue()} for possible object types:
	 *            <ul>
	 *            <li>{@link org.eclipse.jdt.internal.compiler.impl.Constant} for member
	 *            of primitive type or String</li>
	 *            <li>{@link TypeBinding} for a member value of type
	 *            {@link java.lang.Class}</li>
	 *            <li>{@link FieldBinding} for an enum constant</li>
	 *            <li>{@link AnnotationBinding} for an annotation instance</li>
	 *            <li><code>Object[]</code> for a member value of array type, where the
	 *            array entries are one of the above</li>
	 *            </ul>
	 */
	public AnnotationValueImpl(Object value) {
		int kind[] = new int[1];
		if (value instanceof Object[]) {
			Object[] values = (Object[])value;
			List<AnnotationValue> convertedValues = new ArrayList<AnnotationValue>(values.length);
			for (Object oneValue : values) {
				convertedValues.add(new AnnotationValueImpl(oneValue));
			}
			_value = Collections.unmodifiableList(convertedValues);
			_kind = T_ArrayType;
		}
		else {
			_value = convertToJavaType(value, kind);
			_kind = kind[0];
		}
	}

