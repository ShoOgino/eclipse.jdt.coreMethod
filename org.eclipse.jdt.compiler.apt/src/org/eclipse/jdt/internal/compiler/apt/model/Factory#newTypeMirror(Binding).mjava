	public static TypeMirror newTypeMirror(Binding binding) {
		switch (binding.kind()) {
		case Binding.FIELD:
		case Binding.LOCAL:
		case Binding.VARIABLE:
			// For variables, return the type of the variable
			return newTypeMirror(((VariableBinding)binding).type);
			
		case Binding.METHOD:
		case Binding.PACKAGE:
		case Binding.IMPORT:
			throw new IllegalArgumentException("Invalid binding kind: " + binding.kind()); //$NON-NLS-1$
			
		case Binding.TYPE:
		case Binding.RAW_TYPE:
			return new DeclaredTypeImpl((ReferenceBinding)binding);
			
		case Binding.ARRAY_TYPE:
			return new ArrayTypeImpl((ArrayBinding)binding);
			
		case Binding.BASE_TYPE:
			return getPrimitiveType(PrimitiveTypeImpl.getKind((BaseTypeBinding)binding));
			
			// TODO: fill in the rest of these
		case Binding.PARAMETERIZED_TYPE:
		case Binding.WILDCARD_TYPE:
		case Binding.GENERIC_TYPE:
		case Binding.TYPE_PARAMETER:
			throw new UnsupportedOperationException("NYI: binding type " + binding.kind()); //$NON-NLS-1$
		}
		return null;
	}

