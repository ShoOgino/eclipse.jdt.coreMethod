	/**
	 * When an annotation is of unresolved type, its binding won't know that it's an annotation type,
	 * so later on if the caller tries to get the type asElement(), and then asks for the ElementKind,
	 * they'll get back CLASS rather than ANNOTATION_TYPE.  If we know from context that the binding
	 * is to an annotation type, calling this method allows us to hint to the underlying TypeElementImpl. 
	 */
	public DeclaredType newAnnotationType(ReferenceBinding binding) {
		switch (binding.kind()) {
			case Binding.WILDCARD_TYPE :
				// JDT wildcard binding is a subclass of reference binding, but in JSR269 they're siblings
				throw new IllegalArgumentException("A wildcard binding can't be turned into a DeclaredType"); //$NON-NLS-1$
			case Binding.INTERSECTION_TYPE :
				// JDT intersection binding is a subclass of reference binding, but in JSR269 they're siblings
				throw new IllegalArgumentException("An intersection binding can't be turned into a DeclaredType"); //$NON-NLS-1$
		}
		return new DeclaredTypeImpl(_env, binding, ElementKind.ANNOTATION_TYPE);
	}

