	private void deriveOutputLocationForModules(String moduleName, Collection<? extends Path> paths) {
		LocationWrapper wrapper = this.locationHandler.getLocation(StandardLocation.CLASS_OUTPUT, moduleName);
		if (wrapper == null) {
			// First get from our internally known location for legacy/unnamed location
			wrapper = this.locationHandler.getLocation(StandardLocation.CLASS_OUTPUT, ""); //$NON-NLS-1$
			if (wrapper == null) {
				wrapper = this.locationHandler.getLocation(StandardLocation.CLASS_OUTPUT);
			}
			if (wrapper != null) {
				Iterator<? extends Path> iterator = wrapper.paths.iterator();
				if (iterator.hasNext()) {
					try {
					// Per module output location is always a singleton list
					Path path = iterator.next().resolve(moduleName);
					this.locationHandler.setLocation(StandardLocation.CLASS_OUTPUT, moduleName, Collections.singletonList(path));
					} catch(Exception e) {
						e.printStackTrace();
					}
				}
			}
		}
	}

