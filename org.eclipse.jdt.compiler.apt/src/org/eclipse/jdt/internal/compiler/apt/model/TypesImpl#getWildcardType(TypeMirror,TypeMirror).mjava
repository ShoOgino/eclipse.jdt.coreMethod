	/* (non-Javadoc)
	 * @see javax.lang.model.util.Types#getWildcardType(javax.lang.model.type.TypeMirror, javax.lang.model.type.TypeMirror)
	 */
	@Override
	public WildcardType getWildcardType(TypeMirror extendsBound, TypeMirror superBound) {
		if (extendsBound != null && superBound != null) {
			throw new IllegalArgumentException("Extends and super bounds cannot be set at the same time"); //$NON-NLS-1$
		}
		if (extendsBound != null) {
			TypeMirrorImpl extendsBoundMirrorType = (TypeMirrorImpl) extendsBound;
			TypeBinding typeBinding = (TypeBinding) extendsBoundMirrorType._binding;
			return new WildcardTypeImpl(_env, this._env.getLookupEnvironment().createWildcard(
					null,
					0,
					typeBinding,
					null,
					Wildcard.EXTENDS));
		}
		if (superBound != null) {
			TypeMirrorImpl superBoundMirrorType = (TypeMirrorImpl) superBound;
			TypeBinding typeBinding = (TypeBinding) superBoundMirrorType._binding;
			return new WildcardTypeImpl(_env, this._env.getLookupEnvironment().createWildcard(
					null,
					0,
					typeBinding,
					null,
					Wildcard.SUPER));
		}
		return new WildcardTypeImpl(_env, this._env.getLookupEnvironment().createWildcard(
				null,
				0,
				null,
				null,
				Wildcard.UNBOUND));
	}

