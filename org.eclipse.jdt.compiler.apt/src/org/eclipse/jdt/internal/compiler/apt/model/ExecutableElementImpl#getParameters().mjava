	@Override
	public List<? extends VariableElement> getParameters() {
		MethodBinding binding = (MethodBinding)_binding;
		int length = binding.parameters == null ? 0 : binding.parameters.length;
		if (0 != length) {
			AbstractMethodDeclaration methodDeclaration = binding.sourceMethod();
			List<VariableElement> params = new ArrayList<VariableElement>(length);
			if (methodDeclaration != null) {
				for (Argument argument : methodDeclaration.arguments) {
					VariableElement param = new VariableElementImpl(_env, argument.binding);
					params.add(param);
				}
			} else {
				// binary method
				int i = 0;
				for (TypeBinding typeBinding : binding.parameters) {
					StringBuilder builder = new StringBuilder("arg");//$NON-NLS-1$
					builder.append(i);
					VariableElement param = new VariableElementImpl(_env, new LocalVariableBinding(String.valueOf(builder).toCharArray(), typeBinding, 0, true));
					params.add(param);
					i++;
				}
			}
			return Collections.unmodifiableList(params);
		}
		return Collections.emptyList();
	}

