	public void process() {
		TIMES_CALLED++;
		
		final Messager msger = _env.getMessager();
		
		// Since we're a batch processor, we should never be called more than once
		if (TIMES_CALLED > 1) {
			msger.printError("BatchProcessor called more than once: " + TIMES_CALLED);
		}
		
		final Collection<String> expectedList = new HashSet<String>();
		expectedList.add("p1.A");
		expectedList.add("p1.B");
		expectedList.add("p1.C");
		final Collection<TypeDeclaration> allTypes = _env.getSpecifiedTypeDeclarations();
		for( TypeDeclaration type : allTypes ){
			expectedList.remove(type.getQualifiedName());
		}
		
		if( !expectedList.isEmpty() ){
			msger.printError("failed to find type " + expectedList);
		}
		
		final Collection<String> expectedAnnotated = new HashSet<String>();
		expectedList.add("p1.A");
		expectedList.add("p1.C");
		final AnnotationTypeDeclaration batchAnnoDecl = 
			(AnnotationTypeDeclaration)_env.getTypeDeclaration(Batch.class.getName());
		final Collection<Declaration> decls = _env.getDeclarationsAnnotatedWith(batchAnnoDecl);
		for( Declaration decl : decls  ){
			if( decl instanceof TypeDeclaration )
				expectedAnnotated.remove( ((TypeDeclaration)decl).getQualifiedName() );
		}
		if( !expectedAnnotated.isEmpty() ){
			msger.printError("failed to find annotated type " + expectedAnnotated );			
		}
		
		msger.printWarning("CompletedSuccessfully");
	}

