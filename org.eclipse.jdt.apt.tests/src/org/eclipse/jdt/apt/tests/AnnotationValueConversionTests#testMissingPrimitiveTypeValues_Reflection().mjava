	@SuppressWarnings("nls")
	public void testMissingPrimitiveTypeValues_Reflection() throws Exception {
		// reset the error reset the error;
		IProject project = setupTest();	
		IPath srcRoot = getSourcePath();		
		
		String content =  
			"package sample; \n\n" + 
			"import org.eclipse.jdt.apt.tests.annotations.valueconversion.RefAnnotation;\n" +
			"@RefAnnotation()\n"+
			"public class Test {}\n";
		
		IPath testPath = env.addClass( srcRoot, "sample", "Test", content );
		fullBuild( project.getFullPath() );
		
		expectingSpecificProblemsFor(testPath, new Problem[]{
				new Problem("", "The annotation @RefAnnotation must define the attribute z", testPath),
				new Problem("", "The annotation @RefAnnotation must define the attribute c", testPath),
				new Problem("", "The annotation @RefAnnotation must define the attribute b", testPath),
				new Problem("", "The annotation @RefAnnotation must define the attribute s", testPath),
				new Problem("", "The annotation @RefAnnotation must define the attribute i", testPath),
				new Problem("", "The annotation @RefAnnotation must define the attribute l", testPath),
				new Problem("", "The annotation @RefAnnotation must define the attribute f", testPath),
				new Problem("", "The annotation @RefAnnotation must define the attribute d", testPath),
				new Problem("", "value mismatch for memeber z expected true but got false", testPath),
				new Problem("", "value mismatch for memeber s expected 49 but got 0", testPath),
				new Problem("", "value mismatch for memeber i expected 49 but got 0", testPath),
				new Problem("", "value mismatch for memeber c expected 1 but got 0", testPath),
				new Problem("", "value mismatch for memeber b expected 49 but got 0", testPath),
				new Problem("", "value mismatch for memeber l expected 49 but got 0", testPath),
				new Problem("", "value mismatch for memeber f expected 49.0 but got 0.0", testPath),
				new Problem("", "value mismatch for memeber d expected 49.0 but got 0.0", testPath)
		});	
		assertEquals(ProcessorTestStatus.NO_ERRORS, ProcessorTestStatus.getErrors());
	}

