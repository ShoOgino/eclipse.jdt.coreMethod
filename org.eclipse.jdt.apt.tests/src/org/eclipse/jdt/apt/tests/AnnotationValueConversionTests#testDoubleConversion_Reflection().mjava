	/**
	 * Test conversion on double. No arrayification.
	 * @throws Exception
	 */
	@SuppressWarnings("nls")
	public void testDoubleConversion_Reflection() throws Exception {
		// reset the error reset the error;
		IProject project = setupTest();	
		IPath srcRoot = getSourcePath();		
		
		String content =  
			"package sample; \n\n" + 
			"import org.eclipse.jdt.apt.tests.annotations.valueconversion.RefAnnotation;\n" +
			"@RefAnnotation(z=49d,\n" +
			"				  c=49d,\n" +
			"				  b=49d,\n" +
			"				  s=49d,\n" + 
			"				  i=49d,\n" +
			"				  l=49d,\n" +	
			"				  f=49d,\n" +
			"			      d=49d)\n" +
			"public class Test {}\n";
		
		IPath testPath = env.addClass(srcRoot, "sample", "Test", content );
		fullBuild( project.getFullPath() );
		expectingSpecificProblemsFor(testPath, new Problem[]{
				new Problem("", "Type mismatch: cannot convert from double to boolean", testPath),
				new Problem("", "Type mismatch: cannot convert from double to int", testPath),
				new Problem("", "Type mismatch: cannot convert from double to long", testPath),
				new Problem("", "Type mismatch: cannot convert from double to char", testPath),
				new Problem("", "Type mismatch: cannot convert from double to byte", testPath),
				new Problem("", "Type mismatch: cannot convert from double to short", testPath),
				new Problem("", "Type mismatch: cannot convert from double to float", testPath),
				new Problem("", "value mismatch for memeber z expected true but got false", testPath),
				new Problem("", "value mismatch for memeber s expected 49 but got 0", testPath),
				new Problem("", "value mismatch for memeber i expected 49 but got 0", testPath),
				new Problem("", "value mismatch for memeber c expected 1 but got 0", testPath),
				new Problem("", "value mismatch for memeber b expected 49 but got 0", testPath),
				new Problem("", "value mismatch for memeber l expected 49 but got 0", testPath),
				new Problem("", "value mismatch for memeber f expected 49.0 but got 0.0", testPath)
		});
		
		assertEquals(ProcessorTestStatus.NO_ERRORS, ProcessorTestStatus.getErrors());
	}	

