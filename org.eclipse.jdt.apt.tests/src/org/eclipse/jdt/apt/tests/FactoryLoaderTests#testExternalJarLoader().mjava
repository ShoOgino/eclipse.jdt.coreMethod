	public void testExternalJarLoader() throws Exception {
		LoaderTestAnnotationProcessor.clearLoaded();
		IProject project = env.getProject( getProjectName() );
		fullBuild( project.getFullPath() );
		expectingNoProblems();
		assertFalse(LoaderTestAnnotationProcessor.isLoaded());
		
		// add _extJar to the factory list and rebuild.
		IJavaProject jproj = env.getJavaProject( getProjectName() );
		FactoryContainer jarContainer = new JarFactoryContainer(_extJar);
		Map<FactoryContainer, Boolean> containers = new LinkedHashMap<FactoryContainer, Boolean>(1);
		containers.put(jarContainer, true);
		AptConfig.addContainers(jproj, containers);
		
		// rebuild and verify that the processor was loaded
		LoaderTestAnnotationProcessor.clearLoaded();
		fullBuild( project.getFullPath() );
		expectingNoProblems();
		assertTrue(LoaderTestAnnotationProcessor.isLoaded());
		
		// remove _extJar from the factory list.
		AptConfig.removeContainer(jproj, jarContainer);
		
		// rebuild and verify that the processor was not loaded.
		LoaderTestAnnotationProcessor.clearLoaded();
		fullBuild( project.getFullPath() );
		expectingNoProblems();
		assertFalse(LoaderTestAnnotationProcessor.isLoaded());
		
		// This file will be locked until GC takes care of unloading
		// the annotation processor classes.
		_extJar.deleteOnExit();
		_extJar = null;
	}

