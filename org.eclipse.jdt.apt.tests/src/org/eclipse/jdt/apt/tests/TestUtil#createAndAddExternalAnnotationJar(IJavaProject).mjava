	/**
	 * Creates an annotation jar containing annotations and processors
	 * from the "external.annotations" package, and adds it to the project.
	 * Classes will be found under [project]/binext, and manifest will be
	 * drawn from [project]/srcext/META-INF.  
	 * This jar is meant to represent an annotation jar file not 
	 * wrapped within a plugin.  Note that adding a jar to a project makes
	 * its classes visible to the compiler but does NOT automatically cause 
	 * its annotation processors to be loaded.
	 * @return the java.io.File of the jar that was created.
	 */
	public static File createAndAddExternalAnnotationJar( 
			IJavaProject project  )
		throws IOException, JavaModelException
	{
		File jarFile = File.createTempFile("org.eclipse.jdt.apt.tests.TestUtil", ".jar");
		String classesJarPath = jarFile.getAbsolutePath();
		FileFilter classFilter = new PackageFileFilter(
				EXTANNOTATIONS_PKG, getPluginExtClassesDir());
		FileFilter manifestFilter = new PackageFileFilter(
				"META-INF", getPluginExtSrcDir());
		Map<File, FileFilter> files = new HashMap<File, FileFilter>(2);
		files.put(new File( getPluginExtClassesDir() ), classFilter);
		files.put(new File( getPluginExtSrcDir() ), manifestFilter);
		zip( classesJarPath, files );
		addLibraryEntry( project, new Path(classesJarPath), null /*srcAttachmentPath*/, 
			null /*srcAttachmentPathRoot*/, true );
		return new File(classesJarPath);
	}

