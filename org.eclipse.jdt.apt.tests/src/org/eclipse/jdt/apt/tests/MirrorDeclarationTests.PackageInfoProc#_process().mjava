		@Override
		public void _process() {
			called = true;
			AnnotationTypeDeclaration annoDecl = (AnnotationTypeDeclaration)env.getTypeDeclaration("pkg.PkgAnnotation");
			assertTrue(null != annoDecl);
			// get the annotated declarations
			Collection<Declaration> annotatedDecls = env.getDeclarationsAnnotatedWith(annoDecl);
			// don't return the package declaration - well, apt is doing that..
			assertTrue(annotatedDecls == null  || annotatedDecls.size() == 0);

			//TODO: test to support package annotation
			// PackageDeclaration pdCode = env.getPackage("pkg");
			// for (AnnotationMirror am : pdCode.getAnnotationMirrors()) {
			//	if ("GenericAnnotation".equals(am.getAnnotationType().getDeclaration().getSimpleName())) {
			//		continue;
			//	}
			//	assertTrue(null != am.getPosition());
			//	AnnotationTypeDeclaration atd = am.getAnnotationType().getDeclaration();
			//	assertTrue(null != atd.getPosition());
			//	for (Map.Entry<AnnotationTypeElementDeclaration, AnnotationValue> entry : am.getElementValues().entrySet()) {
			//		assertNotNull(entry.getKey().getPosition());
			//		assertNotNull(entry.getKey().getDefaultValue().getPosition());
			//	}
			// }
		}

