	private void testReflectionPath(TypeDeclaration test){
		final RefAnnotation refAnno = test.getAnnotation(RefAnnotation.class);
		if( refAnno != null ){
			assertValueMatch("z", refAnno.z(), true);
			assertValueMatch("b", refAnno.b(), (byte)49);
			assertValueMatch("c", refAnno.c(), '1');
			assertValueMatch("d", refAnno.d(), 49);
			assertValueMatch("f", refAnno.f(), 49);
			assertValueMatch("i", refAnno.i(), 49);
			assertValueMatch("l", refAnno.l(), 49);
			assertValueMatch("s", refAnno.s(), (short)49);
		}
		final RefAnnotationWithArray refAnnoArray = test.getAnnotation(RefAnnotationWithArray.class);
		if( refAnnoArray != null ){
			assertArrayValueMatch("booleans", refAnnoArray.booleans(), new boolean[]{true, true});
			assertArrayValueMatch("bytes", refAnnoArray.bytes(), new byte[]{49, 50} );
			assertArrayValueMatch("chars", refAnnoArray.chars(), new char[]{'1', '2'});
			assertArrayValueMatch("doubles", refAnnoArray.doubles(), new double[]{49d, 50d});
			assertArrayValueMatch("floats", refAnnoArray.floats(), new float[]{49f, 50f});
			assertArrayValueMatch("ints", refAnnoArray.ints(), new int[]{49, 50});
			assertArrayValueMatch("longs", refAnnoArray.longs(), new long[]{49l, 50l});
			assertArrayValueMatch("shorts", refAnnoArray.shorts(), new short[]{49, 50});
			compare("str", refAnnoArray.str());
		}
	}

