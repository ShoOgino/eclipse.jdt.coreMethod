/**
 * Print stack trace with only JDT/Core elements.
 * 
 * @param exception Exception of the stack trace. May be null, then a fake exception is used.
 * @param indent Number of tab to display before the stack elements to display.
 */
private static void printJdtCoreStackTrace(Exception exception, int indent) {
	String tab = "";
	for (int i=0; i<indent; i++) tab+="\t";
	StackTraceElement[] elements = (exception==null?new Exception():exception).getStackTrace();
	int idx = 0, length=elements.length;
	while (idx<length && !elements[idx++].getClassName().startsWith("org.eclipse.jdt")) {
		// loop until JDT/Core class appears in the stack
	}
	if (idx<length) {
		System.out.print(tab+"- stack trace");
		if (exception == null)
			System.out.println(":");
		else
			System.out.println(" for exception "+exception+":");
		while (idx<length && elements[idx].getClassName().startsWith("org.eclipse.jdt")) {
			StackTraceElement testElement = elements[idx++];
			System.out.println(tab+"	-> "+testElement);
		}
	} else {
		exception.printStackTrace(System.out);
	}
}

