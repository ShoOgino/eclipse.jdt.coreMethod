	public static Test buildTestSuiteWithMinimalCompliance(Class evaluationTestClass, int minimalCompliance) {
			TestSuite suite = new TestSuite(evaluationTestClass.getName());
			int complianceLevels = AbstractCompilerTest.getPossibleComplianceLevels();
			int level13 = complianceLevels & AbstractCompilerTest.F_1_3;
			if (level13 != 0) {
				if (level13 < minimalCompliance) {
					System.err.println("Cannot run "+evaluationTestClass.getName()+" at compliance "+COMPLIANCE_1_3+"!");
				} else {
					suite.addTest(buildTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_3));
				}
			}
			int level14 = complianceLevels & AbstractCompilerTest.F_1_4;
			if (level14 != 0) {
				if (level14 < minimalCompliance) {
					System.err.println("Cannot run "+evaluationTestClass.getName()+" at compliance "+COMPLIANCE_1_4+"!");
				} else {
					suite.addTest(buildTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_4));
				}
			}
			int level15 = complianceLevels & AbstractCompilerTest.F_1_5;
			if (level15 != 0) {
				if (level15 < minimalCompliance) {
					System.err.println("Cannot run "+evaluationTestClass.getName()+" at compliance "+COMPLIANCE_1_5+"!");
				} else {
					suite.addTest(buildTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_5));
				}
			}
			int level16 = complianceLevels & AbstractCompilerTest.F_1_6;
			if (level16 != 0) {
				if (level16 < minimalCompliance) {
					System.err.println("Cannot run "+evaluationTestClass.getName()+" at compliance "+COMPLIANCE_1_6+"!");
				} else {
					suite.addTest(buildTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_6));
				}
			}
			return suite;
	}

