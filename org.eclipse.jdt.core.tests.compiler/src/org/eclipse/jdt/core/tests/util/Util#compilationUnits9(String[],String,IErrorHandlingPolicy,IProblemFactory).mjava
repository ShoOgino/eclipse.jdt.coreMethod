// --------
// reduced version of org.eclipse.jdt.internal.compiler.batch.Main.getCompilationUnits()
// (need to associate ordinary compilation units with preceding modular compilation units)
public static CompilationUnit[] compilationUnits9(String[] testFiles, String compliance,
								IErrorHandlingPolicy errorHandlingPolicy, IProblemFactory problemFactory)
{
	int fileCount = testFiles.length / 2;
	CompilationUnit[] units = new CompilationUnit[fileCount];

	String modName = null;
	CompilationUnit modCU = null;
	for (int i = 0; i < fileCount; i++) {
		String fileName = testFiles[i*2];
		boolean isModuleInfo = fileName.endsWith(TypeConstants.MODULE_INFO_FILE_NAME_STRING);
		units[i] = new CompilationUnit(testFiles[i*2+1].toCharArray(), fileName, null, "", false, modName);
		if (isModuleInfo) {
			IModule mod = extractModuleDesc(testFiles[i*2+1], compliance, errorHandlingPolicy, problemFactory);
			if (mod != null) {
				modName = String.valueOf(mod.name());
				modCU = units[i];
				modCU.module = mod.name();
			}
		} else {
			if (modCU != null)
				units[i].module = modCU.getModuleName();
		}
	}
	return units;
}

