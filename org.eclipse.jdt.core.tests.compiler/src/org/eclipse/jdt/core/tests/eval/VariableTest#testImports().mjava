/**
 * Tests variables that include one or more imports.
 */
public void testImports() {
	try {
		// import a package
		this.context.setImports(new char[][] {"java.io.*".toCharArray()});
		GlobalVariable file = this.context.newVariable("boolean".toCharArray(), "file".toCharArray(), "new File(\"!@#%\").exists()".toCharArray());
		installVariables(1);
		evaluateWithExpectedValue(file, "false".toCharArray(), "boolean".toCharArray());
		this.context.deleteVariable(file);

		// import a type
		this.context.setImports(new char[][] {"java.math.BigInteger".toCharArray()});
		GlobalVariable big = this.context.newVariable("BigInteger".toCharArray(), "big".toCharArray(), "new BigInteger(\"123456789012345678901234567890\")".toCharArray());
		installVariables(1);
		evaluateWithExpectedValue(big, "123456789012345678901234567890".toCharArray(), "java.math.BigInteger".toCharArray());
		this.context.deleteVariable(big);

		// import a type and a package
		this.context.setImports(new char[][] {"java.util.Enumeration".toCharArray(), "java.lang.reflect.*".toCharArray()});
		GlobalVariable fields = this.context.newVariable("Field[]".toCharArray(), "fields".toCharArray(), "Enumeration.class.getDeclaredFields()".toCharArray());
		installVariables(1);
		evaluateWithExpectedType("return fields;".toCharArray(), "[Ljava.lang.reflect.Field;".toCharArray());
		this.context.deleteVariable(fields);
	} finally {
		// clean up
		this.context.setImports(new char[0][]);
	}
}

