/**
 * Set local variable 'date'.
 */
public void test012() throws Exception {
	String userCode =
		"java.util.GregorianCalendar cal = new java.util.GregorianCalendar();\n" +
		"java.util.Date date = cal.getGregorianChange();\n" +
		"date.toString();";
	JDIStackFrame stackFrame = new JDIStackFrame(
		this.jdiVM,
		this,
		userCode);

	DebugRequestor requestor = new DebugRequestor();
	char[] snippet = "date = new java.util.Date();".toCharArray();
	evaluate(stackFrame, requestor, snippet);
	EvaluationResult[] results = requestor.results;
	System.out.println("\nDebugEvaluationTests:test012: Results (1):");
	for(int i = 0; i < results.length; i++) {
		EvaluationResult r = results[i];
		if (r == null) continue;
		System.out.println("\t[" + i + "] Evaluation Type: "+ r.getEvaluationType() + 
				" Value Type: " + new String(r.getValueTypeName()) + 
				" Value: " + new String(r.getValueDisplayString()));
	}
	requestor = new DebugRequestor();
	snippet = "return date.after(cal.getGregorianChange());".toCharArray();
	evaluate(stackFrame, requestor, snippet);
	results = requestor.results;
	System.out.println("\nDebugEvaluationTests:test012: Results (2):");
	for(int i = 0; i < results.length; i++) {
		EvaluationResult r = results[i];
		if (r == null) continue;
		System.out.println("\t[" + i + "] Evaluation Type: "+ r.getEvaluationType() + 
				" Value Type: " + new String(r.getValueTypeName()) + 
				" Value: " + new String(r.getValueDisplayString()));
	}
	assertTrue("Should get one result but got " + requestor.resultIndex+1, requestor.resultIndex == 0);
	EvaluationResult result = requestor.results[0];
	assertTrue("Code snippet should not have problems", !result.hasProblems());
	assertTrue("Result should have a value", result.hasValue());
	assertEquals("Value", "true".toCharArray(), result.getValueDisplayString());
	assertEquals("Type", "boolean".toCharArray(), result.getValueTypeName());
}

