protected void startEvaluationContext() throws TargetException {
	try (ServerSocket server = new ServerSocket(0)) {
		LocalVMLauncher launcher = LocalVMLauncher.getLauncher();
		launcher.setVMPath(JRE_PATH);
		launcher.setClassPath(RUNTIME_CLASSPATH);
		int evalPort = server.getLocalPort();
		launcher.setEvalPort(evalPort);
		launcher.setEvalTargetPath(TARGET_PATH);
		this.launchedVM = launcher.launch();
	
		(new Thread() {
			public void run() {
				try {
					java.io.InputStream in = SimpleTest.this.launchedVM.getInputStream();
					int read = 0;
					while (read != -1) {
						try {
							read = in.read();
						} catch (java.io.IOException e) {
							read = -1;
						}
						if (read != -1) {
							System.out.print((char)read);
						}
					}
				} catch (TargetException e) {
				}
			}
		}).start();
	
		(new Thread() {
			public void run() {
				try {
					java.io.InputStream in = SimpleTest.this.launchedVM.getErrorStream();
					int read = 0;
					while (read != -1) {
						try {
							read = in.read();
						} catch (java.io.IOException e) {
							read = -1;
						}
						if (read != -1) {
							System.out.print((char)read);
						}
					}
				} catch (TargetException e) {
				}
			}
		}).start();
	
		this.requestor = new Requestor();
		this.target = new TargetInterface();
		this.target.connect(server, 30000); // allow 30s max to connect (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=188127)
		this.context = new EvaluationContext();
	} catch (IOException e) {
		throw new Error("Failed to open socket", e);
	}
}

