public Map getOptions() {
	Hashtable options = new Hashtable();
	options.put(CompilerOptions.OPTION_LocalVariableAttribute, CompilerOptions.DO_NOT_GENERATE);
	options.put(CompilerOptions.OPTION_LineNumberAttribute, CompilerOptions.DO_NOT_GENERATE);
	options.put(CompilerOptions.OPTION_SourceFileAttribute, CompilerOptions.DO_NOT_GENERATE);
	options.put(CompilerOptions.OPTION_PreserveUnusedLocal, CompilerOptions.OPTIMIZE_OUT);
	options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_1);
	options.put(CompilerOptions.OPTION_ReportUnreachableCode, CompilerOptions.ERROR);
	options.put(CompilerOptions.OPTION_ReportInvalidImport, CompilerOptions.ERROR);
	options.put(CompilerOptions.OPTION_ReportOverridingPackageDefaultMethod, CompilerOptions.WARNING);
	options.put(CompilerOptions.OPTION_ReportMethodWithConstructorName, CompilerOptions.WARNING);
	options.put(CompilerOptions.OPTION_ReportDeprecation, CompilerOptions.WARNING);
	options.put(CompilerOptions.OPTION_ReportHiddenCatchBlock, CompilerOptions.WARNING);
	options.put(CompilerOptions.OPTION_ReportUnusedLocal, CompilerOptions.WARNING);
	options.put(CompilerOptions.OPTION_ReportUnusedParameter, CompilerOptions.WARNING);
	options.put(CompilerOptions.OPTION_ReportSyntheticAccessEmulation, CompilerOptions.IGNORE);
	options.put(CompilerOptions.OPTION_ReportNonExternalizedStringLiteral, CompilerOptions.IGNORE);
	options.put(CompilerOptions.OPTION_ReportAssertIdentifier, CompilerOptions.IGNORE);
	options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_3);
	options.put(CompilerOptions.OPTION_Encoding, "");	
	return options;
}

