	//https://bugs.eclipse.org/bugs/show_bug.cgi?id=86838 - variation
	public void test539() {
		this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X {\n" + 
				"		 static class B<C> {\n" + 
				"		 		 public <T extends I1> T willBe(Class<T> c) {\n" + 
				"		 		 		 return (T)null;\n" + 
				"		 		 }\n" + 
				"		 }\n" + 
				"		 interface I1  {\n" + 
				"		 }\n" + 
				"		 interface I2  extends I1 {\n" + 
				"		 }\n" + 
				"		 \n" + 
				"		 public static void m1(String[] args) {\n" + 
				"		 		 B b = new B();\n" + 
				"		 		 I2 v = b.willBe(I2.class);\n" + 
				"		 }\n" + 
				"		 public static void m2(String[] args) {\n" + 
				"		 		 B<Void> b = new B<Void>();\n" + 
				"		 		 I2 v = b.willBe(I2.class);\n" + 
				"		 }\n" + 
				"\n" + 
				"}\n",
			},
			"----------\n" + 
			"1. WARNING in X.java (at line 4)\n" + 
			"	return (T)null;\n" + 
			"	       ^^^^^^^\n" + 
			"Unnecessary cast from null to T\n" + 
			"----------\n" + 
			"2. WARNING in X.java (at line 13)\n" + 
			"	B b = new B();\n" + 
			"	^\n" + 
			"Type safety: X.B is a raw type. References to generic type X.B<C> should be parameterized\n" + 
			"----------\n" + 
			"3. WARNING in X.java (at line 13)\n" + 
			"	B b = new B();\n" + 
			"	          ^\n" + 
			"Type safety: X.B is a raw type. References to generic type X.B<C> should be parameterized\n" + 
			"----------\n" + 
			"4. WARNING in X.java (at line 14)\n" + 
			"	I2 v = b.willBe(I2.class);\n" + 
			"	       ^^^^^^^^^^^^^^^^^^\n" + 
			"Type safety: The method willBe(Class) belongs to the raw type X.B. References to generic type X.B<C> should be parameterized\n" + 
			"----------\n" + 
			"5. ERROR in X.java (at line 14)\n" + 
			"	I2 v = b.willBe(I2.class);\n" + 
			"	       ^^^^^^^^^^^^^^^^^^\n" + 
			"Type mismatch: cannot convert from X.I1 to X.I2\n" + 
			"----------\n");
	}

