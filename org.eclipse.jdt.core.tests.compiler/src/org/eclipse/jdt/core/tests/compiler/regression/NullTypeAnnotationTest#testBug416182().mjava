	public void testBug416182() {
		runNegativeTestWithLibs(
			new String[] {
				"X.java",
				"import org.eclipse.jdt.annotation.NonNull;\n" +
				"import org.eclipse.jdt.annotation.Nullable;\n" +
				"\n" +
				"public class X<T> {\n" +
				"	T foo(@NonNull T t) {\n" +
				"		return t;\n" +
				"	}\n" +
				"	public static void main(String[] args) {\n" +
				"		X<@Nullable String> xs = new X<String>();\n" +
				"		xs.foo(null);\n" +
				"	}\n" +
				"	\n" +
				"	public void test(X<String> x) {\n" +
				"		X<@Nullable String> xs = x;\n" +
				"		xs.bar(null);\n" +
				"	}\n" +
				"	public void bar(T t) {}\n" +
				"\n" +
				"}\n"
			},
			getCompilerOptions(),
			"----------\n" +
			"1. WARNING in X.java (at line 9)\n" +
			"	X<@Nullable String> xs = new X<String>();\n" +
			"	                         ^^^^^^^^^^^^^^^\n" +
			"Null type safety (type annotations): The expression of type \'@NonNull X<String>\' needs unchecked conversion to conform to \'X<@Nullable String>\'\n" +
			"----------\n" +
			"2. ERROR in X.java (at line 10)\n" +
			"	xs.foo(null);\n" +
			"	       ^^^^\n" +
			"Null type mismatch: required \'@NonNull String\' but the provided value is null\n" +
			"----------\n" +
			"3. WARNING in X.java (at line 14)\n" +
			"	X<@Nullable String> xs = x;\n" +
			"	                         ^\n" +
			"Null type safety (type annotations): The expression of type \'X<String>\' needs unchecked conversion to conform to \'X<@Nullable String>\'\n" +
			"----------\n");
	}

