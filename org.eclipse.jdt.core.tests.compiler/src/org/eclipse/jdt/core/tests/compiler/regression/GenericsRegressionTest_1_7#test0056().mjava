// https://bugs.eclipse.org/bugs/show_bug.cgi?id=340747
// qualified allocation
public void test0056() {
	Map customOptions = getCompilerOptions();
	customOptions.put(CompilerOptions.OPTION_ReportRedundantSpecificationOfTypeArguments, CompilerOptions.ERROR);
	customOptions.put(CompilerOptions.OPTION_ReportRawTypeReference, CompilerOptions.IGNORE);
	this.runNegativeTest(
		new String[] {
			"X.java",
			"public class X <T> {\n" +
			"	void foo1() {\n" +
			"		X<String>.Item<Thread> i = new X<Exception>().new Item<Thread>();\n" +
			"	}\n" +
			"	void foo2() {\n" +
			"		X<Exception>.Item<Thread> j = new X<Exception>.Item<Thread>();\n" +
			"	}\n" +
			"	class Item <E> {}\n" +
			"}\n"
		},
		"----------\n" +
		"1. ERROR in X.java (at line 3)\n" +
		"	X<String>.Item<Thread> i = new X<Exception>().new Item<Thread>();\n" +
		"	                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" +
		"Type mismatch: cannot convert from X<Exception>.Item<Thread> to X<String>.Item<Thread>\n" +
		"----------\n" +
		"2. ERROR in X.java (at line 3)\n" +
		"	X<String>.Item<Thread> i = new X<Exception>().new Item<Thread>();\n" +
		"	                                                  ^^^^\n" +
		"Redundant specification of type arguments <Thread>\n" +
		"----------\n" +
		"3. ERROR in X.java (at line 6)\n" +
		"	X<Exception>.Item<Thread> j = new X<Exception>.Item<Thread>();\n" +
		"	                                  ^^^^^^^^^^^^^^^^^\n" +
		"Cannot allocate the member type X<Exception>.Item<Thread> using a parameterized compound name; use its simple name and an enclosing instance of type X<Exception>\n" +
		"----------\n" +
		"4. ERROR in X.java (at line 6)\n" +
		"	X<Exception>.Item<Thread> j = new X<Exception>.Item<Thread>();\n" +
		"	                                               ^^^^\n" +
		"Redundant specification of type arguments <Thread>\n" +
		"----------\n",
		null,
		false,
		customOptions);
}

