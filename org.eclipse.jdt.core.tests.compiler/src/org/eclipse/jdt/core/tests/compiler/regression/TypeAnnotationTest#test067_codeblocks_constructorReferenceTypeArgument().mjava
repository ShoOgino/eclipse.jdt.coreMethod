	public void test067_codeblocks_constructorReferenceTypeArgument() throws Exception {
		this.runConformTest(
			new String[] {
				"X.java",
				"import java.util.*;\n" +
				"interface MR { X process(String input); }\n" +
				"public class X<T> {\n" + 
				"   public X(T s) {};\n" +
				"   public static <T> String foo(String bar) { return bar; }\n"+
				"	public void bar() {\n" +
				"       System.out.println(\"abc\");\n" +
				"       MR ref = X::<@A String>new;\n" +
				"       ref.process(\"abc\");\n" +
				"	}\n" + 
				"}",
				
				"A.java",
				"import java.lang.annotation.*;\n" + 
				"@Target(ElementType.TYPE_USE)\n" + 
				"@Retention(RetentionPolicy.RUNTIME)\n" + 
				"@interface A {\n" + 
				"	String value() default \"default\";\n" + 
				"}\n",
				
		},
		"");
		String expectedOutput =
			"    RuntimeVisibleTypeAnnotations: \n" + 
			"      #53 @A(\n" + 
			"        target type = 0x4a CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT\n" + 
			"        offset = 8\n" + 
			"        type argument index = 0\n" + 
			"      )\n";
		checkDisassembledClassFile(OUTPUT_DIR + File.separator + "X.class", "X", expectedOutput, ClassFileBytesDisassembler.SYSTEM);
	}

