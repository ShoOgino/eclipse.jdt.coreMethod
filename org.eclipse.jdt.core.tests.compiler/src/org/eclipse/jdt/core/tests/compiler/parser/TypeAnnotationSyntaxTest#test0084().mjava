// To test Parser.consumeAdditionalBound() with Type annotations
public void test0084() throws IOException {
	String source =
		"@Marker interface I<@Negative T> {}\n" +
		"@SingleMember(0) interface J<@Positive T> {}\n" +
		"@Marker class A implements I<@SingleMember(0) A>, J<@Marker A> {}\n" +
		"@Normal(value = 1) class X<E extends @Positive A & @Marker I<A> & @Marker @SingleMember(1) J<@Readonly A>>  {\n" +
		"}";
	String expectedUnitToString =
		"@Marker interface I<@Negative T> {\n" +
		"}\n" +
		"@SingleMember(0) interface J<@Positive T> {\n" +
		"}\n" +
		"@Marker class A implements I<@SingleMember(0) A>, J<@Marker A> {\n" +
		"  A() {\n" +
		"    super();\n" +
		"  }\n" +
		"}\n" +
		"@Normal(value = 1) class X<E extends @Positive A & @Marker I<A> & @Marker @SingleMember(1) J<@Readonly A>> {\n" +
		"  X() {\n" +
		"    super();\n" +
		"  }\n" +
		"}\n";
	checkParse(source.toCharArray(), null, "test0084", expectedUnitToString );
}

