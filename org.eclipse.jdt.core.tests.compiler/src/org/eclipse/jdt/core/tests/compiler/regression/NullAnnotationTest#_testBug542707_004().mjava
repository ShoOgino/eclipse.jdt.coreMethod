// failing, see https://bugs.eclipse.org/543860
public void _testBug542707_004() {
	if (this.complianceLevel < ClassFileConstants.JDK12) return; // switch expression
	// outer expected type (from method parameter) is propagated deeply into a switch expression
	Runner runner = new Runner();
	runner.customOptions = getCompilerOptions();
	runner.customOptions.put(JavaCore.COMPILER_PB_ENABLE_PREVIEW_FEATURES, JavaCore.ENABLED);
	runner.classLibraries = this.LIBS;
	runner.testFiles = new String[] {
		"X.java",
		"import org.eclipse.jdt.annotation.*;\n" +
		"public class X {\n" +
		"	@Nullable String maybe() { return null; }\n" + 
		"	void need(@NonNull String s) {\n" + 
		"		System.out.println(s.toLowerCase());\n" + 
		"	}\n" +
		"	void test(int i) {\n" +
		"		need(switch (i) {\n" + 
		"			case 1 -> \"\";\n" + 
		"			default -> i == 3 ? maybe() : \"\";\n" + 
		"		});\n" + 
		"	}\n" +
		"}\n"
	};
	runner.expectedCompilerLog =
			"----------\n" + 
			"1. ERROR in X.java (at line 10)\n" + 
			"	default -> i == 3 ? maybe() : \"\";\n" + 
			"	                    ^^^^^^^\n" + 
			"Null type mismatch (type annotations): required '@NonNull String' but this expression has type '@Nullable String'\n" + 
			"----------\n";
	runner.runNegativeTest();
}

