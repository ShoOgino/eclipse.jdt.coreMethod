// Bug 368546 - [compiler][resource] Avoid remaining false positives found when compiling the Eclipse SDK
// example from comment 16
public void test069() {
	if (this.complianceLevel < ClassFileConstants.JDK1_5) return; // generics used
	Map options = getCompilerOptions();
	options.put(CompilerOptions.OPTION_ReportUnclosedCloseable, CompilerOptions.ERROR);
	options.put(CompilerOptions.OPTION_ReportPotentiallyUnclosedCloseable, CompilerOptions.ERROR);
	options.put(CompilerOptions.OPTION_ReportMissingSerialVersion, CompilerOptions.IGNORE);
	this.runConformTest(new String[] {
		"Test069.java",
		"import java.io.*;\n" +
		"import java.util.Collection;\n" +
		"public class Test069 {\n" +
		"	class Profile {}\n" +
		"	class CoreException extends Exception {}\n" +
		"	void writeProfilesToStream(Collection<Profile> p, OutputStream s, String enc) {}\n" +
		"	CoreException createException(IOException ioex, String message) { return new CoreException(); }\n" +
		"	public void comment16(Collection<Profile> profiles, File file, String encoding) throws CoreException {\n" +
		"		final OutputStream stream;\n" +
		"		try {\n" +
		"			stream= new FileOutputStream(file);\n" +
		"			try {\n" +
		"				writeProfilesToStream(profiles, stream, encoding);\n" +
		"			} finally {\n" +
		"				try { stream.close(); } catch (IOException e) { /* ignore */ }\n" +
		"			}\n" +
		"		} catch (IOException e) {\n" +
		"			throw createException(e, \"message\"); // should not shout here\n" +
		"		}\n" +
		"	}\n" +
		"}\n"
	},
	"",
	null,
	true,
	null,
	options,
	null);
}

