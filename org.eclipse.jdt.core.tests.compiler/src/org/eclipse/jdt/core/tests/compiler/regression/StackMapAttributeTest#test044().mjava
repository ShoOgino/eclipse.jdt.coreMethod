	// https://bugs.eclipse.org/bugs/show_bug.cgi?id=279183
	public void test044() throws Exception {
		this.runConformTest(
			new String[] {
				"X.java",
				"public class X {\n" + 
				"	public static void main(String[] args) {\n" + 
				"		System.out.println(\"ok\");\n" + 
				"	}\n" + 
				"	private static int willNotVerify() {\n" + 
				"		int limit = 100;\n" + 
				"		int match;\n" + 
				"		int result = 200;\n" + 
				"		do {\n" + 
				"			if (limit > 0) {\n" + 
				"				continue;\n" + 
				"			}\n" + 
				"			match = 0;\n" + 
				"			while (++match < 100) {\n" + 
				"				// empty\n" + 
				"			}\n" + 
				"		} while (--limit != 0);\n" + 
				"		return result;\n" + 
				"	}\n" + 
				"}",
			},
		"ok");
	
		String expectedOutput =
			"  // Method descriptor #33 ()I\n" + 
			"  // Stack: 2, Locals: 3\n" + 
			"  private static int willNotVerify();\n" + 
			"     0  bipush 100\n" + 
			"     2  istore_0 [limit]\n" + 
			"     3  sipush 200\n" + 
			"     6  istore_2 [result]\n" + 
			"     7  iload_0 [limit]\n" + 
			"     8  ifle 14\n" + 
			"    11  goto 25\n" + 
			"    14  iconst_0\n" + 
			"    15  istore_1 [match]\n" + 
			"    16  iinc 1 1 [match]\n" + 
			"    19  iload_1 [match]\n" + 
			"    20  bipush 100\n" + 
			"    22  if_icmplt 16\n" + 
			"    25  iinc 0 -1 [limit]\n" + 
			"    28  iload_0 [limit]\n" + 
			"    29  ifne 7\n" + 
			"    32  iload_2 [result]\n" + 
			"    33  ireturn\n" + 
			"      Line numbers:\n" + 
			"        [pc: 0, line: 6]\n" + 
			"        [pc: 3, line: 8]\n" + 
			"        [pc: 7, line: 10]\n" + 
			"        [pc: 11, line: 11]\n" + 
			"        [pc: 14, line: 13]\n" + 
			"        [pc: 16, line: 14]\n" + 
			"        [pc: 25, line: 17]\n" + 
			"        [pc: 32, line: 18]\n" + 
			"      Local variable table:\n" + 
			"        [pc: 3, pc: 34] local: limit index: 0 type: int\n" + 
			"        [pc: 16, pc: 25] local: match index: 1 type: int\n" + 
			"        [pc: 7, pc: 34] local: result index: 2 type: int\n" + 
			"      Stack map table: number of frames 4\n" + 
			"        [pc: 7, full, stack: {}, locals: {int, _, int}]\n" + 
			"        [pc: 14, same]\n" + 
			"        [pc: 16, full, stack: {}, locals: {int, int, int}]\n" + 
			"        [pc: 25, full, stack: {}, locals: {int, _, int}]\n";
		checkDisassembledClassFile(OUTPUT_DIR + File.separator + "X.class", "X", expectedOutput);
	}

