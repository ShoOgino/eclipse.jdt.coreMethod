// null analysis -- test potential null ptr access warning because of static field access through object returned by method call
public void testBug247564f_1() {
	Map compilerOptions = getCompilerOptions();
	compilerOptions.put(CompilerOptions.OPTION_ReportNonStaticAccessToStatic, CompilerOptions.IGNORE);
	this.runNegativeTest(
		false,
		new String[] {
			"X.java",
			"public class X {\n" +
			"  static Object o;\n" +
			"  X getX() { return new X();\n}\n" +
			"  Y getY() { return new Y();\n}\n" +
			"  void foo() {\n" +
			"      if (getY().o == null && this.o.hashCode() == 0) return;\n" +
			"      if (getX().o == null && this.o.hashCode() == 0) return;\n" +
			"  }\n" +
			"}\n" +
			"class Y{\n" +
			"	static Object o;\n" +
			"}\n"},
		null,
		compilerOptions,
		"----------\n" +
		"1. ERROR in X.java (at line 9)\n" + 
		"	if (getX().o == null && this.o.hashCode() == 0) return;\n" + 
		"	                             ^\n" + 
		"Potential null pointer access: The field o may be null at this location\n" + 
		"----------\n",
		JavacTestOptions.Excuse.EclipseWarningConfiguredAsError);
}

