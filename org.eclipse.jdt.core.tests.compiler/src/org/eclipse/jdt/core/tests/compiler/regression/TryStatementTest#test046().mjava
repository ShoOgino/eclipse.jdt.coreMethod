//https://bugs.eclipse.org/bugs/show_bug.cgi?id=108180
public void test046() {
	this.runConformTest(
			new String[] {
				"X.java",
				"public class X {\n" + 
				"    public static Object sanityCheckBug() {\n" + 
				"        Object obj;\n" + 
				"        try {\n" + 
				"            obj = new Object();\n" + 
				"            return obj;\n" + 
				"        } finally {\n" + 
				"             obj = null;\n" + 
				"        }\n" + 
				"    }\n" + 
				"    public static void main(String[] arguments) {\n" + 
				"		X.sanityCheckBug();\n" + 
				"    }\n" + 
				"}\n",
			},
			"");
	
	CompilerOptions compilerOptions = new CompilerOptions(this.getCompilerOptions());
	String expectedOutput = !compilerOptions.inlineJsrBytecode
		?	"  // Method descriptor #15 ()Ljava/lang/Object;\n" + 
			"  // Stack: 2, Locals: 4\n" + 
			"  public static java.lang.Object sanityCheckBug();\n" + 
			"     0  new java.lang.Object [3]\n" + 
			"     3  dup\n" + 
			"     4  invokespecial java.lang.Object() [8]\n" + 
			"     7  astore_0 [obj]\n" + 
			"     8  aload_0 [obj]\n" + 
			"     9  astore_3\n" + 
			"    10  jsr 21\n" + 
			"    13  aload_3\n" + 
			"    14  areturn\n" + 
			"    15  astore_2\n" + 
			"    16  jsr 21\n" + 
			"    19  aload_2\n" + 
			"    20  athrow\n" + 
			"    21  astore_1\n" + 
			"    22  aconst_null\n" + 
			"    23  astore_0 [obj]\n" + 
			"    24  ret 1\n" + 
			"      Exception Table:\n" + 
			"        [pc: 0, pc: 13] -> 15 when : any\n" + 
			"      Line numbers:\n" + 
			"        [pc: 0, line: 5]\n" + 
			"        [pc: 8, line: 6]\n" + 
			"        [pc: 15, line: 7]\n" + 
			"        [pc: 19, line: 9]\n" + 
			"        [pc: 21, line: 7]\n" + 
			"        [pc: 22, line: 8]\n" + 
			"        [pc: 24, line: 9]\n" + 
			"      Local variable table:\n" + 
			"        [pc: 8, pc: 15] local: obj index: 0 type: java.lang.Object\n" + 
			"        [pc: 24, pc: 26] local: obj index: 0 type: java.lang.Object\n"
		: null;

	if (expectedOutput == null) {
		if (compilerOptions.targetJDK == ClassFileConstants.JDK1_5) {
			expectedOutput = "  // Method descriptor #15 ()Ljava/lang/Object;\n" + 
			"  // Stack: 2, Locals: 3\n" + 
			"  public static java.lang.Object sanityCheckBug();\n" + 
			"     0  new java.lang.Object [3]\n" + 
			"     3  dup\n" + 
			"     4  invokespecial java.lang.Object() [8]\n" + 
			"     7  astore_0 [obj]\n" + 
			"     8  aload_0 [obj]\n" + 
			"     9  astore_2\n" + 
			"    10  aconst_null\n" + 
			"    11  astore_0 [obj]\n" + 
			"    12  aload_2\n" + 
			"    13  areturn\n" + 
			"    14  astore_1\n" + 
			"    15  aconst_null\n" + 
			"    16  astore_0 [obj]\n" + 
			"    17  aload_1\n" + 
			"    18  athrow\n" + 
			"      Exception Table:\n" + 
			"        [pc: 0, pc: 10] -> 14 when : any\n" + 
			"      Line numbers:\n" + 
			"        [pc: 0, line: 5]\n" + 
			"        [pc: 8, line: 6]\n" + 
			"        [pc: 10, line: 8]\n" + 
			"        [pc: 12, line: 6]\n" + 
			"        [pc: 14, line: 7]\n" + 
			"        [pc: 15, line: 8]\n" + 
			"        [pc: 17, line: 9]\n" + 
			"      Local variable table:\n" + 
			"        [pc: 8, pc: 14] local: obj index: 0 type: java.lang.Object\n" + 
			"        [pc: 17, pc: 19] local: obj index: 0 type: java.lang.Object\n";
		} else {
			expectedOutput = "  // Method descriptor #15 ()Ljava/lang/Object;\n" + 
			"  // Stack: 2, Locals: 3\n" + 
			"  public static java.lang.Object sanityCheckBug();\n" + 
			"     0  new java.lang.Object [3]\n" + 
			"     3  dup\n" + 
			"     4  invokespecial java.lang.Object() [8]\n" + 
			"     7  astore_0 [obj]\n" + 
			"     8  aload_0 [obj]\n" + 
			"     9  astore_2\n" + 
			"    10  aconst_null\n" + 
			"    11  astore_0 [obj]\n" + 
			"    12  aload_2\n" + 
			"    13  areturn\n" + 
			"    14  astore_1\n" + 
			"    15  aconst_null\n" + 
			"    16  astore_0 [obj]\n" + 
			"    17  aload_1\n" + 
			"    18  athrow\n" + 
			"      Exception Table:\n" + 
			"        [pc: 0, pc: 10] -> 14 when : any\n" + 
			"      Line numbers:\n" + 
			"        [pc: 0, line: 5]\n" + 
			"        [pc: 8, line: 6]\n" + 
			"        [pc: 10, line: 8]\n" + 
			"        [pc: 12, line: 6]\n" + 
			"        [pc: 14, line: 7]\n" + 
			"        [pc: 15, line: 8]\n" + 
			"        [pc: 17, line: 9]\n" + 
			"      Local variable table:\n" + 
			"        [pc: 8, pc: 14] local: obj index: 0 type: java.lang.Object\n" + 
			"        [pc: 17, pc: 19] local: obj index: 0 type: java.lang.Object\n";
		}
	}

	try {
		File f = new File(OUTPUT_DIR + File.separator + "X.class");
		byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
		ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
		String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
		int index = result.indexOf(expectedOutput);
		if (index == -1 || expectedOutput.length() == 0) {
			System.out.println(Util.displayString(result, 3));
		}
		if (index == -1) {
			assertEquals("Wrong contents", expectedOutput, result);
		}
	} catch (org.eclipse.jdt.core.util.ClassFormatException e) {
		assertTrue(false);
	} catch (IOException e) {
		assertTrue(false);
	}	
}

