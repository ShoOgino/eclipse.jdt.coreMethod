	/**
	 * Test fix for bug 80257: [javadoc] Invalid missing reference warning on @see or @link tags
	 * @see "http://bugs.eclipse.org/bugs/show_bug.cgi?id=80257"
	 */
	public void testBug80257() {
		runNegativeTest(
			new String[] {
				"X.java",
				"/**\n" + 
				" * @see G#G(Object)\n" + 
				" * @see G#G(Exception)\n" + 
				" */\n" + 
				"public class X extends G<Exception> {\n" + 
				"	X(Exception exc) { super(exc);}\n" + 
				"}\n" + 
				"class G<E extends Exception> {\n" + 
				"	G(E e) {}\n" + 
				"}\n"
			},
			"----------\n" + 
			"1. ERROR in X.java (at line 2)\n" + 
			"	* @see G#G(Object)\n" + 
			"	         ^\n" + 
			"Javadoc: The constructor G(Object) is undefined\n" + 
			"----------\n" + 
			"2. ERROR in X.java (at line 3)\n" + 
			"	* @see G#G(Exception)\n" + 
			"	         ^\n" + 
			"Javadoc: The constructor G(Exception) is undefined\n" + 
			"----------\n" + 
			"3. ERROR in X.java (at line 5)\n" + 
			"	public class X extends G<Exception> {\n" + 
			"	                       ^\n" + 
			"The type G is not generic; it cannot be parameterized with arguments <Exception>\n" + 
			"----------\n" + 
			"4. ERROR in X.java (at line 5)\n" + 
			"	public class X extends G<Exception> {\n" + 
			"	                         ^^^^^^^^^\n" + 
			"Syntax error, parameterized types are only available if source level is 5.0\n" + 
			"----------\n" + 
			"5. ERROR in X.java (at line 6)\n" + 
			"	X(Exception exc) { super(exc);}\n" + 
			"	                   ^^^^^^^^^^\n" + 
			"The constructor Object(Exception) is undefined\n" + 
			"----------\n" + 
			"6. ERROR in X.java (at line 8)\n" + 
			"	class G<E extends Exception> {\n" + 
			"	        ^^^^^^^^^^^^^^^^^^^\n" + 
			"Syntax error, type parameters are only available if source level is 5.0\n" + 
			"----------\n" + 
			"7. ERROR in X.java (at line 9)\n" + 
			"	G(E e) {}\n" + 
			"	  ^\n" + 
			"E cannot be resolved to a type\n" + 
			"----------\n"
		);
	}

