// https://bugs.eclipse.org/bugs/show_bug.cgi?id=102728
// check if the generated code is OK when leveraging CombinedBinaryExpression
// variant involving a left-deep right expression at the topmost level, with
// a constant low in tree
public void test0015_combined_binary_expression() {
	assertEquals(20, CombinedBinaryExpression.ARITY_MAX_MIN);
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" + 
			"public static void main(String args[]) {\n" + 
			"    final int max = 30; \n" + 
			"    String s[] = new String[max];\n" + 
			"    for (int i = 0; i < max; i++) {\n" + 
			"        s[i] = \"a\";\n" + 
			"    }\n" + 
			"    foo(s);\n" + 
			"}\n" + 
			"static void foo (String s[]) {\n" +
			"    final String c = \"c\";\n" + 
			"    System.out.println(\n" + 
			"        \"b\" + \n" +
			"         (c + c + c + c + c + c + c + c + c + c + \n" +
			"          c + c + c + c + c + c + c + c + c + c + \n" +
			"          s[0] + s[1] + s[2])\n" + 
			"        );\n" + 
			"}\n" + 
			"}"
		},
		"bccccccccccccccccccccaaa");
}

