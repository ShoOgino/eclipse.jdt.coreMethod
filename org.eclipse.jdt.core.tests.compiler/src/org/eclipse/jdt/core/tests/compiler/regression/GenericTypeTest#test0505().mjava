	//https://bugs.eclipse.org/bugs/show_bug.cgi?id=85303 - variation
	public void test0505() throws Exception {
		this.runConformTest(
			new String[] {
				"X.java",
				"class XA {}\n" + 
				"interface XB {\n" + 
				"	XB CONST = new XB(){ public String toString() { return \"SUCCESS\"; }};\n" + 
				"}\n" + 
				"class XAB extends XA implements XB {}\n" + 
				"\n" + 
				"public class X <E extends XA&XB> {\n" + 
				"  E e;\n" + 
				"  public static void main(String[] args) {\n" + 
				"	  new X<XAB>().foo();\n" + 
				"  }\n" + 
				"  public void foo() {\n" + 
				"	new Object() {\n" + 
				"		void run() {\n" + 
				"			System.out.print(e.CONST);\n" + 
				"		}\n" + 
				"	}.run();\n" + 
				"    System.out.print(e.CONST);\n" + 
				"  }\n" + 
				"}\n",
			},
			"SUCCESSSUCCESS");		
		String expectedOutput =
			"// Signature: <E:LXA;:LXB;>Ljava/lang/Object;\n" + 
			"public class X {\n" + 
			"  \n" + 
			"  // Field descriptor #6 LXA;\n" + 
			"  // Signature: TE;\n" + 
			"  XA e;\n" + 
			"  \n" + 
			"  // Method descriptor #10 ()V\n" + 
			"  // Stack: 1, Locals: 1\n" + 
			"  public X();\n" + 
			"    0  aload_0 [this]\n" + 
			"    1  invokespecial java.lang.Object() [12]\n" + 
			"    4  return\n" + 
			"      Line numbers:\n" + 
			"        [pc: 0, line: 7]\n" + 
			"      Local variable table:\n" + 
			"        [pc: 0, pc: 5] local: this index: 0 type: X\n" + 
			"      Local variable type table:\n" + 
			"        [pc: 0, pc: 5] local: this index: 0 type: X<E>\n" + 
			"  \n" + 
			"  // Method descriptor #21 ([Ljava/lang/String;)V\n" + 
			"  // Stack: 2, Locals: 1\n" + 
			"  public static void main(java.lang.String[] args);\n" + 
			"     0  new X [1]\n" + 
			"     3  dup\n" + 
			"     4  invokespecial X() [22]\n" + 
			"     7  invokevirtual X.foo() : void [23]\n" + 
			"    10  return\n" + 
			"      Line numbers:\n" + 
			"        [pc: 0, line: 10]\n" + 
			"        [pc: 10, line: 11]\n" + 
			"      Local variable table:\n" + 
			"        [pc: 0, pc: 11] local: args index: 0 type: java.lang.String[]\n" + 
			"  \n" + 
			"  // Method descriptor #10 ()V\n" + 
			"  // Stack: 3, Locals: 1\n" + 
			"  public void foo();\n" + 
			"     0  new X$1 [28]\n" + 
			"     3  dup\n" + 
			"     4  aload_0 [this]\n" + 
			"     5  invokespecial X$1(X) [30]\n" + 
			"     8  invokevirtual X$1.run() : void [33]\n" + 
			"    11  getstatic java.lang.System.out : java.io.PrintStream [36]\n" + 
			"    14  aload_0 [this]\n" + 
			"    15  getfield X.e : XA [42]\n" + 
			"    18  checkcast XB [44]\n" + 
			"    21  pop\n" + 
			"    22  getstatic XB.CONST : XB [46]\n" + 
			"    25  invokevirtual java.io.PrintStream.print(java.lang.Object) : void [50]\n" + 
			"    28  return\n" + 
			"      Line numbers:\n" + 
			"        [pc: 0, line: 13]\n" + 
			"        [pc: 8, line: 17]\n" + 
			"        [pc: 11, line: 18]\n" + 
			"        [pc: 28, line: 19]\n" + 
			"      Local variable table:\n" + 
			"        [pc: 0, pc: 29] local: this index: 0 type: X\n" + 
			"      Local variable type table:\n" + 
			"        [pc: 0, pc: 29] local: this index: 0 type: X<E>\n";
		
		File f = new File(OUTPUT_DIR + File.separator + "X.class");
		byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
		ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
		String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
		int index = result.indexOf(expectedOutput);
		if (index == -1 || expectedOutput.length() == 0) {
			System.out.println(Util.displayString(result, 3));
		}
		if (index == -1) {
			assertEquals("Wrong contents", expectedOutput, result);
		}
	}				

