// partial rebuild - method signature changed (return type)
public void test1000_partial_rebuild() {
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" +
			"static public void main(String args[]) {\n" +
			"  Z.go();\n" +
			"}\n" +
			"}\n",
			"Z.java",
			"public class Z {\n" +
			"static public void go() {\n" +
			"  int flag = 0;\n" +
			"  try {\n" +
			"    new Y().random();\n" +
			"    flag = 1;\n" +
			"  }\n" +
			"  catch (NoSuchMethodError e) {\n" +
			"    flag = 2;\n" +
			"  }\n" +
			"  catch (Throwable t) {\n" +
			"    flag = 3;\n" +
			"  }\n" +
			"  System.out.println(flag);\n" +
			"}\n" +
			"}\n",
			"Y.java",
			"public class Y {\n" +
			"java.util.Random generator = new java.util.Random();" +
			"public byte random() {\n" +
			"  return (byte) (generator.nextInt() % Byte.MAX_VALUE);\n" +
			"}\n" +
			"}\n",
			},
		"1");
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" +
			"static public void main(String args[]) {\n" +
			"  Z.go();\n" +
			"}\n" +
			"}\n",
			"Y.java",
			"public class Y {\n" +
			"java.util.Random generator = new java.util.Random();" +
			"public int random() {\n" + // random now returns an int
			"  return generator.nextInt();\n" +
			"}\n" +
			"}\n",
			},
		"2",
		null,
		false, // do not purge output directory - pick old version of Z.class
		null);
}

