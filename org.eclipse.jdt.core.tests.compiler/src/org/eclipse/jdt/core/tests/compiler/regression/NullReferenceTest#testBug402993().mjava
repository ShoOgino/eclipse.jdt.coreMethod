// Bug 402993 - [null] Follow up of bug 401088: Missing warning about redundant null check
public void testBug402993() {
	runNegativeNullTest(
		new String[] {
			"Test.java",
			"public class Test {\n" +
			"\n" +
			"	private static void occasionallyThrowException() throws Exception {\n" +
			"		if ((System.currentTimeMillis() & 1L) != 0L)\n" +
			"			throw new Exception();\n" +
			"	}\n" +
			"\n" +
			"	private static void open() throws Exception {\n" +
			"		occasionallyThrowException();\n" +
			"	}\n" +
			"\n" +
			"	private static void close() throws Exception {\n" +
			"		occasionallyThrowException();\n" +
			"	}\n" +
			"\n" +
			"	public static void main(String s[]) {\n" +
			"		Exception exc = null;\n" +
			"		try {\n" +
			"			open();\n" +
			"			// do more things\n" +
			"		}\n" +
			"		catch (Exception e) {\n" +
			"			if (exc == null) // no warning here ??\n" +
			"				;\n" +
			"		}\n" +
			"		finally {\n" +
			"			try {\n" +
			"				close();\n" +
			"			}\n" +
			"			catch (Exception e) {\n" +
			"				if (exc == null) // No warning here ??\n" +
			"					exc = e;\n" +
			"			}\n" +
			"		}\n" +
			"	}\n" +
			"}\n"
		},
		"----------\n" +
		"1. ERROR in Test.java (at line 23)\n" +
		"	if (exc == null) // no warning here ??\n" +
		"	    ^^^\n" +
		"Redundant null check: The variable exc can only be null at this location\n" +
		"----------\n" +
		"2. ERROR in Test.java (at line 31)\n" +
		"	if (exc == null) // No warning here ??\n" +
		"	    ^^^\n" +
		"Redundant null check: The variable exc can only be null at this location\n" +
		"----------\n");
}

