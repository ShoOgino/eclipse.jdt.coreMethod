	public void test001() { // all together
		this.runNegativeTest(
			new String[] {
				"ALL.java",
				"class A {}\n" +
				"class B {}\n" +
				"class X<U> { public void foo(U u) {} }\n" +
				"interface I<U> { public void foo(U u); }\n" +

				"class J<T> implements I<B> { public void foo(T t) {} }\n" +
				"class K<T> implements I<T> { public void foo(T t) {} }\n" +
				"class L<T> implements I { public void foo(T t) {} }\n" +

				"class Y<T> extends X<A> { public void foo(T t) { super.foo(t); } }\n" +
				"class Z<T> extends X<T> { public void foo(T t) { super.foo(t); } }\n" +
				"class W<T> extends X { public void foo(T t) { super.foo(t); } }\n",
			},
			"----------\n" + 
			"1. ERROR in ALL.java (at line 5)\n" + 
			"	class J<T> implements I<B> { public void foo(T t) {} }\n" + 
			"	      ^\n" + 
			"Class must implement the inherited abstract method I<B>.foo(B)\n" + 
			"----------\n" + 
			"2. ERROR in ALL.java (at line 7)\n" + 
			"	class L<T> implements I { public void foo(T t) {} }\n" + 
			"	      ^\n" + 
			"Class must implement the inherited abstract method I.foo(Object)\n" + 
			"----------\n" + 
			"3. ERROR in ALL.java (at line 8)\n" + 
			"	class Y<T> extends X<A> { public void foo(T t) { super.foo(t); } }\n" + 
			"	                                                       ^^^\n" + 
			"The method foo(A) in the type X<A> is not applicable for the arguments (T)\n" + 
			"----------\n" + 
			"4. WARNING in ALL.java (at line 10)\n" + 
			"	class W<T> extends X { public void foo(T t) { super.foo(t); } }\n" + 
			"	                                              ^^^^^^^^^^^^\n" + 
			"Type safety: The method foo(Object) belongs to the raw type X. References to generic type X<U> should be parameterized\n" + 
			"----------\n"
			/*
			ALL.java:5: J is not abstract and does not override abstract method foo(B) in I
			ALL.java:7: L is not abstract and does not override abstract method foo(java.lang.Object) in I
			ALL.java:8: foo(A) in X<A> cannot be applied to (T)
			ALL.java:10: warning: [unchecked] unchecked call to foo(U) as a member of the raw type X
			 */
		);
	}

