	public void testAssertNonNullElements() {
		runConformTestWithLibs(
			new String[] {
				"X.java",
				"import org.eclipse.jdt.annotation.*;\n" +
				"import static org.eclipse.jdt.annotation.Checks.*;\n" +
				"import java.util.*;\n" +
				"public class X {\n" +
				"	@SuppressWarnings(\"null\")\n" +
				"	static @NonNull String hide(String some) {\n" +
				"		return some;\n" +
				"	}\n" +
				"	public static void main(String... args) {\n" +
				"		@NonNull List<String> myList = new ArrayList<>();\n" +
				"		myList.add(\"foo\");\n" +
				"		myList.add(null);\n" +
				"		try {\n" +
				"			assertNonNullElements(myList);\n" +
				"		} catch (NullPointerException npe) {\n" +
				"			System.out.println(npe.getMessage());\n" +
				"		}\n" +
				"		@NonNull List<@NonNull String> myList2 = new ArrayList<>();\n" +
				"		myList2.add(\"foo\");\n" +
				"		myList2.add(hide(null));\n" +
				"		try {\n" +
				"			assertNonNullElements(myList2, \"Shouldn't!\");\n" +
				"		} catch (NullPointerException npe) {\n" +
				"			System.out.println(npe.getMessage());\n" +
				"		}\n" +
				"	}\n" +
				"}\n"
			},
			getCompilerOptions(),
			"",
			"Value in position 1 must not be null\n" +
			"Shouldn\'t!");
	}

