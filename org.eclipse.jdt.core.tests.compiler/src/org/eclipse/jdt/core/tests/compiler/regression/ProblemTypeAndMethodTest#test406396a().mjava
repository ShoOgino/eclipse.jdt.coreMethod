// https://bugs.eclipse.org/bugs/show_bug.cgi?id=406396, Method can be static analysis misses a bunch of cases...
public void test406396a() {
	Runner runner = new Runner();
	runner.customOptions = getCompilerOptions();
	runner.customOptions.put(CompilerOptions.OPTION_ReportMethodCanBeStatic, CompilerOptions.ERROR);
	runner.customOptions.put(CompilerOptions.OPTION_ReportMethodCanBePotentiallyStatic, CompilerOptions.ERROR);
	runner.testFiles =
		new String[] {
			"X.java",
			"public class X  {\n" +
			"	int f;\n" +
			"	int foo() {\n" +
			"		int f = 0;\n" +
			"		return f;\n" +
			"	}\n" +
			"	int goo() {\n" +
			"		return 0;\n" +
			"	}\n" +
			"}\n"
		};
	runner.expectedCompilerLog =
		"----------\n" +
		"1. ERROR in X.java (at line 3)\n" +
		"	int foo() {\n" +
		"	    ^^^^^\n" +
		"The method foo() from the type X can potentially be declared as static\n" +
		"----------\n" +
		"2. WARNING in X.java (at line 4)\n" +
		"	int f = 0;\n" +
		"	    ^\n" +
		"The local variable f is hiding a field from type X\n" +
		"----------\n" +
		"3. ERROR in X.java (at line 7)\n" +
		"	int goo() {\n" +
		"	    ^^^^^\n" +
		"The method goo() from the type X can potentially be declared as static\n" +
		"----------\n";
	runner.javacTestOptions =
		JavacTestOptions.Excuse.EclipseWarningConfiguredAsError;
	runner.runNegativeTest();
}

