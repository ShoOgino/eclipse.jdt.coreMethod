public void test022() { 
	this.runConformTest(
		new String[] {
			"X.java",
			"import java.util.ArrayList;\n" + 
			"\n" + 
			"public class X {\n" + 
			"	public static void main(String[] args) {\n" + 
			"		ArrayList<Integer> arrayList = new ArrayList<Integer>();\n" + 
			"		for (int i = 0; i < 10; i++) {\n" + 
			"			arrayList.add(new Integer(i));\n" + 
			"		}\n" + 
			"		int sum = 0;\n" + 
			"		for (Integer e : arrayList) {\n" + 
			"			sum += e.intValue();\n" + 
			"		}\n" + 
			"		System.out.println(sum);\n" + 
			"	}\n" + 
			"}",
		},
		"45");
		
	String expectedOutput =
		"  // Method descriptor #15 ([Ljava/lang/String;)V\n" + 
		"  // Stack: 4, Locals: 5\n" + 
		"  public static void main(String[] args);\n" + 
		"     0  new java.util.ArrayList [16]\n" + 
		"     3  dup\n" + 
		"     4  invokespecial java.util.ArrayList() [18]\n" + 
		"     7  astore_1 [arrayList]\n" + 
		"     8  iconst_0\n" + 
		"     9  istore_2 [i]\n" + 
		"    10  goto 29\n" + 
		"    13  aload_1 [arrayList]\n" + 
		"    14  new java.lang.Integer [19]\n" + 
		"    17  dup\n" + 
		"    18  iload_2 [i]\n" + 
		"    19  invokespecial java.lang.Integer(int) [21]\n" + 
		"    22  invokevirtual java.util.ArrayList.add(java.lang.Object) : boolean [24]\n" + 
		"    25  pop\n" + 
		"    26  iinc 2 1 [i]\n" + 
		"    29  iload_2 [i]\n" + 
		"    30  bipush 10\n" + 
		"    32  if_icmplt 13\n" + 
		"    35  iconst_0\n" + 
		"    36  istore_2 [sum]\n" + 
		"    37  aload_1 [arrayList]\n" + 
		"    38  invokevirtual java.util.ArrayList.iterator() : java.util.Iterator [28]\n" + 
		"    41  astore 4\n" + 
		"    43  goto 64\n" + 
		"    46  aload 4\n" + 
		"    48  invokeinterface java.util.Iterator.next() : java.lang.Object [32] [nargs: 1]\n" + 
		"    53  checkcast java.lang.Integer [19]\n" + 
		"    56  astore_3 [e]\n" + 
		"    57  iload_2 [sum]\n" + 
		"    58  aload_3 [e]\n" + 
		"    59  invokevirtual java.lang.Integer.intValue() : int [38]\n" + 
		"    62  iadd\n" + 
		"    63  istore_2 [sum]\n" + 
		"    64  aload 4\n" + 
		"    66  invokeinterface java.util.Iterator.hasNext() : boolean [42] [nargs: 1]\n" + 
		"    71  ifne 46\n" + 
		"    74  getstatic java.lang.System.out : java.io.PrintStream [46]\n" + 
		"    77  iload_2 [sum]\n" + 
		"    78  invokevirtual java.io.PrintStream.println(int) : void [52]\n" + 
		"    81  return\n" + 
		"      Line numbers:\n" + 
		"        [pc: 0, line: 5]\n" + 
		"        [pc: 8, line: 6]\n" + 
		"        [pc: 13, line: 7]\n" + 
		"        [pc: 26, line: 6]\n" + 
		"        [pc: 35, line: 9]\n" + 
		"        [pc: 37, line: 10]\n" + 
		"        [pc: 57, line: 11]\n" + 
		"        [pc: 64, line: 10]\n" + 
		"        [pc: 74, line: 13]\n" + 
		"        [pc: 81, line: 14]\n" + 
		"      Local variable table:\n" + 
		"        [pc: 0, pc: 82] local: args index: 0 type: java.lang.String[]\n" + 
		"        [pc: 8, pc: 82] local: arrayList index: 1 type: java.util.ArrayList\n" + 
		"        [pc: 10, pc: 35] local: i index: 2 type: int\n" + 
		"        [pc: 37, pc: 82] local: sum index: 2 type: int\n" + 
		"        [pc: 57, pc: 74] local: e index: 3 type: java.lang.Integer\n" + 
		"      Local variable type table:\n" + 
		"        [pc: 8, pc: 82] local: arrayList index: 1 type: java.util.ArrayList<java.lang.Integer>\n";
	
	try {
		File f = new File(OUTPUT_DIR + File.separator + "X.class");
		byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
		ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
		String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
		int index = result.indexOf(expectedOutput);
		if (index == -1 || expectedOutput.length() == 0) {
			System.out.println(Util.displayString(result, 3));
		}
		if (index == -1) {
			assertEquals("Wrong contents", expectedOutput, result);
		}
	} catch (org.eclipse.jdt.core.util.ClassFormatException e) {
		assertTrue(false);
	} catch (IOException e) {
		assertTrue(false);
	}
}

