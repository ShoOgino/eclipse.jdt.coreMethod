//Bug 395977 - Resource leak warning behavior possibly incorrect for anonymous inner class
//variant with named local class - don't accept as a secure resource wrapper since close() method exist
public void testBug395977_1a() {
	Map options = getCompilerOptions();
	options.put(CompilerOptions.OPTION_ReportPotentiallyUnclosedCloseable, CompilerOptions.ERROR);
	options.put(CompilerOptions.OPTION_ReportUnclosedCloseable, CompilerOptions.ERROR);
	runLeakTest(
		new String[] {
			"WriterTest.java",
			"import java.io.*;\n" + 
			"\n" + 
			"public class WriterTest implements Runnable\n" + 
			"{\n" + 
			"   private BufferedWriter m_Writer;\n" + 
			"   \n" + 
			"   public void run()\n" + 
			"   {\n" + 
			"      try\n" + 
			"      {\n" + 
			"         initializeWriter();\n" + 
			"         \n" + 
			"         m_Writer.write(\"string\");\n" + 
			"         m_Writer.newLine();\n" + 
			"         \n" + 
			"         closeWriter();\n" + 
			"      }\n" + 
			"      catch (IOException ioe)\n" + 
			"      {\n" + 
			"         ioe.printStackTrace();\n" + 
			"      }\n" + 
			"   }\n" + 
			"   \n" + 
			"   private void initializeWriter()\n" + 
			"      throws UnsupportedEncodingException, FileNotFoundException\n" + 
			"   {\n" + 
			"      class MyBufferedWriter extends BufferedWriter\n" + 
			"      {\n" +
			"         MyBufferedWriter(OutputStreamWriter writer) { super(writer); }\n" +
			"         /**\n" + 
			"          * Writes an LF character on all platforms, to avoid constantly flipping the line terminator style.\n" + 
			"          */\n" + 
			"         public void newLine() throws IOException\n" + 
			"         {\n" + 
			"            write('\\n');\n" + 
			"         }\n" +
			"         public void close() {}\n" + 
			"      };" +
			"      m_Writer = new MyBufferedWriter(new OutputStreamWriter(new FileOutputStream(\"file\"), \"UTF-8\"));\n" + 
			"   }\n" + 
			"   \n" + 
			"   private void closeWriter()\n" + 
			"      throws IOException\n" + 
			"   {\n" + 
			"      m_Writer.close();\n" + 
			"   }\n" + 
			"}"
		},
		"----------\n" + 
		"1. ERROR in WriterTest.java (at line 38)\n" + 
		"	};      m_Writer = new MyBufferedWriter(new OutputStreamWriter(new FileOutputStream(\"file\"), \"UTF-8\"));\n" + 
		"	                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
		"Potential resource leak: \'<unassigned Closeable value>\' may not be closed\n" + 
		"----------\n",
		options);
}

