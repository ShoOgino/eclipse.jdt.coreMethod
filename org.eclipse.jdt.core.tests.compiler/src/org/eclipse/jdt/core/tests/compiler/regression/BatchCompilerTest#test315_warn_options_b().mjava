// -warn option - regression tests to check option nullAnnot and missingNullDefault
// https://bugs.eclipse.org/bugs/show_bug.cgi?id=372012
public void test315_warn_options_b() {
	this.runNegativeTest(
		new String[] {
				"X1.java",
				"public class X1 {\n" +
				"	Zork z;\n" +
				"}\n",
				"org/eclipse/jdt/annotation/NonNull.java",
				NONNULL_ANNOTATION_CONTENT,
				"org/eclipse/jdt/annotation/Nullable.java",
				NULLABLE_ANNOTATION_CONTENT,
				"org/eclipse/jdt/annotation/NonNullByDefault.java",				
				NONNULL_BY_DEFAULT_ANNOTATION_CONTENT
		},
		"\"" + OUTPUT_DIR +  File.separator + "X1.java\""
		+ " -sourcepath \"" + OUTPUT_DIR + "\""
		+ " -1.5"
		+ " -warn:+nullAnnot -warn:+null -missingNullDefault -proc:none -d \"" + OUTPUT_DIR + "\"",
		"",
		"----------\n" + 
		"1. WARNING in ---OUTPUT_DIR_PLACEHOLDER---/X1.java (at line 1)\n" + 
		"	public class X1 {\n" + 
		"	             ^^\n" + 
		"A default nullness annotation has not been specified for the type X1\n" + 
		"----------\n" + 
		"2. ERROR in ---OUTPUT_DIR_PLACEHOLDER---/X1.java (at line 2)\n" + 
		"	Zork z;\n" + 
		"	^^^^\n" + 
		"Zork cannot be resolved to a type\n" + 
		"----------\n" + 
		"2 problems (1 error, 1 warning)", 
		true);
}

