	// https://bugs.eclipse.org/bugs/show_bug.cgi?id=82159
	public void test0446() {
		this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X<A> {\n" + 
				"  class Inner<B> { }\n" + 
				"\n" + 
				"  void method() {\n" + 
				"    X<String>.Inner<Integer> a= new X<String>().new Inner<Integer>();\n" + 
				"    Inner<Integer> b= new X<A>().new Inner<Integer>();\n" + 
				"    Inner<Integer> c= new Inner<Integer>();\n" + 
				"    //OK for javac and eclipse\n" + 
				"\n" + 
				"    X<String>.Inner<Integer> d= new X<String>.Inner<Integer>();\n" + 
				"    //eclipse: OK\n" + 
				"    //javac: error: \'(\' or \'[\' expected\n" + 
				"\n" + 
				"    X<A>.Inner<Integer> e= new X<A>().new Inner<Integer>();\n" + 
				"    X<A>.Inner<Integer> f= new Inner<Integer>();\n" + 
				"    e= b;\n" + 
				"    f= c;\n" + 
				"    //javac: OK\n" + 
				"    //eclipse: Type mismatch: cannot convert from X<A>.Inner<Integer> to X<A>.Inner<Integer>\n" + 
				"\n" + 
				"  }\n" + 
				"}\n" + 
				"\n" + 
				"class External {\n" + 
				"  void m() {\n" + 
				"    X<String>.Inner<Integer> x= new X<String>().new Inner<Integer>();\n" + 
				"    //OK for javac and eclipse\n" + 
				"  }\n" + 
				"}\n",
			},
			"----------\n" + 
			"1. ERROR in X.java (at line 10)\n" + 
			"	X<String>.Inner<Integer> d= new X<String>.Inner<Integer>();\n" + 
			"	                                ^^^^^^^^^^^^^^^\n" + 
			"Cannot allocate the member type X<String>.Inner<Integer> using a parameterized compound name; use its simple name and an enclosing instance of type X<String>\n" + 
			"----------\n");
	}		

