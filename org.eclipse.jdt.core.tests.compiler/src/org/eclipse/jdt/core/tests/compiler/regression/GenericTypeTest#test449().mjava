	// https://bugs.eclipse.org/bugs/show_bug.cgi?id=82159 - variation
	public void test449() {
		this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X<A> {\n" + 
				"  class Inner<B> { \n" + 
				"  }\n" + 
				"\n" + 
				"  void method() {\n" + 
				"    X<String>.Inner<Integer> d4 = new X.Inner<Integer>();\n" + 
				"  }\n" + 
				"}\n" ,
			},
			"----------\n" + 
			"1. WARNING in X.java (at line 6)\r\n" + 
			"	X<String>.Inner<Integer> d4 = new X.Inner<Integer>();\r\n" + 
			"	                              ^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Type safety: The expression of type X.Inner<Integer> is converted to X<String>.Inner<Integer> using a raw conversion. References to generic type X<A>.Inner<B> should be parameterized\n" + 
			"----------\n" + 
			"2. ERROR in X.java (at line 6)\r\n" + 
			"	X<String>.Inner<Integer> d4 = new X.Inner<Integer>();\r\n" + 
			"	                                  ^^^^^^^\n" + 
			"The member type X.Inner<Integer> must be qualified with a parameterized type, since it is not static\n" + 
			"----------\n");
	}			

