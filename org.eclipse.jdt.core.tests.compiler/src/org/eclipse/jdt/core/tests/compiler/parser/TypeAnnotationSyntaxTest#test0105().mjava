// To test Parser.consumeCastExpressionWithPrimitiveType() with Type Annotations
public void test0105() throws IOException {
	String source =
		"import java.util.HashMap;\n" +
		"class X {\n" +
		"	public static void main(String[] args) {\n" +
		"		HashMap<Byte, Byte> subst;\n" +
		"		subst = new HashMap<Byte, Byte>();\n" +
		"		subst.put((@Marker byte)1, (@Positive byte)1);\n" +
		"		if (1 + subst.get((@Positive @Normal(value = 10) byte)1) > 0.f) {\n" +
		"			System.out.println(\"SUCCESS\");\n" +
		"		}		\n" +
		"	}\n" +
		"}\n";
	String expectedUnitToString =
		"import java.util.HashMap;\n" +
		"class X {\n" +
		"  X() {\n" +
		"    super();\n" +
		"  }\n" +
		"  public static void main(String[] args) {\n" +
		"    HashMap<Byte, Byte> subst;\n" +
		"    subst = new HashMap<Byte, Byte>();\n" +
		"    subst.put((@Marker byte) 1, (@Positive byte) 1);\n" +
		"    if (((1 + subst.get((@Positive @Normal(value = 10) byte) 1)) > 0.f))\n" +
		"        {\n" +
		"          System.out.println(\"SUCCESS\");\n" +
		"        }\n" +
		"  }\n" +
		"}\n";
	checkParse(source.toCharArray(), null, "test0105", expectedUnitToString );
}

