// https://bugs.eclipse.org/bugs/show_bug.cgi?id=127575
public void testBug127575d() {
	Runner runner = new Runner();
	runner.testFiles =
			new String[] {
				"X.java",
				"public class X {\n" +
				"  void foo(Object o1, Object o2) {\n" +
				"    org.eclipse.core.runtime.Assert.isLegal(o1 != null && o2 == null);\n" +
				"    if (o1 == null) { };\n" + 		// complain
				"    if (o2 == null) { };\n" + 		// complain
				"  }\n" +
				"}\n"};
	runner.expectedCompilerLog =
			"----------\n" +
			"1. ERROR in X.java (at line 4)\n" +
			"	if (o1 == null) { };\n" +
			"	    ^^\n" +
			"Null comparison always yields false: The variable o1 cannot be null at this location\n" +
			"----------\n" +
			"2. WARNING in X.java (at line 4)\n" +
			"	if (o1 == null) { };\n" +
			"	                ^^^\n" +
			"Dead code\n" +
			"----------\n" +
			"3. ERROR in X.java (at line 5)\n" +
			"	if (o2 == null) { };\n" +
			"	    ^^\n" +
			"Redundant null check: The variable o2 can only be null at this location\n" +
			"----------\n";
	runner.classLibraries =
		    this.assertLib;
	runner.javacTestOptions = JavacTestOptions.Excuse.EclipseWarningConfiguredAsError;
	runner.runNegativeTest();
}

