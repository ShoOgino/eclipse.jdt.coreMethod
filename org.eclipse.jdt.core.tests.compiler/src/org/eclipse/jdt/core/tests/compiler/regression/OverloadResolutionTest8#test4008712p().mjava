public void test4008712p() {
	this.runNegativeTest(
			new String[] {
				"X.java",
				"interface I {\n" +
				"	void foo(String x);\n" +
				"}\n" +
				"interface J {\n" +
				"	String foo(String x);\n" +
				"}\n" +
				"class Y<T> {\n" +
				"	public T foo(T x) {\n" +
				"		 return null;\n" +
				"	}\n" +
				"}\n" +
				"public class X<T> extends Y<String> {\n" +
				"   public String foo(String s) { return null; }\n" +
				"	static void goo(I i) {\n" +
				"		System.out.println(\"foo(I)\");\n" +
				"	}\n" +
				"	static void goo(J j) {\n" +
				"		System.out.println(\"foo(J)\");\n" +
				"	}\n" +
				"	public static void main(String[] args) { \n" +
				"		goo(new X()::foo);\n" +
				"	}\n" +
				"}\n",
			},
			"----------\n" + 
			"1. ERROR in X.java (at line 21)\n" + 
			"	goo(new X()::foo);\n" + 
			"	^^^\n" + 
			"The method goo(I) is ambiguous for the type X<T>\n" + 
			"----------\n" + 
			"2. WARNING in X.java (at line 21)\n" + 
			"	goo(new X()::foo);\n" + 
			"	        ^\n" + 
			"X is a raw type. References to generic type X<T> should be parameterized\n" + 
			"----------\n");
}

