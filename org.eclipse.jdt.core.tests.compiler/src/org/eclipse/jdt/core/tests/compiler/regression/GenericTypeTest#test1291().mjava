//https://bugs.eclipse.org/bugs/show_bug.cgi?id=218677
public void test1291() {
	this.runNegativeTest(
			new String[] {
					"X.java",
					"import java.util.ArrayList;\n" + 
					"import java.util.List;\n" + 
					"public class X {\n" + 
					"    public static <D, E extends D> List<D> moreGeneric(List<E> list) {\n" + 
					"        List<D> result = new ArrayList<D>();\n" + 
					"        result.addAll( list );\n" + 
					"        return result;\n" + 
					"    }\n" + 
					"    class A {}\n" + 
					"    class B extends A {}\n" + 
					"    class C extends B {}\n" + 
					"    public static void main( String[] args ) {\n" + 
					"        List<B> b = new ArrayList<B>();\n" + 
					"        List<A> a = moreGeneric(b);\n" + 
					"        List<C> c = moreGeneric(b);\n" + 
					"    }\n" + 
					"}\n", // =================
			},
			"----------\n" + 
			"1. ERROR in X.java (at line 15)\n" + 
			"	List<C> c = moreGeneric(b);\n" + 
			"	            ^^^^^^^^^^^\n" + 
			"Bound mismatch: The generic method moreGeneric(List<E>) of type X is not applicable for the arguments (List<X.B>). The inferred type X.B is not a valid substitute for the bounded parameter <E extends D>\n" + 
			"----------\n",
			JavacTestOptions.EclipseJustification.EclipseBug218677);
}

