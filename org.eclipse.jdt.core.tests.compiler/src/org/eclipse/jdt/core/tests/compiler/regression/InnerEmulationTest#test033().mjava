/**
 * Missing implementation in the compiler compiling invalid code
 */
public void test033() {
	this.runNegativeTest(
		new String[] {
			/* A2.java */
			"p1/A2.java",
			"package p1;	\n"+
			"class D {	\n"+
			"	class E {	\n"+
			"		E(Object o, Object o1, Object o2, F f) {}	\n"+
			"		void execute() {}	\n"+
			"	}	\n"+
			"}	\n"+
			"class F {	\n"+
			"	F(Object o) {	\n"+
			"	}	\n"+
			"}	\n"+
			"public class A2 {	\n"+
			"	private abstract class B {	\n"+
			"		public Object get() {	\n"+
			"			return null;	\n"+
			"		}	\n"+
			"	}	\n"+
			"	private class C extends B {	\n"+
			"		public void foo() {	\n"+
			"			(new D.E(null, null, null, new F(get()) {}) {}).execute();	\n"+
			"		}	\n"+
			"	}	\n"+
			"}\n"
		},
		"----------\n" +
		"1. WARNING in p1\\A2.java (at line 18)\n" +
		"	private class C extends B {	\n" +
		"	              ^\n" +
		"The type A2.C is never used locally\n" +
		"----------\n" +
		"2. WARNING in p1\\A2.java (at line 18)\n" +
		"	private class C extends B {	\n" +
		"	              ^\n" +
		"Access to enclosing constructor A2.B() is emulated by a synthetic accessor method\n" +
		"----------\n" +
		"3. WARNING in p1\\A2.java (at line 19)\n" +
		"	public void foo() {	\n" +
		"	            ^^^^^\n" +
		"The method foo() from the type A2.C is never used locally\n" +
		"----------\n" +
		"4. ERROR in p1\\A2.java (at line 20)\n" +
		"	(new D.E(null, null, null, new F(get()) {}) {}).execute();	\n" +
		"	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" +
		"No enclosing instance of type D is accessible. Must qualify the allocation with an enclosing instance of type D (e.g. x.new A() where x is an instance of D).\n" +
		"----------\n");
}

