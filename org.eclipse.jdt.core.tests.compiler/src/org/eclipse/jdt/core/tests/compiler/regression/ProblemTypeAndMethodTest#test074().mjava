//https://bugs.eclipse.org/bugs/show_bug.cgi?id=196200 - variation
public void test074() {
	String expected = this.complianceLevel <= ClassFileConstants.JDK1_4
		? 		"----------\n" + 
				"1. ERROR in X.java (at line 4)\n" + 
				"	bar1().foo();\n" + 
				"	^^^^\n" + 
				"The method bar1() from the type X refers to the missing type Zork\n" + 
				"----------\n" + 
				"2. ERROR in X.java (at line 6)\n" + 
				"	bar3(null);\n" + 
				"	^^^^\n" + 
				"The method bar3(Zork) from the type X refers to the missing type Zork\n" + 
				"----------\n" + 
				"3. ERROR in X.java (at line 7)\n" + 
				"	bar4(null,null);\n" + 
				"	^^^^\n" + 
				"The method bar4(Zork) from the type X refers to the missing type Zork\n" + 
				"----------\n" + 
				"4. ERROR in X.java (at line 9)\n" + 
				"	Zork<String> bar1() {}\n" + 
				"	^^^^\n" + 
				"Zork cannot be resolved to a type\n" + 
				"----------\n" + 
				"5. ERROR in X.java (at line 9)\n" + 
				"	Zork<String> bar1() {}\n" + 
				"	     ^^^^^^\n" + 
				"Syntax error, parameterized types are only available if source level is 1.5\n" + 
				"----------\n" + 
				"6. ERROR in X.java (at line 10)\n" + 
				"	List<Zork> bar2() {}\n" + 
				"	     ^^^^\n" + 
				"Syntax error, parameterized types are only available if source level is 1.5\n" + 
				"----------\n" + 
				"7. ERROR in X.java (at line 10)\n" + 
				"	List<Zork> bar2() {}\n" + 
				"	     ^^^^\n" + 
				"Zork cannot be resolved to a type\n" + 
				"----------\n" + 
				"8. ERROR in X.java (at line 11)\n" + 
				"	void bar3(Zork<String> z) {}\n" + 
				"	          ^^^^\n" + 
				"Zork cannot be resolved to a type\n" + 
				"----------\n" + 
				"9. ERROR in X.java (at line 11)\n" + 
				"	void bar3(Zork<String> z) {}\n" + 
				"	               ^^^^^^\n" + 
				"Syntax error, parameterized types are only available if source level is 1.5\n" + 
				"----------\n" + 
				"10. ERROR in X.java (at line 12)\n" + 
				"	void bar4(Zork<String,String> z) {}\n" + 
				"	          ^^^^\n" + 
				"Zork cannot be resolved to a type\n" + 
				"----------\n" + 
				"11. ERROR in X.java (at line 12)\n" + 
				"	void bar4(Zork<String,String> z) {}\n" + 
				"	               ^^^^^^^^^^^^^\n" + 
				"Syntax error, parameterized types are only available if source level is 1.5\n" + 
				"----------\n"			
		: 		"----------\n" + 
				"1. ERROR in X.java (at line 4)\n" + 
				"	bar1().foo();\n" + 
				"	^^^^\n" + 
				"The method bar1() from the type X refers to the missing type Zork\n" + 
				"----------\n" + 
				"2. ERROR in X.java (at line 5)\n" + 
				"	bar2();\n" + 
				"	^^^^\n" + 
				"The method bar2() from the type X refers to the missing type Zork\n" + 
				"----------\n" + 
				"3. ERROR in X.java (at line 6)\n" + 
				"	bar3(null);\n" + 
				"	^^^^\n" + 
				"The method bar3(Zork<String>) from the type X refers to the missing type Zork\n" + 
				"----------\n" + 
				"4. ERROR in X.java (at line 7)\n" + 
				"	bar4(null,null);\n" + 
				"	^^^^\n" + 
				"The method bar4(Zork<String,String>) from the type X refers to the missing type Zork\n" + 
				"----------\n" + 
				"5. ERROR in X.java (at line 9)\n" + 
				"	Zork<String> bar1() {}\n" + 
				"	^^^^\n" + 
				"Zork cannot be resolved to a type\n" + 
				"----------\n" + 
				"6. ERROR in X.java (at line 10)\n" + 
				"	List<Zork> bar2() {}\n" + 
				"	     ^^^^\n" + 
				"Zork cannot be resolved to a type\n" + 
				"----------\n" + 
				"7. ERROR in X.java (at line 11)\n" + 
				"	void bar3(Zork<String> z) {}\n" + 
				"	          ^^^^\n" + 
				"Zork cannot be resolved to a type\n" + 
				"----------\n" + 
				"8. ERROR in X.java (at line 12)\n" + 
				"	void bar4(Zork<String,String> z) {}\n" + 
				"	          ^^^^\n" + 
				"Zork cannot be resolved to a type\n" + 
				"----------\n";
	
	this.runNegativeTest(
			new String[] {
				"X.java", //-----------------------------------------------------------------------
				"import java.util.List;\n" + 
				"public class X {\n" + 
				"	void foo() {\n" + 
				"		bar1().foo();\n" + 
				"		bar2();\n" + 
				"		bar3(null);\n" + 
				"		bar4(null,null);\n" + 
				"	}\n" + 
				"	Zork<String> bar1() {}\n" + 
				"	List<Zork> bar2() {}\n" + 
				"	void bar3(Zork<String> z) {}\n" + 
				"	void bar4(Zork<String,String> z) {}\n" + 
				"}\n",//-----------------------------------------------------------------------
			},
			expected);
}

