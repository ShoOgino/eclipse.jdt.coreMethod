	// https://bugs.eclipse.org/bugs/show_bug.cgi?id=78293	
	public void test429() { 
		this.runConformTest(
			new String[] {
				"X1.java",
				"class X1 <T extends Y & Comparable<Y>> {}\n" +
				"abstract class Y implements Comparable<Y> {}",
			},
			""
		);
		this.runConformTest(
			new String[] {
				"X2.java",
				"class X2 <T extends Y & Comparable<Y>> {}\n" +
				"abstract class Y extends Z {}\n" +
				"abstract class Z implements Comparable<Y> {}",
			},
			""
		);
		this.runConformTest(
			new String[] {
				"X3.java",
				"class X3 <T extends Y & Comparable<Z>> {}\n" +
				"abstract class Y extends Z {}\n" +
				"abstract class Z implements Comparable<Z> {}",
			},
			""
		);
		this.runNegativeTest(
			new String[] {
				"X4.java",
				"class X4 <T extends Comparable<Z> & Comparable<Z>> {}\n" +
				"abstract class Y extends Z {}\n" +
				"abstract class Z implements Comparable<Z> {}",
			},
			"----------\n" + 
			"1. ERROR in X4.java (at line 1)\n" + 
			"	class X4 <T extends Comparable<Z> & Comparable<Z>> {}\n" + 
			"	                                    ^^^^^^^^^^\n" + 
			"Duplicate bound Comparable<Z>\n" + 
			"----------\n"
			// no complaints about duplicates if they are both parameterized with same args
			// but you cannot extend Comparable & Comparable so we'll report an error
		);
		this.runNegativeTest(
			new String[] {
				"X5.java",
				"class X5 <T extends Y & Comparable<X5>> {}\n" +
				"abstract class Y implements Comparable<Y> {}",
			},
			"----------\n" + 
			"1. ERROR in X5.java (at line 1)\n" + 
			"	class X5 <T extends Y & Comparable<X5>> {}\n" + 
			"	                        ^^^^^^^^^^\n" + 
			"The interface Comparable cannot be implemented more than once with different arguments: Comparable<Y> and Comparable<X5>\n" + 
			"----------\n" + 
			"2. WARNING in X5.java (at line 1)\n" + 
			"	class X5 <T extends Y & Comparable<X5>> {}\n" + 
			"	                                   ^^\n" + 
			"X5 is a raw type. References to generic type X5<T> should be parameterized\n" + 
			"----------\n"
			// Comparable cannot be inherited with different arguments: <X5> and <Y>
		);
		this.runNegativeTest(
			new String[] {
				"X6.java",
				"class X6 <T extends Y & Comparable<X6>> {}\n" +
				"abstract class Y extends Z {}\n" +
				"abstract class Z implements Comparable<Z> {}",
			},
			"----------\n" + 
			"1. ERROR in X6.java (at line 1)\n" + 
			"	class X6 <T extends Y & Comparable<X6>> {}\n" + 
			"	                        ^^^^^^^^^^\n" + 
			"The interface Comparable cannot be implemented more than once with different arguments: Comparable<Z> and Comparable<X6>\n" + 
			"----------\n" + 
			"2. WARNING in X6.java (at line 1)\n" + 
			"	class X6 <T extends Y & Comparable<X6>> {}\n" + 
			"	                                   ^^\n" + 
			"X6 is a raw type. References to generic type X6<T> should be parameterized\n" + 
			"----------\n"
			// Comparable cannot be inherited with different arguments: <X6> and <Y>
		);
		this.runNegativeTest(
			new String[] {
				"X7.java",
				"class X7 <T extends Comparable<Z> & Comparable<X7>> {}\n" +
				"abstract class Y extends Z {}\n" +
				"abstract class Z implements Comparable<Z> {}",
			},
			"----------\n" + 
			"1. ERROR in X7.java (at line 1)\n" + 
			"	class X7 <T extends Comparable<Z> & Comparable<X7>> {}\n" + 
			"	                                    ^^^^^^^^^^\n" + 
			"The interface Comparable cannot be implemented more than once with different arguments: Comparable<X7> and Comparable<Z>\n" + 
			"----------\n" + 
			"2. WARNING in X7.java (at line 1)\n" + 
			"	class X7 <T extends Comparable<Z> & Comparable<X7>> {}\n" + 
			"	                                               ^^\n" + 
			"X7 is a raw type. References to generic type X7<T> should be parameterized\n" + 
			"----------\n"
			// Comparable cannot be inherited with different arguments: <Z> and <X7>
		);
	}

