	public void test060c_codeblocks_new_multiNewArray() throws Exception {
		this.runConformTest(
			new String[] {
				"X.java",
				"public class X {\n" + 
				"	public boolean foo(String s) {\n" + 
				"		System.out.println(\"xyz\");\n" +
				"		X [][][] x = new @A X @B[10] @C[10] @D[];\n" +
				"		return true;\n" + 
				"	}\n" + 
				"}",
				
				"A.java",
				"import java.lang.annotation.*;\n" + 
				"@Target(ElementType.TYPE_USE)\n" + 
				"@Retention(RetentionPolicy.CLASS)\n" + 
				"@interface A {\n" + 
				"	String value() default \"default\";\n" + 
				"}\n",
				
				"B.java",
				"import java.lang.annotation.*;\n" + 
				"@Target(ElementType.TYPE_USE)\n" + 
				"@Retention(RetentionPolicy.CLASS)\n" + 
				"@interface B {\n" + 
				"	String value() default \"default\";\n" + 
				"}\n",

				"C.java",
				"import java.lang.annotation.*;\n" + 
				"@Target(ElementType.TYPE_USE)\n" + 
				"@Retention(RetentionPolicy.CLASS)\n" + 
				"@interface C {\n" + 
				"	String value() default \"default\";\n" + 
				"}\n",
				
				"D.java",
				"import java.lang.annotation.*;\n" + 
				"@Target(ElementType.TYPE_USE)\n" + 
				"@Retention(RetentionPolicy.CLASS)\n" + 
				"@interface D {\n" + 
				"	String value() default \"default\";\n" + 
				"}\n",
		},
		"");
		String expectedOutput =
			"    RuntimeInvisibleTypeAnnotations: \n" + 
			"      #36 @A(\n" + 
			"        target type = 0x44 NEW\n" + 
			"        offset = 12\n" + 
			"        location = [ARRAY, ARRAY, ARRAY]\n" + 
			"      )\n" + 
			"      #37 @B(\n" + 
			"        target type = 0x44 NEW\n" + 
			"        offset = 12\n" + 
			"      )\n" + 
			"      #38 @C(\n" + 
			"        target type = 0x44 NEW\n" + 
			"        offset = 12\n" + 
			"        location = [ARRAY]\n" + 
			"      )\n" + 
			"      #39 @D(\n" + 
			"        target type = 0x44 NEW\n" + 
			"        offset = 12\n" + 
			"        location = [ARRAY, ARRAY]\n" + 
			"      )\n" + 
			"}";
		checkDisassembledClassFile(OUTPUT_DIR + File.separator + "X.class", "X", expectedOutput, ClassFileBytesDisassembler.SYSTEM);
	}

