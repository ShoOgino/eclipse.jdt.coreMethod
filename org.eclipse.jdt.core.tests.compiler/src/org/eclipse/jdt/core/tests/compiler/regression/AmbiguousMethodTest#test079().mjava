//https://bugs.eclipse.org/bugs/show_bug.cgi?id=292350
// See that this test case exhibits the bug 345947
public void test079() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			"interface I<T> {}\n" +
			"class A {}\n" +
			"class B extends A {}\n" +
			"interface One {\n" +
			"    I<B> x() throws IllegalAccessError;\n" +
			"    <T extends A> I<T> y() throws IllegalAccessError;\n" +
			"}\n" +
			"interface Two extends One {\n" +
			"    <T extends A> I<T> x() throws IllegalAccessError;\n" +
			"    I<B> y() throws IllegalAccessError;\n" +
			"}\n" +
			"class X {\n" +
			"    void x(Two t) { t.x(); }\n" +
			"    void y(Two t) { t.y(); }\n" +
			"}"
		},
		"----------\n" +
		"1. ERROR in X.java (at line 9)\n" +
		"	<T extends A> I<T> x() throws IllegalAccessError;\n" +
		"	                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" +
		"Name clash: The method x() of type Two has the same erasure as x() of type One but does not override it\n" +
		"----------\n" +
		"2. WARNING in X.java (at line 10)\n" +
		"	I<B> y() throws IllegalAccessError;\n" +
		"	^\n" +
		"Type safety: The return type I<B> for y() from the type Two needs unchecked conversion to conform to I<A> from the type One\n" +
		"----------\n"
	);
}

