//unnecessary cast may be combined with unchecked cast warning
public void test0831() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			"import java.util.*;\n" + 
			"public class X {\n" + 
			"	void foo(Object o1) {\n" + 
			"		Object o2 = (List<String>) o1;\n" + 
			"		\n" + 
			"		foo((List<String>)o2);\n" + 
			"	}\n" + 
			"	Zork z;\n" +
			"}\n",
		},
		"----------\n" + 
		"1. WARNING in X.java (at line 4)\n" + 
		"	Object o2 = (List<String>) o1;\n" + 
		"	            ^^^^^^^^^^^^^^^^^\n" + 
		"Type safety: The cast from Object to List<String> is actually checking against the erased type List\n" + 
		"----------\n" + 
		"2. WARNING in X.java (at line 4)\n" + 
		"	Object o2 = (List<String>) o1;\n" + 
		"	            ^^^^^^^^^^^^^^^^^\n" + 
		"Unnecessary cast from Object to List<String>\n" + 
		"----------\n" + 
		"3. WARNING in X.java (at line 6)\n" + 
		"	foo((List<String>)o2);\n" + 
		"	    ^^^^^^^^^^^^^^^^\n" + 
		"Type safety: The cast from Object to List<String> is actually checking against the erased type List\n" + 
		"----------\n" + 
		"4. WARNING in X.java (at line 6)\n" + 
		"	foo((List<String>)o2);\n" + 
		"	    ^^^^^^^^^^^^^^^^\n" + 
		"Unnecessary cast from Object to List<String>\n" + 
		"----------\n" + 
		"5. ERROR in X.java (at line 8)\n" + 
		"	Zork z;\n" + 
		"	^^^^\n" + 
		"Zork cannot be resolved to a type\n" + 
		"----------\n");
}

