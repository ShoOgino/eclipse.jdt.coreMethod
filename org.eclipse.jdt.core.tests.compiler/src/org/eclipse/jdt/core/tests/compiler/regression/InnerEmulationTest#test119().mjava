public void test119() {
	CompilerOptions options = new CompilerOptions(getCompilerOptions());
	if (options.sourceLevel < ClassFileConstants.JDK1_5) {
		this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X {\n" + 
				"	public static void main(String[] args) {\n" + 
				"		new X().new M();\n" + 
				"	}\n" + 
				"	void foo(String s) { System.out.print(\"<foo:\"+s+\">\"); }\n" + 
				"	class M {\n" + 
				"		M(Runnable r) { r.run(); }\n" + 
				"		M() {\n" + 
				"			this(new Runnable() {\n" + 
				"				public void run() {\n" + 
				"					foo(\"0\");\n" + 
				"					new Object() {\n" + 
				"						void baz() {\n" + 
				"//							foo(\"1\");\n" + 
				"						}\n" + 
				"					};\n" + 
				"					class Local {\n" + 
				"						void baz() {\n" + 
				"//							foo(\"2\");\n" + 
				"						}\n" + 
				"					}				\n" + 
				"					new Local();\n" + 
				"				}\n" + 
				"			});\n" + 
				"			new Object() {\n" + 
				"				void baz() {\n" + 
				"					foo(\"3\");\n" + 
				"					bar(\"3\");\n" + 
				"				}\n" + 
				"			}.baz();\n" + 
				"		}\n" + 
				"		void bar(String s) { System.out.print(\"<bar:\"+s+\">\"); }\n" + 
				"		void baz() {\n" + 
				"			new Object() {\n" + 
				"				void baz() {\n" + 
				"					foo(\"4\");\n" + 
				"					bar(\"4\");\n" + 
				"				}\n" + 
				"			};\n" + 
				"		}\n" + 
				"	}\n" + 
				"}\n",
			},
			"----------\n" + 
			"1. ERROR in X.java (at line 11)\n" + 
			"	foo(\"0\");\n" + 
			"	^^^^^^^^\n" + 
			"No enclosing instance of the type X is accessible in scope\n" + 
			"----------\n" + 
			"2. WARNING in X.java (at line 13)\n" + 
			"	void baz() {\n" + 
			"	     ^^^^^\n" + 
			"The method baz() from the type new Object(){} is never used locally\n" + 
			"----------\n" + 
			"3. WARNING in X.java (at line 18)\n" + 
			"	void baz() {\n" + 
			"	     ^^^^^\n" + 
			"The method baz() from the type Local is never used locally\n" + 
			"----------\n" + 
			"4. WARNING in X.java (at line 35)\n" + 
			"	void baz() {\n" + 
			"	     ^^^^^\n" + 
			"The method baz() from the type new Object(){} is never used locally\n" + 
			"----------\n");
		return;
	}
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" + 
			"	public static void main(String[] args) {\n" + 
			"		new X().new M();\n" + 
			"	}\n" + 
			"	void foo(String s) { System.out.print(\"<foo:\"+s+\">\"); }\n" + 
			"	class M {\n" + 
			"		M(Runnable r) { r.run(); }\n" + 
			"		M() {\n" + 
			"			this(new Runnable() {\n" + 
			"				public void run() {\n" + 
			"					foo(\"0\");\n" + 
			"					new Object() {\n" + 
			"						void baz() {\n" + 
			"//							foo(\"1\");\n" + 
			"						}\n" + 
			"					};\n" + 
			"					class Local {\n" + 
			"						void baz() {\n" + 
			"//							foo(\"2\");\n" + 
			"						}\n" + 
			"					}				\n" + 
			"					new Local();\n" + 
			"				}\n" + 
			"			});\n" + 
			"			new Object() {\n" + 
			"				void baz() {\n" + 
			"					foo(\"3\");\n" + 
			"					bar(\"3\");\n" + 
			"				}\n" + 
			"			}.baz();\n" + 
			"		}\n" + 
			"		void bar(String s) { System.out.print(\"<bar:\"+s+\">\"); }\n" + 
			"		void baz() {\n" + 
			"			new Object() {\n" + 
			"				void baz() {\n" + 
			"					foo(\"4\");\n" + 
			"					bar(\"4\");\n" + 
			"				}\n" + 
			"			};\n" + 
			"		}\n" + 
			"	}\n" + 
			"}\n",
		},
		"<foo:0><foo:3><bar:3>");
}

