	//https://bugs.eclipse.org/bugs/show_bug.cgi?id=105801 - variation
	public void test041() {
		this.runNegativeTest(
			new String[] {
				"X.java",
				"import java.io.Serializable;\n" + 
				"import java.util.Arrays;\n" + 
				"\n" + 
				"public class X {\n" + 
				"    static void array(Serializable... items) {\n" + 
				"        System.out.print(Arrays.deepToString(items));\n" + 
				"    }\n" + 
				"    @SuppressWarnings({\"boxing\"})\n" + 
				"    public static void main(String[] args) {\n" + 
				"        array(new Serializable[] {3, 4});\n" + 
				"        array(new Integer[] {5, 6}); //warns (as javac does)\n" + 
				"        array(null); //warns (as javac does)\n" + 
				"        Zork z;\n" + 
				"    }\n" + 
				"}\n",
			},
			"----------\n" + 
			"1. WARNING in X.java (at line 11)\n" + 
			"	array(new Integer[] {5, 6}); //warns (as javac does)\n" + 
			"	^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"The argument of type Integer[] should explicitly be cast to Serializable[] for the invocation of the varargs method array(Serializable...) from type X. It could alternatively be cast to Serializable for a varargs invocation\n" + 
			"----------\n" + 
			"2. WARNING in X.java (at line 12)\n" + 
			"	array(null); //warns (as javac does)\n" + 
			"	^^^^^^^^^^^\n" + 
			"The argument of type null should explicitly be cast to Serializable[] for the invocation of the varargs method array(Serializable...) from type X. It could alternatively be cast to Serializable for a varargs invocation\n" + 
			"----------\n" + 
			"3. ERROR in X.java (at line 13)\n" + 
			"	Zork z;\n" + 
			"	^^^^\n" + 
			"Zork cannot be resolved to a type\n" + 
			"----------\n");
	}

