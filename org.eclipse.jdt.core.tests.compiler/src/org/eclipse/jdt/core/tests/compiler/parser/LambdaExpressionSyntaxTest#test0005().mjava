	// type elided, unparenthesized parameter + expression body lambda in return statement, full lambda is parenthesized.
	public void test0005() throws IOException {
		String source = 
				"interface I {\n" +
				"    int square(int x);\n" +
				"}\n" +
				"public class X {\n" +
				"    static I getI() {\n" +
				"        return (x -> x * x);\n" +
				"    }\n" +
				"    public static void main(String [] args) {\n" +
				"        I i = getI();\n" +
				"        System.out.println(i.square(10));\n" +
				"    }\n" +
				"}\n";

		String expectedUnitToString = 
				"interface I {\n" + 
				"  int square(int x);\n" + 
				"}\n" + 
				"public class X {\n" + 
				"  public X() {\n" + 
				"    super();\n" + 
				"  }\n" + 
				"  static I getI() {\n" + 
				"    return ((<no type> x) -> (x * x));\n" + 
				"  }\n" + 
				"  public static void main(String[] args) {\n" + 
				"    I i = getI();\n" + 
				"    System.out.println(i.square(10));\n" + 
				"  }\n" + 
				"}\n";
		checkParse(CHECK_PARSER | CHECK_JAVAC_PARSER , source.toCharArray(), null, "test0005", expectedUnitToString);
	}

