public void test0021() {

	String str =
		"public class X<V> {		\n" + 
		"  public class Inner<T> {								\n" +
		"    public <U> Inner() {  								\n" +
		"    }           								\n" +
		"  }           								\n" +
		"  void foo(){;								\n" +
		"    new X<String>().new <Object>Inner<String>();								\n" +
		"  }           								\n" +
		"}											\n"; 

	String selection = "Inner";
	
	String expectedCompletionNodeToString = "<SelectOnQualifiedAllocationExpression:new X<String>().new <Object>Inner<String>()>";
	
	String completionIdentifier = "Inner";
	String expectedUnitDisplayString =
		"public class X<V> {\n" + 
		"  public class Inner<T> {\n" + 
		"    public <U>Inner() {\n" + 
		"    }\n" + 
		"  }\n" + 
		"  public X() {\n" + 
		"  }\n" + 
		"  void foo() {\n" + 
		"    <SelectOnQualifiedAllocationExpression:new X<String>().new <Object>Inner<String>()>;\n" + 
		"  }\n" + 
		"}\n";
	String expectedReplacedSource = "new X<String>().new <Object>Inner<String>()";
	String testName = "<select type>";

	int selectionStart = str.lastIndexOf(selection);
	int selectionEnd = str.lastIndexOf(selection) + selection.length() - 1;
		
	this.checkMethodParse(
		str.toCharArray(), 
		selectionStart,
		selectionEnd,
		expectedCompletionNodeToString,
		expectedUnitDisplayString,
		completionIdentifier,
		expectedReplacedSource,
		testName);
}

