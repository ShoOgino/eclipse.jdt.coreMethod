	// 352665
	public void test053() {
		Map customOptions = getCompilerOptions();
		customOptions.put(JavaCore.COMPILER_PB_UNUSED_PRIVATE_MEMBER, JavaCore.IGNORE);
		customOptions.put(JavaCore.COMPILER_PB_SYNTHETIC_ACCESS_EMULATION, JavaCore.IGNORE);
		this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X {\n" + 
				"	static {\n" + 
				"		for(int i = 0; i < 10; i++){\n" + 
				"			A a = new A();\n" + 
				"			a.foo();\n" + 
				"		}\n" + 
				"	}\n" + 
				"	private class A {\n" + 
				"		private A() {\n" + 
				"		}\n" + 
				"		void foo() {}\n" + 
				"	}\n" + 
				"}",
			},
			"----------\n" + 
			"1. ERROR in X.java (at line 4)\n" + 
			"	A a = new A();\n" + 
			"	      ^^^^^^^\n" + 
			"No enclosing instance of type X is accessible. Must qualify the allocation with an enclosing instance of type X (e.g. x.new A() where x is an instance of X).\n" + 
			"----------\n",
			null,
			true,
			customOptions);
	}

