	public void test070_codeblocks_cast_complex() throws Exception {
		this.runConformTest(
			new String[] {
				"A.java",
				"import java.lang.annotation.*;\n" + 
				"@Target(ElementType.TYPE_USE)\n" + 
				"@Retention(RetentionPolicy.RUNTIME)\n" + 
				"@interface A {\n" + 
				"	String value() default \"default\";\n" + 
				"}\n",
				"B.java",
				"import java.lang.annotation.Target;\n" + 
				"import static java.lang.annotation.ElementType.*;\n" + 
				"import java.lang.annotation.Retention;\n" + 
				"import static java.lang.annotation.RetentionPolicy.*;\n" + 
				"@Target(TYPE_USE)\n" + 
				"@Retention(CLASS)\n" + 
				"@interface B {\n" + 
				"	int value() default -1;\n" + 
				"}",
				"C.java",
				"import java.lang.annotation.Target;\n" + 
				"import static java.lang.annotation.ElementType.*;\n" + 
				"import java.lang.annotation.Retention;\n" + 
				"import static java.lang.annotation.RetentionPolicy.*;\n" + 
				"@Target(TYPE_USE)\n" + 
				"@Retention(RUNTIME)\n" + 
				"@interface C {\n" + 
				"	char value() default '-';\n" + 
				"}\n",
				"I.java",
				"interface I {}\n",
				"J.java",
				"interface J {}\n",
				"X.java",
				"public class X {\n" + 
				"	public void foo(Object o) {\n" + 
				"		if (o instanceof String[][]) {\n" +
				"			String[][] tab = (@C('_') @B(3) String[] @A[]) o;\n" +
				"			System.out.println(tab.length);\n" +
				"		}\n" + 
				"		System.out.println(o);\n" +
				"	}\n" + 
				"}",
		},
		"");
		// javac-b81:
		// Bytes:31[0 2 71 0 7 0 1 0 0 0 16 0 0 71 0 7 0 2 0 0 0 0 0 17 0 1 0 18 67 0 19]
		// Bytes:20[0 1 71 0 7 0 2 0 0 0 0 0 21 0 1 0 18 73 0 22]
		String expectedOutput =
			"    RuntimeInvisibleTypeAnnotations: \n" + 
			"      #37 @B(\n" + 
			"        #38 value=(int) 3 (constant type)\n" + 
			"        target type = 0x47 CAST\n" + 
			"        offset = 8\n" + 
			"        type argument index = 0\n" + 
			"        location = [ARRAY, ARRAY]\n" + 
			"      )\n" + 
			"    RuntimeVisibleTypeAnnotations: \n" + 
			"      #41 @C(\n" + 
			"        #38 value=\'_\' (constant type)\n" + 
			"        target type = 0x47 CAST\n" + 
			"        offset = 8\n" + 
			"        type argument index = 0\n" + 
			"        location = [ARRAY, ARRAY]\n" + 
			"      )\n" + 
			"      #43 @A(\n" + 
			"        target type = 0x47 CAST\n" + 
			"        offset = 8\n" + 
			"        type argument index = 0\n" + 
			"        location = [ARRAY]\n" + 
			"      )\n";
		checkDisassembledClassFile(OUTPUT_DIR + File.separator + "X.class", "X", expectedOutput, ClassFileBytesDisassembler.SYSTEM);
	}

