	// array bound for wildcard
	public void test0508() {
		this.runNegativeTest(
			new String[] {
				"X.java",//====================================
				"import java.io.Serializable;\n" + 
				"import java.util.List;\n" + 
				"\n" + 
				"public class X {\n" + 
				"	void foo1(List<? super int[]> l) {\n" + 
				"		int i = l.get(0).length;\n" + 
				"	}\n" + 
				"	void foo2(List<? super int[]> l) {\n" + 
				"		Object o = l.get(0).toString();\n" + 
				"	}\n" + 
				"	void foo3(List<? super int[]> l, Serializable s) {\n" + 
				"		boolean b = true;\n" + 
				"		Serializable s2 = b ? l.get(0) : s;\n" + 
				"	}\n" + 
				"}\n"
			},
			"----------\n" + 
			"1. ERROR in X.java (at line 6)\n" + 
			"	int i = l.get(0).length;\n" + 
			"	                 ^^^^^^\n" + 
			"length cannot be resolved or is not a field\n" + 
			"----------\n" + 
			"2. ERROR in X.java (at line 13)\n" + 
			"	Serializable s2 = b ? l.get(0) : s;\n" + 
			"	                  ^^^^^^^^^^^^^^^^\n" + 
			"Type mismatch: cannot convert from Object to Serializable\n" + 
			"----------\n");
	}		

