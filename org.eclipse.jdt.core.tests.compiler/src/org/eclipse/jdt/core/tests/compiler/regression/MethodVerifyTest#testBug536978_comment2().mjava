public void testBug536978_comment2() {
	runNegativeTest(
			new String[] {
				"SimpleDemo.java",
				"abstract interface AbstractResult {\n" +
				"	public abstract int test();\n" +
				"}\n" +
				"\n" +
				"abstract class AbstractDemo<Request extends AbstractResult, Response extends AbstractResult> {\n" +
				"	protected abstract Response test(Request request);\n" +
				"}\n" +
				"\n" +
				"interface SimpleResult extends AbstractResult {};\n" +
				"\n" +
				"class Result1 implements SimpleResult {\n" +
				"    public int test() { return 1; }\n" +
				"}\n" +
				"class OtherResult implements AbstractResult {\n" +
				"    public int test() { return 2; }\n" +
				"}\n" +
				"\n" +
				"public class SimpleDemo<Request extends AbstractResult, Response extends AbstractResult> \n" +
				"extends AbstractDemo<Request, Response> {\n" +
				"\n" +
				"    @Override\n" +
				"    protected SimpleResult test(AbstractResult request) {\n" +
				"        return new Result1();\n" +
				"    }\n" +
				"    \n" +
				"    public static void main(String... args) {\n" +
				"        AbstractDemo<OtherResult,OtherResult> demo = new SimpleDemo<OtherResult,OtherResult>();\n" +
				"        OtherResult result = demo.test(new OtherResult());\n" +
				"    }\n" +
				"\n" +
				"}\n"
			},
			"----------\n" +
			"1. ERROR in SimpleDemo.java (at line 22)\n" +
			"	protected SimpleResult test(AbstractResult request) {\n" +
			"	          ^^^^^^^^^^^^\n" +
			"The return type is incompatible with AbstractDemo<Request,Response>.test(Request)\n" +
			"----------\n");
}

