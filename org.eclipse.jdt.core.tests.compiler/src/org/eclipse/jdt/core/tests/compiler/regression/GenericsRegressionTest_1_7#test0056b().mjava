// https://bugs.eclipse.org/bugs/show_bug.cgi?id=340747
// qualified allocation
public void test0056b() {
	Map customOptions = getCompilerOptions();
	customOptions.put(CompilerOptions.OPTION_ReportRedundantSpecificationOfTypeArguments, CompilerOptions.ERROR);	
	customOptions.put(CompilerOptions.OPTION_ReportRawTypeReference, CompilerOptions.IGNORE);	
	this.runNegativeTest(
		new String[] {
			"X.java",
			"public class X <T> {\n" +
			"	static class X1<Z> {\n" +
			"		X1(Z z){}\n" +
			"	}\n" +
			"	X1<Integer> x1 = new X.X1<Integer>(1);\n" +
			"	X1<Number> x2 = new X.X1<Number>(1);\n" +
			"}\n"
		},
		"----------\n" + 
		"1. ERROR in X.java (at line 5)\n" + 
		"	X1<Integer> x1 = new X.X1<Integer>(1);\n" + 
		"	                       ^^\n" + 
		"Redundant specification of type arguments <Integer>\n" + 
		"----------\n",
		null,
		false,
		customOptions);
}

