//https://bugs.eclipse.org/bugs/show_bug.cgi?id=106744
public void test800() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			"import java.lang.reflect.Constructor;\n" + 
			"\n" + 
			"public class X {\n" + 
			"	public static void main(String[] args) {\n" + 
			"        final Class<Ann> AnnClass = Ann.class;\n" + 
			"	    Constructor[] constrs = X.class.getConstructors();\n" + 
			"        for (Constructor constructor  : constrs) {\n" + 
			"            final String message = constructor.getAnnotation(AnnClass).message();\n" + 
			"            System.out.println(message);\n" + 
			"        }\n" + 
			"	}\n" + 
			"}\n" + 
			"\n" + 
			"@interface Ann {\n" + 
			"	String message();\n" + 
			"}\n",
		},
		"----------\n" + 
		"1. WARNING in X.java (at line 7)\n" + 
		"	for (Constructor constructor  : constrs) {\n" + 
		"	     ^^^^^^^^^^^\n" + 
		"Type safety: Constructor is a raw type. References to generic type Constructor<T> should be parameterized\n" + 
		"----------\n" + 
		"2. WARNING in X.java (at line 8)\n" + 
		"	final String message = constructor.getAnnotation(AnnClass).message();\n" + 
		"	                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
		"Type safety: The method getAnnotation(Class) belongs to the raw type Constructor. References to generic type Constructor<T> should be parameterized\n" + 
		"----------\n" + 
		"3. ERROR in X.java (at line 8)\n" + 
		"	final String message = constructor.getAnnotation(AnnClass).message();\n" + 
		"	                                                           ^^^^^^^\n" + 
		"The method message() is undefined for the type Annotation\n" + 
		"----------\n");
}

