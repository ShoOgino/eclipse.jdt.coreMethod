// https://bugs.eclipse.org/bugs/show_bug.cgi?id=376550
// FieldRef, from object of a class in outer class
public void test376550_8a() {
	if (this.complianceLevel < ClassFileConstants.JDK1_5)
		return;
	Runner runner = new Runner();
	runner.customOptions = getCompilerOptions();
	runner.customOptions.put(CompilerOptions.OPTION_ReportMethodCanBeStatic, CompilerOptions.ERROR);
	runner.customOptions.put(CompilerOptions.OPTION_ReportMethodCanBePotentiallyStatic, CompilerOptions.ERROR);
	runner.customOptions.put(CompilerOptions.OPTION_ReportUnusedPrivateMember, CompilerOptions.IGNORE);
	runner.testFiles =
		new String[] {
				"X.java", 
				"public class X {\n" +
				"   class AbsUp{ int a;}\n" +
				"   public void foo(){\n" + // can be static
				"   	class Local{\n" +
				"			class AbsLow{  int a;}\n" +
				"			void method2() {\n" +  // can't be static
				"				int abc = new AbsLow().a;\n" +
				"			}\n" +
				"		}\n" +
				"	}\n" +
				"}"
		};
	runner.expectedCompilerLog =
		"----------\n" + 
		"1. ERROR in X.java (at line 3)\n" + 
		"	public void foo(){\n" + 
		"	            ^^^^^\n" + 
		"The method foo() from the type X can potentially be declared as static\n" + 
		"----------\n";
	runner.javacTestOptions =
		JavacTestOptions.Excuse.EclipseWarningConfiguredAsError;
	runner.runNegativeTest();
}

