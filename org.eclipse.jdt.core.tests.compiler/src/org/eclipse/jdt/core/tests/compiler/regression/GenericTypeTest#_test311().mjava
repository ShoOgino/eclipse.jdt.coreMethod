	// 75156 variation - should report name clash and ambiguity
	// TODO (kent) fixed with !inheritedArg.isEquivalentTo(currentArg) check in MethodVerifier
	public void _test311() {
		this.runNegativeTest(
			new String[] {
				"p/X.java",
				"import java.util.List;\n" + 
				"\n" + 
				"public class X extends X2 {\n" + 
				"	void foo(List<X> lx) { }\n" + 
				"	void bar(){\n" + 
				"		this.foo((List)null);\n" + 
				"	}\n" + 
				"}\n" + 
				"\n" + 
				"abstract class X2 {\n" + 
				"	void foo(List<Object> lo) { }\n" + 
				"}"
			},
			"----------\n" + 
			"1. ERROR in p\\X.java (at line 4)\n" + 
			"	void foo(List<X> lx) { }\n" + 
			"	     ^^^^^^^^^^^^^^^\n" + 
			"Name clash : The method foo(List<X>) of type X has the same erasure as foo(List<Object>) of type X2 but does not override it\n" + 
			"----------\n" + 
			"2. ERROR in p\\X.java (at line 6)\n" + 
			"	this.foo((List)null);\n" + 
			"	     ^^^\n" + 
			"The method foo(List<X>) is ambiguous for the type X\n" + 
			"----------\n");	
	}		

