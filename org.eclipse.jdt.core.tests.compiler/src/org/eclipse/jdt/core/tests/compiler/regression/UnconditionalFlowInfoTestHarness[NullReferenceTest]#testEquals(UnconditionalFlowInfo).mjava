/**
 * Return true iff this flow info can be considered as equal to the one passed
 * in parameter.
 * @param other the flow info to compare to
 * @return true iff this flow info compares equal to other
 */
public boolean testEquals(UnconditionalFlowInfo other) {
	if (this.tagBits != other.tagBits) {
		return false;
	}
	if (this.nullAssignmentStatusBit1 != other.nullAssignmentStatusBit1 ||
		this.nullAssignmentStatusBit2 != other.nullAssignmentStatusBit2 ||
		this.nullAssignmentValueBit1 != other.nullAssignmentValueBit1 ||
		this.nullAssignmentValueBit2 != other.nullAssignmentValueBit2) {
		return false;
	}
	int left = this.extra == null ? 0 : this.extra[0].length,
			right = other.extra == null ? 0 : other.extra[0].length,
			both = 0, i;
	if (left > right) {
		both = right;
	}
	else {
		both = left;
	}
	for (i = 0; i < both ; i++) {
		if (this.extra[2][i] != 
				other.extra[2][i] ||
			this.extra[3][i] != 
				other.extra[3][i] ||
			this.extra[4][i] != 
				other.extra[4][i] ||
			this.extra[5][i] != 
				other.extra[5][i]) {
			return false;
		}
	}
	for (; i < left; i++) {
		if (this.extra[2][i] != 0 ||
				this.extra[3][i] != 0 ||
				this.extra[4][i] != 0 ||
				this.extra[5][i] != 0) {
			return false;
		}
	}
	for (; i < right; i++) {
		if (other.extra[2][i] != 0 ||
				other.extra[3][i] != 0 ||
				other.extra[4][i] != 0 ||
				other.extra[5][i] != 0) {
			return false;
		}
	}
	return true;
}

