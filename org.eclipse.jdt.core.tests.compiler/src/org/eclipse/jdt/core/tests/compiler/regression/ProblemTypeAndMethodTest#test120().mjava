// https://bugs.eclipse.org/bugs/show_bug.cgi?id=318682
// Method using type parameters declared by enclosing class can't be static, so don't warn
public void test120() {
	if (this.complianceLevel < ClassFileConstants.JDK1_5)
		return;
	Map compilerOptions = getCompilerOptions();
	compilerOptions.put(CompilerOptions.OPTION_ReportMethodCanBeStatic, CompilerOptions.ERROR);
	compilerOptions.put(CompilerOptions.OPTION_ReportMethodCanBePotentiallyStatic, CompilerOptions.ERROR);
	this.runNegativeTest(
		new String[] {
				"X.java", 
				"public class X<T> {\n" +
				"	public static int field1;\n" +
				"	public int field2;\n" + 
				"	public void bar(T t) {\n" + 	// don't warn
				"		X.field1 = 1;\n" +
				"		System.out.println(t);\n" +
				"	}\n" + 
				"	public <E> void bar2(E e) {\n" + 	// warn
				"		X.field1 = 1;\n" +
				"		System.out.println(e);\n" +
				"	}\n" +
				"	public <E> void bar3() {\n" + 	// don't warn
				"		T a;\n" +
				"		System.out.println();\n" +
				"	}\n" + 
				"	public <E,Y> void bar4() {\n" + 	// warn
				"		Y a;\n" +
				"		System.out.println();\n" +
				"	}\n" + 
				"}"
		},
		"----------\n" + 
		"1. ERROR in X.java (at line 8)\n" + 
		"	public <E> void bar2(E e) {\n" + 
		"	                ^^^^^^^^^\n" + 
		"The method bar2(E) from the type X<T> can potentially be declared as static\n" + 
		"----------\n" + 
		"2. ERROR in X.java (at line 16)\n" + 
		"	public <E,Y> void bar4() {\n" + 
		"	                  ^^^^^^\n" + 
		"The method bar4() from the type X<T> can potentially be declared as static\n" + 
		"----------\n",
		null /* no extra class libraries */,
		true /* flush output directory */,
		compilerOptions /* custom options */
	);
}

