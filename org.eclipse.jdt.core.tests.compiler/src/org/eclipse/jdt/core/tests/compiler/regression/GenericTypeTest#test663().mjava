//https://bugs.eclipse.org/bugs/show_bug.cgi?id=95066 - variation
public void test663() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			"import java.util.List;\n" + 
			"\n" + 
			"public class X {\n" + 
			"   Object foo(Comparable<Integer> c) {\n" + 
			"	   return (Comparable<S>) c;\n" + 
			"   }\n" + 
			"   <U extends Throwable, V extends Runnable> void foo(List<V> lv) {\n" + 
			"	   List l = (List<U>) lv;\n" + 
			"   }\n" + 
			"   <U extends Throwable, V extends Runnable> void foo2(List<List<V>> lv) {\n" + 
			"	   List l = (List<List<U>>) lv;\n" + 
			"   }\n" + 
			"}\n",
		},
		"----------\n" + 
		"1. ERROR in X.java (at line 5)\n" + 
		"	return (Comparable<S>) c;\n" + 
		"	                   ^\n" + 
		"S cannot be resolved to a type\n" + 
		"----------\n" + 
		"2. WARNING in X.java (at line 8)\n" + 
		"	List l = (List<U>) lv;\n" + 
		"	         ^^^^^^^^^^^^\n" + 
		"Type safety: The cast from List<V> to List<U> is actually checking against the erased type List\n" + 
		"----------\n" + 
		"3. ERROR in X.java (at line 11)\n" + 
		"	List l = (List<List<U>>) lv;\n" + 
		"	         ^^^^^^^^^^^^^^^^^^\n" + 
		"Cannot cast from List<List<V>> to List<List<U>>\n" + 
		"----------\n");
}	

