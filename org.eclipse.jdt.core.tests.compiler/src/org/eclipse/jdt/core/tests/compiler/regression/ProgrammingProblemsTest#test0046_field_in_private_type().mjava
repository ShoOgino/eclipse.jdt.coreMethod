// https://bugs.eclipse.org/bugs/show_bug.cgi?id=185682
// variant with fields inside a private type
public void test0046_field_in_private_type() {
	if (this.complianceLevel < ClassFileConstants.JDK1_5)
		return;
	Map customOptions = getCompilerOptions();
	customOptions.put(CompilerOptions.OPTION_ReportUnusedLocal, CompilerOptions.WARNING);
	this.runNegativeTest(
			new String[] {
				"X.java",
				"class X {\n" +
				"    private class Y {\n" +
				"        int i=1;\n" +
				"        public boolean b=false;\n" +
				"        protected int k = 2;\n" +
				"        Integer j = 3;\n" +
				"    }\n" +
				"    int foo(Y y) {\n" +
				"        y.b|=true;\n" + 				// not a relevant usage
				"        --y.k;\n" + 					// not a relevant usage
				"        y.k+=3;\n" + 					// not a relevant usage
				"        y.j++;\n" + 					// relevant because unboxing is involved
				"        int result = y.i++;\n" + 	// value after increment is used
				"        y.i++;\n" +					// not relevant, but previous is
				"        return result;\n" +
				"    }\n" +
				"}"
			},
			"----------\n" +
			"1. WARNING in X.java (at line 4)\n" +
			"	public boolean b=false;\n" +
			"	               ^\n" +
			"The value of the field X.Y.b is not used\n" +
			"----------\n" +
			"2. WARNING in X.java (at line 5)\n" +
			"	protected int k = 2;\n" +
			"	              ^\n" +
			"The value of the field X.Y.k is not used\n" +
			"----------\n",
			null/*classLibraries*/,
			true/*shouldFlushOutputDirectory*/,
			customOptions);
}

