// only works for info coded on bit 0 - least significant
String testSymbolicValueOf(long[] data) {
	if (data[0] == 0) {
		if (data[1] == 0) {
			if (data[2] == 0) {
				if (data[3] == 0) {
					return "start                 "; //$NON-NLS1$
				}
				else {
					return "pot. nn/unknown       "; //$NON-NLS1$
				}
			}
			else {
				if (data[3] == 0) {
					return "pot. null             "; //$NON-NLS1$
				}
				else {
					return "pot. n/nn/unkn.       "; //$NON-NLS1$
				}
			}
		}
		else {
			if (data[2] == 0) {
				if (data[3] == 0) {
					return "prot. null            "; //$NON-NLS1$
				}
				else {
					return "0101                  "; //$NON-NLS1$
				}
			}
			else {
				if (data[3] == 0) {
					return "prot. null + pot. null"; //$NON-NLS1$
				}
				else {
					return "0111                  "; //$NON-NLS1$
				}
			}
		}
	}
	else {
		if (data[1] == 0) {
			if (data[2] == 0) {
				if (data[3] == 0) {
					return "1000                  "; //$NON-NLS1$
				}
				else {
					return "assigned non null     "; //$NON-NLS1$
				}
			}
			else {
				if (data[3] == 0) {
					return "assigned null         "; //$NON-NLS1$
				}
				else {
					return "assigned unknown      "; //$NON-NLS1$
				}
			}
		}
		else {
			if (data[2] == 0) {
				if (data[3] == 0) {
					return "protected non null    "; //$NON-NLS1$
				}
				else {
					return "prot. nn + pot. nn/unknown"; //$NON-NLS1$
				}
			}
			else {
				if (data[3] == 0) {
					return "1110                  "; //$NON-NLS1$
				}
				else {
					return "1111                  "; //$NON-NLS1$
				}
			}
		}
	}
}

