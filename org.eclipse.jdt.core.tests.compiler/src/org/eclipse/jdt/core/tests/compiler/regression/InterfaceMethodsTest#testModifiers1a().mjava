	// default methods with various modifiers, negative cases
	public void testModifiers1a() {
		runNegativeTest(
		new String[] {
			"I.java",
			"import java.lang.annotation.*;\n" +
			"@Target(ElementType.METHOD) @interface Annot{}\n" +
			"public interface I {\n" +
			"    default void foo1()  {}\n" +
			"    public default synchronized void foo2() { System.exit(0); }\n" +
			"    strictfp default void foo3() {}\n" +
			"    public default strictfp synchronized void foo4() {}\n" +
			"    public default strictfp synchronized @Annot void foo5() {}\n" +
			"}\n"}, 
			"----------\n" + 
			"1. ERROR in I.java (at line 5)\n" + 
			"	public default synchronized void foo2() { System.exit(0); }\n" + 
			"	                                 ^^^^^^\n" + 
			"Illegal modifier for the interface method foo2; only public, abstract, default, static and strictfp are permitted\n" + 
			"----------\n" + 
			"2. ERROR in I.java (at line 7)\n" + 
			"	public default strictfp synchronized void foo4() {}\n" + 
			"	                                          ^^^^^^\n" + 
			"Illegal modifier for the interface method foo4; only public, abstract, default, static and strictfp are permitted\n" + 
			"----------\n" + 
			"3. ERROR in I.java (at line 8)\n" + 
			"	public default strictfp synchronized @Annot void foo5() {}\n" + 
			"	                                                 ^^^^^^\n" + 
			"Illegal modifier for the interface method foo5; only public, abstract, default, static and strictfp are permitted\n" + 
			"----------\n");
	}

