//https://bugs.eclipse.org/bugs/show_bug.cgi?id=114087
public void test0867() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			"import java.util.List;\n" + 
			"\n" + 
			"class Foo {\n" + 
			"\n" + 
			"	static <T extends Runnable> List<List<T>> foo1() {\n" + 
			"		return null;\n" + 
			"	}\n" + 
			"	static <T extends Runnable> void bar1(List<List<T>> l) {\n" + 
			"	}\n" + 
			"	static <T extends Runnable> List<T> foo2() {\n" + 
			"		return null;\n" + 
			"	}\n" + 
			"	static <T extends Runnable> void bar2(List<T> l) {\n" + 
			"	}\n" + 
			"}\n" + 
			"\n" + 
			"public class X {\n" + 
			"\n" + 
			"	{\n" + 
			"		List<List> o = Foo.foo1();\n" + 
			"		Foo.bar1(o);\n" + 
			"	}\n" + 
			"	{\n" + 
			"		List o = Foo.foo2();\n" + 
			"		Foo.bar2(o);\n" + 
			"	}\n" + 
			"\n" + 
			"}\n",
		},
		"----------\n" + 
		"1. WARNING in X.java (at line 20)\n" + 
		"	List<List> o = Foo.foo1();\n" + 
		"	     ^^^^\n" + 
		"List is a raw type. References to generic type List<E> should be parameterized\n" + 
		"----------\n" + 
		"2. ERROR in X.java (at line 20)\n" + 
		"	List<List> o = Foo.foo1();\n" + 
		"	                   ^^^^\n" + 
		"The method foo1() in the type Foo is not applicable for the arguments ()\n" + 
		"----------\n" + 
		"3. ERROR in X.java (at line 21)\n" + 
		"	Foo.bar1(o);\n" + 
		"	    ^^^^\n" + 
		"The method bar1(List<List<T>>) in the type Foo is not applicable for the arguments (List<List>)\n" + 
		"----------\n" + 
		"4. WARNING in X.java (at line 24)\n" + 
		"	List o = Foo.foo2();\n" + 
		"	^^^^\n" + 
		"List is a raw type. References to generic type List<E> should be parameterized\n" + 
		"----------\n" + 
		"5. WARNING in X.java (at line 25)\n" + 
		"	Foo.bar2(o);\n" + 
		"	^^^^^^^^^^^\n" + 
		"Type safety: Unchecked invocation bar2(List) of the generic method bar2(List<T>) of type Foo\n" + 
		"----------\n" + 
		"6. WARNING in X.java (at line 25)\n" + 
		"	Foo.bar2(o);\n" + 
		"	         ^\n" + 
		"Type safety: The expression of type List needs unchecked conversion to conform to List<T>\n" + 
		"----------\n");	
}

