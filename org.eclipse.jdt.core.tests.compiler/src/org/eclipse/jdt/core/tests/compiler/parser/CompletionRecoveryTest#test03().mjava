/*
 * Complete on variable behind ill-formed declaration and inside local type field initialization
 */
public void test03() {

	String str = 
		"import java.io.*;							\n" + 
		"											\n" + 
		"public class X extends IOException {		\n" +
		"	int foo(){								\n" +
		"		final String str = ;				\n" +
		"		class L {							\n" +
		"		 	int i = str						\n";

	String completeBehind = "i = str";
	String expectedCompletionNodeToString = "<CompleteOnName:str>";
	String completionIdentifier = "str";
	String expectedUnitDisplayString =
		"import java.io.*;\n" + 
		"public class X extends IOException {\n" + 
		"  public X() {\n" + 
		"  }\n" + 
		"  int foo() {\n" + 
		"    final String str;\n" + 
		"    class L {\n" + 
		"      int i = <CompleteOnName:str>;\n" + 
		"      L() {\n" + 
		"        super();\n" + // could be optimized out
		"      }\n" + 
		"    }\n" + 
		"  }\n" + 
		"}\n";
	String expectedReplacedSource = "str";
	String testName = "<complete on variable behind ill-formed declaration and inside local type field initialization>";

	int cursorLocation = str.indexOf(completeBehind) + completeBehind.length() - 1;
	this.checkMethodParse(
		str.toCharArray(), 
		cursorLocation, 
		expectedCompletionNodeToString,
		expectedUnitDisplayString,
		completionIdentifier,
		expectedReplacedSource,
		testName); 
}

