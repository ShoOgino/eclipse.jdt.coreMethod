protected void runNegativeTest(String[] testFiles, ExpectedProblem[] expectedProblems, String[] classLib, boolean shouldFlushOutputDirectory, boolean generateOutput) {


	if (shouldFlushOutputDirectory) Util.flushDirectoryContent(new File(OUTPUT_DIR));


	IProblemFactory problemFactory = getProblemFactory();
	Requestor requestor = getRequestor(problemFactory, generateOutput);
	requestor.expectedProblems(expectedProblems);
	Compiler batchCompiler =
		new Compiler(
			getNameEnvironment(new String[] {}, classLib),
			getErrorHandlingPolicy(),
			getCompilerOptions(),
			requestor,
			problemFactory);
	batchCompiler.compile(compilationUnits(testFiles)); // compile all files together
	if (!requestor.hasErrors) {
		String sourceFile = testFiles[0];
		
		// Compute class name by removing ".java" and replacing slashes with dots
		String className = sourceFile.substring(0, sourceFile.length() - 5).replace('/', '.').replace('\\', '.');
		
		assertTrue(
			this.verifier.failureReason,
			this.verifier.verifyClassFiles(sourceFile, className, null, this.classpaths)
		);
	}
}

