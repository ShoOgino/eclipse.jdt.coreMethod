public void testBug484926redundantNNBD() {
	runNegativeTestWithLibs(
		new String[] {
			"testnnbd/NNBDRedundantOnLocalOrField.java",
			"package testnnbd;\n" +
			"\n" +
			"import org.eclipse.jdt.annotation.DefaultLocation;\n" +
			"import org.eclipse.jdt.annotation.NonNullByDefault;\n" +
			"\n" +
			"@NonNullByDefault({})\n" +
			"class AtomicReference<T> {\n" +
			"	public void set(T object) {\n" +
			"	}\n" +
			"}\n" +
			"\n" +
			"public class NNBDRedundantOnLocalOrField {\n" +
			"	@NonNullByDefault\n" +
			"	Runnable r1 = () -> {\n" +
			"		@NonNullByDefault\n" +
			"		AtomicReference<String> x3 = new AtomicReference<>();\n" +
			"		x3.set(null);\n" +
			"	}, r2 = () -> {\n" +
			"		@NonNullByDefault({})\n" +
			"		AtomicReference<String> x4 = new AtomicReference<String>() {\n" +
			"			@NonNullByDefault({})\n" +
			"			public void set(String object) {\n" +
			"			}\n" +
			"		};\n" +
			"		x4.set(null);\n" +
			"	};\n" +
			"\n" +
			"	@NonNullByDefault\n" +
			"	class X1 {\n" +
			"		@NonNullByDefault\n" +
			"		Runnable r = () -> {\n" +
			"			@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
			"			class Local extends AtomicReference<String> {\n" +
			"				@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
			"				class X2 {\n" +
			"					@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
			"					String s;\n" +
			"					\n" +
			"					{\n" +
			"						set(null);\n" +
			"					}\n" +
			"				}\n" +
			"				{\n" +
			"				new X2().hashCode();\n" +
			"				}\n" +
			"			}\n" +
			"			Local x1 = new Local();\n" +
			"			x1.set(null);\n" +
			"		};\n" +
			"	}\n" +
			"\n" +
			"	@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
			"	Object someMethod() {\n" +
			"		@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
			"		AtomicReference<String> x2 = new AtomicReference<>();\n" +
			"		x2.set(null);\n" +
			"\n" +
			"		@NonNullByDefault({})\n" +
			"		Runnable r = () -> {\n" +
			"			@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
			"			AtomicReference<String> x3 = new AtomicReference<>();\n" +
			"			x3.set(null);\n" +
			"		};\n" +
			"\n" +
			"		@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
			"		Runnable r2 = new Runnable() {\n" +
			"			@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
			"			@Override\n" +
			"			public void run() {\n" +
			"			}\n" +
			"		};\n" +
			"\n" +
			"		r2.run();\n" +
			"		return r;\n" +
			"	}\n" +
			"\n" +
			"	@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
			"	void forLoopVariable() {\n" +
			"		{\n" +
			"			@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
			"			Runnable r = () -> {\n" +
			"				AtomicReference<String> x3 = new AtomicReference<>();\n" +
			"				x3.set(null);\n" +
			"			}, r2 = () -> {\n" +
			"				AtomicReference<String> x4 = new AtomicReference<>();\n" +
			"				x4.set(null);\n" +
			"			};\n" +
			"			r.run();\n" +
			"			r2.run();\n" +
			"		}\n" +
			"		for (@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
			"		Runnable r = () -> {\n" +
			"			@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
			"			AtomicReference<String> x3 = new AtomicReference<>();\n" +
			"			x3.set(null);\n" +
			"		}, r2 = () -> {\n" +
			"			@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
			"			AtomicReference<String> x4 = new AtomicReference<>();\n" +
			"			x4.set(null);\n" +
			"		};;) {\n" +
			"			r.run();\n" +
			"			r2.run();\n" +
			"		}\n" +
			"	}\n" +
			"}\n" +
			"",
			"testnnbd/package-info.java",
			"@org.eclipse.jdt.annotation.NonNullByDefault\n" +
			"package testnnbd;\n" +
			"",
		},
		getCompilerOptions(),
		"----------\n" +
		"1. WARNING in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 13)\n" +
		"	@NonNullByDefault\n" +
		"	^^^^^^^^^^^^^^^^^\n" +
		"Nullness default is redundant with a default specified for the enclosing package testnnbd\n" +
		"----------\n" +
		"2. WARNING in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 15)\n" +
		"	@NonNullByDefault\n" +
		"	^^^^^^^^^^^^^^^^^\n" +
		"Nullness default is redundant with a default specified for the field r1\n" +
		"----------\n" +
		"3. ERROR in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 17)\n" +
		"	x3.set(null);\n" +
		"	       ^^^^\n" +
		"Null type mismatch: required \'@NonNull String\' but the provided value is null\n" +
		"----------\n" +
		"4. WARNING in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 21)\n" +
		"	@NonNullByDefault({})\n" +
		"	^^^^^^^^^^^^^^^^^\n" +
		"Nullness default is redundant with a default specified for the variable x4\n" +
		"----------\n" +
		"5. WARNING in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 22)\n" +
		"	public void set(String object) {\n" +
		"	            ^^^^^^^^^^^^^^^^^^\n" +
		"The method set(String) of type new AtomicReference<String>(){} should be tagged with @Override since it actually overrides a superclass method\n" +
		"----------\n" +
		"6. WARNING in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 28)\n" +
		"	@NonNullByDefault\n" +
		"	^^^^^^^^^^^^^^^^^\n" +
		"Nullness default is redundant with a default specified for the enclosing package testnnbd\n" +
		"----------\n" +
		"7. WARNING in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 30)\n" +
		"	@NonNullByDefault\n" +
		"	^^^^^^^^^^^^^^^^^\n" +
		"Nullness default is redundant with a default specified for the enclosing type NNBDRedundantOnLocalOrField.X1\n" +
		"----------\n" +
		"8. WARNING in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 34)\n" +
		"	@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
		"	^^^^^^^^^^^^^^^^^\n" +
		"Nullness default is redundant with a default specified for the enclosing type Local\n" +
		"----------\n" +
		"9. WARNING in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 36)\n" +
		"	@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
		"	^^^^^^^^^^^^^^^^^\n" +
		"Nullness default is redundant with a default specified for the enclosing type Local.X2\n" +
		"----------\n" +
		"10. WARNING in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 37)\n" +
		"	String s;\n" +
		"	       ^\n" +
		"The value of the field Local.X2.s is not used\n" +
		"----------\n" +
		"11. WARNING in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 54)\n" +
		"	@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
		"	^^^^^^^^^^^^^^^^^\n" +
		"Nullness default is redundant with a default specified for the enclosing method someMethod()\n" +
		"----------\n" +
		"12. WARNING in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 65)\n" +
		"	@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
		"	^^^^^^^^^^^^^^^^^\n" +
		"Nullness default is redundant with a default specified for the enclosing method someMethod()\n" +
		"----------\n" +
		"13. WARNING in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 66)\n" +
		"	Runnable r2 = new Runnable() {\n" +
		"	         ^^\n" +
		"The local variable r2 is hiding a field from type NNBDRedundantOnLocalOrField\n" +
		"----------\n" +
		"14. WARNING in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 67)\n" +
		"	@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
		"	^^^^^^^^^^^^^^^^^\n" +
		"Nullness default is redundant with a default specified for the variable r2\n" +
		"----------\n" +
		"15. WARNING in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 80)\n" +
		"	@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
		"	^^^^^^^^^^^^^^^^^\n" +
		"Nullness default is redundant with a default specified for the enclosing method forLoopVariable()\n" +
		"----------\n" +
		"16. WARNING in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 84)\n" +
		"	}, r2 = () -> {\n" +
		"	   ^^\n" +
		"The local variable r2 is hiding a field from type NNBDRedundantOnLocalOrField\n" +
		"----------\n" +
		"17. WARNING in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 91)\n" +
		"	for (@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
		"	     ^^^^^^^^^^^^^^^^^\n" +
		"Nullness default is redundant with a default specified for the enclosing method forLoopVariable()\n" +
		"----------\n" +
		"18. WARNING in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 91)\n" +
		"	for (@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
		"	     ^^^^^^^^^^^^^^^^^\n" +
		"Nullness default is redundant with a default specified for the enclosing method forLoopVariable()\n" +
		"----------\n" +
		"19. WARNING in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 93)\n" +
		"	@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
		"	^^^^^^^^^^^^^^^^^\n" +
		"Nullness default is redundant with a default specified for the variable r\n" +
		"----------\n" +
		"20. WARNING in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 96)\n" +
		"	}, r2 = () -> {\n" +
		"	   ^^\n" +
		"The local variable r2 is hiding a field from type NNBDRedundantOnLocalOrField\n" +
		"----------\n" +
		"21. WARNING in testnnbd\\NNBDRedundantOnLocalOrField.java (at line 97)\n" +
		"	@NonNullByDefault(DefaultLocation.RETURN_TYPE)\n" +
		"	^^^^^^^^^^^^^^^^^\n" +
		"Nullness default is redundant with a default specified for the variable r2\n" +
		"----------\n"
	);
}

