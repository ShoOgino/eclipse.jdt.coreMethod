	// https://bugs.eclipse.org/bugs/show_bug.cgi?id=318401
	// Check if we're able to find the correct static member type being imported,
	// even though the import originally resolved to the static field of the same name,
	// coming from the supertype
	public void test084() {
		this.runConformTest(
			new String[] {
				"Test.java",
				"import static p1.Bar.B;\n" +
				"import p3.Foo.*;\n" +
				"public class Test {\n" +
				"	public static void main(String [] args){\n" +
				"		new Test().test2();" +
				"	}\n" +
				"	public void test2(){\n" +
				"		System.out.println(B.class.getCanonicalName().toString());\n" +	// the class B
				"		System.out.println(p1.Bar.B.class.getCanonicalName().toString());" +	// class B
				"	}\n" +
				"}\n",
				"p1/Bar.java",
				"package p1;\n" +
				"public class Bar extends SuperBar{\n" +
				"	public static class B{}\n" +
				"	public static void B(){}\n" +
				"}\n",
				"p1/SuperBar.java",
				"package p1;\n" +
				"public class SuperBar {\n" +
				"	final public static String B = new String(\"random\");\n" +
				"}\n",
				"p3/Foo.java",
				"package p3;\n" +
				"public class Foo {\n" +
				"	public class B{\n" +
				"		public int a;\n" +
				"	}\n" +
				"}\n"
			},
			"p1.Bar.B\n" + 
			"p1.Bar.B");
	}

