protected Requestor getRequestor(IProblemFactory problemFactory) {
	return new Requestor(problemFactory, OUTPUT_DIR.endsWith(File.separator) ? OUTPUT_DIR : OUTPUT_DIR + File.separator, false) {
		public void acceptResult(CompilationResult cr) {
			super.acceptResult(cr);
			outputClassFiles(cr);
		}

		protected void outputClassFiles(CompilationResult unitResult) {
		
			if (unitResult != null) {
				Enumeration classFiles = unitResult.compiledTypes.elements();
				if (outputPath != null) {
					while (classFiles.hasMoreElements()) {
						// retrieve the key and the corresponding classfile
						ClassFile classFile = (ClassFile) classFiles.nextElement();
						String relativeName = 
							new String(classFile.fileName()).replace('/', File.separatorChar) + ".class";
						try {
							ClassFile.writeToDisk(true, outputPath, relativeName, classFile.getBytes());
						} catch(IOException e) {
						}
					}
				}
			}
		}		
	};
}

