// https://bugs.eclipse.org/bugs/show_bug.cgi?id=127575
public void testBug127575e_1() {
	Runner runner = new Runner();
	runner.testFiles =
			new String[] {
				"X.java",
				"public class X {\n" +
				"  void foo(Object o) {\n" +
				"	 o = null;\n" +
				"    org.eclipse.core.runtime.Assert.isLegal(false && o != null);\n" +
				"    if (o == null) { };\n" + 		// warn on o because o was null above.
				"  }\n" +
				"}\n"};
	runner.expectedCompilerLog =
				"----------\n" +
				"1. WARNING in X.java (at line 4)\n" +
				"	org.eclipse.core.runtime.Assert.isLegal(false && o != null);\n" +
				"	                                                 ^^^^^^^^^\n" +
				"Dead code\n" +
				"----------\n" +
				"2. ERROR in X.java (at line 5)\n" +
				"	if (o == null) { };\n" +
				"	    ^\n" +
				"Redundant null check: The variable o can only be null at this location\n" +
				"----------\n";
	runner.classLibraries =
				this.assertLib;
	runner.javacTestOptions = JavacTestOptions.Excuse.EclipseWarningConfiguredAsError;
	runner.runNegativeTest();
}

