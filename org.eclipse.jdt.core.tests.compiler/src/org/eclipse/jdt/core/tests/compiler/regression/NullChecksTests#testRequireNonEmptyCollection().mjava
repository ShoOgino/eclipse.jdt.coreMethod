	public void testRequireNonEmptyCollection() {
		runConformTestWithLibs(
			new String[] {
				"X.java",
				"import java.util.*;\n" +
				"import org.eclipse.jdt.annotation.*;\n" +
				"import static org.eclipse.jdt.annotation.Checks.*;\n" +
				"public class X {\n" +
				"	static void test(@Nullable Collection<String> strs, @Nullable Collection<String> strs1, Collection<String> strs2) {\n" +
				"		@NonNull Collection<String> nnStrs;\n" +
				"		try {\n" +
				"			nnStrs = requireNonEmpty(strs);\n" +
				"		} catch (NullPointerException npe) {\n" +
				"			System.out.println(\"NPE:\"+npe.getMessage());\n" +
				"		}\n" +
				"		try {\n" +
				"			nnStrs = requireNonEmpty(strs1);\n" +
				"		} catch (NullPointerException npe) {\n" +
				"			System.out.println(\"npe:\"+npe.getMessage());\n" +
				"		}\n" +
				"		try {\n" +
				"			nnStrs = requireNonEmpty(strs2, \"Shouldn't!\");\n" +
				"		} catch (NullPointerException npe) {\n" +
				"			System.out.println(\"npe\"+npe.getMessage());\n" +
				"		} catch (IllegalArgumentException iae) {\n" +
				"			System.out.println(iae.getMessage());\n" +
				"		}\n" +
				"	}\n" +
				"	public static void main(String... args) {\n" +
				"		test(Collections.singletonList(\"good\"), null, Collections.emptyList());\n" +
				"	}\n" +
				"}\n"
			},
			getCompilerOptions(),
			"",
			"npe:null\n" +
			"Shouldn\'t!");
	}

