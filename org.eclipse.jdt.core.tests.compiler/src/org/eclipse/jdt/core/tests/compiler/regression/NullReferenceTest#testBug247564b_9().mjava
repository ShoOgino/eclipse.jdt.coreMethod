// null analysis -- case for static final field initialized inside static block where some locals are also present
// check if the resetting works properly
public void testBug247564b_9() {
	Map compilerOptions = getCompilerOptions();
	compilerOptions.put(CompilerOptions.OPTION_ReportNonStaticAccessToStatic, CompilerOptions.IGNORE);
	this.runNegativeTest(
		false,
		new String[] {
			"X.java",
			"public class X {\n" +
			"	static final Object o1;\n" +
			"	static final Object o2 = new Object();\n" +
			"	static {\n" +
			"		int i = 10;\n" +
			"		o1 = null;\n" +
			"	}\n" +
			"  void foo1() {\n" +
			"	 final Object local = null;\n" +
			"	 if (local == null) {\n" +
			"		local.toString();\n" +
			"	 }\n" +
			"	 local.toString();\n" +
			"	 if (o1 == null) {\n" +	// report redundant null check
			"		o1.toString();\n" + // report NPE
			"	 }\n" +
			"    local.toString();\n" + // try to diffuse status for o1 / o2
			"	 o1.toString();\n" +	// already reported NPE above. So silent. Same behaviour as 'local'
			"	 if (o2 == null) {\n" + // report always false null check
			"		o2.toString();\n" + // dead code
			"	 }\n" +
			"	 o2.toString();" +
			"  }\n" +
			"}\n"},
		null,
		compilerOptions,
		"----------\n" + 
		"1. ERROR in X.java (at line 10)\n" + 
		"	if (local == null) {\n" + 
		"	    ^^^^^\n" + 
		"Redundant null check: The variable local can only be null at this location\n" + 
		"----------\n" + 
		"2. ERROR in X.java (at line 11)\n" + 
		"	local.toString();\n" + 
		"	^^^^^\n" + 
		"Null pointer access: The variable local can only be null at this location\n" + 
		"----------\n" + 
		"3. ERROR in X.java (at line 14)\n" + 
		"	if (o1 == null) {\n" + 
		"	    ^^\n" + 
		"Redundant null check: The field o1 can only be null at this location\n" + 
		"----------\n" + 
		"4. ERROR in X.java (at line 15)\n" + 
		"	o1.toString();\n" + 
		"	^^\n" + 
		"Null pointer access: The field o1 can only be null at this location\n" + 
		"----------\n" + 
		"5. ERROR in X.java (at line 19)\n" + 
		"	if (o2 == null) {\n" + 
		"	    ^^\n" + 
		"Null comparison always yields false: The field o2 cannot be null at this location\n" + 
		"----------\n" + 
		"6. WARNING in X.java (at line 19)\n" + 
		"	if (o2 == null) {\n" + 
		"		o2.toString();\n" + 
		"	 }\n" + 
		"	                ^^^^^^^^^^^^^^^^^^^^^^\n" + 
		"Dead code\n" + 
		"----------\n",
		JavacTestOptions.Excuse.EclipseWarningConfiguredAsError);
}

