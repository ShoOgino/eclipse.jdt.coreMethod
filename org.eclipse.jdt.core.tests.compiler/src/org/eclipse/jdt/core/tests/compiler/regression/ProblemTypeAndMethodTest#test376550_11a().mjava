// https://bugs.eclipse.org/376550
// https://bugs.eclipse.org/379784 - [compiler] "Method can be static" is not getting reported
// bug test case
public void test376550_11a() {
	if (this.complianceLevel < ClassFileConstants.JDK1_5)
		return;
	new Runner() {{
	  this.customOptions = getCompilerOptions();
	  this.customOptions.put(CompilerOptions.OPTION_ReportMethodCanBeStatic, CompilerOptions.ERROR);
	  this.customOptions.put(CompilerOptions.OPTION_ReportMethodCanBePotentiallyStatic, CompilerOptions.ERROR);
	  this.customOptions.put(CompilerOptions.OPTION_ReportUnusedPrivateMember, CompilerOptions.IGNORE);
	  this.testFiles =
		new String[] {
				"X.java", 
				"import java.util.ArrayList;\n" +
				"import java.util.Collection;\n" +
				"public class X {\n" +
				"   private Object o = new Object();\n" +
				"   public final Collection<Object> go() {\n" +// can be static
				"   	return new ArrayList<Object>() {\n" +
				"			{ add(null);}\n" +	// required instance is of type ArrayList, not X
				"		};\n" +
				"	}\n" +
				"}"
		};
	  this.expectedCompilerLog =
		"----------\n" +
		"1. ERROR in X.java (at line 5)\n" +
		"	public final Collection<Object> go() {\n" +
		"	                                ^^^^\n" +
		"The method go() from the type X can be declared as static\n" +
		"----------\n" +
		"2. WARNING in X.java (at line 6)\n" +
		"	return new ArrayList<Object>() {\n" +
		"	           ^^^^^^^^^^^^^^^^^^^\n" +
		"The serializable class  does not declare a static final serialVersionUID field of type long\n" +
		"----------\n";
	  this.javacTestOptions =
		JavacTestOptions.Excuse.EclipseWarningConfiguredAsError;
	}}.runNegativeTest();
}

