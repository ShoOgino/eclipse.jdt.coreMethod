// https://bugs.eclipse.org/bugs/show_bug.cgi?id=428388, [1.8][compiler] Casting to primitives is over tolerant - probable regression since bug 428274
public void test428388g() throws Exception {
	if (this.complianceLevel < ClassFileConstants.JDK1_7)
		return;
	this.runNegativeTest(
		new String[] {
			"X.java",
			"import java.io.Serializable;\n" +
			"public class X implements Serializable {\n" +
			"  static <S extends Boolean & Serializable>int test(S b) {\n" +
			"    return (int) b;\n" +
			"  }\n" +
			"\n" +
			"  public static void main(String[] args) {\n" +
			"    int i = test(Boolean.TRUE);\n" +
			"    System.out.println(i);\n" +
			"  }\n" +
			"}\n",
		},
		"----------\n" +
		"1. WARNING in X.java (at line 2)\n" +
		"	public class X implements Serializable {\n" +
		"	             ^\n" +
		"The serializable class X does not declare a static final serialVersionUID field of type long\n" +
		"----------\n" +
		"2. WARNING in X.java (at line 3)\n" +
		"	static <S extends Boolean & Serializable>int test(S b) {\n" +
		"	                  ^^^^^^^\n" +
		"The type parameter S should not be bounded by the final type Boolean. Final types cannot be further extended\n" +
		"----------\n" +
		"3. ERROR in X.java (at line 4)\n" +
		"	return (int) b;\n" +
		"	       ^^^^^^^\n" +
		"Cannot cast from S to int\n" +
		"----------\n");
}

