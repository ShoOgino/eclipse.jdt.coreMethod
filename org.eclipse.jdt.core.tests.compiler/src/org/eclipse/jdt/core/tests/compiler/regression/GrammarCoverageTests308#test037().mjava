	// ReferenceExpression ::= Name Dimsopt '::' NonWildTypeArgumentsopt IdentifierOrNew
	public void test037() throws Exception { // WILL FAIL WHEN REFERENCE EXPRESSIONS ARE ANALYZED.
		this.runNegativeTest(
				new String[] {
					"X.java",
					"interface I {\n" +
					"    void foo(int x);\n" +
					"}\n" +
					"public class X  {\n" +
					"    public static void main(String [] args) {\n" +
					"        I i = @Marker Y. @Marker Z @Marker [] [] @Marker [] ::foo;\n" +
					"        i.foo(10); \n" +
					"        Zork z;\n" +
					"    }\n" +
					"}\n" +
					"class Y {\n" +
					"    static class Z {\n" +
					"        public static void foo(int x) {\n" +
					"	    System.out.println(x);\n" +
					"        }\n" +
					"    }\n" +
					"}\n"
				},
				"----------\n" + 
				"1. ERROR in X.java (at line 8)\n" + 
				"	Zork z;\n" + 
				"	^^^^\n" + 
				"Zork cannot be resolved to a type\n" + 
				"----------\n");
	}

