/*
 * Complete on superclass behind a unicode
 *
 * -- compute the unicode representation for a given string --
   [ String str = "IOEx";
	StringBuffer buffer = new StringBuffer("\"");
	for (int i = 0; i < str.length(); i++){
		String hex = Integer.toHexString(str.charAt(i));
		buffer.append("\\u0000".substring(0, 6-hex.length()));
		buffer.append(hex);
	}
	buffer.append("\"");
	buffer.toString()
	]
 */
public void test34() {

	String str =
		"import java.io.*;									\n" +
		"													\n" +
		"public class X extends IOE\\u0078ception {			\n" +
		"}													\n";

	String completeBehind = "IOE\\u0078";
	String expectedCompletionNodeToString = "<CompleteOnClass:IOEx>";
	String completionIdentifier = "IOEx";
	String expectedUnitDisplayString =
		"import java.io.*;\n" +
		"public class X extends <CompleteOnClass:IOEx> {\n" +
		"  public X() {\n" +
		"  }\n" +
		"}\n";
	String expectedReplacedSource = "IOE\\u0078ception";
	String testName = "<complete on superclass behind a unicode>";

	int cursorLocation = str.indexOf(completeBehind) + completeBehind.length() - 1;
	this.checkDietParse(
		str.toCharArray(),
		cursorLocation,
		expectedCompletionNodeToString,
		expectedUnitDisplayString,
		completionIdentifier,
		expectedReplacedSource,
		testName);
}

