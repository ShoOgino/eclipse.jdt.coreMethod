	public void testBug426616() throws Exception {
		this.runConformTest(
			new String[] {
				"X.java",
				"import java.util.*;\n"+
				"import java.lang.annotation.*;\n" +
				"import static java.lang.annotation.ElementType.*;\n" +
				"import static java.lang.annotation.RetentionPolicy.*;\n" +
				"@Retention(RUNTIME)\n" +
				"@Target(TYPE_USE)\n" +
				"@interface SizeHolder { Size[] value();}\n"+
				"@Target(TYPE_USE)\n" +
				"@Retention(RUNTIME)\n" +
				"@Repeatable(SizeHolder.class)\n"+
				"@interface Size { int max(); }\n"+
				"@Target(TYPE_USE)\n" +
				"@Retention(RUNTIME)\n" +
				"@interface Nonnull {}\n"+
				"\n"+
				"public class X {\n" +
				"   public static void main(String[]argv) {}\n"+
				"	public static String testArrays() {\n"+
				"		List<@Size(max = 41) CharSequence>[] @Size(max = 42) [] @Nonnull @Size(max = 43) [][] test = new @Size(max = 44) ArrayList @Size(max = 45) [10][][] @Size(max = 47) @Size(max = 48) [];\n"+
				"		return (@Size(max = 49) String) test[0][1][2][3].get(0);\n"+
				"	}\n"+
				"}",
		},
		"");
		// Javac output
		// 0: Size(45): NEW, offset=0
        // 1: SizeHolder([@Size(max=47),@Size(max=48)]): NEW, offset=0, location=[ARRAY, ARRAY, ARRAY]
        // 2: Size(44): NEW, offset=0, location=[ARRAY, ARRAY, ARRAY, ARRAY]
		// 3: Size(49): CAST, offset=6, type_index=0
        // 4: Size(42): LOCAL_VARIABLE, {start_pc=6, length=19, index=0}, location=[ARRAY]
        // 5: NonNull: LOCAL_VARIABLE, {start_pc=6, length=19, index=0}, location=[ARRAY, ARRAY]
        // 6: Size(43): LOCAL_VARIABLE, {start_pc=6, length=19, index=0}, location=[ARRAY, ARRAY]
        // 7: Size(41): LOCAL_VARIABLE, {start_pc=6, length=19, index=0}, location=[ARRAY, ARRAY, ARRAY, ARRAY, TYPE_ARGUMENT(0)]

		String expectedOutput =
				"    RuntimeVisibleTypeAnnotations: \n" +

				// X Maps to javac entry (2): location OK, target type OK, offset different, our offset is 2 and not 0
				"      #33 @Size(\n" +
				"        #34 max=(int) 44 (constant type)\n" +
				"        target type = 0x44 NEW\n" +
				"        offset = 2\n" +
				"        location = [ARRAY, ARRAY, ARRAY, ARRAY]\n" +
				"      )\n" +

				// X Maps to javac entry (0), location OK, target type OK, offset different, our offset is 2 and not 0
				"      #33 @Size(\n" +
				"        #34 max=(int) 45 (constant type)\n" +
				"        target type = 0x44 NEW\n" +
				"        offset = 2\n" +
				"      )\n" +

				// X Maps to javac entry (1), location OK, target type OK, offset different, our offset is 2 and not 0
				"      #37 @SizeHolder(\n" +
				"        #38 value=[\n" +
				"          annotation value =\n" +
				"              #33 @Size(\n" +
				"                #34 max=(int) 47 (constant type)\n" +
				"              )\n" +
				"          annotation value =\n" +
				"              #33 @Size(\n" +
				"                #34 max=(int) 48 (constant type)\n" +
				"              )\n" +
				"          ]\n" +
				"        target type = 0x44 NEW\n" +
				"        offset = 2\n" +
				"        location = [ARRAY, ARRAY, ARRAY]\n" +
				"      )\n" +

				// X Maps to javac entry (3), location OK, target type OK, offset different, our offset is 24 (not 6), type index OK
				"      #33 @Size(\n" +
				"        #34 max=(int) 49 (constant type)\n" +
				"        target type = 0x47 CAST\n" +
				"        offset = 24\n" +
				"        type argument index = 0\n" +
				"      )\n" +

				// Maps to javac entry (4), location OK, target type OK, lvar diff, slight position difference (we seem to have an extra CHECKCAST)
				"      #33 @Size(\n" +
				"        #34 max=(int) 42 (constant type)\n" +
				"        target type = 0x40 LOCAL_VARIABLE\n" +
				"        local variable entries:\n" +
				"          [pc: 6, pc: 28] index: 0\n" +
				"        location = [ARRAY]\n" +
				"      )\n" +

				// Maps to javac entry (5), location OK, taret type OK, lvar diff, slight position difference (we seem to have an extra CHECKCAST)
				"      #43 @Nonnull(\n" +
				"        target type = 0x40 LOCAL_VARIABLE\n" +
				"        local variable entries:\n" +
				"          [pc: 6, pc: 28] index: 0\n" +
				"        location = [ARRAY, ARRAY]\n" +
				"      )\n" +

				// Maps to javac entry (6), location OK, target type OK,  slight position difference (we seem to have an extra CHECKCAST)
				"      #33 @Size(\n" +
				"        #34 max=(int) 43 (constant type)\n" +
				"        target type = 0x40 LOCAL_VARIABLE\n" +
				"        local variable entries:\n" +
				"          [pc: 6, pc: 28] index: 0\n" +
				"        location = [ARRAY, ARRAY]\n" +
				"      )\n" +

				// Maps to javac entry (7), location OK, target type OK, slight position difference (we seem to have an extra CHECKCAST)
				"      #33 @Size(\n" +
				"        #34 max=(int) 41 (constant type)\n" +
				"        target type = 0x40 LOCAL_VARIABLE\n" +
				"        local variable entries:\n" +
				"          [pc: 6, pc: 28] index: 0\n" +
				"        location = [ARRAY, ARRAY, ARRAY, ARRAY, TYPE_ARGUMENT(0)]\n" +
				"      )\n";
		checkDisassembledClassFile(OUTPUT_DIR + File.separator + "X.class", "X", expectedOutput, ClassFileBytesDisassembler.SYSTEM);
	}

