// To test Parser.consumeArrayCreationExpressionWithInitializer() with Type Annotations
public void test0095() throws IOException {
	String source =
		"import java.util.Arrays;\n" +
		"import java.util.List;\n" +
		"@Marker class Deejay {\n" +
		"	@Marker class Counter<@Marker T> {}\n" +
		"	public void f(String[] args) {\n" +
		"		Counter<@Positive Integer> songCounter;\n" +
		"		songCounter = new Counter<@Positive Integer>();\n" +
		"		Counter<@Readonly String> genre;\n" +
		"		genre = new Counter<@Readonly String>();\n" +
		"		List<@Marker Counter<?>> list1;\n" +
		"		list1 = Arrays.asList(new @Marker Counter<?> @Normal(value = 2) @Marker [] {songCounter, genre});\n" +
		"	}\n" +
		"}\n";
	String expectedUnitToString =
		"import java.util.Arrays;\n" +
		"import java.util.List;\n" +
		"@Marker class Deejay {\n" +
		"  @Marker class Counter<@Marker T> {\n" +
		"    Counter() {\n" +
		"      super();\n" +
		"    }\n" +
		"  }\n" +
		"  Deejay() {\n" +
		"    super();\n" +
		"  }\n" +
		"  public void f(String[] args) {\n" +
		"    Counter<@Positive Integer> songCounter;\n" +
		"    songCounter = new Counter<@Positive Integer>();\n" +
		"    Counter<@Readonly String> genre;\n" +
		"    genre = new Counter<@Readonly String>();\n" +
		"    List<@Marker Counter<?>> list1;\n" +
		"    list1 = Arrays.asList(new @Marker Counter<?> @Normal(value = 2) @Marker []{songCounter, genre});\n" +
		"  }\n" +
		"}\n";
	checkParse(CHECK_ALL & ~CHECK_INDEXING_PARSER, source.toCharArray(), null, "test0095", expectedUnitToString );
}

