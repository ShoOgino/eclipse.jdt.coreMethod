public void test007() throws Exception {
	Map customOptions = this.getCompilerOptions();
	customOptions.put(CompilerOptions.OPTION_PreserveUnusedLocal, CompilerOptions.PRESERVE);

	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" + 
			"    \n" + 
			"	public static void main(String[] args) {\n" + 
			"	    int i;\n" + 
			"		int[] tab = new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9 };\n" + 
			"		for (final int e : tab) {\n" + 
			"		    i = e;\n" + 
			"		}\n" + 
			"		System.out.println(\"SUCCESS\");\n" + 
			"	}\n" + 
			"}\n",
		},
		"SUCCESS",
		null,
		true,
		null,
		customOptions,
		null/*no custom requestor*/);
	
	String expectedOutput =
		"  // Method descriptor #15 ([Ljava/lang/String;)V\n" + 
		"  // Stack: 4, Locals: 7\n" + 
		"  public static void main(java.lang.String[] args);\n" + 
		"     0  bipush 9\n" + 
		"     2  newarray int [10]\n" + 
		"     4  dup\n" + 
		"     5  iconst_0\n" + 
		"     6  iconst_1\n" + 
		"     7  iastore\n" + 
		"     8  dup\n" + 
		"     9  iconst_1\n" + 
		"    10  iconst_2\n" + 
		"    11  iastore\n" + 
		"    12  dup\n" + 
		"    13  iconst_2\n" + 
		"    14  iconst_3\n" + 
		"    15  iastore\n" + 
		"    16  dup\n" + 
		"    17  iconst_3\n" + 
		"    18  iconst_4\n" + 
		"    19  iastore\n" + 
		"    20  dup\n" + 
		"    21  iconst_4\n" + 
		"    22  iconst_5\n" + 
		"    23  iastore\n" + 
		"    24  dup\n" + 
		"    25  iconst_5\n" + 
		"    26  bipush 6\n" + 
		"    28  iastore\n" + 
		"    29  dup\n" + 
		"    30  bipush 6\n" + 
		"    32  bipush 7\n" + 
		"    34  iastore\n" + 
		"    35  dup\n" + 
		"    36  bipush 7\n" + 
		"    38  bipush 8\n" + 
		"    40  iastore\n" + 
		"    41  dup\n" + 
		"    42  bipush 8\n" + 
		"    44  bipush 9\n" + 
		"    46  iastore\n" + 
		"    47  astore_2 [tab]\n" + 
		"    48  aload_2 [tab]\n" + 
		"    49  dup\n" + 
		"    50  astore 6\n" + 
		"    52  arraylength\n" + 
		"    53  istore 5\n" + 
		"    55  iconst_0\n" + 
		"    56  istore 4\n" + 
		"    58  goto 72\n" + 
		"    61  aload 6\n" + 
		"    63  iload 4\n" + 
		"    65  iaload\n" + 
		"    66  istore_3 [e]\n" + 
		"    67  iload_3 [e]\n" + 
		"    68  istore_1\n" + 
		"    69  iinc 4 1\n" + 
		"    72  iload 4\n" + 
		"    74  iload 5\n" + 
		"    76  if_icmplt 61\n" + 
		"    79  getstatic java.lang.System.out : java.io.PrintStream [16]\n" + 
		"    82  ldc <String \"SUCCESS\"> [22]\n" + 
		"    84  invokevirtual java.io.PrintStream.println(java.lang.String) : void [24]\n" + 
		"    87  return\n" + 
		"      Line numbers:\n" + 
		"        [pc: 0, line: 5]\n" + 
		"        [pc: 48, line: 6]\n" + 
		"        [pc: 67, line: 7]\n" + 
		"        [pc: 69, line: 6]\n" + 
		"        [pc: 79, line: 9]\n" + 
		"        [pc: 87, line: 10]\n" + 
		"      Local variable table:\n" + 
		"        [pc: 0, pc: 88] local: args index: 0 type: java.lang.String[]\n" + 
		"        [pc: 48, pc: 88] local: tab index: 2 type: int[]\n" + 
		"        [pc: 67, pc: 69] local: e index: 3 type: int\n";
	
	File f = new File(OUTPUT_DIR + File.separator + "X.class");
	byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
	ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
	String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
	int index = result.indexOf(expectedOutput);
	if (index == -1 || expectedOutput.length() == 0) {
		System.out.println(Util.displayString(result, 3));
	}
	if (index == -1) {
		assertEquals("Wrong contents", expectedOutput, result);
	}
}

