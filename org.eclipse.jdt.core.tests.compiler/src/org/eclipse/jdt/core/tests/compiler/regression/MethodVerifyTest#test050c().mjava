	// https://bugs.eclipse.org/bugs/show_bug.cgi?id=90423 - variation
	public void test050c() {
		String expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?
				"----------\n" + 
				"1. ERROR in X.java (at line 3)\n" + 
				"	A<Y> foo(A<Y> o) {  return null; } // duplicate\n" + 
				"	     ^^^^^^^^^^^\n" + 
				"Method foo(A<Y>) has the same erasure foo(A<T>) as another method in type X.C5\n" + 
				"----------\n" + 
				"2. ERROR in X.java (at line 4)\n" + 
				"	A<Z> foo(A<Z> o) {  return null; } // duplicate\n" + 
				"	     ^^^^^^^^^^^\n" + 
				"Method foo(A<Z>) has the same erasure foo(A<T>) as another method in type X.C5\n" + 
				"----------\n" + 
				"3. WARNING in X.java (at line 7)\n" + 
				"	<T extends Y> T foo(A<Y> o) {  return null; } // ok\n" + 
				"	                ^^^^^^^^^^^\n" + 
				"Method foo(A<Y>) has the same erasure foo(A<T>) as another method in type X.C6\n" + 
				"----------\n" + 
				"4. WARNING in X.java (at line 8)\n" + 
				"	<T extends Z> T foo(A<Z> o) {  return null; } // ok\n" + 
				"	                ^^^^^^^^^^^\n" + 
				"Method foo(A<Z>) has the same erasure foo(A<T>) as another method in type X.C6\n" + 
				"----------\n":
					"----------\n" + 
					"1. ERROR in X.java (at line 3)\n" + 
					"	A<Y> foo(A<Y> o) {  return null; } // duplicate\n" + 
					"	     ^^^^^^^^^^^\n" + 
					"Method foo(A<Y>) has the same erasure foo(A<T>) as another method in type X.C5\n" + 
					"----------\n" + 
					"2. ERROR in X.java (at line 4)\n" + 
					"	A<Z> foo(A<Z> o) {  return null; } // duplicate\n" + 
					"	     ^^^^^^^^^^^\n" + 
					"Method foo(A<Z>) has the same erasure foo(A<T>) as another method in type X.C5\n" + 
					"----------\n" + 
					"3. ERROR in X.java (at line 7)\n" + 
					"	<T extends Y> T foo(A<Y> o) {  return null; } // ok\n" + 
					"	                ^^^^^^^^^^^\n" + 
					"Method foo(A<Y>) has the same erasure foo(A<T>) as another method in type X.C6\n" + 
					"----------\n" + 
					"4. ERROR in X.java (at line 8)\n" + 
					"	<T extends Z> T foo(A<Z> o) {  return null; } // ok\n" + 
					"	                ^^^^^^^^^^^\n" + 
					"Method foo(A<Z>) has the same erasure foo(A<T>) as another method in type X.C6\n" + 
					"----------\n";
		this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X {\n" +
				"	class C5 {\n" +
				"		A<Y> foo(A<Y> o) {  return null; } // duplicate\n" +
				"		A<Z> foo(A<Z> o) {  return null; } // duplicate\n" +
				"	}\n" +
				"	class C6 {\n" +
				"		<T extends Y> T foo(A<Y> o) {  return null; } // ok\n" +
				"		<T extends Z> T foo(A<Z> o) {  return null; } // ok\n" +
				"	}\n" +
				"}\n" +
				"class A<T> {}\n" +
				"class Y {}\n" +
				"class Z {}"
			},
			expectedCompilerLog
		);
/* javac 7
X.java:4: name clash: foo(A<Z>) and foo(A<Y>) have the same erasure
                A<Z> foo(A<Z> o) {  return null; } // duplicate
                     ^
X.java:8: name clash: <T#1>foo(A<Z>) and <T#2>foo(A<Y>) have the same erasure
                <T extends Z> T foo(A<Z> o) {  return null; } // ok
                                ^
  where T#1,T#2 are type-variables:
    T#1 extends Z declared in method <T#1>foo(A<Z>)
    T#2 extends Y declared in method <T#2>foo(A<Y>)
2 errors
 */
	}

