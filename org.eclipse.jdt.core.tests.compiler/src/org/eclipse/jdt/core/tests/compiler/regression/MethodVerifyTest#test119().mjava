//https://bugs.eclipse.org/bugs/show_bug.cgi?id=156736
public void test119() {
	Map options = this.getCompilerOptions();
	options.put(CompilerOptions.OPTION_ReportOverridingMethodWithoutSuperInvocation, CompilerOptions.ERROR);
	runNegativeTest(
		// test directory preparation
		true /* flush output directory */, 
		new String[] { /* test files */
			"X.java",
			"class Y<E> {\n" + 
			"	E foo() {\n" + 
			"		return null;\n" + 
			"	}\n" + 
			"}\n" + 
			"\n" + 
			"public class X<T> extends Y<T> {\n" + 
			"	@Override\n" + 
			"	T foo() {\n" + 
			"		return null;\n" + 
			"	}\n" + 
			"}"
		},
		// compiler options
		null /* no class libraries */,
		options /* custom options */,
		// compiler results
		"----------\n" + /* expected compiler log */
		"1. ERROR in X.java (at line 9)\n" + 
		"	T foo() {\n" + 
		"	  ^^^^^\n" + 
		"The method X<T>.foo() is overriding a method without making a super invocation\n" + 
		"----------\n",
		// javac options
		JavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);	
}

