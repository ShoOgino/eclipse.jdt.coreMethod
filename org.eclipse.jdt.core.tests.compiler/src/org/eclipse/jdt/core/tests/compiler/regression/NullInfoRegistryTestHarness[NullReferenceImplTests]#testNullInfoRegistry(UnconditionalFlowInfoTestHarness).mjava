/**
 * Return a fake null info registry derived from an unconditional flow
 * info.
 * @param upstream - UnconditionalFlowInfoTestHarness the upstream flow info
 * @return a fake null info registry derived from upstream
 */
public static NullInfoRegistryTestHarness testNullInfoRegistry(
		UnconditionalFlowInfoTestHarness upstream) {
	NullInfoRegistry nullInfoRegistry = new NullInfoRegistry(upstream);
 	NullInfoRegistryTestHarness result =
 		new NullInfoRegistryTestHarness();
	result.testPosition = upstream.testPosition;
	if (result.testPosition < BitCacheSize) {
		result.nullBit1 = nullInfoRegistry.nullBit1;
		result.nullBit2 = nullInfoRegistry.nullBit2;
		result.nullBit3 = nullInfoRegistry.nullBit3;
		result.nullBit4 = nullInfoRegistry.nullBit4;
//		result.nullBit5 = nullInfoRegistry.nullBit5;
//		result.nullBit6 = nullInfoRegistry.nullBit6;
	}
 	else if ((nullInfoRegistry.tagBits & NULL_FLAG_MASK) != 0){
		int vectorIndex = (result.testPosition / BitCacheSize) - 1,
			length = vectorIndex + 1;
        result.extra = new long[extraLength][];
		result.extra[0] = new long[length];
		result.extra[1] = new long[length];
        for (int j = 2; j < extraLength; j++) {
		    result.extra[j] = new long[length];
		    result.extra[j][vectorIndex] = nullInfoRegistry.extra[j][vectorIndex];
        }
	}
	if ((nullInfoRegistry.tagBits & NULL_FLAG_MASK) != 0) {
		result.tagBits |= NULL_FLAG_MASK;
	}
	result.maxFieldCount = 0;
	return result;
}

