public void test482440a() {
	runNegativeTest(
		new String[] {
			"Test.java",
			"class Test {\n" +
			"\n" +
			"    // generic method\n" +
			"    interface ConsumerA {\n" +
			"        <T> void accept(int i);\n" +
			"    }\n" +
			"\n" +
			"    // non-generic\n" +
			"    interface ConsumerB {\n" +
			"        void accept(int i);\n" +
			"    }\n" +
			"\n" +
			"    // A before B\n" +
			"    void execute1(ConsumerA c) {}\n" +
			"    void execute1(ConsumerB c) {}\n" +
			"\n" +
			"    // B before A\n" +
			"    void execute2(ConsumerB c) {}\n" +
			"    void execute2(ConsumerA c) {}\n" +
			"\n" +
			"    void test() {\n" +
			"        execute1(x -> {});  // compiles in Eclipse\n" +
			"        execute2(x -> {});  // doesn't compile\n" +
			"    }\n" +
			"\n" +
			"}\n"
		},
		"----------\n" +
		"1. ERROR in Test.java (at line 22)\n" +
		"	execute1(x -> {});  // compiles in Eclipse\n" +
		"	^^^^^^^^\n" +
		"The method execute1(Test.ConsumerA) is ambiguous for the type Test\n" +
		"----------\n" +
		"2. ERROR in Test.java (at line 23)\n" +
		"	execute2(x -> {});  // doesn\'t compile\n" +
		"	^^^^^^^^\n" +
		"The method execute2(Test.ConsumerB) is ambiguous for the type Test\n" +
		"----------\n");
}

