// To test Parser.classInstanceCreation() with type annotations
public void test0090() throws IOException {
	String source =
		"class X <@Marker T extends @Readonly String> {\n" +
		"    T foo(T t) {\n" +
		"        return t;\n" +
		"    }\n" +
		"    public static void main(String[] args) {\n" +
		"        new @Readonly X<String>().baz(\"SUCCESS\");\n" +	// Parser.classInstanceCreation called
		"    }\n" +
		"    void baz(final T t) {\n" +
		"        new @Readonly @Marker Object() {\n" +	// Parser.classInstanceCreation called
		"            void print() {\n" +
		"            }\n" +
		"        }.print();\n" +
		"    }\n" +
		"}\n";
	String expectedUnitToString =
		"class X<@Marker T extends @Readonly String> {\n" +
		"  X() {\n" +
		"    super();\n" +
		"  }\n" +
		"  T foo(T t) {\n" +
		"    return t;\n" +
		"  }\n" +
		"  public static void main(String[] args) {\n" +
		"    new @Readonly X<String>().baz(\"SUCCESS\");\n" +
		"  }\n" +
		"  void baz(final T t) {\n" +
		"    new @Readonly @Marker Object() {\n" +
		"  void print() {\n" +
		"  }\n" +
		"}.print();\n" +
		"  }\n" +
		"}\n";
	checkParse(source.toCharArray(), null, "test0090", expectedUnitToString );
}

