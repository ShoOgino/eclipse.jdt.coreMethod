// https://bugs.eclipse.org/bugs/show_bug.cgi?id=388281
// Test whether null annotations from a super interface trigger an error against the overriding implementation
// Class from source, its super interface from binary
// Super interface subject to package level @NonNullByDefault
public void testBug388281_05() {
	String path = this.getCompilerTestsPluginDirectoryPath() + File.separator + "workspace" + File.separator + "Test388281"+this.TEST_JAR_SUFFIX;
	String[] libs = new String[this.LIBS.length + 1];
	System.arraycopy(this.LIBS, 0, libs, 0, this.LIBS.length);
	libs[this.LIBS.length] = path;
	Map options = getCompilerOptions();
	options.put(JavaCore.COMPILER_INHERIT_NULL_ANNOTATIONS, JavaCore.ENABLED);
	runNegativeNullTest(
		new String[] {
			"ctest/C.java",
			"package ctest;\n" +
			"public class C implements i2.I2 {\n" +
			"    public Object m1(Object a1) {\n" +
			"         System.out.println(a1.toString());   // silent\n" +
			"         return null;                         // (1)\n" +
			"    }\n" +
			"    public String m2(Object a2) {\n" +
			"         System.out.println(a2.toString());\n" +
			"         return null;						   // (2)\n" +
			"    }\n" +
			"}\n",
			"Client.java",
			"import ctest.C;\n" +
			"public class Client {\n" +
			"    void test(C c) {\n" +
			"         String s = c.m2(null);               // (3)\n" +
			"    }\n" +
			"}\n"
		},
		"----------\n" +
		"1. ERROR in ctest\\C.java (at line 5)\n" +
		"	return null;                         // (1)\n" +
		"	       ^^^^\n" +
		"Null type mismatch: required \'@NonNull Object\' but the provided value is null\n" +
		"----------\n" +
		"2. ERROR in ctest\\C.java (at line 9)\n" +
		"	return null;						   // (2)\n" +
		"	       ^^^^\n" +
		"Null type mismatch: required \'@NonNull String\' but the provided value is null\n" +
		"----------\n" +
		"----------\n" +
		"1. ERROR in Client.java (at line 4)\n" +
		"	String s = c.m2(null);               // (3)\n" +
		"	                ^^^^\n" +
		"Null type mismatch: required \'@NonNull Object\' but the provided value is null\n" +
		"----------\n",
		libs,
		true /* shouldFlush*/,
		options);
}

