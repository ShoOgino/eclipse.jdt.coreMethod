public void enterType(TypeInfo typeInfo) {
	if (this.currentType == null) {
		// top level type
		this.currentType =
			new SourceType(
				null,
				typeInfo.declarationStart,
				typeInfo.modifiers,
				typeInfo.name,
				typeInfo.nameSourceStart,
				typeInfo.nameSourceEnd,
				typeInfo.superclass,
				typeInfo.superinterfaces,
				this.source);
		this.currentType.setPackage(this.currentPackage);
		setImports();
	} else {
		// member type
		SourceType memberType;
		this.currentType.addMemberType(
			memberType =
				new SourceType(
					this.currentType.getName(),
					typeInfo.declarationStart,
					typeInfo.modifiers,
					typeInfo.name,
					typeInfo.nameSourceStart,
					typeInfo.nameSourceEnd,
					typeInfo.superclass,
					typeInfo.superinterfaces,
					this.source));
		memberType.parent = this.currentType;
		this.currentType = memberType;
	}
	if (typeInfo.typeParameters != null) {
		for (int i = 0, length = typeInfo.typeParameters.length; i < length; i++) {
			TypeParameterInfo typeParameterInfo = typeInfo.typeParameters[i];
			addTypeParameterToType(typeParameterInfo);
		}
	}
}

