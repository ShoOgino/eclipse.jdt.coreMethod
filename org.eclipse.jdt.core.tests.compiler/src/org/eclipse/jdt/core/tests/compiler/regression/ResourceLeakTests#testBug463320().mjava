public void testBug463320() {
	Map options = getCompilerOptions();
	options.put(CompilerOptions.OPTION_ReportUnclosedCloseable, CompilerOptions.ERROR);
	options.put(CompilerOptions.OPTION_ReportPotentiallyUnclosedCloseable, CompilerOptions.ERROR);
	runLeakTest(
		new String[] {
			"Try17.java",
			"import java.util.zip.*;\n" +
			"import java.io.*;\n" +
			"public class Try17 {\n" + 
			"    void potential() throws IOException {\n" + 
			"        String name= getZipFile().getName();\n" + 
			"        System.out.println(name);\n" + 
			"    }\n" + 
			"    void definite() throws IOException {\n" + 
			"        String name= new ZipFile(\"bla.jar\").getName();\n" + 
			"        System.out.println(name);\n" + 
			"    }\n" +
			"	 void withLocal() throws IOException {\n" +
			"		 ZipFile zipFile = getZipFile();\n" +
			"        String name= zipFile.getName();\n" + 
			"        System.out.println(name);\n" + 
			"	 }\n" + 
			"\n" + 
			"    ZipFile getZipFile() throws IOException {\n" + 
			"        return new ZipFile(\"bla.jar\");\n" + 
			"    }\n" + 
			"}"
		},
		"----------\n" + 
		"1. ERROR in Try17.java (at line 5)\n" + 
		"	String name= getZipFile().getName();\n" + 
		"	             ^^^^^^^^^^^^\n" + 
		"Potential resource leak: \'<unassigned Closeable value>\' may not be closed\n" + 
		"----------\n" + 
		"2. ERROR in Try17.java (at line 9)\n" + 
		"	String name= new ZipFile(\"bla.jar\").getName();\n" + 
		"	             ^^^^^^^^^^^^^^^^^^^^^^\n" + 
		"Resource leak: \'<unassigned Closeable value>\' is never closed\n" + 
		"----------\n" + 
		"2. ERROR in Try17.java (at line 13)\n" + 
		"	ZipFile zipFile = getZipFile();\n" + 
		"	        ^^^^^^^\n" + 
		"Potential resource leak: \'zipFile\' may not be closed\n" + 
		"----------\n",
		options);
}

