// https://bugs.eclipse.org/408441 - Type mismatch using Arrays.asList with 3 or more implementations of an interface with the interface type as the last parameter
public void testBug408441() {
	runConformTest(
		new String[] {
			"TypeMistmatchIssue.java",
			"import java.util.Arrays;\n" +
			"import java.util.List;\n" +
			"\n" +
			"\n" +
			"public class TypeMistmatchIssue {\n" +
			"	static interface A {\n" +
			"	}\n" +
			"	static class B implements A {\n" +
			"	}\n" +
			"	static class C implements A {\n" +
			"	}\n" +
			"	static class D implements A {\n" +
			"	}\n" +
			"	\n" +
			"	void illustrate() {\n" +
			"		List<Class<? extends A>> no1= Arrays.asList(B.class, A.class);						// compiles\n" +
			"		List<Class<? extends A>> no2= Arrays.asList(C.class, B.class, A.class);				// compiles\n" +
			"		List<Class<? extends A>> no3= Arrays.asList(D.class, B.class, A.class);				// compiles\n" +
			"		\n" +
			"		List<Class<? extends A>> no4= Arrays.asList(D.class, C.class, B.class, A.class);	// cannot convert error !!!\n" +
			"\n" +
			"		List<Class<? extends A>> no5= Arrays.asList(A.class, B.class, C.class, D.class);	// compiles\n" +
			"		List<Class<? extends A>> no6= Arrays.asList(A.class, D.class, C.class, B.class);	// compiles\n" +
			"	}\n" +
			"}\n"
		});
}

