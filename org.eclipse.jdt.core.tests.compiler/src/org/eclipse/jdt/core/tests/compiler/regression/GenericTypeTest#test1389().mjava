//https://bugs.eclipse.org/bugs/show_bug.cgi?id=247953 - variation
public void test1389()  throws Exception {
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X extends AA implements p.IB {\n" +
			"	void foo() {\n" +
			"		System.out.println(baz);\n" +
			"	}\n" +
			"	public static void main(String[] args) {\n" +
			"		new X().foo();\n" +
			"	}\n" +
			"}\n" +
			"class AA {\n" +
			"	void bar() {}\n" +
			"}\n",
			"p/IB.java", // =====================
			"package p;\n" +
			"interface IA {\n" +
			"	Object baz = \"done\";\n" +
			"}\n" +
			"public interface IB extends IA {\n" +
			"}\n",
		},
		"done");
	// check #baz declaring class is not IA
	String expectedOutput =
		"  // Method descriptor #8 ()V\n" +
		"  // Stack: 2, Locals: 1\n" +
		"  void foo();\n" +
		"     0  getstatic java.lang.System.out : java.io.PrintStream [17]\n" +
		"     3  getstatic X.baz : java.lang.Object [23]\n" +
		"     6  invokevirtual java.io.PrintStream.println(java.lang.Object) : void [27]\n" +
		"     9  return\n" +
		"      Line numbers:\n" +
		"        [pc: 0, line: 3]\n" +
		"        [pc: 9, line: 4]\n";

	File f = new File(OUTPUT_DIR + File.separator + "X.class");
	byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
	ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
	String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
	int index = result.indexOf(expectedOutput);
	if (index == -1 || expectedOutput.length() == 0) {
		System.out.println(Util.displayString(result, 3));
	}
	if (index == -1) {
		assertEquals("Wrong contents", expectedOutput, result);
	}
}

