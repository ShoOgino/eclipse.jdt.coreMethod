public void test007a() {
	if (this.complianceLevel < ClassFileConstants.JDK1_8) {
		this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X<T> {\n" +
				"	public X(){\n" +
				"	}\n" +
				"	public X(T param){\n" +
				"		System.out.println(param);\n" +
				"	}\n" +
				"	public static void testFunction(X<String> param){\n" +
				"		System.out.println(\"SUCCESS\");\n" +
				"	}\n" +
				"	public static void main(String[] args) {\n" +
				"		X.testFunction(new X<>());\n" +
				"		X.testFunction(new X(\"hello\"));\n" +
				"	}\n" +
				"}",
			},
			"----------\n" +
			"1. ERROR in X.java (at line 11)\n" +
			"	X.testFunction(new X<>());\n" +
			"	  ^^^^^^^^^^^^\n" +
			"The method testFunction(X<String>) in the type X is not applicable for the arguments (X<Object>)\n" +
			"----------\n" +
			"2. WARNING in X.java (at line 12)\n" +
			"	X.testFunction(new X(\"hello\"));\n" +
			"	               ^^^^^^^^^^^^^^\n" +
			"Type safety: The constructor X(Object) belongs to the raw type X. References to generic type X<T> should be parameterized\n" +
			"----------\n" +
			"3. WARNING in X.java (at line 12)\n" +
			"	X.testFunction(new X(\"hello\"));\n" +
			"	               ^^^^^^^^^^^^^^\n" +
			"Type safety: The expression of type X needs unchecked conversion to conform to X<String>\n" +
			"----------\n" +
			"4. WARNING in X.java (at line 12)\n" +
			"	X.testFunction(new X(\"hello\"));\n" +
			"	                   ^\n" +
			"X is a raw type. References to generic type X<T> should be parameterized\n" +
			"----------\n");
	} else {
		this.runConformTest(
				new String[] {
					"X.java",
					"public class X<T> {\n" +
					"	public X(){\n" +
					"	}\n" +
					"	public X(T param){\n" +
					"		System.out.println(param);\n" +
					"	}\n" +
					"	public static void testFunction(X<String> param){\n" +
					"		System.out.println(\"SUCCESS\");\n" +
					"	}\n" +
					"	public static void main(String[] args) {\n" +
					"		X.testFunction(new X<>());\n" +
					"		X.testFunction(new X(\"hello\"));\n" +
					"	}\n" +
					"}",
				},
				"SUCCESS\n" +
				"hello\n" +
				"SUCCESS");
	}
}

