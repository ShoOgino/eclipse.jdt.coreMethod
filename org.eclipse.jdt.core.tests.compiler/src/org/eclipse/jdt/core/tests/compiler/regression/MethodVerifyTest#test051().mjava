	// https://bugs.eclipse.org/bugs/show_bug.cgi?id=89470
	public void test051() {
		this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X implements I {\n" + 
				"		 public <T extends I> void foo(T t) {}\n" + 
				"}\n" +
				"interface I {\n" + 
				"		 <T> void foo(T t);\n" + 
				"}\n"
			},
			"----------\n" + 
			"1. ERROR in X.java (at line 1)\r\n" + 
			"	public class X implements I {\r\n" + 
			"	             ^\n" + 
			"The type X must implement the inherited abstract method I.foo(T)\n" + 
			"----------\n"
			// X is not abstract and does not override abstract method <T>foo(T) in I
		);
		this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X {\n" + 
				"	void foo(A<String> a) {}\n" + 
				"	void foo(A<Integer> a) {}\n" +
				"}\n" + 
				"class A<T> {}\n",
			},
			"----------\n" + 
			"1. ERROR in X.java (at line 2)\r\n" + 
			"	void foo(A<String> a) {}\r\n" + 
			"	     ^^^^^^^^^^^^^^^^\n" + 
			"Duplicate method foo(A<String>) in type X\n" + 
			"----------\n" + 
			"2. ERROR in X.java (at line 3)\r\n" + 
			"	void foo(A<Integer> a) {}\r\n" + 
			"	     ^^^^^^^^^^^^^^^^^\n" + 
			"Duplicate method foo(A<Integer>) in type X\n" + 
			"----------\n"
			// name clash: foo(A<java.lang.String>) and foo(A<java.lang.Integer>) have the same erasure
		);
		this.runConformTest(
			new String[] {
				"X.java",
				"public class X {\n" + 
				"	void foo(A<String> a) {}\n" + 
				"	Object foo(A<Integer> a) { return null; }\n" +
				"}\n" + 
				"class A<T> {}\n",
			},
			""
		);
	}

