// https://bugs.eclipse.org/382069 - [null] Make the null analysis consider JUnit's assertNotNull similarly to assertions
// various asserts from com.google.common.base.Preconditions
public void testBug382069f() throws IOException {
	if (this.complianceLevel >= ClassFileConstants.JDK1_5) {
		this.runNegativeTest(
			new String[] {
				GOOGLE_PRECONDITIONS_NAME,
				GOOGLE_PRECONDITIONS_CONTENT,
				"X.java",
				"import com.google.common.base.Preconditions;\n" +
				"public class X {\n" +
				"  void foo(Object o1, String o2, X x) {\n" +
				"    boolean b = o1 != null;\n" + // sheds doubts upon o1
				"    Preconditions.checkNotNull(o1);\n" + 	// protection
				"    o1.toString();\n" + 		// quiet
				"    b = o2 != null;\n" + // sheds doubts upon o2
				"    Preconditions.checkNotNull(o2, \"msg {0}.{1}\", o1, o2);\n" + 	// protection
				"    o2.toString();\n" + 		// quiet
				"    Preconditions.checkArgument(x == null, \"ups\");\n" +
				"    x.foo(null, null, null); // definite NPE\n" +
				"  }\n" +
				"}\n"},
				"----------\n" + 
				"1. ERROR in X.java (at line 11)\n" + 
				"	x.foo(null, null, null); // definite NPE\n" + 
				"	^\n" + 
				"Null pointer access: The variable x can only be null at this location\n" + 
				"----------\n");
	}
}

