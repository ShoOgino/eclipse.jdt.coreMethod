	public static Test suiteForJavadocSupport(/*TestSuite suite,*/ String level, Class testClass, Constructor constructor, String support) throws InvocationTargetException, IllegalAccessException, InstantiationException {
		TestSuite suite = new TestSuite("Doc "+support);
		if (testNames != null) {
			for (int i = 0; i < testNames.length; i++) {
				String meth = "test" + testNames[i];
//				Object[] params = {meth, support};
				Object[] params = {meth};
				suite.addTest((Test)constructor.newInstance(params));
			}
		}
		else if (testNumbers != null) {
			for (int i = 0; i < testNumbers.length; i++) {
				String meth = "test";
				int num = testNumbers[i];
				if (num < 10) meth += "0";
				if (num < 100) meth += "0";
				meth += num;
//				Object[] params = {meth, support};
				Object[] params = {meth};
				suite.addTest((Test)constructor.newInstance(params));
			}
		}
		else if (testRange != null && testRange.length == 2 && testRange[0]>=0 && testRange[0]<=testRange[1]) {
			for (int i=testRange[0]; i<=testRange[1]; i++) {
				String meth = "test";
				if (i<10) meth += "0";
				if (i<100) meth += "0";
				meth += i;
//				Object[] params = {meth, support};
				Object[] params = {meth};
				suite.addTest((Test)constructor.newInstance(params));
			}
		} else {
			// Run all tests
			Method[] methods = testClass.getMethods();
			for (int i = 0, max = methods.length; i < max; i++) {
				if (methods[i].getModifiers() == 1 && methods[i].getName().startsWith("test")) { //$NON-NLS-1$
//					Object[] params = {methods[i].getName(), support};
					Object[] params = {methods[i].getName()};
					suite.addTest((Test)constructor.newInstance(params));
				}
			}
		}
//		return suite;
		return new RegressionTestSetup(suite, level, support);
	}

