// Disabled since javadoc completion has been implemented
public void _testXA_1FGGUQF_1FHSL8H_1() {
	String str = 
			"// int\n" + 
			"package p; \n" + 
			"/**\n" + 
			" * 1FGGUQF and 1FHSL8H\n" + 
			" */\n" + 
			"/**\n" + 
			" * int\n" + 
			" */\n" + 
			"/*\n" + 
			" * int\n" + 
			" */\n" + 
			"// int\n" + 
			"/**\n" + 
			"int.\n" + 
			" * Internal API used to resolve a compilation unit minimally for code assist engine\n" + 
			" */\n" + 
			"/**\n" + 
			" * int\n" + 
			" */\n" + 
			"public class XA {\n" + 
			"	//  int\n" + 
			"	/*  int */\n" + 
			"	/** int */\n" + 
			"	/**\n" + 
			"	int.\n" + 
			"	 * Internal API used to resolve a compilation unit minimally for code assist engine\n" + 
			"	 */\n" + 
			"	void /* int */\n" + 
			"	foo() {\n" + 
			"		//  int\n" + 
			"		/*  int */\n" + 
			"		/** int */\n" + 
			"	}\n" + 
			"	/**\n" + 
			"	int.\n" + 
			"	 * Internal API used to resolve a compilation unit minimally for code assist engine\n" + 
			"	 */\n" + 
			"	int field /* int */\n" + 
			"	;\n" + 
			"	/*\n" + 
			"	    int\n" + 
			"	*/\n" + 
			"	static {\n" + 
			"		// int\n" + 
			"	}\n" + 
			"}\n" + 
			"//  int\n" + 
			"/*  int */\n" + 
			"/** int */\n";

	String testName = "<complete on comment>";
	String completeBehind = "int.";
	String expectedCompletionNodeToString = NONE;
	String completionIdentifier = "";
	String expectedReplacedSource = NONE;
	int cursorLocation = str.indexOf("int.\n") + completeBehind.length() - 1;
	String expectedUnitDisplayString = null;

	try {
		checkMethodParse(
			str.toCharArray(), 
			cursorLocation, 
			expectedCompletionNodeToString,
			expectedUnitDisplayString,
			completionIdentifier,
			expectedReplacedSource,
			testName); 
		assertTrue("failed to detect invalid cursor location", false);		
	} catch(InvalidCursorLocation e){
		assertEquals("invalid cursor location: ", e.irritant, InvalidCursorLocation.NO_COMPLETION_INSIDE_COMMENT);
	}
}

