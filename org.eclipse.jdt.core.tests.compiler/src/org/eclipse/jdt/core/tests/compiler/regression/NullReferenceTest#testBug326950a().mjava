// https://bugs.eclipse.org/bugs/show_bug.cgi?id=326950
public void testBug326950a() throws Exception {
	Map options = getCompilerOptions();
	options.put(CompilerOptions.OPTION_ReportNullReference, CompilerOptions.WARNING);
	options.put(CompilerOptions.OPTION_ReportPotentialNullReference, CompilerOptions.WARNING);
	options.put(CompilerOptions.OPTION_ReportRedundantNullCheck, CompilerOptions.WARNING);
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" +
			"	public static void main(String[] args) {\n" +
			"		String s = null;\n" +
			"		if (s == null) {\n" +
			"			System.out.println(\"SUCCESS\");\n" +
			"		} else {\n" +
			"			System.out.println(\"Dead code, but don't optimize me out\");\n" +
			"		}\n" +
			"	}\n" +
			"}",
		},
		"SUCCESS",
		null,
		true,
		null,
		options,
		null);
	String expectedOutput =
		"  public static void main(java.lang.String[] args);\n" +
		"     0  aconst_null\n" +
		"     1  astore_1 [s]\n" +
		"     2  aload_1 [s]\n" +
		"     3  ifnonnull 17\n" +
		"     6  getstatic java.lang.System.out : java.io.PrintStream [16]\n" +
		"     9  ldc <String \"SUCCESS\"> [22]\n" +
		"    11  invokevirtual java.io.PrintStream.println(java.lang.String) : void [24]\n" +
		"    14  goto 25\n" +
		"    17  getstatic java.lang.System.out : java.io.PrintStream [16]\n" +
		"    20  ldc <String \"Dead code, but don\'t optimize me out\"> [30]\n" +
		"    22  invokevirtual java.io.PrintStream.println(java.lang.String) : void [24]\n" +
		"    25  return\n";
	checkDisassembledClassFile(OUTPUT_DIR + File.separator + "X.class", "X", expectedOutput);
}

