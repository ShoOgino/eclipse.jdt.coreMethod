	public void test0325() {
		this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X <T> {\n" + 
				"	void foo1() {\n" + 
				"		X<String>.Item<Thread> i = new X<Exception>().new Item<Thread>();\n" + 
				"	}\n" + 
				"	void foo2() {\n" + 
				"		X<Exception>.Item<Thread> j = new X<Exception>.Item<Thread>();\n" + // allowed per grammar
				"	}\n" + 
				"	void foo3() {\n" + 
				"		X.Item k = new X.Item();\n" + 
				"	}\n" + 
				"	static void foo4() {\n" + 
				"		X.Item k = new X.Item();\n" + 
				"	}\n" + 
				"	class Item <E> {}\n" + 
				"}\n"
			},
			"----------\n" + 
			"1. ERROR in X.java (at line 3)\n" + 
			"	X<String>.Item<Thread> i = new X<Exception>().new Item<Thread>();\n" + 
			"	                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Type mismatch: cannot convert from X<Exception>.Item<Thread> to X<String>.Item<Thread>\n" + 
			"----------\n" + 
			"2. ERROR in X.java (at line 6)\n" + 
			"	X<Exception>.Item<Thread> j = new X<Exception>.Item<Thread>();\n" + 
			"	                                  ^^^^^^^^^^^^^^^^^\n" + 
			"Cannot allocate the member type X<Exception>.Item<Thread> using a parameterized compound name; use its simple name and an enclosing instance of type X<Exception>\n" + 
			"----------\n" + 
			"3. WARNING in X.java (at line 9)\n" + 
			"	X.Item k = new X.Item();\n" + 
			"	^^^^^^\n" + 
			"X.Item is a raw type. References to generic type X<T>.Item<E> should be parameterized\n" + 
			"----------\n" + 
			"4. WARNING in X.java (at line 9)\n" + 
			"	X.Item k = new X.Item();\n" + 
			"	               ^^^^^^\n" + 
			"X.Item is a raw type. References to generic type X<T>.Item<E> should be parameterized\n" + 
			"----------\n" + 
			"5. WARNING in X.java (at line 12)\n" + 
			"	X.Item k = new X.Item();\n" + 
			"	^^^^^^\n" + 
			"X.Item is a raw type. References to generic type X<T>.Item<E> should be parameterized\n" + 
			"----------\n" + 
			"6. ERROR in X.java (at line 12)\n" + 
			"	X.Item k = new X.Item();\n" + 
			"	           ^^^^^^^^^^^^\n" + 
			"No enclosing instance of type X<T> is accessible. Must qualify the allocation with an enclosing instance of type X<T> (e.g. x.new A() where x is an instance of X<T>).\n" + 
			"----------\n" + 
			"7. WARNING in X.java (at line 12)\n" + 
			"	X.Item k = new X.Item();\n" + 
			"	               ^^^^^^\n" + 
			"X.Item is a raw type. References to generic type X<T>.Item<E> should be parameterized\n" + 
			"----------\n");
	}

