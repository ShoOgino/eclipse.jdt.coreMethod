	//https://bugs.eclipse.org/bugs/show_bug.cgi?id=94644 - variation	
	public void test648() {
	    this.runNegativeTest(
            new String[] {
                "X.java",
				"public class X {\n" + 
				"	void foo() {\n" + 
				"		@SuppressWarnings(\"unused\")\n" + 
				"		Outer.Inner inner = new Sub().get();\n" + 
				"	}\n" + 
				"	Zork z;\n" + 
				"}\n" + 
				"class Outer<T> {\n" + 
				"	class Inner<U> {\n" + 
				"	}\n" + 
				"}\n" + 
				"class Sub extends Outer {\n" + 
				"	Inner get() { return null; }\n" + 
				"}\n",
	        },
	        "----------\n" + 
			"1. WARNING in X.java (at line 4)\n" + 
			"	Outer.Inner inner = new Sub().get();\n" + 
			"	^^^^^^^^^^^\n" + 
			"Outer.Inner is a raw type. References to generic type Outer<T>.Inner<U> should be parameterized\n" + 
			"----------\n" + 
			"2. ERROR in X.java (at line 6)\n" + 
			"	Zork z;\n" + 
			"	^^^^\n" + 
			"Zork cannot be resolved to a type\n" + 
			"----------\n" + 
			"3. WARNING in X.java (at line 12)\n" + 
			"	class Sub extends Outer {\n" + 
			"	                  ^^^^^\n" + 
			"Outer is a raw type. References to generic type Outer<T> should be parameterized\n" + 
			"----------\n" + 
			"4. WARNING in X.java (at line 13)\n" + 
			"	Inner get() { return null; }\n" + 
			"	^^^^^\n" + 
			"Outer.Inner is a raw type. References to generic type Outer<T>.Inner<U> should be parameterized\n" + 
			"----------\n");
	}			

