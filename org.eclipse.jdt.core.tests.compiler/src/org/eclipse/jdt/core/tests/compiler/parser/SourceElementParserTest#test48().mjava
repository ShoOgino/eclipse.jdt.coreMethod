public void test48() {

	String s =
		"public class X implements Y, 		\n" +
		"	String s = \"					\n";

	String expectedUnitToString =
		"public class X implements Y, String, {\n"
		+ "\tjava.lang.Object(0)\n"
		+ "}";

	String testName = "test48: full parse";
	fullParse(s,testName);

	assertEquals(
		"Invalid class declarationSourceStart ",
		0,
		this.currentType.getDeclarationSourceStart());

	assertEquals(
		"Invalid class declarationSourceEnd ",
		50,
		this.currentType.getDeclarationSourceEnd());

	assertTrue("has 2 superinterfaces " , this.currentType.getInterfaceNames() != null);
	assertEquals("2 superinterfaces " , 2, this.currentType.getInterfaceNames().length);

	SourceField[] fields = this.currentType.getFields();
	assertTrue(" invalid fields ", fields == null);

	SourceMethod[] methods = this.currentType.getMethods();
	assertTrue(" invalid methods ", methods == null);

	SourceType[] members = this.currentType.getMemberTypes();
	assertTrue(" invalid members ", members == null);

	assertEquals(
		"Invalid source " + testName,
		expectedUnitToString,
		this.currentType.toString());
}

