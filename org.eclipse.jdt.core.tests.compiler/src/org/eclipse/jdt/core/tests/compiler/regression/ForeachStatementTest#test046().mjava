//https://bugs.eclipse.org/bugs/show_bug.cgi?id=150074
public void test046() throws Exception { 
	Map options = this.getCompilerOptions();
	options.put(CompilerOptions.OPTION_PreserveUnusedLocal, CompilerOptions.OPTIMIZE_OUT);

	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" + 
			"        public static void main(String[] args) {\n" + 
			"                for (int i : initForEach()) {\n" + 
			"                	System.out.print(\'a\');\n" + 
			"                }\n" + 
			"        }\n" + 
			"        static int[] initForEach() {\n" + 
			"                return new int[] {1, 2, 3, 4};\n" + 
			"        }\n" + 
			"}",
		},
		"aaaa",
		null,
		true,
		null,
		options,
		null);

	String expectedOutput =
		"  // Method descriptor #15 ([Ljava/lang/String;)V\n" + 
		"  // Stack: 2, Locals: 4\n" + 
		"  public static void main(java.lang.String[] args);\n" + 
		"     0  invokestatic X.initForEach() : int[] [16]\n" + 
		"     3  dup\n" + 
		"     4  astore_3\n" + 
		"     5  arraylength\n" + 
		"     6  istore_2\n" + 
		"     7  iconst_0\n" + 
		"     8  istore_1\n" + 
		"     9  goto 23\n" + 
		"    12  getstatic java.lang.System.out : java.io.PrintStream [20]\n" + 
		"    15  bipush 97\n" + 
		"    17  invokevirtual java.io.PrintStream.print(char) : void [26]\n" + 
		"    20  iinc 1 1\n" + 
		"    23  iload_1\n" + 
		"    24  iload_2\n" + 
		"    25  if_icmplt 12\n" + 
		"    28  return\n" + 
		"      Line numbers:\n" + 
		"        [pc: 0, line: 3]\n" + 
		"        [pc: 12, line: 4]\n" + 
		"        [pc: 20, line: 3]\n" + 
		"        [pc: 28, line: 6]\n" + 
		"      Local variable table:\n" + 
		"        [pc: 0, pc: 29] local: args index: 0 type: java.lang.String[]\n";
	
	File f = new File(OUTPUT_DIR + File.separator + "X.class");
	byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
	ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
	String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
	int index = result.indexOf(expectedOutput);
	if (index == -1 || expectedOutput.length() == 0) {
		System.out.println(Util.displayString(result, 3));
	}
	if (index == -1) {
		assertEquals("Wrong contents", expectedOutput, result);
	}
}

