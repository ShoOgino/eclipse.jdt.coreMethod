	public void testSinceTerminally() {
		Runner runner = new Runner();
		runner.customOptions = new HashMap<>();
		runner.customOptions.put(JavaCore.COMPILER_PB_DEPRECATION, CompilerOptions.WARNING);
		runner.customOptions.put(JavaCore.COMPILER_PB_DEPRECATION_WHEN_OVERRIDING_DEPRECATED_METHOD, CompilerOptions.ENABLED);
		runner.customOptions.put(JavaCore.COMPILER_PB_TERMINAL_DEPRECATION, CompilerOptions.ERROR);
		runner.testFiles =
			new String[] {
				"test1/E01.java",
				"package test1;\n" +
				"public class E01 {\n" +
				"	@Deprecated(since=\"1.0\", forRemoval=true) protected static class Old {}\n" +
				"	@Deprecated(since=\"2\", forRemoval=true) public static int x = 5, y= 10;\n" +
				"	@Deprecated(since=\"3.0.0\", forRemoval=true) public E01() {}\n" +
				"	@Deprecated(since=\"4-SNAPSHOT\", forRemoval=true) protected void old() {}\n" +
				"}",
				"test1/E02.java",
				"package test1;\n" +
				"public class E02 {\n" +
				"	public void foo() {\n" +
				"		System.out.println(new E01.Old());\n" +
				"		E01 e = new E01();\n" +
				"		e.old();\n" +
				"		System.out.println(E01.x);\n" +
				"		System.out.println(E01.y);\n" +
				"	}\n" +
				"	class E03 extends E01 {\n" +
				"		protected void old() {}\n" +
				"	}\n" +
				"}"
			};
		runner.expectedCompilerLog =
			"----------\n" +
			"1. ERROR in test1\\E02.java (at line 4)\n" +
			"	System.out.println(new E01.Old());\n" +
			"	                       ^^^^^^^^^\n" +
			"The constructor E01.Old() has been deprecated since version 1.0 and marked for removal\n" +
			"----------\n" +
			"2. ERROR in test1\\E02.java (at line 4)\n" +
			"	System.out.println(new E01.Old());\n" +
			"	                           ^^^\n" +
			"The type E01.Old has been deprecated since version 1.0 and marked for removal\n" +
			"----------\n" +
			"3. ERROR in test1\\E02.java (at line 5)\n" +
			"	E01 e = new E01();\n" +
			"	            ^^^^^\n" +
			"The constructor E01() has been deprecated since version 3.0.0 and marked for removal\n" +
			"----------\n" +
			"4. ERROR in test1\\E02.java (at line 6)\n" +
			"	e.old();\n" +
			"	  ^^^^^\n" +
			"The method old() from the type E01 has been deprecated since version 4-SNAPSHOT and marked for removal\n" +
			"----------\n" +
			"5. ERROR in test1\\E02.java (at line 7)\n" +
			"	System.out.println(E01.x);\n" +
			"	                       ^\n" +
			"The field E01.x has been deprecated since version 2 and marked for removal\n" +
			"----------\n" +
			"6. ERROR in test1\\E02.java (at line 8)\n" +
			"	System.out.println(E01.y);\n" +
			"	                       ^\n" +
			"The field E01.y has been deprecated since version 2 and marked for removal\n" +
			"----------\n" +
			"7. ERROR in test1\\E02.java (at line 10)\n" +
			"	class E03 extends E01 {\n" +
			"	      ^^^\n" +
			"The constructor E01() has been deprecated since version 3.0.0 and marked for removal\n" +
			"----------\n" +
			"8. ERROR in test1\\E02.java (at line 11)\n" +
			"	protected void old() {}\n" +
			"	               ^^^^^\n" +
			"The method E02.E03.old() overrides a method from E01 that has been deprecated since version 4-SNAPSHOT and marked for removal\n" +
			"----------\n";
		runner.javacTestOptions =
			JavacTestOptions.Excuse.EclipseWarningConfiguredAsError;
		runner.runNegativeTest();
	}

