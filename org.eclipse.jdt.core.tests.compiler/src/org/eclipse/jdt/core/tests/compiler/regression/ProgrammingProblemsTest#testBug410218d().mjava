// Collection: {contains,remove,retain}All, non-generic sub type of Collection, configured to be ERROR
public void testBug410218d() {
	if (this.complianceLevel < ClassFileConstants.JDK1_5)
		return;
	Map customOptions = getCompilerOptions();
	customOptions.put(JavaCore.COMPILER_PB_DISCOURAGED_INVOCATION_UNLIKELY_ARGUMENT_NOT_CASTABLE, JavaCore.ERROR);
	runNegativeTest(
		new String[] {
			"X.java",
			"import java.util.*;\n" +
			"interface NumberCollection extends Collection<Number> {}\n" +
			"class X {\n" +
			"  void test(NumberCollection numbers, List<Integer> ints, Set<Number> numberSet) {\n" +
			"	if (numbers.containsAll(ints)) // bad\n" +
			"		numbers.removeAll(ints); // bad\n" + 
			"	else\n" +
			"		numbers.retainAll(ints); // bad\n" + 
			"\n" + 
			"	numbers.removeAll(numberSet); // ok\n" + 
			"  }\n" +
			"}\n"
		},
		"----------\n" + 
		"1. ERROR in X.java (at line 5)\n" + 
		"	if (numbers.containsAll(ints)) // bad\n" + 
		"	                        ^^^^\n" + 
		"Discouraged invocation of method containsAll(Collection<?>). Argument type List<Integer> cannot be cast to the likely type Collection<Number> according to the declaring type Collection<Number>\n" + 
		"----------\n" + 
		"2. ERROR in X.java (at line 6)\n" + 
		"	numbers.removeAll(ints); // bad\n" + 
		"	                  ^^^^\n" + 
		"Discouraged invocation of method removeAll(Collection<?>). Argument type List<Integer> cannot be cast to the likely type Collection<Number> according to the declaring type Collection<Number>\n" + 
		"----------\n" + 
		"3. ERROR in X.java (at line 8)\n" + 
		"	numbers.retainAll(ints); // bad\n" + 
		"	                  ^^^^\n" + 
		"Discouraged invocation of method retainAll(Collection<?>). Argument type List<Integer> cannot be cast to the likely type Collection<Number> according to the declaring type Collection<Number>\n" + 
		"----------\n",
		null/*classLibraries*/,
		true/*shouldFlushOutputDirectory*/,
		customOptions);
}

