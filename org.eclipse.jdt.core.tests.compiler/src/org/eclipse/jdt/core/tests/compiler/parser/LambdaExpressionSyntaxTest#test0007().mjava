	// type elided, unparenthesized parameter + expression body lambda in message send.
	public void test0007() throws IOException {
		String source = 
				"interface I {\n" +
				"    int square(int x);\n" +
				"}\n" +
				"public class X {\n" +
				"    static void foo(I i1, I i2) {\n" +
				"        System.out.println(i1.square(10));\n" +
				"        System.out.println(i2.square(10));\n" +
				"    }\n" +
				"    public static void main(String [] args) {\n" +
				"        foo(x -> x * x, x -> x * x * x);\n" +
				"    }\n" +
				"}\n";

		String expectedUnitToString = 
				"interface I {\n" + 
				"  int square(int x);\n" + 
				"}\n" + 
				"public class X {\n" + 
				"  public X() {\n" + 
				"    super();\n" + 
				"  }\n" + 
				"  static void foo(I i1, I i2) {\n" + 
				"    System.out.println(i1.square(10));\n" + 
				"    System.out.println(i2.square(10));\n" + 
				"  }\n" + 
				"  public static void main(String[] args) {\n" + 
				"    foo((<no type> x) -> (x * x), (<no type> x) -> ((x * x) * x));\n" + 
				"  }\n" + 
				"}\n";
		checkParse(CHECK_PARSER | CHECK_JAVAC_PARSER , source.toCharArray(), null, "test0007", expectedUnitToString);
	}

