	// https://bugs.eclipse.org/bugs/show_bug.cgi?id=82439
	public void test0460() {
		this.runNegativeTest(
			new String[] {
				"X.java",
				"import java.util.*;\n" + 
				"\n" + 
				"public class X {\n" + 
				"\n" + 
				"	public <E extends Object, S extends Collection<E>> S test(S param) {\n" + 
				"		\n" + 
				"		Class<? extends Collection> c = param.getClass(); // ok\n" + 
				"		Class<? extends Collection> d = getClazz(); // ko\n" + 
				"		return null;\n" + 
				"	}\n" + 
				"	Class<? extends Object> getClazz() {\n" + 
				"		return null;\n" + 
				"	}\n" + 
				"}\n" + 
				"abstract class Z implements Collection<String> {\n" + 
				"	void foo() {\n" + 
				"		Class<? extends Collection> c = getClass(); // ok\n" + 
				"	}\n" + 
				"}\n"
			},
			"----------\n" + 
			"1. WARNING in X.java (at line 7)\n" + 
			"	Class<? extends Collection> c = param.getClass(); // ok\n" + 
			"	                ^^^^^^^^^^\n" + 
			"Collection is a raw type. References to generic type Collection<E> should be parameterized\n" + 
			"----------\n" + 
			"2. WARNING in X.java (at line 8)\n" + 
			"	Class<? extends Collection> d = getClazz(); // ko\n" + 
			"	                ^^^^^^^^^^\n" + 
			"Collection is a raw type. References to generic type Collection<E> should be parameterized\n" + 
			"----------\n" + 
			"3. ERROR in X.java (at line 8)\n" + 
			"	Class<? extends Collection> d = getClazz(); // ko\n" + 
			"	                                ^^^^^^^^^^\n" + 
			"Type mismatch: cannot convert from Class<capture#2-of ? extends Object> to Class<? extends Collection>\n" + 
			"----------\n" + 
			"4. WARNING in X.java (at line 17)\n" + 
			"	Class<? extends Collection> c = getClass(); // ok\n" + 
			"	                ^^^^^^^^^^\n" + 
			"Collection is a raw type. References to generic type Collection<E> should be parameterized\n" + 
			"----------\n");
	}

