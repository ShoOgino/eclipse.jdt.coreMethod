// Map: contains* & remove & get
public void testBug410218c() {
	if (this.complianceLevel < ClassFileConstants.JDK1_5)
		return;
	runNegativeTest(
		new String[] {
			"X.java",
			"import java.util.*;\n" +
			"class X {\n" +
			"  Number test(Map<? extends Number, Number> m, boolean f) {\n" +
			"	if (m.containsKey(\"ONE\")) // bad\n" + 
			"		m.remove(\"ONE\"); // bad\n" +
			"	if (m.containsValue(\"ONE\")) // bad\n" + 
			"		m.remove(\"ONE\"); // bad\n" + 
			"	short one = 1;\n" +
			"	if (m.containsKey(one)) // almost ok\n" +
			"		m.remove(one); // almost ok\n" +
			"	if (m.containsValue(Short.valueOf(one))) // ok\n" + 
			"		m.remove(Short.valueOf(one)); // almost ok\n" + 
			"	if (f)\n" +
			"		return m.get(\"ONE\"); // bad\n" +
			"	return m.get(one);\n // almost ok\n" +
			"  }\n" +
			"}\n"
		},
		"----------\n" + 
		"1. WARNING in X.java (at line 4)\n" + 
		"	if (m.containsKey(\"ONE\")) // bad\n" + 
		"	                  ^^^^^\n" + 
		"Unlikely argument type String for containsKey(Object) on a Map<capture#1-of ? extends Number,Number>\n" + 
		"----------\n" + 
		"2. WARNING in X.java (at line 5)\n" + 
		"	m.remove(\"ONE\"); // bad\n" + 
		"	         ^^^^^\n" + 
		"Unlikely argument type String for remove(Object) on a Map<capture#2-of ? extends Number,Number>\n" + 
		"----------\n" + 
		"3. WARNING in X.java (at line 6)\n" + 
		"	if (m.containsValue(\"ONE\")) // bad\n" + 
		"	                    ^^^^^\n" + 
		"Unlikely argument type String for containsValue(Object) on a Map<capture#3-of ? extends Number,Number>\n" + 
		"----------\n" + 
		"4. WARNING in X.java (at line 7)\n" + 
		"	m.remove(\"ONE\"); // bad\n" + 
		"	         ^^^^^\n" + 
		"Unlikely argument type String for remove(Object) on a Map<capture#4-of ? extends Number,Number>\n" + 
		"----------\n" + 
		"5. WARNING in X.java (at line 14)\n" + 
		"	return m.get(\"ONE\"); // bad\n" + 
		"	             ^^^^^\n" + 
		"Unlikely argument type String for get(Object) on a Map<capture#9-of ? extends Number,Number>\n" + 
		"----------\n");
}

