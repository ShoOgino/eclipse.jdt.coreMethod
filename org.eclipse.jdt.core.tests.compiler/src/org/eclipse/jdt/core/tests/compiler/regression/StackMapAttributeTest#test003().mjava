	public void test003() {
		this.runConformTest(
				new String[] {
					"X.java",
					"public class X {\n" + 
					"	public static void foo(boolean b) {\n" + 
					"		int i = 0;\n" + 
					"		try {\n" + 
					"			System.out.println(\"FINALLY\");\n" + 
					"			i++;\n" + 
					"			int j = i -1;\n" + 
					"			bar(j);\n" + 
					"		} catch(NullPointerException e) {\n" + 
					"			e.printStackTrace();\n" + 
					"		} finally {\n" + 
					"			System.out.println(\"FINALLY\");\n" + 
					"		}\n" + 
					"	}\n" + 
					"	public static void bar(int i) {}\n" + 
					"	\n" + 
					"	public static void main(String[] args) {\n" + 
					"		foo(true);\n" + 
					"		System.out.println(\"SUCCESS\");\n" + 
					"	}\n" + 
					"}",
				},
				"FINALLY\n" + 
				"FINALLY\n" + 
				"SUCCESS");
				
			ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
			String actualOutput = null;
			try {
				byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +"X.class"));
				actualOutput =
					disassembler.disassemble(
						classFileBytes,
						"\n",
						ClassFileBytesDisassembler.DETAILED); 
			} catch (org.eclipse.jdt.core.util.ClassFormatException e) {
				assertTrue("ClassFormatException", false);
			} catch (IOException e) {
				assertTrue("IOException", false);
			}
			
			String expectedOutput = 
				"  // Method descriptor #15 (Z)V\n" + 
				"  // Stack: 2, Locals: 4\n" + 
				"  public static void foo(boolean b);\n" + 
				"     0  iconst_0\n" + 
				"     1  istore_1 [i]\n" + 
				"     2  getstatic java.lang.System.out : java.io.PrintStream [16]\n" + 
				"     5  ldc <String \"FINALLY\"> [22]\n" + 
				"     7  invokevirtual java.io.PrintStream.println(java.lang.String) : void [24]\n" + 
				"    10  iinc 1 1 [i]\n" + 
				"    13  iload_1 [i]\n" + 
				"    14  iconst_1\n" + 
				"    15  isub\n" + 
				"    16  istore_2 [j]\n" + 
				"    17  iload_2 [j]\n" + 
				"    18  invokestatic X.bar(int) : void [30]\n" + 
				"    21  goto 43\n" + 
				"    24  astore_2 [e]\n" + 
				"    25  aload_2 [e]\n" + 
				"    26  invokevirtual java.lang.NullPointerException.printStackTrace() : void [34]\n" + 
				"    29  goto 54\n" + 
				"    32  astore_3\n" + 
				"    33  getstatic java.lang.System.out : java.io.PrintStream [16]\n" + 
				"    36  ldc <String \"FINALLY\"> [22]\n" + 
				"    38  invokevirtual java.io.PrintStream.println(java.lang.String) : void [24]\n" + 
				"    41  aload_3\n" + 
				"    42  athrow\n" + 
				"    43  getstatic java.lang.System.out : java.io.PrintStream [16]\n" + 
				"    46  ldc <String \"FINALLY\"> [22]\n" + 
				"    48  invokevirtual java.io.PrintStream.println(java.lang.String) : void [24]\n" + 
				"    51  goto 62\n" + 
				"    54  getstatic java.lang.System.out : java.io.PrintStream [16]\n" + 
				"    57  ldc <String \"FINALLY\"> [22]\n" + 
				"    59  invokevirtual java.io.PrintStream.println(java.lang.String) : void [24]\n" + 
				"    62  return\n" + 
				"      Exception Table:\n" + 
				"        [pc: 2, pc: 21] -> 24 when : java.lang.NullPointerException\n" + 
				"        [pc: 2, pc: 32] -> 32 when : any\n" + 
				"      Line numbers:\n" + 
				"        [pc: 0, line: 3]\n" + 
				"        [pc: 2, line: 5]\n" + 
				"        [pc: 10, line: 6]\n" + 
				"        [pc: 13, line: 7]\n" + 
				"        [pc: 17, line: 8]\n" + 
				"        [pc: 24, line: 9]\n" + 
				"        [pc: 25, line: 10]\n" + 
				"        [pc: 32, line: 11]\n" + 
				"        [pc: 33, line: 12]\n" + 
				"        [pc: 41, line: 13]\n" + 
				"        [pc: 43, line: 12]\n" + 
				"        [pc: 54, line: 11]\n" + 
				"        [pc: 62, line: 14]\n" + 
				"      Local variable table:\n" + 
				"        [pc: 0, pc: 63] local: b index: 0 type: boolean\n" + 
				"        [pc: 2, pc: 63] local: i index: 1 type: int\n" + 
				"        [pc: 17, pc: 24] local: j index: 2 type: int\n" + 
				"        [pc: 25, pc: 29] local: e index: 2 type: java.lang.NullPointerException\n" + 
				"      Stack map table: number of frames 5\n" + 
				"        [pc: 24, full, stack: {java.lang.NullPointerException}, locals: {int, int}]\n" + 
				"        [pc: 32, same_locals_1_stack_item, stack: {java.lang.Throwable}]\n" + 
				"        [pc: 43, same]\n" + 
				"        [pc: 54, same]\n" + 
				"        [pc: 62, same]\n";
			
			int index = actualOutput.indexOf(expectedOutput);
			if (index == -1 || expectedOutput.length() == 0) {
				System.out.println(Util.displayString(actualOutput, 2));
			}
			if (index == -1) {
				assertEquals("Wrong contents", expectedOutput, actualOutput);
			}
	}

