//https://bugs.eclipse.org/bugs/show_bug.cgi?id=150074
public void _test039() throws Exception {
	this.runConformTest(
		new String[] {
			"X.java",
			"import java.util.HashSet;\n" +
			"import java.util.Set;\n" +
			"import java.util.Iterator;\n" +
			"\n" +
			"public class X {\n" +
			"\n" +
			"        public static void main(String[] args) {\n" +
			"                for (Object o : initForEach()) {\n" +
			"                }\n" +
			"        }\n" +
			"\n" +
			"		static class MyIterator<T> implements Iterator<T> {\n" +
			"			Iterator<T> iterator;\n" +
			"			\n" +
			"			MyIterator(Iterator<T> it) {\n" +
			"				this.iterator = it;\n" +
			"			}\n" +
			"			public boolean hasNext() {\n" +
			"				System.out.println(\"hasNext\");\n" +
			"				return this.iterator.hasNext();\n" +
			"			}			\n" +
			"			public T next() {\n" +
			"				System.out.println(\"next\");\n" +
			"				return this.iterator.next();\n" +
			"			}\n" +
			"			public void remove() {\n" +
			"				System.out.println(\"remove\");\n" +
			"				this.iterator.remove();\n" +
			"			}\n" +
			"		}\n" +
			"		\n" +
			"        static Set<Object> initForEach()        {\n" +
			"                System.out.println(\"initForEach\");\n" +
			"                HashSet<Object> set = new HashSet<Object>() {\n" +
			"                	private static final long serialVersionUID = 1L;\n" +
			"                	public Iterator<Object> iterator() {\n" +
			"                		System.out.println(\"iterator\");\n" +
			"                		return new MyIterator<Object>(super.iterator());\n" +
			"                	}\n" +
			"                };\n" +
			"                for (int i = 0; i < 3; i++) set.add(i);\n" +
			"                return set;\n" +
			"        }\n" +
			"}",
		},
		"initForEach\n" +
		"iterator\n" +
		"hasNext\n" +
		"next\n" +
		"hasNext\n" +
		"next\n" +
		"hasNext\n" +
		"next\n" +
		"hasNext");

	String expectedOutput =
		"  // Method descriptor #15 ([Ljava/lang/String;)V\n" +
		"  // Stack: 1, Locals: 2\n" +
		"  public static void main(java.lang.String[] args);\n" +
		"     0  invokestatic X.initForEach() : java.util.Set [16]\n" +
		"     3  invokeinterface java.util.Set.iterator() : java.util.Iterator [20] [nargs: 1]\n" +
		"     8  astore_1\n" +
		"     9  goto 19\n" +
		"    12  aload_1\n" +
		"    13  invokeinterface java.util.Iterator.next() : java.lang.Object [26] [nargs: 1]\n" +
		"    18  pop\n" +
		"    19  aload_1\n" +
		"    20  invokeinterface java.util.Iterator.hasNext() : boolean [32] [nargs: 1]\n" +
		"    25  ifne 12\n" +
		"    28  return\n" +
		"      Line numbers:\n" +
		"        [pc: 0, line: 8]\n" +
		"        [pc: 28, line: 10]\n" +
		"      Local variable table:\n" +
		"        [pc: 0, pc: 29] local: args index: 0 type: java.lang.String[]\n";

	File f = new File(OUTPUT_DIR + File.separator + "X.class");
	byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
	ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
	String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
	int index = result.indexOf(expectedOutput);
	if (index == -1 || expectedOutput.length() == 0) {
		System.out.println(Util.displayString(result, 3));
	}
	if (index == -1) {
		assertEquals("Wrong contents", expectedOutput, result);
	}
}

