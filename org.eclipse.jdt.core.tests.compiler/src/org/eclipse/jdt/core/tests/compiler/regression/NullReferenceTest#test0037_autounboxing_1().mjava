// https://bugs.eclipse.org/403147 [compiler][null] FUP of bug 400761: consolidate interaction between unboxing, NPE, and deferred checking
// finally block injects pot-nn into itself via enclosing loop
public void test0037_autounboxing_1() {
	if (this.complianceLevel < ClassFileConstants.JDK1_5) return;
	Map options = getCompilerOptions();
	options.put(JavaCore.COMPILER_PB_POTENTIAL_NULL_REFERENCE, JavaCore.ERROR);
	runNegativeTest(
		true,
		new String[] {
			"X.java",
			"public class X {\n" +
			"	void foo1(boolean b) {\n" +
			"       int j = 0;\n" +
			"       Integer i = null;\n" +
			"       while (true) {\n" +
			"           try {\n" +
			"               j = 1;\n" +
			"           } finally {\n" +
			"               j = (b?i:1)+1;\n" +
			"               i = 2;\n" +
			"           }\n" +
			"       }\n" +
			"   }\n" +
			"	void foo2(boolean b) {\n" +
			"       int j = 0;\n" +
			"       Integer i = null;\n" +
			"       try {\n" +
			"           j = 1;\n" +
			"       } finally {\n" +
			"           j = (b?i:1)+1;\n" +
			"           i = 2;\n" +
			"       }\n" +
			"   }\n" +
			"}\n"},
		null,
		options,
		"----------\n" +
		"1. ERROR in X.java (at line 9)\n" +
		"	j = (b?i:1)+1;\n" +
		"	       ^\n" +
		"Potential null pointer access: This expression of type Integer may be null but requires auto-unboxing\n" +
		"----------\n" +
		"2. ERROR in X.java (at line 20)\n" +
		"	j = (b?i:1)+1;\n" +
		"	       ^\n" +
		"Null pointer access: This expression of type Integer is null but requires auto-unboxing\n" +
		"----------\n",
	    JavacTestOptions.Excuse.EclipseWarningConfiguredAsError);
}

