	// Reference expression - super:: form, with type arguments. 
	public void test0002() throws IOException {
		String source = 
				"interface I {\n" +
				"    void foo(int x);\n" +
				"}\n" +
				"public class X extends Y {\n" +
				"    public static void main(String [] args) {\n" +
				"	new X().doit();\n" +
				"    }\n" +
				"    void doit() {\n" +
				"        I i = super::<String>foo;\n" +
				"        i.foo(10); \n" +
				"    }\n" +
				"}\n" +
				"class Y {\n" +
				"    public void foo(int x) {\n" +
				"	System.out.println(x);\n" +
				"    }\n" +
				"}\n";
		String expectedUnitToString = 
				"interface I {\n" + 
				"  void foo(int x);\n" + 
				"}\n" + 
				"public class X extends Y {\n" + 
				"  public X() {\n" + 
				"    super();\n" + 
				"  }\n" + 
				"  public static void main(String[] args) {\n" + 
				"    new X().doit();\n" + 
				"  }\n" + 
				"  void doit() {\n" + 
				"    I i = super::<String>foo;\n" + 
				"    i.foo(10);\n" + 
				"  }\n" + 
				"}\n" + 
				"class Y {\n" + 
				"  Y() {\n" + 
				"    super();\n" + 
				"  }\n" + 
				"  public void foo(int x) {\n" + 
				"    System.out.println(x);\n" + 
				"  }\n" + 
				"}\n";
		checkParse(CHECK_PARSER | CHECK_JAVAC_PARSER , source.toCharArray(), null, "test0002", expectedUnitToString);
	}

