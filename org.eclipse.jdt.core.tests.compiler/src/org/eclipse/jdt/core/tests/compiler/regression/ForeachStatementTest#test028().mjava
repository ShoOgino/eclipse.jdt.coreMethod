//72760 - missing local variable attribute after foreach statement
public void test028() throws Exception {
	this.runConformTest(
		new String[] {
			"X.java",
			"import java.util.ArrayList;\n" +
			"\n" +
			"public class X {\n" +
			"\n" +
			"    public static void main(String args[]) {\n" +
			"    	ArrayList<ArrayList<String>> slist = new ArrayList<ArrayList<String>>();\n" +
			"    	\n" +
			"    	slist.add(new ArrayList<String>());\n" +
			"    	slist.get(0).add(\"SU\");\n" +
			"    	slist.get(0).add(\"C\");\n" +
			"    	slist.get(0).add(\"C\");\n" +
			"    	\n" +
			"    	slist.add(new ArrayList<String>());\n" +
			"    	slist.get(1).add(\"E\");\n" +
			"    	slist.get(1).add(\"S\");\n" +
			"    	slist.get(1).add(\"S\");\n" +
			"    	\n" +
			"    	for (int i=0; i<slist.size(); i++){\n" +
			"    		for (String s : slist.get(i)){\n" +
			"    			System.out.print(s);\n" +
			"    		}\n" +
			"    	}\n" +
			"    } \n" +
			"} \n" +
			"",
		},
		"SUCCESS");

	String expectedOutput =
		"  // Method descriptor #15 ([Ljava/lang/String;)V\n" +
		"  // Stack: 3, Locals: 5\n" +
		"  public static void main(java.lang.String[] args);\n" +
		"      0  new java.util.ArrayList [16]\n" +
		"      3  dup\n" +
		"      4  invokespecial java.util.ArrayList() [18]\n" +
		"      7  astore_1 [slist]\n" +
		"      8  aload_1 [slist]\n" +
		"      9  new java.util.ArrayList [16]\n" +
		"     12  dup\n" +
		"     13  invokespecial java.util.ArrayList() [18]\n" +
		"     16  invokevirtual java.util.ArrayList.add(java.lang.Object) : boolean [19]\n" +
		"     19  pop\n" +
		"     20  aload_1 [slist]\n" +
		"     21  iconst_0\n" +
		"     22  invokevirtual java.util.ArrayList.get(int) : java.lang.Object [23]\n" +
		"     25  checkcast java.util.ArrayList [16]\n" +
		"     28  ldc <String \"SU\"> [27]\n" +
		"     30  invokevirtual java.util.ArrayList.add(java.lang.Object) : boolean [19]\n" +
		"     33  pop\n" +
		"     34  aload_1 [slist]\n" +
		"     35  iconst_0\n" +
		"     36  invokevirtual java.util.ArrayList.get(int) : java.lang.Object [23]\n" +
		"     39  checkcast java.util.ArrayList [16]\n" +
		"     42  ldc <String \"C\"> [29]\n" +
		"     44  invokevirtual java.util.ArrayList.add(java.lang.Object) : boolean [19]\n" +
		"     47  pop\n" +
		"     48  aload_1 [slist]\n" +
		"     49  iconst_0\n" +
		"     50  invokevirtual java.util.ArrayList.get(int) : java.lang.Object [23]\n" +
		"     53  checkcast java.util.ArrayList [16]\n" +
		"     56  ldc <String \"C\"> [29]\n" +
		"     58  invokevirtual java.util.ArrayList.add(java.lang.Object) : boolean [19]\n" +
		"     61  pop\n" +
		"     62  aload_1 [slist]\n" +
		"     63  new java.util.ArrayList [16]\n" +
		"     66  dup\n" +
		"     67  invokespecial java.util.ArrayList() [18]\n" +
		"     70  invokevirtual java.util.ArrayList.add(java.lang.Object) : boolean [19]\n" +
		"     73  pop\n" +
		"     74  aload_1 [slist]\n" +
		"     75  iconst_1\n" +
		"     76  invokevirtual java.util.ArrayList.get(int) : java.lang.Object [23]\n" +
		"     79  checkcast java.util.ArrayList [16]\n" +
		"     82  ldc <String \"E\"> [31]\n" +
		"     84  invokevirtual java.util.ArrayList.add(java.lang.Object) : boolean [19]\n" +
		"     87  pop\n" +
		"     88  aload_1 [slist]\n" +
		"     89  iconst_1\n" +
		"     90  invokevirtual java.util.ArrayList.get(int) : java.lang.Object [23]\n" +
		"     93  checkcast java.util.ArrayList [16]\n" +
		"     96  ldc <String \"S\"> [33]\n" +
		"     98  invokevirtual java.util.ArrayList.add(java.lang.Object) : boolean [19]\n" +
		"    101  pop\n" +
		"    102  aload_1 [slist]\n" +
		"    103  iconst_1\n" +
		"    104  invokevirtual java.util.ArrayList.get(int) : java.lang.Object [23]\n" +
		"    107  checkcast java.util.ArrayList [16]\n" +
		"    110  ldc <String \"S\"> [33]\n" +
		"    112  invokevirtual java.util.ArrayList.add(java.lang.Object) : boolean [19]\n" +
		"    115  pop\n" +
		"    116  iconst_0\n" +
		"    117  istore_2 [i]\n" +
		"    118  goto 168\n" +
		"    121  aload_1 [slist]\n" +
		"    122  iload_2 [i]\n" +
		"    123  invokevirtual java.util.ArrayList.get(int) : java.lang.Object [23]\n" +
		"    126  checkcast java.util.ArrayList [16]\n" +
		"    129  invokevirtual java.util.ArrayList.iterator() : java.util.Iterator [35]\n" +
		"    132  astore 4\n" +
		"    134  goto 155\n" +
		"    137  aload 4\n" +
		"    139  invokeinterface java.util.Iterator.next() : java.lang.Object [39] [nargs: 1]\n" +
		"    144  checkcast java.lang.String [45]\n" +
		"    147  astore_3 [s]\n" +
		"    148  getstatic java.lang.System.out : java.io.PrintStream [47]\n" +
		"    151  aload_3 [s]\n" +
		"    152  invokevirtual java.io.PrintStream.print(java.lang.String) : void [53]\n" +
		"    155  aload 4\n" +
		"    157  invokeinterface java.util.Iterator.hasNext() : boolean [59] [nargs: 1]\n" +
		"    162  ifne 137\n" +
		"    165  iinc 2 1 [i]\n" +
		"    168  iload_2 [i]\n" +
		"    169  aload_1 [slist]\n" +
		"    170  invokevirtual java.util.ArrayList.size() : int [63]\n" +
		"    173  if_icmplt 121\n" +
		"    176  return\n" +
		"      Line numbers:\n" +
		"        [pc: 0, line: 6]\n" +
		"        [pc: 8, line: 8]\n" +
		"        [pc: 20, line: 9]\n" +
		"        [pc: 34, line: 10]\n" +
		"        [pc: 48, line: 11]\n" +
		"        [pc: 62, line: 13]\n" +
		"        [pc: 74, line: 14]\n" +
		"        [pc: 88, line: 15]\n" +
		"        [pc: 102, line: 16]\n" +
		"        [pc: 116, line: 18]\n" +
		"        [pc: 121, line: 19]\n" +
		"        [pc: 148, line: 20]\n" +
		"        [pc: 155, line: 19]\n" +
		"        [pc: 165, line: 18]\n" +
		"        [pc: 176, line: 23]\n" +
		"      Local variable table:\n" +
		"        [pc: 0, pc: 177] local: args index: 0 type: java.lang.String[]\n" +
		"        [pc: 8, pc: 177] local: slist index: 1 type: java.util.ArrayList\n" +
		"        [pc: 118, pc: 176] local: i index: 2 type: int\n" +
		"        [pc: 148, pc: 155] local: s index: 3 type: java.lang.String\n" +
		"      Local variable type table:\n" +
		"        [pc: 8, pc: 177] local: slist index: 1 type: java.util.ArrayList<java.util.ArrayList<java.lang.String>>\n";

	File f = new File(OUTPUT_DIR + File.separator + "X.class");
	byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
	ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
	String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
	int index = result.indexOf(expectedOutput);
	if (index == -1 || expectedOutput.length() == 0) {
		System.out.println(Util.displayString(result, 3));
	}
	if (index == -1) {
		assertEquals("Wrong contents", expectedOutput, result);
	}
}

