	// https://bugs.eclipse.org/412203
	// yet simplified version - using FieldReference
	public void testBug412203_b() throws Exception {
		Map options = getCompilerOptions();
		options.put(JavaCore.COMPILER_ANNOTATION_NULL_ANALYSIS, JavaCore.ENABLED);
		options.put(JavaCore.COMPILER_PB_NULL_REFERENCE, JavaCore.ERROR);
		options.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_VIOLATION, JavaCore.ERROR);
		options.put(JavaCore.COMPILER_PB_POTENTIAL_NULL_REFERENCE, JavaCore.WARNING);
		options.put(JavaCore.COMPILER_PB_SUPPRESS_OPTIONAL_ERRORS, JavaCore.ENABLED);
		this.runConformTest(
				new String[] {
					"X2.java",
					"import java.util.LinkedList;\n" +
					"\n" +
					"import org.eclipse.jdt.annotation.NonNull;\n" +
					"\n" +
					"abstract class X1 {\n" +
					"	protected @NonNull Object name = new Object();\n" +
					"}\n" +
					"\n" +
					"public class X2 extends X1 {\n" +
					"	void init () {\n" +
					"		this.name = new Object ();\n" +
					"		LinkedList<Character> l = new LinkedList<Character> ();\n" +
					"		char[] cs = new char[l.size ()];\n" +
					"		for (int i = 0; i < cs.length; i++) {\n" +
					"			cs[i] = l.get (i).charValue ();\n" +
					"		}\n" +
					"		Object o2 = new Object();\n" +
					"	}\n" +
					"}\n",
				},
				"",
				getLibsWithNullAnnotations(ClassFileConstants.JDK1_7),
				true/*flush*/,
				null/*vmArgs*/,
				options,
				null/*requestor*/,
				true/*skipJavac*/);

			ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
			byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +"X2.class"));
			String actualOutput =
				disassembler.disassemble(
					classFileBytes,
					"\n",
					ClassFileBytesDisassembler.DETAILED);

			String expectedOutput =
					"  // Method descriptor #6 ()V\n" +
					"  // Stack: 4, Locals: 4\n" +
					"  void init();\n" +
					"     0  aload_0 [this]\n" +
					"     1  new java.lang.Object [15]\n" +
					"     4  dup\n" +
					"     5  invokespecial java.lang.Object() [17]\n" +
					"     8  putfield X2.name : java.lang.Object [18]\n" +
					"    11  new java.util.LinkedList [22]\n" +
					"    14  dup\n" +
					"    15  invokespecial java.util.LinkedList() [24]\n" +
					"    18  astore_1 [l]\n" +
					"    19  aload_1 [l]\n" +
					"    20  invokevirtual java.util.LinkedList.size() : int [25]\n" +
					"    23  newarray char [5]\n" +
					"    25  astore_2 [cs]\n" +
					"    26  iconst_0\n" +
					"    27  istore_3 [i]\n" +
					"    28  goto 48\n" +
					"    31  aload_2 [cs]\n" +
					"    32  iload_3 [i]\n" +
					"    33  aload_1 [l]\n" +
					"    34  iload_3 [i]\n" +
					"    35  invokevirtual java.util.LinkedList.get(int) : java.lang.Object [29]\n" +
					"    38  checkcast java.lang.Character [33]\n" +
					"    41  invokevirtual java.lang.Character.charValue() : char [35]\n" +
					"    44  castore\n" +
					"    45  iinc 3 1 [i]\n" +
					"    48  iload_3 [i]\n" +
					"    49  aload_2 [cs]\n" +
					"    50  arraylength\n" +
					"    51  if_icmplt 31\n" +
					"    54  new java.lang.Object [15]\n" +
					"    57  dup\n" +
					"    58  invokespecial java.lang.Object() [17]\n" +
					"    61  astore_3 [o2]\n" +
					"    62  return\n" +
					"      Line numbers:\n" +
					"        [pc: 0, line: 11]\n" +
					"        [pc: 11, line: 12]\n" +
					"        [pc: 19, line: 13]\n" +
					"        [pc: 26, line: 14]\n" +
					"        [pc: 31, line: 15]\n" +
					"        [pc: 45, line: 14]\n" +
					"        [pc: 54, line: 17]\n" +
					"        [pc: 62, line: 18]\n" +
					"      Local variable table:\n" +
					"        [pc: 0, pc: 63] local: this index: 0 type: X2\n" +
					"        [pc: 19, pc: 63] local: l index: 1 type: java.util.LinkedList\n" +
					"        [pc: 26, pc: 63] local: cs index: 2 type: char[]\n" +
					"        [pc: 28, pc: 54] local: i index: 3 type: int\n" +
					"        [pc: 62, pc: 63] local: o2 index: 3 type: java.lang.Object\n" +
					"      Local variable type table:\n" +
					"        [pc: 19, pc: 63] local: l index: 1 type: java.util.LinkedList<java.lang.Character>\n" +
					"      Stack map table: number of frames 2\n" +
					"        [pc: 31, append: {java.util.LinkedList, char[], int}]\n" +
					"        [pc: 48, same]\n" +
					"}";

			int index = actualOutput.indexOf(expectedOutput);
			if (index == -1 || expectedOutput.length() == 0) {
				System.out.println(Util.displayString(actualOutput, 2));
			}
			if (index == -1) {
				assertEquals("Wrong contents", expectedOutput, actualOutput);
			}
	}

