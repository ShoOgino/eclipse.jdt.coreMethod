	public void test0316() {
		this.runNegativeTest(
			new String[] {
				"X.java",	
				"import java.util.List;\n" + 
				"\n" + 
				"public class X <E extends List & Runnable> {\n" + 
				"	\n" + 
				"	E element() { return null; }\n" + 
				"	\n" + 
				"	void bar(X<E> xe) {\n" + 
				"		xe.element().add(this);\n" + 
				"		xe.element().run();\n" + 
				"	}\n" + 
				"	void foo(X<?> xe) {\n" + 
				"		xe.element().add(this);\n" + 
				"		xe.element().run();\n" + 
				"	}\n" + 
				"	void baz(X<? extends XM> xe) {\n" + 
				"		xe.element().add(this);\n" + 
				"		xe.element().run();\n" + 
				"	}\n" + 
				"	abstract class XM implements List, Runnable {}\n" + 
				"  Zork z;\n" +
				"}\n"		
			},
			"----------\n" + 
			"1. WARNING in X.java (at line 3)\n" + 
			"	public class X <E extends List & Runnable> {\n" + 
			"	                          ^^^^\n" + 
			"List is a raw type. References to generic type List<E> should be parameterized\n" + 
			"----------\n" + 
			"2. WARNING in X.java (at line 8)\n" + 
			"	xe.element().add(this);\n" + 
			"	^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Type safety: The method add(Object) belongs to the raw type List. References to generic type List<E> should be parameterized\n" + 
			"----------\n" + 
			"3. WARNING in X.java (at line 12)\n" + 
			"	xe.element().add(this);\n" + 
			"	^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Type safety: The method add(Object) belongs to the raw type List. References to generic type List<E> should be parameterized\n" + 
			"----------\n" + 
			"4. WARNING in X.java (at line 16)\n" + 
			"	xe.element().add(this);\n" + 
			"	^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Type safety: The method add(Object) belongs to the raw type List. References to generic type List<E> should be parameterized\n" + 
			"----------\n" + 
			"5. WARNING in X.java (at line 19)\n" + 
			"	abstract class XM implements List, Runnable {}\n" + 
			"	                             ^^^^\n" + 
			"List is a raw type. References to generic type List<E> should be parameterized\n" + 
			"----------\n" + 
			"6. ERROR in X.java (at line 20)\n" + 
			"	Zork z;\n" + 
			"	^^^^\n" + 
			"Zork cannot be resolved to a type\n" + 
			"----------\n");
	}	

