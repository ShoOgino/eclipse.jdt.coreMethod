	public void _testBug543799_3() {
		Map<String, String> options = getCompilerOptions();
		options.put(CompilerOptions.OPTION_EnablePreviews, CompilerOptions.ENABLED);
		options.put(CompilerOptions.OPTION_ReportPreviewFeatures, CompilerOptions.IGNORE);
		String[] testFiles = new String[] {
			"X.java",
			"interface I0 { void i(); }\n" +
			"interface I1 extends I0 {}\n" +
			"interface I2 extends I0 {}\n" +
			"public class X {\n" +
			"	I1 n1() { return null; }\n" +
			"	<I extends I2> I n2() { return null; }\n" +
			"	<M> M m(M m) { return m; }\n" +
			"	void test(int i, boolean b) {\n" +
			"		m(switch (i) {\n" +
			"			case 1 -> n1();\n" +
			"			default -> b ? n1() : n2();\n" +
			"		}).i(); \n" +
			"	}\n" +
			"	public static void main(String[] args) {\n" +
			"		try {\n" +
			"			new X().test(1, true);\n" +
			"		} catch (NullPointerException e) {\n" +
			"			System.out.println(\"NPE as expected\");\n" +
			"		}\n" +
			"	}\n" +
			"}\n"
		};
		String expectedProblemLog =
				"----------\n" +
				"1. ERROR in X.java (at line 11)\n" +
				"	default -> b ? n1() : n2();\n" +
				"	^^^^^^^\n" +
				"The preview feature Case Labels with \'->\' is only available with source level 13 and above\n" +
				"----------\n";
			runNegativeTest(testFiles, expectedProblemLog, null, true, options);
	}

