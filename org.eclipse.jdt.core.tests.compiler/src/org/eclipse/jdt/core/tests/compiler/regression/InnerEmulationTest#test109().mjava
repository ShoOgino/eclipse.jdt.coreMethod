//https://bugs.eclipse.org/bugs/show_bug.cgi?id=44538
public void test109() {
	CompilerOptions options = new CompilerOptions(getCompilerOptions());
	if (options.sourceLevel == ClassFileConstants.JDK1_4) {		 // 1.3 and 1.5 both accept it
		this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X {\n" + 
				"	public void bar() {\n" + 
				"		class C extends X {\n" + 
				"			public void foo() {\n" + 
				"				\n" + 
				"			}\n" + 
				"		}\n" + 
				"		X a= new X() {\n" + 
				"			public void foo() {\n" + 
				"				\n" + 
				"			}\n" + 
				"		};\n" + 
				"		class D extends C {\n" + 
				"			\n" + 
				"		};\n" + 
				"	}\n" + 
				"}"
			},
			"----------\n" + 
			"1. WARNING in X.java (at line 4)\n" + 
			"	public void foo() {\n" + 
			"	            ^^^^^\n" + 
			"The method foo() from the type C is never used locally\n" + 
			"----------\n" + 
			"2. WARNING in X.java (at line 9)\n" + 
			"	public void foo() {\n" + 
			"	            ^^^^^\n" + 
			"The method foo() from the type new X(){} is never used locally\n" + 
			"----------\n" + 
			"3. ERROR in X.java (at line 13)\n" + 
			"	class D extends C {\n" + 
			"	      ^\n" + 
			"No enclosing instance of type X is available due to some intermediate constructor invocation\n" + 
			"----------\n");
		return;
	}
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" + 
			"	public void bar() {\n" + 
			"		class C extends X {\n" + 
			"			public void foo() {\n" + 
			"				\n" + 
			"			}\n" + 
			"		}\n" + 
			"		X a= new X() {\n" + 
			"			public void foo() {\n" + 
			"				\n" + 
			"			}\n" + 
			"		};\n" + 
			"		class D extends C {\n" + 
			"			\n" + 
			"		};\n" + 
			"	}\n" + 
			"}"
		},
		"");
}

