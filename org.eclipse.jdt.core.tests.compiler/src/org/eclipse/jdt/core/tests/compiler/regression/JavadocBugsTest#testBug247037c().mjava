//https://bugs.eclipse.org/bugs/show_bug.cgi?id=247037, make sure that we complain when @inheritdoc
//is used where it is outlawed by the specs. In this test we test the use of @inheritedDoc in some
// block tags.
public void testBug247037c() {
	this.reportMissingJavadocTags = CompilerOptions.ERROR;
	runNegativeTest(
		new String[] {
			"X.java",
			"public class X {\n" +
			"    /**\n" +
			"     * @since 1.0\n" +
			"     * @return Blah\n" +
			"     * @param blah Blah Blah\n" +
			"     * @throws Exception When something is wrong\n" +
			"     */\n" +
			"    public int m(int blah) throws Exception {\n" +
			"        return 0;\n" +
			"    }\n" +
			"}\n" +
			"class Y extends X {\n" +
			"    /**\n" +
			"     * @param blah {@inheritDoc}\n" +
			"     * @return {@inheritDoc}\n" +
			"     * @since {@inheritDoc}\n" +  // error, cannot be used in @since
			"     * @author {@inheritDoc}\n" + // error, cannot be used in @author
			"     * @see {@inheritDoc}\n" +    // error, cannot be used in @see
			"     * @throws Exception {@inheritDoc}\n" +  
			"     * @exception Exception {@inheritDoc}\n" + 
			"     */\n" +
			"    public int m(int blah) throws Exception {\n" +
			"		return 1;\n" +
			"    }\n" +
			"}\n"
		},
		"----------\n" + 
		"1. ERROR in X.java (at line 16)\n" + 
		"	* @since {@inheritDoc}\n" + 
		"	           ^^^^^^^^^^\n" + 
		"Javadoc: Unexpected tag\n" + 
		"----------\n" + 
		"2. ERROR in X.java (at line 17)\n" + 
		"	* @author {@inheritDoc}\n" + 
		"	            ^^^^^^^^^^\n" + 
		"Javadoc: Unexpected tag\n" + 
		"----------\n" + 
		"3. ERROR in X.java (at line 18)\n" + 
		"	* @see {@inheritDoc}\n" + 
		"	   ^^^\n" + 
		"Javadoc: Missing reference\n" + 
		"----------\n" + 
		"4. ERROR in X.java (at line 18)\n" + 
		"	* @see {@inheritDoc}\n" + 
		"	         ^^^^^^^^^^\n" + 
		"Javadoc: Unexpected tag\n" + 
		"----------\n",
		JavacTestOptions.Excuse.EclipseWarningConfiguredAsError
	);
}

