	// wildcard captures bound and variable superinterfaces
	public void test0327() {
		this.runConformTest(
	 		// test directory preparation
			new String[] { /* test files */
				"X.java",
				"public class X<T extends IFoo> {\n" + 
				"	\n" + 
				"	T element() { return null; }\n" + 
				"	void baz(X<? extends IBar> x) {\n" + 
				"		x.element().foo();\n" + 
				"		x.element().bar();\n" + 
				"	}\n" + 
				"}\n" + 
				"interface IFoo {\n" + 
				"	void foo();\n" + 
				"}\n" + 
				"interface IBar {\n" + 
				"	void bar();\n" + 
				"}\n"
			},
			// javac options
			JavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);
	}

