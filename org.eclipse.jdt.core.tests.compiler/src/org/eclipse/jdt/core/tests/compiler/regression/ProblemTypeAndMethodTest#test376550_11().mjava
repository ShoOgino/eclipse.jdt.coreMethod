// https://bugs.eclipse.org/bugs/show_bug.cgi?id=376550
// bug test case
public void test376550_11() {
	if (this.complianceLevel < ClassFileConstants.JDK1_5)
		return;
	Map compilerOptions = getCompilerOptions();
	compilerOptions.put(CompilerOptions.OPTION_ReportMethodCanBeStatic, CompilerOptions.ERROR);
	compilerOptions.put(CompilerOptions.OPTION_ReportMethodCanBePotentiallyStatic, CompilerOptions.ERROR);
	compilerOptions.put(CompilerOptions.OPTION_ReportUnusedPrivateMember, CompilerOptions.IGNORE);
	this.runNegativeTest(
		new String[] {
				"X.java", 
				"import java.util.ArrayList;\n" +
				"import java.util.Collection;\n" +
				"public class X {\n" +
				"   private Object o = new Object();\n" +
				"   public final Collection<Object> go() {\n" + // can't be static
				"   	return new ArrayList<Object>() {\n" +
				"			{ add(o);}\n" +
				"		};\n" +
				"	}\n" +
				"}"
		},
		"----------\n" + 
		"1. WARNING in X.java (at line 6)\n" + 
		"	return new ArrayList<Object>() {\n" + 
		"	           ^^^^^^^^^^^^^^^^^^^\n" + 
		"The serializable class  does not declare a static final serialVersionUID field of type long\n" + 
		"----------\n" + 
		"2. WARNING in X.java (at line 7)\n" + 
		"	{ add(o);}\n" + 
		"	      ^\n" + 
		"Read access to enclosing field X.o is emulated by a synthetic accessor method\n" + 
		"----------\n",
		null /* no extra class libraries */,
		true /* flush output directory */,
		compilerOptions /* custom options */
	);
}

