// https://bugs.eclipse.org/bugs/show_bug.cgi?id=433735, [1.8] Discrepancy with javac when dealing with local classes in lambda expressions
public void test433735() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			"import java.util.function.Supplier;\n" +
			"class E {\n" +
			"	E(Supplier<Object> factory) { }\n" +
			"}\n" +
			"public class X extends E {\n" +
			"	X() {\n" +
			"		super( () -> {\n" +
			"			class Z extends E {\n" +
			"				Z() {\n" +
			"					super(new Supplier<Object>() {\n" +
			"						@Override\n" +
			"						public Object get() {\n" +
			"							return new Object();\n" +
			"						}\n" +
			"					});\n" +
			"				}\n" +
			"			} \n" +
			"			return new Z();\n" +
			"			});\n" +
			"	}\n" +
			"	public static void main(String[] args) {\n" +
			"		new X();\n" +
			"	}\n" +
			"}\n"
		},
		"----------\n" +
		"1. ERROR in X.java (at line 7)\n" +
		"	super( () -> {\n" +
		"	       ^^^^^\n" +
		"Cannot refer to \'this\' nor \'super\' while explicitly invoking a constructor\n" +
		"----------\n");
}

