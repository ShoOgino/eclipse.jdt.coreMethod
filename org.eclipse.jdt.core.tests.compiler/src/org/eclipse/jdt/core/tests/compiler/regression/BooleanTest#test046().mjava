//https://bugs.eclipse.org/bugs/show_bug.cgi?id=185567 - variation
public void test046() {
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" + 
			"	void foo2(boolean b1, boolean b2){\n" + 
			"		if (b1 || ((b1 || b2) && false)) {\n" + 
			"			System.out.println(b1);	\n" + 
			"		}\n" + 
			"	}\n" + 
			"}\n", // =================
		},
		"");
	// 	ensure optimized boolean codegen sequence
	String expectedOutput =
		"  // Method descriptor #15 (ZZ)V\n" + 
		"  // Stack: 2, Locals: 3\n" + 
		"  void foo2(boolean b1, boolean b2);\n" + 
		"     0  iload_1 [b1]\n" + 
		"     1  ifne 15\n" + 
		"     4  iload_1 [b1]\n" + 
		"     5  ifne 22\n" + 
		"     8  iload_2 [b2]\n" + 
		"     9  ifeq 22\n" + 
		"    12  goto 22\n" + 
		"    15  getstatic java.lang.System.out : java.io.PrintStream [16]\n" + 
		"    18  iload_1 [b1]\n" + 
		"    19  invokevirtual java.io.PrintStream.println(boolean) : void [22]\n" + 
		"    22  return\n" + 
		"      Line numbers:\n" + 
		"        [pc: 0, line: 3]\n" + 
		"        [pc: 15, line: 4]\n" + 
		"        [pc: 22, line: 6]\n" + 
		"      Local variable table:\n" + 
		"        [pc: 0, pc: 23] local: this index: 0 type: X\n" + 
		"        [pc: 0, pc: 23] local: b1 index: 1 type: boolean\n" + 
		"        [pc: 0, pc: 23] local: b2 index: 2 type: boolean\n";
	
	try {
		File f = new File(OUTPUT_DIR + File.separator + "X.class");
		byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
		ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
		String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
		int index = result.indexOf(expectedOutput);
		if (index == -1 || expectedOutput.length() == 0) {
			System.out.println(Util.displayString(result, 3));
		}
		if (index == -1) {
			assertEquals("Wrong contents", expectedOutput, result);
		}
	} catch (org.eclipse.jdt.core.util.ClassFormatException e) {
		assertTrue(false);
	} catch (IOException e) {
		assertTrue(false);
	}		
}

