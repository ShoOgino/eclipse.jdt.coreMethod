//https://bugs.eclipse.org/bugs/show_bug.cgi?id=196200 - variation
public void test077() {
	String expected = this.complianceLevel <= ClassFileConstants.JDK1_4
		? 		"----------\n" + 
				"1. ERROR in X.java (at line 3)\n" + 
				"	Zork<?,?> z = (Zork<?, ? super Number[]>) o;\n" + 
				"	^^^^\n" + 
				"Zork cannot be resolved to a type\n" + 
				"----------\n" + 
				"2. ERROR in X.java (at line 3)\n" + 
				"	Zork<?,?> z = (Zork<?, ? super Number[]>) o;\n" + 
				"	     ^^^\n" + 
				"Syntax error, parameterized types are only available if source level is 1.5\n" + 
				"----------\n" + 
				"3. ERROR in X.java (at line 3)\n" + 
				"	Zork<?,?> z = (Zork<?, ? super Number[]>) o;\n" + 
				"	               ^^^^\n" + 
				"Zork cannot be resolved to a type\n" + 
				"----------\n" + 
				"4. ERROR in X.java (at line 3)\n" + 
				"	Zork<?,?> z = (Zork<?, ? super Number[]>) o;\n" + 
				"	                    ^^^^^^^^^^^^^^^^^^^\n" + 
				"Syntax error, parameterized types are only available if source level is 1.5\n" + 
				"----------\n" + 
				"5. ERROR in X.java (at line 4)\n" + 
				"	String s = (Zork<?, ? extends Number[]>) o;\n" + 
				"	           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
				"Zork cannot be resolved to a type\n" + 
				"----------\n" + 
				"6. ERROR in X.java (at line 4)\n" + 
				"	String s = (Zork<?, ? extends Number[]>) o;\n" + 
				"	            ^^^^\n" + 
				"Zork cannot be resolved to a type\n" + 
				"----------\n" + 
				"7. ERROR in X.java (at line 4)\n" + 
				"	String s = (Zork<?, ? extends Number[]>) o;\n" + 
				"	                 ^^^^^^^^^^^^^^^^^^^^^\n" + 
				"Syntax error, parameterized types are only available if source level is 1.5\n" + 
				"----------\n"			
		: 		"----------\n" + 
				"1. ERROR in X.java (at line 3)\n" + 
				"	Zork<?,?> z = (Zork<?, ? super Number[]>) o;\n" + 
				"	^^^^\n" + 
				"Zork cannot be resolved to a type\n" + 
				"----------\n" + 
				"2. WARNING in X.java (at line 3)\n" + 
				"	Zork<?,?> z = (Zork<?, ? super Number[]>) o;\n" + 
				"	              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
				"Type safety: Unchecked cast from Object to Zork<?,? super Number[]>\n" + 
				"----------\n" + 
				"3. ERROR in X.java (at line 3)\n" + 
				"	Zork<?,?> z = (Zork<?, ? super Number[]>) o;\n" + 
				"	               ^^^^\n" + 
				"Zork cannot be resolved to a type\n" + 
				"----------\n" + 
				"4. WARNING in X.java (at line 4)\n" + 
				"	String s = (Zork<?, ? extends Number[]>) o;\n" + 
				"	           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
				"Type safety: Unchecked cast from Object to Zork<?,? extends Number[]>\n" + 
				"----------\n" + 
				"5. ERROR in X.java (at line 4)\n" + 
				"	String s = (Zork<?, ? extends Number[]>) o;\n" + 
				"	           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
				"Zork<capture#3-of ?,capture#4-of ? extends Number[]> cannot be resolved to a type\n" + 
				"----------\n" + 
				"6. ERROR in X.java (at line 4)\n" + 
				"	String s = (Zork<?, ? extends Number[]>) o;\n" + 
				"	            ^^^^\n" + 
				"Zork cannot be resolved to a type\n" + 
				"----------\n";
	
	this.runNegativeTest(
			new String[] {
				"X.java", //-----------------------------------------------------------------------
				"public class X {\n" + 
				"	void foo(Object o) {\n" + 
				"		Zork<?,?> z = (Zork<?, ? super Number[]>) o;\n" + 
				"		String s = (Zork<?, ? extends Number[]>) o;\n" + 
				"	}\n" + 
				"}\n",//-----------------------------------------------------------------------
			},
			expected);
}

