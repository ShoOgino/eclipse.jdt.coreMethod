	public void test014() throws Exception {
		// Test that the name argument of enum valueOf shows up as mandated

		this.runParameterNameTest(
			"FancyEnum.java",
			"\n" +
			"public enum FancyEnum {\n" +
			"	ONE, TWO;\n" +
			"}\n" +
			"");

		ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
		String path = OUTPUT_DIR + File.separator + "FancyEnum.class";
		byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(path));
		String actualOutput =
			disassembler.disassemble(
				classFileBytes,
				"\n",
				ClassFileBytesDisassembler.DETAILED);

		String expectedOutput =
				"  public static FancyEnum valueOf(java.lang.String name);\n" +
						"     0  ldc <Class FancyEnum> [1]\n" +
						"     2  aload_0 [name]\n" +
						"     3  invokestatic java.lang.Enum.valueOf(java.lang.Class, java.lang.String) : java.lang.Enum [40]\n" +
						"     6  checkcast FancyEnum [1]\n" +
						"     9  areturn\n" +
						"      Line numbers:\n" +
						"        [pc: 0, line: 1]\n" +
						"      Method Parameters:\n" +
						"        mandated name\n";
		assertSubstring(actualOutput, expectedOutput);
	}

