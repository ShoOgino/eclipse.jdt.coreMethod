// https://bugs.eclipse.org/bugs/show_bug.cgi?id=326950
// Free return should be generated for a constructor even if it ends with dead code
public void testBug326950d() throws Exception {
	Map options = getCompilerOptions();
	options.put(CompilerOptions.OPTION_ReportNullReference, CompilerOptions.WARNING);
	options.put(CompilerOptions.OPTION_ReportPotentialNullReference, CompilerOptions.WARNING);
	options.put(CompilerOptions.OPTION_ReportRedundantNullCheck, CompilerOptions.WARNING);
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" +
			"	X() {\n" +
			"		String s = \"\";\n" +
			"		int i = 0;\n" +
			"		if (s != null) {\n" +
			"			return;\n" +
			"		}\n" +
			"		i++;\n" +
			"	}\n" +
			"}",
		},
		"",
		null,
		true,
		null,
		options,
		null);
	String expectedOutput =
		"  X();\n" +
		"     0  aload_0 [this]\n" +
		"     1  invokespecial java.lang.Object() [8]\n" +
		"     4  ldc <String \"\"> [10]\n" +
		"     6  astore_1 [s]\n" +
		"     7  iconst_0\n" +
		"     8  istore_2 [i]\n" +
		"     9  aload_1 [s]\n" +
		"    10  ifnull 14\n" +
		"    13  return\n" +
		"    14  iinc 2 1 [i]\n" +
		"    17  return\n";
	checkDisassembledClassFile(OUTPUT_DIR + File.separator + "X.class", "X", expectedOutput);
}

