// https://bugs.eclipse.org/bugs/show_bug.cgi?id=83901
public void test074() {
	this.runNegativeTest( // define abstract method
		new String[] {
			"X4.java",
			"public enum X4 {\n" +
			"	;\n" +
			"	public abstract void test();\n" +
			"}\n"
		},
		"----------\n" +
		"1. ERROR in X4.java (at line 3)\n" +
		"	public abstract void test();\n" +
		"	                     ^^^^^^\n" +
		"The enum X4 can only define the abstract method test() if it also defines enum constants with corresponding implementations\n" +
		"----------\n"
		// X4 is not abstract and does not override abstract method test() in X4
	);
	this.runNegativeTest( // define abstract method with constant
		new String[] {
			"X4a.java",
			"public enum X4a {\n" +
			"	A;\n" +
			"	public abstract void test();\n" +
			"}\n"
		},
		"----------\n" +
		"1. ERROR in X4a.java (at line 2)\n" +
		"	A;\n" +
		"	^\n" +
		"The enum constant A must implement the abstract method test()\n" +
		"----------\n"
		// X4a is not abstract and does not override abstract method test() in X4a
	);
	this.runConformTest( // define abstract method with constant body
		new String[] {
			"X4b.java",
			"public enum X4b {\n" +
			"	A() { public void test() {} };\n" +
			"	public abstract void test();\n" +
			"}\n"
		},
		""
	);
	this.runNegativeTest( // define abstract method with random constant body
		new String[] {
			"X4c.java",
			"public enum X4c {\n" +
			"	A() { void random() {} };\n" +
			"	public abstract void test();\n" +
			"}\n"
		},
		"----------\n" +
		"1. ERROR in X4c.java (at line 2)\n" +
		"	A() { void random() {} };\n" +
		"	^\n" +
		"The enum constant A must implement the abstract method test()\n" +
		"----------\n"
		// <anonymous X4c$1> is not abstract and does not override abstract method test() in X4c
	);
}

