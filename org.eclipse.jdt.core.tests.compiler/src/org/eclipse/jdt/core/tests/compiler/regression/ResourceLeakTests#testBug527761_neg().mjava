public void testBug527761_neg() {
	Map options = getCompilerOptions();
	options.put(CompilerOptions.OPTION_ReportUnclosedCloseable, CompilerOptions.ERROR);
	options.put(CompilerOptions.OPTION_ReportPotentiallyUnclosedCloseable, CompilerOptions.ERROR);
	runLeakTest(
		new String[] {
			"X.java",
			"class BAOSWrapper extends java.io.ByteArrayOutputStream {\n" +
			"	public void close() {}\n" + // indicates that resource could be relevant
			"}\n" +
			"public class X {\n" +
			"	public static void warningCauser() {\n" +
			"		BAOSWrapper baos = new BAOSWrapper();\n" +
			"		//WARNING HAS BEEN CAUSED\n" +
			"		baos.write(0);\n" +
			"	}\n" +
			"}\n"
		},
		"----------\n" +
		"1. ERROR in X.java (at line 6)\n" +
		"	BAOSWrapper baos = new BAOSWrapper();\n" +
		"	            ^^^^\n" +
		"Resource leak: \'baos\' is never closed\n" +
		"----------\n",
		options);
}

