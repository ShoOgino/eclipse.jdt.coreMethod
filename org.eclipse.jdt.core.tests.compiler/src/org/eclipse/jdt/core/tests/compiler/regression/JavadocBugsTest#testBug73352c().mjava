	public void testBug73352c() {
		String[] units = new String[] {
			"X.java",
			"/**\n" +
			"* @since\n" +
			"* @author\n" +
			"* @version\n" +
			"*/\n" +
			"public class X {\n" +
			"	/**\n" +
			"	 * @param  aParam\n" +
			"	 * @return\n" +
			"	 * @see\n" +
			"	 * @since\n" +
			"	 * @throws NullPointerException\n" +
			"	 * @exception NullPointerException\n" +
			"	 * @serial\n" +
			"	 * @serialData\n" +
			"	 * @serialField\n" +
			"	 * @deprecated\n" +
			"	 */\n" +
			"	public String foo(String aParam) {\n" +
			"		return new String();\n" +
			"	}\n" +
			"}\n"
		};
		this.reportInvalidJavadoc = CompilerOptions.WARNING;
		this.reportMissingJavadocDescription = CompilerOptions.RETURN_TAG;
		runConformTest(
			true,
			units,
			"----------\n" +
			"1. WARNING in X.java (at line 9)\n" +
			"	* @return\n" +
			"	   ^^^^^^\n" +
			"Javadoc: Description expected after @return\n" +
			"----------\n" +
			"2. WARNING in X.java (at line 10)\n" +
			"	* @see\n" +
			"	   ^^^\n" +
			"Javadoc: Missing reference\n" +
			"----------\n",
			null,
			null,
			JavacTestOptions.Excuse.EclipseHasSomeMoreWarnings
			);
	}

