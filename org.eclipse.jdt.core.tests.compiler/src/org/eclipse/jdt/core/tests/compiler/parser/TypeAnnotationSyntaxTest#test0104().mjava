// To test Parser.consumeCastExpressionWithGenericsArray() with Type Annotations
public void test0104() throws IOException {
	String source =
		"import java.util.*;\n" +
		"class X {\n" +
		"    void method(Object o) {\n" +
		"		 if (o instanceof String[]){\n" +
		"			 String[] s;\n" +
		"			 s = (@Marker @Readonly String @Marker []) o;\n" +
		"		 }\n" +
		"        if (o instanceof @Readonly List<?>[]) {\n" +
		"            List<?>[] es;\n" +
		"			 es = (@Marker List<?> @SingleMember(0) []) o;\n" +
		"        }\n" +
		"    }\n" +
		"}";
	String expectedUnitToString =
		"import java.util.*;\n" +
		"class X {\n" +
		"  X() {\n" +
		"    super();\n" +
		"  }\n" +
		"  void method(Object o) {\n" +
		"    if ((o instanceof String[]))\n" +
		"        {\n" +
		"          String[] s;\n" +
		"          s = (@Marker @Readonly String @Marker []) o;\n" +
		"        }\n" +
		"    if ((o instanceof @Readonly List<?>[]))\n" +
		"        {\n" +
		"          List<?>[] es;\n" +
		"          es = (@Marker List<?> @SingleMember(0) []) o;\n" +
		"        }\n" +
		"  }\n" +
		"}\n";
	checkParse(CHECK_ALL & ~CHECK_INDEXING_PARSER, source.toCharArray(), null, "test0104", expectedUnitToString );
}

