	public void testBug70892negative2() {
		reportMissingJavadocTags = CompilerOptions.IGNORE;
		reportMissingJavadocComments = CompilerOptions.IGNORE;
		runNegativeTest(
			new String[] {
				"X.java",
				"/**\n" + 
					" * {@value \"invalid}\n" + 
					" * {@value <a href}\n" + 
					" * {@value <a href=\"invalid\">invalid</a} invalid\n" + 
					" * {@value #fild}\n" + 
					" * {@value #fo}\n" + 
					" * {@value #f()}\n" + 
					" */\n" + 
					"public class X {\n" + 
					"	int field;\n" + 
					"	void foo() {}\n" + 
					"}\n"	
			},
			"----------\n" + 
				"1. ERROR in X.java (at line 2)\n" + 
				"	* {@value \"invalid}\n" + 
				"	         ^^^^^^^^^^\n" + 
				"Javadoc: Invalid reference\n" + 
				"----------\n" + 
				"2. ERROR in X.java (at line 3)\n" + 
				"	* {@value <a href}\n" + 
				"	          ^^^^^^^\n" + 
				"Javadoc: Only static field reference is allowed for @value tag\n" + 
				"----------\n" + 
				"3. ERROR in X.java (at line 4)\n" + 
				"	* {@value <a href=\"invalid\">invalid</a} invalid\n" + 
				"	          ^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
				"Javadoc: Only static field reference is allowed for @value tag\n" + 
				"----------\n" + 
				"4. ERROR in X.java (at line 5)\n" + 
				"	* {@value #fild}\n" + 
				"	           ^^^^\n" + 
				"Javadoc: fild cannot be resolved or is not a field\n" + 
				"----------\n" + 
				"5. ERROR in X.java (at line 6)\n" + 
				"	* {@value #fo}\n" + 
				"	           ^^\n" + 
				"Javadoc: fo cannot be resolved or is not a field\n" + 
				"----------\n" + 
				"6. ERROR in X.java (at line 7)\n" + 
				"	* {@value #f()}\n" + 
				"	           ^\n" + 
				"Javadoc: The method f() is undefined for the type X\n" + 
				"----------\n" + 
				"7. ERROR in X.java (at line 7)\n" + 
				"	* {@value #f()}\n" + 
				"	           ^\n" + 
				"Javadoc: Only static field reference is allowed for @value tag\n" + 
				"----------\n"
		);
	}

