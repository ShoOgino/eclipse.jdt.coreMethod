public void test023() {
	Map customOptions = getCompilerOptions();
	customOptions.put(CompilerOptions.OPTION_ReportInconsistentNullCheck, CompilerOptions.ERROR);
	this.runNegativeTest(
		new String[] {
			"X.java",
			"public class X {\n" + 
			"\n" + 
			"	void foo() {\n" + 
			"		Object o = new Object();\n" + 
			"		while (this != null) {\n" + 
			"			try {\n" + 
			"				o = null;\n" + 
			"				break;\n" + 
			"			} finally {\n" + 
			"				o = new Object();\n" + 
			"			}\n" + 
			"		}\n" + 
			"		if (o == null) return;\n" + 
			"	}\n" + 
			"}\n",
		},
		"----------\n" + 
		"1. ERROR in X.java (at line 13)\n" + 
		"	if (o == null) return;\n" + 
		"	    ^\n" + 
		"The variable o cannot be null; it was either set to a non-null value or assumed to be non-null when last used\n" + 
		"----------\n",
		null,
		true,
		customOptions);
}

