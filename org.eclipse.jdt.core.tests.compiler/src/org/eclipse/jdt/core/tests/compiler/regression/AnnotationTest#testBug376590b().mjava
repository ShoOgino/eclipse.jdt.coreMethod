// https://bugs.eclipse.org/376590 - Private fields with @Inject are ignored by unused field validation
// using javax.inject.Inject - slight variation
public void testBug376590b() {
	Map customOptions = getCompilerOptions();
	customOptions.put(CompilerOptions.OPTION_ReportUnusedPrivateMember, CompilerOptions.ERROR);
	customOptions.put(CompilerOptions.OPTION_ReportUnusedPrivateMember, CompilerOptions.ERROR);
	this.runNegativeTest(
		true,
		new String[] {
			JAVAX_INJECT_NAME,
			JAVAX_INJECT_CONTENT,
			"Example.java",
			"class Example {\n" +
			"  private @javax.inject.Inject Object o;\n" +
			"  private Example() {} // also warn here: no @Inject\n" +
			"  public Example(Object o) { this.o = o; }\n" +
			"  private @javax.inject.Inject void setO(Object o) { this.o = o;}\n" +
			"}\n"
		},
		null, customOptions,
		"----------\n" + 
		"1. ERROR in Example.java (at line 2)\n" + 
		"	private @javax.inject.Inject Object o;\n" + 
		"	                                    ^\n" + 
		"The value of the field Example.o is not used\n" + 
		"----------\n" + 
		"2. ERROR in Example.java (at line 3)\n" + 
		"	private Example() {} // also warn here: no @Inject\n" + 
		"	        ^^^^^^^^^\n" + 
		"The constructor Example() is never used locally\n" + 
		"----------\n",
		JavacTestOptions.Excuse.EclipseWarningConfiguredAsError);	
}

