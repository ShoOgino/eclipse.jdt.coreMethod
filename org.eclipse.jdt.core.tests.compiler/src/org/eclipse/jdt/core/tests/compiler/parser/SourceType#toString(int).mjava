public String toString(int tab) {

	StringBuffer buffer = new StringBuffer();
	if (packageName != null) {
		buffer.append(tabString(tab)).append(packageName);
	}
	if (imports != null) {
		for (int i = 0, max = imports.length; i < max; i++) {
			buffer.append(tabString(tab)).append(imports[i]);
		}
	}
	buffer.append(tabString(tab));
	String displayModifiers = displayModifiers();
	if (displayModifiers != null) {
		buffer.append(displayModifiers).append(" ");
	}
	buffer.append(isInterface() ? "interface " : "class ").append(name).append(" ");
	if (superclassName != null) {
		buffer.append("extends ").append(superclassName).append(" ");
	}
	if (interfaceNames != null) {
		buffer.append("implements ");
		for (int i = 0, max = interfaceNames.length; i < max; i++) {
			buffer.append(interfaceNames[i]).append(", ");
		}
	}
	buffer.append("{\n");
	if (memberTypes != null) {
		for (int i = 0, max = numberOfMemberTypes; i < max; i++) {
			buffer.append(memberTypes[i].toString(tab + 1)).append("\n");
		}
	}
	if (fields != null) {
		for (int i = 0, max = numberOfFields; i < max; i++) {
			buffer.append(fields[i].toString(tab + 1)).append("\n");
		}
	}
	if (defaultConstructor != null) {
			buffer.append(tabString(tab + 1)).append(defaultConstructor);		
	}
	if (methods != null) {
		for (int i = 0, max = numberOfMethods; i < max; i++) {
			buffer.append(methods[i].toString(tab + 1)).append("\n");
		}
	}
	buffer.append(tabString(tab)).append("}");
	return buffer.toString();
}

