public String toString(int tab) {

	StringBuffer buffer = new StringBuffer();
	if (this.packageName != null) {
		buffer.append(tabString(tab)).append(this.packageName);
	}
	if (this.imports != null) {
		for (int i = 0, max = this.imports.length; i < max; i++) {
			buffer.append(tabString(tab)).append(this.imports[i]);
		}
	}
	buffer.append(tabString(tab));
	String displayModifiers = displayModifiers();
	if (displayModifiers != null) {
		buffer.append(displayModifiers).append(" ");
	}
	buffer.append(isInterface() ? "interface " : "class ").append(this.name).append(" ");
	if (this.superclassName != null) {
		buffer.append("extends ").append(this.superclassName).append(" ");
	}
	if (this.interfaceNames != null) {
		buffer.append("implements ");
		for (int i = 0, max = this.interfaceNames.length; i < max; i++) {
			buffer.append(this.interfaceNames[i]).append(", ");
		}
	}
	buffer.append("{\n");
	if (this.memberTypes != null) {
		for (int i = 0, max = this.numberOfMemberTypes; i < max; i++) {
			buffer.append(this.memberTypes[i].toString(tab + 1)).append("\n");
		}
	}
	if (this.fields != null) {
		for (int i = 0, max = this.numberOfFields; i < max; i++) {
			buffer.append(this.fields[i].toString(tab + 1)).append("\n");
		}
	}
	if (this.defaultConstructor != null) {
			buffer.append(tabString(tab + 1)).append(this.defaultConstructor);
	}
	if (this.methods != null) {
		for (int i = 0, max = this.numberOfMethods; i < max; i++) {
			buffer.append(this.methods[i].toString(tab + 1)).append("\n");
		}
	}
	buffer.append(tabString(tab)).append("}");
	return buffer.toString();
}

