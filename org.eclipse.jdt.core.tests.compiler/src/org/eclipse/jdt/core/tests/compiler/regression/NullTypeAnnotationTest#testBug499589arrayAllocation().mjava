public void testBug499589arrayAllocation() {
	runNegativeTestWithLibs(
		new String[] {
			"test/ArrayAllocation.java",
			"package test;\n" +
			"\n" +
			"import static org.eclipse.jdt.annotation.DefaultLocation.ARRAY_CONTENTS;\n" +
			"\n" +
			"import org.eclipse.jdt.annotation.NonNullByDefault;\n" +
			"\n" +
			"@NonNullByDefault({ ARRAY_CONTENTS })\n" +
			"public class ArrayAllocation {\n" +
			"	public Integer[] x1 = { 1, 2, 3, null };\n" +
			"	public Integer[] x2 = new Integer[] { 1, 2, 3 };\n" +
			"	public Integer[] x3 = new Integer[] { 1, 2, 3, null };\n" +
			"	public Integer[] x4 = new Integer[3];\n" +
			"}\n" +
			"",
		},
		getCompilerOptions(),
		"----------\n" +
		"1. ERROR in test\\ArrayAllocation.java (at line 9)\n" +
		"	public Integer[] x1 = { 1, 2, 3, null };\n" +
		"	                                 ^^^^\n" +
		"Null type mismatch: required \'@NonNull Integer\' but the provided value is null\n" +
		"----------\n" +
		"2. ERROR in test\\ArrayAllocation.java (at line 11)\n" +
		"	public Integer[] x3 = new Integer[] { 1, 2, 3, null };\n" +
		"	                                               ^^^^\n" +
		"Null type mismatch: required \'@NonNull Integer\' but the provided value is null\n" +
		"----------\n" +
		"3. WARNING in test\\ArrayAllocation.java (at line 12)\n" +
		"	public Integer[] x4 = new Integer[3];\n" +
		"	                      ^^^^^^^^^^^^^^\n" +
		"Null type safety (type annotations): The expression of type \'Integer[]\' needs unchecked conversion to conform to \'@NonNull Integer []\'\n" +
		"----------\n"
	);
}

