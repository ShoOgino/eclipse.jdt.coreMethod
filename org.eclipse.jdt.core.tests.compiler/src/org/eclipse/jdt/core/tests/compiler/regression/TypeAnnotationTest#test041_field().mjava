	public void test041_field() throws Exception {
		this.runConformTest(
			new String[] {
				"X.java",
				"public class X {\n" + 
				"	java.lang.@H String @E[] @F[] @G[] field;\n" + 
				"}",
				"E.java",
				"import java.lang.annotation.Target;\n" + 
				"import static java.lang.annotation.ElementType.*;\n" + 
				"import java.lang.annotation.Retention;\n" + 
				"import static java.lang.annotation.RetentionPolicy.*;\n" + 
				"@Target(TYPE_USE)\n" + 
				"@Retention(CLASS)\n" + 
				"@interface E {\n" + 
				"	int value() default -1;\n" + 
				"}",
				"F.java",
				"import java.lang.annotation.Target;\n" + 
				"import static java.lang.annotation.ElementType.*;\n" + 
				"import java.lang.annotation.Retention;\n" + 
				"import static java.lang.annotation.RetentionPolicy.*;\n" + 
				"@Target(TYPE_USE)\n" + 
				"@Retention(RUNTIME)\n" + 
				"@interface F {\n" + 
				"	char value() default '-';\n" + 
				"}\n",
				"G.java",
				"import java.lang.annotation.Target;\n" + 
				"import static java.lang.annotation.ElementType.*;\n" + 
				"import java.lang.annotation.Retention;\n" + 
				"import static java.lang.annotation.RetentionPolicy.*;\n" + 
				"@Target(TYPE_USE)\n" + 
				"@Retention(CLASS)\n" + 
				"@interface G {\n" + 
				"	int value() default -1;\n" + 
				"}",
				"H.java",
				"import java.lang.annotation.Target;\n" + 
				"import static java.lang.annotation.ElementType.*;\n" + 
				"import java.lang.annotation.Retention;\n" + 
				"import static java.lang.annotation.RetentionPolicy.*;\n" + 
				"@Target(TYPE_USE)\n" + 
				"@Retention(RUNTIME)\n" + 
				"@interface H {\n" + 
				"	char value() default '-';\n" + 
				"}\n",
		},
		"");
		String expectedOutput =
			"    RuntimeVisibleTypeAnnotations: \n" + 
			"      #11 @H(\n" + 
			"        target type = 0x13 FIELD\n" + 
			"        location = [ARRAY, ARRAY, ARRAY]\n" + 
			"      )\n" + 
			"      #12 @F(\n" + 
			"        target type = 0x13 FIELD\n" + 
			"        location = [ARRAY]\n" + 
			"      )\n" + 
			"    RuntimeInvisibleTypeAnnotations: \n" + 
			"      #8 @E(\n" + 
			"        target type = 0x13 FIELD\n" + 
			"      )\n" + 
			"      #9 @G(\n" + 
			"        target type = 0x13 FIELD\n" + 
			"        location = [ARRAY, ARRAY]\n" + 
			"      )\n";
		checkDisassembledClassFile(OUTPUT_DIR + File.separator + "X.class", "X", expectedOutput, ClassFileBytesDisassembler.SYSTEM);
	}

