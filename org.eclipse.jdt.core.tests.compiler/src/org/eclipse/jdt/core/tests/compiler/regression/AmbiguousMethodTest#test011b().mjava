	// https://bugs.eclipse.org/bugs/show_bug.cgi?id=106090
	public void test011b() {
		// http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6182950
		String expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?
		"----------\n" +
		"1. WARNING in Test1.java (at line 2)\n" +
		"	<T extends Comparable<T>> void pickOne(T value) throws ExOne {}\n" +
		"	                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" +
		"Erasure of method pickOne(T) is the same as another method in type Test1<AA,BB>\n" +
		"----------\n" +
		"2. WARNING in Test1.java (at line 3)\n" +
		"	<T> T pickOne(Comparable<T> value) throws ExTwo { return null;}\n" +
		"	      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" +
		"Erasure of method pickOne(Comparable<T>) is the same as another method in type Test1<AA,BB>\n" +
		"----------\n" +
		"3. WARNING in Test1.java (at line 4)\n" +
		"	void pickOne2(Test1<Integer,Integer> c) throws ExOne { c.pickOne((Comparable) \"test\"); }\n" +
		"	                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" +
		"Type safety: Unchecked invocation pickOne(Comparable) of the generic method pickOne(T) of type Test1<Integer,Integer>\n" +
		"----------\n" +
		"4. WARNING in Test1.java (at line 4)\n" +
		"	void pickOne2(Test1<Integer,Integer> c) throws ExOne { c.pickOne((Comparable) \"test\"); }\n" +
		"	                                                                  ^^^^^^^^^^\n" +
		"Comparable is a raw type. References to generic type Comparable<T> should be parameterized\n" +
		"----------\n":
			"----------\n" +
			"1. ERROR in Test1.java (at line 2)\n" +
			"	<T extends Comparable<T>> void pickOne(T value) throws ExOne {}\n" +
			"	                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" +
			"Erasure of method pickOne(T) is the same as another method in type Test1<AA,BB>\n" +
			"----------\n" +
			"2. ERROR in Test1.java (at line 3)\n" +
			"	<T> T pickOne(Comparable<T> value) throws ExTwo { return null;}\n" +
			"	      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" +
			"Erasure of method pickOne(Comparable<T>) is the same as another method in type Test1<AA,BB>\n" +
			"----------\n" +
			"3. WARNING in Test1.java (at line 4)\n" +
			"	void pickOne2(Test1<Integer,Integer> c) throws ExOne { c.pickOne((Comparable) \"test\"); }\n" +
			"	                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" +
			"Type safety: Unchecked invocation pickOne(Comparable) of the generic method pickOne(T) of type Test1<Integer,Integer>\n" +
			"----------\n" +
			"4. WARNING in Test1.java (at line 4)\n" +
			"	void pickOne2(Test1<Integer,Integer> c) throws ExOne { c.pickOne((Comparable) \"test\"); }\n" +
			"	                                                                  ^^^^^^^^^^\n" +
			"Comparable is a raw type. References to generic type Comparable<T> should be parameterized\n" +
			"----------\n";
		this.runNegativeTest(
			new String[] {
				"Test1.java",
				"public class Test1<AA, BB> {\n" +
				"	<T extends Comparable<T>> void pickOne(T value) throws ExOne {}\n" +
				"	<T> T pickOne(Comparable<T> value) throws ExTwo { return null;}\n" +
				"	void pickOne2(Test1<Integer,Integer> c) throws ExOne { c.pickOne((Comparable) \"test\"); }\n" +
				"}\n" +
				"class ExOne extends Exception {static final long serialVersionUID = 1;}\n" +
				"class ExTwo extends Exception {static final long serialVersionUID = 2;}"
			},
			expectedCompilerLog
		);
/* javac 7
X.java:3: name clash: <T#1>pickOne(Comparable<T#1>) and <T#2>pickOne(T#2) have the same erasure
        <T> T pickOne(Comparable<T> value) throws ExTwo { return null;}
              ^
  where T#1,T#2 are type-variables:
    T#1 extends Object declared in method <T#1>pickOne(Comparable<T#1>)
    T#2 extends Comparable<T#2> declared in method <T#2>pickOne(T#2)
X.java:4: warning: [unchecked] unchecked method invocation: method pickOne in class Test1 is applied to given types
        void pickOne2(Test1<Integer,Integer> c) throws ExOne { c.pickOne((Comparable) "test"); }
                                                                        ^
  required: T
  found: Comparable
  where T is a type-variable:
    T extends Comparable<T> declared in method <T>pickOne(T)
1 error
1 warning
 */
	}

