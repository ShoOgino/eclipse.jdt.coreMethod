	// https://bugs.eclipse.org/bugs/show_bug.cgi?id=466748
	public void test011() {
		this.runConformTest(
			new String[] {
				"X.java",
				"import java.lang.invoke.MethodHandle;\n" + 
				"import java.lang.invoke.MethodHandles;\n" + 
				"import java.lang.reflect.Method;\n" + 
				"\n" + 
				"public class X {\n" + 
				"	public static void test1(Integer i){\n" + 
				"		System.out.println(\"test1:\" + i);\n" + 
				"	}\n" + 
				"	public static void test2(int i){\n" + 
				"		System.out.println(\"test2:\" + i);\n" + 
				"	}\n" + 
				"\n" + 
				"	public static void main(String[] args) throws Throwable{\n" + 
				"		Method m1 = X.class.getMethod(\"test1\", Integer.class);\n" + 
				"		Method m2 = X.class.getMethod(\"test2\", int.class);\n" + 
				"\n" + 
				"		MethodHandle test1Handle = MethodHandles.lookup().unreflect(m1);\n" + 
				"		MethodHandle test2Handle = MethodHandles.lookup().unreflect(m2);\n" + 
				"		\n" + 
				"		Integer arg_Integer = 1;\n" + 
				"		int arg_int = 1;\n" + 
				"		\n" + 
				"		// results in a java.lang.VerifyError - but should work without error\n" + 
				"		test1Handle.invokeExact(Integer.class.cast(arg_int));\n" + 
				"		\n" + 
				"		// The following line also results in a java.lang.VerifyError, but should actually throw a ClassCastException\n" + 
				"		try {\n" + 
				"			test2Handle.invokeExact(int.class.cast(arg_Integer)); \n" + 
				"		} catch(ClassCastException e) {\n" + 
				"			System.out.println(\"SUCCESS\");\n" + 
				"		}\n" + 
				"	}\n" + 
				"}"
			},
			"test1:1\n" + 
			"SUCCESS");
	}

