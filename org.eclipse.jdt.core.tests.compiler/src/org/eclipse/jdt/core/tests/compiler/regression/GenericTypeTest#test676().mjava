//check fault tolerance, in spite of bound mismatch, still pass param type for further resolving message send
public void test676() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			"public class X<T extends Throwable> {\n" + 
			"	T get() { return null; }\n" + 
			"	\n" + 
			"	void foo(X<String> xs) {\n" + 
			"		xs.get().printStackTrace();\n" + 
			"	}\n" + 
			"}\n",
		},
		"----------\n" + 
		"1. ERROR in X.java (at line 4)\n" + 
		"	void foo(X<String> xs) {\n" + 
		"	           ^^^^^^\n" + 
		"Bound mismatch: The type String is not a valid substitute for the bounded parameter <T extends Throwable> of the type X<T>\n" + 
		"----------\n" + 
		"2. ERROR in X.java (at line 5)\n" + 
		"	xs.get().printStackTrace();\n" + 
		"	         ^^^^^^^^^^^^^^^\n" + 
		"The method printStackTrace() is undefined for the type String\n" + 
		"----------\n");
}	

