public void test012() {
	Map customOptions = getCompilerOptions();
	customOptions.put(CompilerOptions.OPTION_ReportUnnecessaryTypeCheck, CompilerOptions.ERROR);
	runNegativeTest(
		// test directory preparation
		true /* flush output directory */, 
		new String[] { /* test files */
			"X.java",
			"public class X {\n" + 
			"	public static void main(String[] args) {\n" + 
			"		// message sends		\n" + 
			"		X x = new YM1();	\n" +
			"		foo((X) x);			// UNnecessary\n" + 
			"		foo((XM1) x);	// UNnecessary\n" + 
			"		foo((YM1) x);	// necessary \n" + 
			"	}\n" + 
			"	static void foo(X x) {}\n" + 
			"	static void foo(YM1 ym1) {}\n" + 
			"  static class XM1 extends X {}\n" +
			"  static class YM1 extends XM1 {}\n" +
			"}\n"
		},
		// compiler options
		null /* no class libraries */,
		customOptions /* custom options */,
		// compiler results
		"----------\n" + /* expected compiler log */
		"1. ERROR in X.java (at line 5)\n" + 
		"	foo((X) x);			// UNnecessary\n" + 
		"	    ^^^^^\n" + 
		"Unnecessary cast from X to X\n" + 
		"----------\n" + 
		"2. ERROR in X.java (at line 6)\n" + 
		"	foo((XM1) x);	// UNnecessary\n" + 
		"	    ^^^^^^^\n" + 
		"Unnecessary cast from X to X.XM1\n" + 
		"----------\n",
		// javac options
		JavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);
}

