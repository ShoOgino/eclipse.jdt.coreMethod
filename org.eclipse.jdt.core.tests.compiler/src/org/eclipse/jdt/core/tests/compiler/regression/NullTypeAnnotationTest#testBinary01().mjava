	// storing and decoding null-type-annotations to/from classfile:
	public void testBinary01() {
		Map customOptions = getCompilerOptions();
		customOptions.put(JavaCore.COMPILER_NULLABLE_ANNOTATION_NAME, "org.foo.Nullable");
		customOptions.put(JavaCore.COMPILER_NONNULL_ANNOTATION_NAME, "org.foo.NonNull");
		runConformTestWithLibs(
				new String[] {
					ELEMENT_TYPE_JAVA,
					ELEMENT_TYPE_SOURCE,
					CUSTOM_NULLABLE_NAME,
					CUSTOM_NULLABLE_CONTENT_JSR308,
					CUSTOM_NONNULL_NAME,
					CUSTOM_NONNULL_CONTENT_JSR308,
					"p/X.java",
					"package p;\n" +
					"import java.util.List;\n" +
					"import org.foo.*;\n" +
					"public class X {\n" +
					"	public List<@Nullable String> getSomeStrings() { return null; }\n" +
					"}\n"
				},
				customOptions,
				"");
// TODO(SH): change to runNegativeTestWithLibs(
		runConformTestWithLibs(
				new String[] {
					"Y.java",
					"import p.X;\n" +
					"public class Y {\n" +
					"	public void test(X x) {\n" +
					"		for (String s : x.getSomeStrings()) {\n" +
					"			System.out.println(s.toUpperCase());\n" +
					"		}\n" +
					"	}\n" +
					"}\n"
				}, 
				customOptions,
// TODO(SH): decoding part is not yet implemented: add expected error message
				""
				);
	}

