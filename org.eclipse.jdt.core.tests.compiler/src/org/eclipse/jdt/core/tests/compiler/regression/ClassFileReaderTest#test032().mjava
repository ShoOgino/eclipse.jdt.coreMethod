	/**
	 * http://bugs.eclipse.org/bugs/show_bug.cgi?id=26753
	 */
	public void test032() {
		try {
			String sourceA =
				"public class A {\n" +				"	public static void main(String[] args) {\n" +				"		int i = 6;\n" +				"		if (i\n" +				"			<= 5) {   	\n" +				"		   	System.out.println(i);\n" +				"		   }\n" +				"	}\n" +				"}";
			compileAndDeploy(sourceA, "A");
			org.eclipse.jdt.core.util.IClassFileReader classFileReader = org.eclipse.jdt.core.ToolFactory.createDefaultClassFileReader(EVAL_DIRECTORY + File.separator + "A.class", org.eclipse.jdt.core.util.IClassFileReader.ALL);
			org.eclipse.jdt.core.util.IMethodInfo[] methodInfos = classFileReader.getMethodInfos();
			assertEquals("wrong size", 2, methodInfos.length);
			org.eclipse.jdt.core.util.IMethodInfo methodInfo = methodInfos[1];
			assertEquals("wrong name", "main", new String(methodInfo.getName()));
			org.eclipse.jdt.core.util.ICodeAttribute codeAttribute = methodInfo.getCodeAttribute();
			assertNotNull("No code attribute", codeAttribute);
			org.eclipse.jdt.core.util.ILineNumberAttribute lineNumberAttribute = codeAttribute.getLineNumberAttribute();
			assertNotNull("No code line number attribute", lineNumberAttribute);
			int[][] lineNumberTable = lineNumberAttribute.getLineNumberTable();
			assertEquals("wrong size", 5, lineNumberTable.length);
			assertEquals("wrong pc[0]", 0, lineNumberTable[0][0]);
			assertEquals("wrong line[0]", 3, lineNumberTable[0][1]);
			assertEquals("wrong pc[1]", 3, lineNumberTable[1][0]);
			assertEquals("wrong line[1]", 4, lineNumberTable[1][1]);
			assertEquals("wrong pc[2]", 4, lineNumberTable[2][0]);
			assertEquals("wrong line[2]", 5, lineNumberTable[2][1]);
			assertEquals("wrong pc[3]", 8, lineNumberTable[3][0]);
			assertEquals("wrong line[3]", 6, lineNumberTable[3][1]);
			assertEquals("wrong pc[4]", 15, lineNumberTable[4][0]);
			assertEquals("wrong line[4]", 8, lineNumberTable[4][1]);
		} finally {
			removeTempClass("A");
		}
	}		

