	public void testBug529518() {
		Runner run = new Runner();
		run.testFiles = new String[] {
			"Try.java",
			"import java.util.function.*;\n" +
			"public class Try<T> {\n" +
			"    @FunctionalInterface\n" +
			"    interface CheckedSupplier<R> {\n" +
			"        R get() throws Throwable;\n" +
			"    }\n" +
			"    static <T> Try<T> of(CheckedSupplier<? extends T> supplier) {\n" +
			"    	return null;\n" +
			"    }\n" +
			"	 T getOrElseGet(Function<? super Throwable, ? extends T> other) { return null; }\n" +
			"}\n",
			"X.java",
			"import java.util.*;\n" +
			"\n" +
			"public class X {\n" +
			"        byte[] decode(byte[] base64Bytes) {\n" +
			"                return Try.of(() -> Base64.getDecoder().decode(base64Bytes))\n" +
			"                        .getOrElseGet(t -> null);\n" +
			"        }\n" +
			"}\n" +
			""
		};
		run.runConformTest();
	}

