//https://bugs.eclipse.org/bugs/show_bug.cgi?id=203061 - variation
public void test1163() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			"public final class X<T> {\n" +
			"	private final Object mObj;\n" +
			"	private final Object mDependent = new Object() {\n" +
			"		{\n" +
			"			Object o1 = mObj;\n" +
			"		}\n" +
			"		Object o2 = mObj;\n" +
			"		void foo() {\n" +
			"			Object o3 = mObj;\n" +
			"		}\n" +
			"	};\n" +
			"	public X() {\n" +
			"		mObj = \"\";\n" +
			"	}\n" +
			"}\n", // =================
		},
		"----------\n" +
		"1. WARNING in X.java (at line 3)\n" +
		"	private final Object mDependent = new Object() {\n" +
		"	                     ^^^^^^^^^^\n" +
		"The field X<T>.mDependent is never read locally\n" +
		"----------\n" +
		"2. WARNING in X.java (at line 5)\n" +
		"	Object o1 = mObj;\n" +
		"	            ^^^^\n" +
		"Read access to enclosing field X<T>.mObj is emulated by a synthetic accessor method\n" +
		"----------\n" +
		"3. ERROR in X.java (at line 5)\n" +
		"	Object o1 = mObj;\n" +
		"	            ^^^^\n" +
		"The blank final field mObj may not have been initialized\n" +
		"----------\n" +
		"4. WARNING in X.java (at line 7)\n" +
		"	Object o2 = mObj;\n" +
		"	       ^^\n" +
		"The field new Object(){}.o2 is never read locally\n" +
		"----------\n" +
		"5. WARNING in X.java (at line 7)\n" +
		"	Object o2 = mObj;\n" +
		"	            ^^^^\n" +
		"Read access to enclosing field X<T>.mObj is emulated by a synthetic accessor method\n" +
		"----------\n" +
		"6. ERROR in X.java (at line 7)\n" +
		"	Object o2 = mObj;\n" +
		"	            ^^^^\n" +
		"The blank final field mObj may not have been initialized\n" +
		"----------\n" +
		"7. WARNING in X.java (at line 8)\n" +
		"	void foo() {\n" +
		"	     ^^^^^\n" +
		"The method foo() from the type new Object(){} is never used locally\n" +
		"----------\n" +
		"8. WARNING in X.java (at line 9)\n" +
		"	Object o3 = mObj;\n" +
		"	            ^^^^\n" +
		"Read access to enclosing field X<T>.mObj is emulated by a synthetic accessor method\n" +
		"----------\n");
}

