public void testBug435805() {
	Map options = getCompilerOptions();
	options.put(JavaCore.COMPILER_NONNULL_ANNOTATION_NAME, "org.foo.NonNull");
	options.put(JavaCore.COMPILER_NULLABLE_ANNOTATION_NAME, "org.foo.Nullable");
	runNegativeTest(
		true/*flush*/,
		new String[] {
			"org/foo/Nullable.java",
			"package org.foo;\n" +
			"import java.lang.annotation.*;\n" +
			"@Retention(RetentionPolicy.CLASS)\n" +
			"@Target({ElementType.FIELD, ElementType.METHOD, ElementType.PARAMETER, ElementType.LOCAL_VARIABLE})\n" +
			"public @interface Nullable {}\n",
			"org/foo/NonNull.java",
			"package org.foo;\n" +
			"import java.lang.annotation.*;\n" +
			"@Retention(RetentionPolicy.CLASS)\n" +
			"@Target({ElementType.FIELD, ElementType.METHOD, ElementType.PARAMETER, ElementType.LOCAL_VARIABLE})\n" +
			"public @interface NonNull {}\n",
			"TestNulls.java",
			"import org.foo.*;\n" +
			"\n" +
			"public class TestNulls {\n" +
			"	public void testCase(@Nullable String theValue) {\n" +
			"		int len = theValue.length();					// Is nullable, so should report error here.\n" +
			"	}\n" +
			"\n" +
			"}"
		},
		null/*libs*/,
		options,
		"----------\n" +
		"1. ERROR in TestNulls.java (at line 5)\n" +
		"	int len = theValue.length();					// Is nullable, so should report error here.\n" +
		"	          ^^^^^^^^\n" +
		"Potential null pointer access: The variable theValue may be null at this location\n" +
		"----------\n",
		JavacTestOptions.Excuse.EclipseWarningConfiguredAsError);
}

