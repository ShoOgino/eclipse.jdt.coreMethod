	// More type path tests
	public void test044() throws Exception {
		this.runConformTest(
			new String[] {
				"X.java",
				"import java.lang.annotation.*;\n" +
				"@Target(ElementType.TYPE_USE)\n" +
				"@interface I {\n" +
				"	String value() default \"default\";\n" +
				"}\n" +
				"@Target(ElementType.TYPE_USE)\n" +
				"@interface F {\n" +
				"	String value() default \"default\";\n" +
				"}\n" +
				"@Target(ElementType.TYPE_USE)\n" +
				"@interface G {\n" +
				"	String value() default \"default\";\n" +
				"}\n" +
				"@Target(ElementType.TYPE_USE)\n" +
				"@interface H {\n" +
				"	String value() default \"default\";\n" +
				"}\n" +
				"class X {\n" +
				"	@I String @F [] @G [] @H [] f;\n" +
				"}\n",
		},
		"");

		String expectedOutput =
				"  // Field descriptor #6 [[[Ljava/lang/String;\n" + 
				"  java.lang.String[][][] f;\n" + 
				"    RuntimeInvisibleTypeAnnotations: \n" + 
				"      #8 @I(\n" + 
				"        target type = 0x13 FIELD\n" + 
				"        location = [ARRAY, ARRAY, ARRAY]\n" + 
				"      )\n" + 
				"      #9 @F(\n" + 
				"        target type = 0x13 FIELD\n" + 
				"      )\n" + 
				"      #10 @G(\n" + 
				"        target type = 0x13 FIELD\n" + 
				"        location = [ARRAY]\n" + 
				"      )\n" + 
				"      #11 @H(\n" + 
				"        target type = 0x13 FIELD\n" + 
				"        location = [ARRAY, ARRAY]\n" + 
				"      )\n" + 
				"  \n";
		checkDisassembledClassFile(OUTPUT_DIR + File.separator + "X.class", "Z", expectedOutput, ClassFileBytesDisassembler.SYSTEM);
	}

