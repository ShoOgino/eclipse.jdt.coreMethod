// https://bugs.eclipse.org/bugs/show_bug.cgi?id=126712
// reflection - access to a public field of a package visible
// class through a public extending class
// **
public void _test0601_reflection() {
	this.runConformTest(
		new String[] {
			"X.java",
			"import java.lang.reflect.*;\n" + 
			"import p.*;\n" + 
			"public class X {\n" + 
			"static public void main (String args[]) {\n" + 
			"  Y y = new Y();\n" +
			"  try {\n" +
			"    Field f = Y.class.getField(\"m\");\n" +
			"    System.out.println(y.m);\n" +
			"    System.out.println(f.get(y));\n" +
			"  }\n" +
			"  catch (Throwable t) {\n" +
			"    System.out.println(\"FAILURE: \" + t.getMessage());\n" +
			"    t.printStackTrace(System.out);\n" +
			"  }\n" + 
			"}\n" + 
			"}\n",
			"p/Y.java",
			"package p;\n" +
			"public class Y extends Z {\n" + 
			"  /* empty */\n" + 
			"}\n",
			"p/Z.java",
			"package p;\n" +
			"class Z {\n" + 
			"  public String m = \"SUCCESS\";\n" + 
			"}\n"},
		"SUCCESS\n" + 
		"FAILURE: Class X can not access a member of class p.Z with modifiers \"public\"\n" + 
		"java.lang.IllegalAccessException: Class X can not access a member of class p.Z with modifiers \"public\"\n" + 
		"	at sun.reflect.Reflection.ensureMemberAccess(Reflection.java:65)\n" + 
		"	at java.lang.reflect.Field.doSecurityCheck(Field.java:960)\n" + 
		"	at java.lang.reflect.Field.getFieldAccessor(Field.java:896)\n" + 
		"	at java.lang.reflect.Field.get(Field.java:358)\n" + 
		"	at X.main(X.java:9)\n" + 
		"	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n" + 
		"	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n" + 
		"	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n" + 
		"	at java.lang.reflect.Method.invoke(Method.java:597)\n" + 
		"	at"
	);
}

