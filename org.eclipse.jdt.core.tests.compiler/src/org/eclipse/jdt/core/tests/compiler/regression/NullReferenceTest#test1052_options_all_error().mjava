// https://bugs.eclipse.org/bugs/show_bug.cgi?id=170704
// adding distinct options to control null checks in more detail
// all options set to error
public void test1052_options_all_error() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			  "public class X {\n" + 
			  "  void foo(Object p) {\n" + 
			  "    Object o = null;\n" +
			  "    if (o != null) {\n" +
			  "       o = null;\n" +
			  "    }\n" +
			  "    if (p == null) {}\n" + // taint p 
			  "    o.toString();\n" +
			  "    p.toString();\n" + 
			  "  }\n" + 
			  "}\n"},
		"----------\n" + 
		"1. ERROR in X.java (at line 4)\r\n" + 
		"	if (o != null) {\r\n" + 
		"	    ^\n" + 
		"Null comparison always yields false: The variable o can only be null at this location\n" + 
		"----------\n" + 
		"2. ERROR in X.java (at line 8)\r\n" + 
		"	o.toString();\r\n" + 
		"	^\n" + 
		"Null pointer access: The variable o can only be null at this location\n" + 
		"----------\n" + 
		"3. ERROR in X.java (at line 9)\r\n" + 
		"	p.toString();\r\n" + 
		"	^\n" + 
		"Potential null pointer access: The variable p may be null at this location\n" + 
		"----------\n");
}

