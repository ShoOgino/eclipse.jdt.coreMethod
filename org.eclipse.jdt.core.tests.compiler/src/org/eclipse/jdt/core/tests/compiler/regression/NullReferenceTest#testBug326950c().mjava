// https://bugs.eclipse.org/bugs/show_bug.cgi?id=326950
// Free return should be generated for a method even if it ends with dead code
public void testBug326950c() throws Exception {
	Map options = getCompilerOptions();
	options.put(CompilerOptions.OPTION_ReportNullReference, CompilerOptions.WARNING);
	options.put(CompilerOptions.OPTION_ReportPotentialNullReference, CompilerOptions.WARNING);
	options.put(CompilerOptions.OPTION_ReportRedundantNullCheck, CompilerOptions.WARNING);
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" +
			"	public void foo(String[] args) {\n" +
			"		String s = \"\";\n" +
			"		int i = 0;\n" +
			"		if (s != null) {\n" +
			"			return;\n" +
			"		}\n" +
			"		i++;\n" +
			"	}\n" +
			"}",
		},
		"",
		null,
		true,
		null,
		options,
		null);
	String expectedOutput =
		"  public void foo(java.lang.String[] args);\n" +
		"     0  ldc <String \"\"> [16]\n" +
		"     2  astore_2 [s]\n" +
		"     3  iconst_0\n" +
		"     4  istore_3 [i]\n" +
		"     5  aload_2 [s]\n" +
		"     6  ifnull 10\n" +
		"     9  return\n" +
		"    10  iinc 3 1 [i]\n" +
		"    13  return\n";
	checkDisassembledClassFile(OUTPUT_DIR + File.separator + "X.class", "X", expectedOutput);
}

