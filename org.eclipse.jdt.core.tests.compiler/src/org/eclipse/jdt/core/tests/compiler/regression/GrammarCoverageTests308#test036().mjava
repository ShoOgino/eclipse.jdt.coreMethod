	// ClassHeaderImplements ::= 'implements' InterfaceTypeList
	// InterfaceHeaderExtends ::= 'extends' InterfaceTypeList
	// InterfaceTypeList -> InterfaceType
	// InterfaceTypeList ::= InterfaceTypeList ',' InterfaceType
	// InterfaceType ::= ClassOrInterfaceType
	public void test036() throws Exception {
		this.runNegativeTest(
				new String[] {
					"X.java",
					"interface I {}\n" +
					"interface J {}\n" +
					"interface K extends @Marker I, @Marker J {}\n" +
					"interface L {}\n" +
					"public class X implements @Marker K, @Marker L {\n" +
					"}\n"
				},
				"----------\n" +
				"1. ERROR in X.java (at line 3)\n" +
				"	interface K extends @Marker I, @Marker J {}\n" +
				"	                     ^^^^^^\n" +
				"Marker cannot be resolved to a type\n" +
				"----------\n" +
				"2. ERROR in X.java (at line 3)\n" +
				"	interface K extends @Marker I, @Marker J {}\n" +
				"	                                ^^^^^^\n" +
				"Marker cannot be resolved to a type\n" +
				"----------\n" +
				"3. ERROR in X.java (at line 5)\n" +
				"	public class X implements @Marker K, @Marker L {\n" +
				"	                           ^^^^^^\n" +
				"Marker cannot be resolved to a type\n" +
				"----------\n" +
				"4. ERROR in X.java (at line 5)\n" +
				"	public class X implements @Marker K, @Marker L {\n" +
				"	                                      ^^^^^^\n" +
				"Marker cannot be resolved to a type\n" +
				"----------\n");
	}

