public void testBug70892b() {
	String[] testFiles = new String[] {
		"X.java",
		"public class X {\n" +
		"	/**\n" +
		"	 * {@value \"invalid\"}\n" +
		"	 */\n" +
		"	final static int field1 = 1;\n" +
		"	/**\n" +
		"	 * {@value <a href=\"invalid\">invalid</a>} invalid\n" +
		"	 */\n" +
		"	final static int field2 = 2;\n" +
		"	/**\n" +
		"	 * {@value #field}\n" +
		"	 */\n" +
		"	final static int field3 = 3;\n" +
		"	/**\n" +
		"	 * {@value #foo}\n" +
		"	 */\n" +
		"	final static int field4 = 4;\n" +
		"	/**\n" +
		"	 * {@value #foo()}\n" +
		"	 */\n" +
		"	final static int field5 = 5;\n" +
		"	void foo() {}\n" +
		"}\n"
	};
	if (this.complianceLevel <= ClassFileConstants.JDK1_4) {
		runConformTest(testFiles);
	} else {
		runNegativeTest(testFiles,
			"----------\n" +
			"1. ERROR in X.java (at line 3)\r\n" +
			"	* {@value \"invalid\"}\r\n" +
			"	          ^^^^^^^^^\n" +
			"Javadoc: Only static field reference is allowed for @value tag\n" +
			"----------\n" +
			"2. ERROR in X.java (at line 7)\r\n" +
			"	* {@value <a href=\"invalid\">invalid</a>} invalid\r\n" +
			"	          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" +
			"Javadoc: Only static field reference is allowed for @value tag\n" +
			"----------\n" +
			"3. ERROR in X.java (at line 11)\r\n" +
			"	* {@value #field}\r\n" +
			"	           ^^^^^\n" +
			"Javadoc: field cannot be resolved or is not a field\n" +
			"----------\n" +
			"4. ERROR in X.java (at line 15)\r\n" +
			"	* {@value #foo}\r\n" +
			"	           ^^^\n" +
			"Javadoc: Only static field reference is allowed for @value tag\n" +
			"----------\n" +
			"5. ERROR in X.java (at line 19)\r\n" +
			"	* {@value #foo()}\r\n" +
			"	           ^^^^^\n" +
			"Javadoc: Only static field reference is allowed for @value tag\n" +
			"----------\n",
			JavacTestOptions.Excuse.EclipseWarningConfiguredAsError
		);
	}
}

