//https://bugs.eclipse.org/bugs/show_bug.cgi?id=165143
public void test1078() { 
	this.runNegativeTest(
		new String[] {
			"X.java",
			"import java.util.List;\n" + 
			"import java.util.Map;\n" + 
			"\n" + 
			"public class X \n" + 
			"{\n" + 
			"  public static void main(String[] args)\n" + 
			"  {\n" + 
			"    Object object = null;\n" + 
			"\n" + 
			"    List list = (List)object;//[1]\n" + 
			"\n" + 
			"    foo((List)object);//[2]\n" + 
			"    foo((List<?>)object);//[3]\n" + 
			"    foo((List<Object>)object);//[4]unchecked cast\n" + 
			"    foo((List<? extends Object>)object);//[5]\n" + 
			"\n" + 
			"    foo((Map)object);//[6]\n" + 
			"    foo((Map<?, ?>)object);//[7]\n" + 
			"    foo((Map<Object, ?>)object);//[8]unchecked cast\n" + 
			"    foo((Map<?, Object>)object);//[9]unchecked cast\n" + 
			"    foo((Map<Object, Object>)object);//[10]unchecked cast\n" + 
			"    foo((Map<? extends Object, Object>)object);//[11]unchecked cast\n" + 
			"    foo((Map<? extends Object, ? extends Object>)object);//[12]\n" + 
			"    Zork z;\n" + 
			"  }\n" + 
			"\n" + 
			"  public static void foo(List<?> list) {\n" + 
			"  }\n" + 
			"\n" + 
			"  public static void foo(Map<?, ?> map) {\n" + 
			"  }\n" + 
			"}", // =================,
		},
		// unchecked warnings on [4][5][8][9][10][11][12]
		"----------\n" + 
		"1. WARNING in X.java (at line 10)\n" + 
		"	List list = (List)object;//[1]\n" + 
		"	^^^^\n" + 
		"List is a raw type. References to generic type List<E> should be parameterized\n" + 
		"----------\n" + 
		"2. WARNING in X.java (at line 10)\n" + 
		"	List list = (List)object;//[1]\n" + 
		"	             ^^^^\n" + 
		"List is a raw type. References to generic type List<E> should be parameterized\n" + 
		"----------\n" + 
		"3. WARNING in X.java (at line 12)\n" + 
		"	foo((List)object);//[2]\n" + 
		"	     ^^^^\n" + 
		"List is a raw type. References to generic type List<E> should be parameterized\n" + 
		"----------\n" + 
		"4. WARNING in X.java (at line 14)\n" + 
		"	foo((List<Object>)object);//[4]unchecked cast\n" + 
		"	    ^^^^^^^^^^^^^^^^^^^^\n" + 
		"Type safety: Unchecked cast from Object to List<Object>\n" + 
		"----------\n" + 
		"5. WARNING in X.java (at line 15)\n" + 
		"	foo((List<? extends Object>)object);//[5]\n" + 
		"	    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
		"Type safety: Unchecked cast from Object to List<? extends Object>\n" + 
		"----------\n" + 
		"6. WARNING in X.java (at line 17)\n" + 
		"	foo((Map)object);//[6]\n" + 
		"	     ^^^\n" + 
		"Map is a raw type. References to generic type Map<K,V> should be parameterized\n" + 
		"----------\n" + 
		"7. WARNING in X.java (at line 19)\n" + 
		"	foo((Map<Object, ?>)object);//[8]unchecked cast\n" + 
		"	    ^^^^^^^^^^^^^^^^^^^^^^\n" + 
		"Type safety: Unchecked cast from Object to Map<Object,?>\n" + 
		"----------\n" + 
		"8. WARNING in X.java (at line 20)\n" + 
		"	foo((Map<?, Object>)object);//[9]unchecked cast\n" + 
		"	    ^^^^^^^^^^^^^^^^^^^^^^\n" + 
		"Type safety: Unchecked cast from Object to Map<?,Object>\n" + 
		"----------\n" + 
		"9. WARNING in X.java (at line 21)\n" + 
		"	foo((Map<Object, Object>)object);//[10]unchecked cast\n" + 
		"	    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
		"Type safety: Unchecked cast from Object to Map<Object,Object>\n" + 
		"----------\n" + 
		"10. WARNING in X.java (at line 22)\n" + 
		"	foo((Map<? extends Object, Object>)object);//[11]unchecked cast\n" + 
		"	    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
		"Type safety: Unchecked cast from Object to Map<? extends Object,Object>\n" + 
		"----------\n" + 
		"11. WARNING in X.java (at line 23)\n" + 
		"	foo((Map<? extends Object, ? extends Object>)object);//[12]\n" + 
		"	    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
		"Type safety: Unchecked cast from Object to Map<? extends Object,? extends Object>\n" + 
		"----------\n" + 
		"12. ERROR in X.java (at line 24)\n" + 
		"	Zork z;\n" + 
		"	^^^^\n" + 
		"Zork cannot be resolved to a type\n" + 
		"----------\n");
}

