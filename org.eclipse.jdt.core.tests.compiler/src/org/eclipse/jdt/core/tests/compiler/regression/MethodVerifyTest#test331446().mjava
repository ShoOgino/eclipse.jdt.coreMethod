// https://bugs.eclipse.org/bugs/show_bug.cgi?id=331446
public void test331446() {
	Map compilerOptions15 = getCompilerOptions();
	compilerOptions15.put(JavaCore.COMPILER_CODEGEN_TARGET_PLATFORM, CompilerOptions.VERSION_1_5);
	compilerOptions15.put(JavaCore.COMPILER_COMPLIANCE, JavaCore.VERSION_1_5);
	compilerOptions15.put(JavaCore.COMPILER_SOURCE, JavaCore.VERSION_1_5);
	this.runConformTest(
		new String[] {
			"Test.java",
			"import java.util.Comparator;\n" + 
			"import java.util.List;\n" + 
			"\n" + 
			"public class Test {\n" + 
			"	public static <T> void assertEquals(String message,\n" + 
			"			Comparator<T> comparator, List<T> expected, List<T> actual) {\n" + 
			"		if (expected.size() != actual.size()) {\n" + 
			"			//failNotEquals(message, expected, actual);\n" + 
			"		}\n" + 
			"		for (int i = 0, l = expected.size(); i < l; i++) {\n" + 
			"			assertEquals(message, comparator, expected.get(i), actual.get(i));\n" + 
			"		}\n" + 
			"	}\n" + 
			"	public static <T> void assertEquals(String message,\n" + 
			"			Comparator<T> comparator, T expected, T actual) {\n" + 
			"		if (comparator.compare(expected, actual) == 0) {\n" + 
			"			return;\n" + 
			"		}\n" + 
			"		//failNotEquals(message, expected, actual);\n" + 
			"	}\n" + 
			"}\n" + 
			""
		},
		"",
		null,
		true,
		null,
		compilerOptions15,
		null);

	Map compilerOptions14 = getCompilerOptions();
	compilerOptions14.put(JavaCore.COMPILER_CODEGEN_TARGET_PLATFORM, JavaCore.VERSION_1_2);
	compilerOptions14.put(JavaCore.COMPILER_COMPLIANCE, JavaCore.VERSION_1_4);
	compilerOptions14.put(JavaCore.COMPILER_SOURCE, JavaCore.VERSION_1_3);
	compilerOptions14.put(JavaCore.COMPILER_PB_UNNECESSARY_TYPE_CHECK, JavaCore.IGNORE);
	this.runConformTest(
		new String[] {
			"X.java",
			"import java.util.ArrayList;\n" + 
			"import java.util.Comparator;\n" + 
			"\n" + 
			"public class X {\n" + 
			"	public static void testAmbiguity() {\n" + 
			"		Comparator comparator = new Comparator() {\n" + 
			"			\n" + 
			"			public int compare(Object o1, Object o2) {\n" + 
			"				return 0;\n" + 
			"			}\n" + 
			"		};\n" + 
			"		Test.assertEquals(\"Test\", comparator, new ArrayList(), new ArrayList());\n" + 
			"	}\n" + 
			"}\n" + 
			"",
		},
		"",
		null,
		false,
		null,
		compilerOptions14,
		null);
}

