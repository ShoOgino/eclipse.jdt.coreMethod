	//https://bugs.eclipse.org/bugs/show_bug.cgi?id=352145
	public void test050() {
		this.runConformTest(
			new String[] {
				"X.java",
				"import java.io.File;\n" + 
				"import java.io.FileFilter;\n" + 
				"import java.io.FileNotFoundException;\n" + 
				"import java.io.IOException;\n" + 
				"import java.util.ArrayList;\n" + 
				"import java.util.List;\n" + 
				"\n" + 
				"public class X {\n" + 
				"\n" + 
				"	public static final List<File> copyDir(List<File> lf,\n" + 
				"			final boolean overwrite, final boolean recursive,\n" + 
				"			final boolean returnSrc, final File src, final File tar,\n" + 
				"			final FileFilter filter) throws IOException {\n" + 
				"		if (!src.isDirectory())\n" + 
				"			throw new FileNotFoundException(\"not a directory: \" + src);\n" + 
				"		if (!tar.isDirectory())\n" + 
				"			throw new FileNotFoundException(\"not a directory: \" + tar);\n" + 
				"		final File[] fa = src.listFiles();\n" + 
				"		if (fa == null)\n" + 
				"			throw new FileNotFoundException(\"directory not accessible: \" + src);\n" + 
				"		if (lf == null)\n" + 
				"			lf = new ArrayList<File>(fa.length);\n" + 
				"		for (final File f : fa) {\n" + 
				"			final File right = new File(tar, f.getName());\n" + 
				"			if (f.isDirectory()) {\n" + 
				"				if (recursive && filter.accept(f)) {\n" + 
				"					if (!right.exists())\n" + 
				"						right.mkdir();\n" + 
				"					copyDir(lf, overwrite, recursive, returnSrc, f, right,\n" + 
				"							filter);\n" + 
				"				}\n" + 
				"			} else {\n" + 
				"				if (overwrite || (!right.exists() && filter.accept(f))) {\n" + 
				"					lf.add(returnSrc ? f : right);\n" + 
				"				}\n" + 
				"			}\n" + 
				"		}\n" + 
				"		return lf;\n" + 
				"	}\n" + 
				"\n" + 
				"	public static void main(final String[] args) {\n" + 
				"		System.out.println(\"SUCCESS\");\n" + 
				"	}\n" + 
				"\n" + 
				"}"
			},
			"SUCCESS");
	}

