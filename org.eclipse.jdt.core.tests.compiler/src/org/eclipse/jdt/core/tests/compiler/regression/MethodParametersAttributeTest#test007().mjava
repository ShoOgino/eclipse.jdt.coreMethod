	public void test007() throws Exception {
		// Test that the code generator can emit the names, so the disassembler may read them back (same source as was compiled with javac)
		
		this.runParameterNameTest(
			"ParameterNames.java",
			this.originalSource);

		ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
		String path = OUTPUT_DIR + File.separator + "ParameterNames.class";
		byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(path));
		String actualOutput =
			disassembler.disassemble(
				classFileBytes,
				"\n",
				ClassFileBytesDisassembler.DETAILED);
	
		String expectedOutput =
				"// Compiled from ParameterNames.java (version 1.8 : 52.0, super bit)\n" + 
				"public class ParameterNames {\n" + 
				"  \n" + 
				"  // Method descriptor #6 ()V\n" + 
				"  // Stack: 1, Locals: 1\n" + 
				"  public ParameterNames();\n" + 
				"    0  aload_0 [this]\n" + 
				"    1  invokespecial java.lang.Object() [8]\n" + 
				"    4  return\n" + 
				"      Line numbers:\n" + 
				"        [pc: 0, line: 3]\n" + 
				"  \n" + 
				"  // Method descriptor #12 (ID)V\n" + 
				"  // Stack: 0, Locals: 4\n" + 
				"  public void someMethod(int simple, double complex);\n" + 
				"    0  return\n" + 
				"      Line numbers:\n" + 
				"        [pc: 0, line: 6]\n" + 
				"      Method Parameters:\n" + 
				"        simple\n" + 
				"        final complex\n" + 
				"  \n" + 
				"  // Method descriptor #17 (Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/Callable;\n" + 
				"  // Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/Callable<Ljava/lang/String;>;\n" + 
				"  // Stack: 4, Locals: 3\n" + 
				"  public java.util.concurrent.Callable makeInnerWithCapture(java.lang.String finalMessage, java.lang.String mutableMessage);\n" + 
				"     0  new ParameterNames$1 [20]\n" + 
				"     3  dup\n" + 
				"     4  aload_0 [this]\n" + 
				"     5  aload_1 [finalMessage]\n" + 
				"     6  invokespecial ParameterNames$1(ParameterNames, java.lang.String) [22]\n" + 
				"     9  areturn\n" + 
				"      Line numbers:\n" + 
				"        [pc: 0, line: 9]\n" + 
				"      Method Parameters:\n" + 
				"        final finalMessage\n" + 
				"        mutableMessage\n" + 
				"  \n" + 
				"  // Method descriptor #28 (Ljava/lang/String;Ljava/lang/String;)I\n" + 
				"  // Stack: 5, Locals: 4\n" + 
				"  public int localMath(java.lang.String finalMessage, java.lang.String mutableMessage);\n" + 
				"     0  bipush 42\n" + 
				"     2  istore_3\n" + 
				"     3  new ParameterNames$1Local [29]\n" + 
				"     6  dup\n" + 
				"     7  aload_0 [this]\n" + 
				"     8  iconst_2\n" + 
				"     9  iload_3\n" + 
				"    10  invokespecial ParameterNames$1Local(ParameterNames, int, int) [31]\n" + 
				"    13  iconst_3\n" + 
				"    14  invokevirtual ParameterNames$1Local.calculate(int) : int [34]\n" + 
				"    17  ireturn\n" + 
				"      Line numbers:\n" + 
				"        [pc: 0, line: 17]\n" + 
				"        [pc: 3, line: 29]\n" + 
				"      Method Parameters:\n" + 
				"        final finalMessage\n" + 
				"        mutableMessage\n" + 
				"\n" + 
				"  Inner classes:\n" + 
				"    [inner class info: #20 ParameterNames$1, outer class info: #0\n" + 
				"     inner name: #0, accessflags: 0 default],\n" + 
				"    [inner class info: #29 ParameterNames$1Local, outer class info: #0\n" + 
				"     inner name: #41 Local, accessflags: 0 default]\n" + 
				"}";

		assertSubstring(actualOutput, expectedOutput);
	}

