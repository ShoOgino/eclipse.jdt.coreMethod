// variant of testBug486912PotNullInLoop_orig spiced up with potentiality from an 'unknown' o0:
public void testBug486912PotNullInLoop() {
	runNegativeNullTest(
		new String[] {
			"test/PotNullInLoop.java",
			"package test;\n" +
			"\n" +
			"public class PotNullInLoop {\n" +
			"	boolean b;\n" +
			"\n" +
			"	public void testDoWhile1(Object o0) {\n" +
			"		Object o1 = null;\n" +
			"		Object o2 = new Object();\n" +
			"		Object potNonNull = b ? o2 : o0;\n" +
			"		Object potNull = b ? o1 : o0;\n" +
			"		do {\n" +
			"			potNonNull.hashCode(); // OK\n" +
			"			potNull.hashCode(); // ERROR 1: pot null, but nothing reported\n" +
			"		} while (false);\n" +
			"	}\n" +
			"\n" +
			"	public void testWhileWithBreak(Object o0) {\n" +
			"		Object o1 = null;\n" +
			"		Object o2 = new Object();\n" +
			"		Object potNonNull = b ? o2 : o0;\n" +
			"		Object potNull = b ? o1 : o0;\n" +
			"		while (b) {\n" +
			"			potNonNull.hashCode(); // OK\n" +
			"			potNull.hashCode(); // ERROR 3 : pot null, but nothing reported\n" +
			"			break;\n" +
			"		}\n" +
			"	}\n" +
			"\n" +
			"	public void testWhile(Object o0) {\n" +
			"		Object o1 = null;\n" +
			"		Object o2 = new Object();\n" +
			"		Object potNonNull = b ? o2 : o0;\n" +
			"		Object potNull = b ? o1 : o0;\n" +
			"		while (b) {\n" +
			"			potNonNull.hashCode(); // OK\n" +
			"			potNull.hashCode(); // OK: pot null, is reported\n" +
			"		}\n" +
			"	}\n" +
			"\n" +
			"	public void testFor(Object o0) {\n" +
			"		Object o1 = null;\n" +
			"		Object o2 = new Object();\n" +
			"		Object potNonNull = b ? o2 : o0;\n" +
			"		Object potNull = b ? o1 : o0;\n" +
			"		for (int i = 0; i < 1; i++) {\n" +
			"			potNonNull.hashCode(); // OK\n" +
			"			potNull.hashCode(); // OK: pot null, is reported\n" +
			"		}\n" +
			"	}\n" +
			"\n" +
			"	public void testForEach(Object o0) {\n" +
			"		Object o1 = null;\n" +
			"		Object o2 = new Object();\n" +
			"		Object potNonNull = b ? o2 : o0;\n" +
			"		Object potNull = b ? o1 : o0;\n" +
			"		for (int i = 0; i < 1; i++) {\n" +
			"			potNonNull.hashCode(); // OK\n" +
			"			potNull.hashCode(); // OK: pot null, is reported\n" +
			"		}\n" +
			"	}\n" +
			"\n" +
			"}\n" +
			"",
		}, 
		"----------\n" + 
		"1. ERROR in test\\PotNullInLoop.java (at line 13)\n" + 
		"	potNull.hashCode(); // ERROR 1: pot null, but nothing reported\n" + 
		"	^^^^^^^\n" + 
		"Potential null pointer access: The variable potNull may be null at this location\n" + 
		"----------\n" + 
		"2. ERROR in test\\PotNullInLoop.java (at line 24)\n" + 
		"	potNull.hashCode(); // ERROR 3 : pot null, but nothing reported\n" + 
		"	^^^^^^^\n" + 
		"Potential null pointer access: The variable potNull may be null at this location\n" + 
		"----------\n" + 
		"3. ERROR in test\\PotNullInLoop.java (at line 36)\n" + 
		"	potNull.hashCode(); // OK: pot null, is reported\n" + 
		"	^^^^^^^\n" + 
		"Potential null pointer access: The variable potNull may be null at this location\n" + 
		"----------\n" + 
		"4. ERROR in test\\PotNullInLoop.java (at line 47)\n" + 
		"	potNull.hashCode(); // OK: pot null, is reported\n" + 
		"	^^^^^^^\n" + 
		"Potential null pointer access: The variable potNull may be null at this location\n" + 
		"----------\n" + 
		"5. ERROR in test\\PotNullInLoop.java (at line 58)\n" + 
		"	potNull.hashCode(); // OK: pot null, is reported\n" + 
		"	^^^^^^^\n" + 
		"Potential null pointer access: The variable potNull may be null at this location\n" + 
		"----------\n"
	);
}

