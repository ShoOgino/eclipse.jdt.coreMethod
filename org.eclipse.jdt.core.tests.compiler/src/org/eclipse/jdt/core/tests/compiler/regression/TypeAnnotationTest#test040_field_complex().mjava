	public void test040_field_complex() throws Exception {
		this.runConformTest(
			new String[] {
				"X.java",
				"import java.util.Map;\n" +
				"import java.util.List;\n" +
				"public class X {\n" +
				"	@H String @E[] @F[] @G[] field;\n" +
				"	@A Map<@B String, @C List<@D Object>> field2;\n" +
				"	@A Map<@B String, @H String @E[] @F[] @G[]> field3;\n" +
				"}",
				"A.java",
				"import java.lang.annotation.Target;\n" +
				"import static java.lang.annotation.ElementType.*;\n" +
				"import java.lang.annotation.Retention;\n" +
				"import static java.lang.annotation.RetentionPolicy.*;\n" +
				"@Target(TYPE_USE)\n" +
				"@Retention(RUNTIME)\n" +
				"@interface A {\n" +
				"	String value() default \"default\";\n" +
				"}\n",
				"B.java",
				"import java.lang.annotation.Target;\n" +
				"import static java.lang.annotation.ElementType.*;\n" +
				"import java.lang.annotation.Retention;\n" +
				"import static java.lang.annotation.RetentionPolicy.*;\n" +
				"@Target(TYPE_USE)\n" +
				"@Retention(CLASS)\n" +
				"@interface B {\n" +
				"	int value() default -1;\n" +
				"}",
				"C.java",
				"import java.lang.annotation.Target;\n" +
				"import static java.lang.annotation.ElementType.*;\n" +
				"import java.lang.annotation.Retention;\n" +
				"import static java.lang.annotation.RetentionPolicy.*;\n" +
				"@Target(TYPE_USE)\n" +
				"@Retention(RUNTIME)\n" +
				"@interface C {\n" +
				"	char value() default '-';\n" +
				"}\n",
				"D.java",
				"import java.lang.annotation.Target;\n" +
				"import static java.lang.annotation.ElementType.*;\n" +
				"import java.lang.annotation.Retention;\n" +
				"import static java.lang.annotation.RetentionPolicy.*;\n" +
				"@Target(TYPE_USE)\n" +
				"@Retention(RUNTIME)\n" +
				"@interface D {\n" +
				"	String value() default \"default\";\n" +
				"}\n",
				"E.java",
				"import java.lang.annotation.Target;\n" +
				"import static java.lang.annotation.ElementType.*;\n" +
				"import java.lang.annotation.Retention;\n" +
				"import static java.lang.annotation.RetentionPolicy.*;\n" +
				"@Target(TYPE_USE)\n" +
				"@Retention(CLASS)\n" +
				"@interface E {\n" +
				"	int value() default -1;\n" +
				"}",
				"F.java",
				"import java.lang.annotation.Target;\n" +
				"import static java.lang.annotation.ElementType.*;\n" +
				"import java.lang.annotation.Retention;\n" +
				"import static java.lang.annotation.RetentionPolicy.*;\n" +
				"@Target(TYPE_USE)\n" +
				"@Retention(RUNTIME)\n" +
				"@interface F {\n" +
				"	char value() default '-';\n" +
				"}\n",
				"G.java",
				"import java.lang.annotation.Target;\n" +
				"import static java.lang.annotation.ElementType.*;\n" +
				"import java.lang.annotation.Retention;\n" +
				"import static java.lang.annotation.RetentionPolicy.*;\n" +
				"@Target(TYPE_USE)\n" +
				"@Retention(CLASS)\n" +
				"@interface G {\n" +
				"	int value() default -1;\n" +
				"}",
				"H.java",
				"import java.lang.annotation.Target;\n" +
				"import static java.lang.annotation.ElementType.*;\n" +
				"import java.lang.annotation.Retention;\n" +
				"import static java.lang.annotation.RetentionPolicy.*;\n" +
				"@Target(TYPE_USE)\n" +
				"@Retention(RUNTIME)\n" +
				"@interface H {\n" +
				"	char value() default '-';\n" +
				"}\n",
		},
		"");
		String expectedOutput =
			"  // Field descriptor #6 [[[Ljava/lang/String;\n" +
			"  java.lang.String[][][] field;\n" +
			"    RuntimeVisibleTypeAnnotations: \n" +
			"      #11 @H(\n" +
			"        target type = 0x13 FIELD\n" +
			"        location = [ARRAY, ARRAY, ARRAY]\n" +
			"      )\n" +
			"      #12 @F(\n" +
			"        target type = 0x13 FIELD\n" +
			"        location = [ARRAY]\n" +
			"      )\n" +
			"    RuntimeInvisibleTypeAnnotations: \n" +
			"      #8 @E(\n" +
			"        target type = 0x13 FIELD\n" +
			"      )\n" +
			"      #9 @G(\n" +
			"        target type = 0x13 FIELD\n" +
			"        location = [ARRAY, ARRAY]\n" +
			"      )\n" +
			"  \n" +
			"  // Field descriptor #14 Ljava/util/Map;\n" +
			"  // Signature: Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Ljava/lang/Object;>;>;\n" +
			"  java.util.Map field2;\n" +
			"    RuntimeVisibleTypeAnnotations: \n" +
			"      #18 @A(\n" +
			"        target type = 0x13 FIELD\n" +
			"      )\n" +
			"      #19 @C(\n" +
			"        target type = 0x13 FIELD\n" +
			"        location = [TYPE_ARGUMENT(1)]\n" +
			"      )\n" +
			"      #20 @D(\n" +
			"        target type = 0x13 FIELD\n" +
			"        location = [TYPE_ARGUMENT(1), TYPE_ARGUMENT(0)]\n" +
			"      )\n" +
			"    RuntimeInvisibleTypeAnnotations: \n" +
			"      #17 @B(\n" +
			"        target type = 0x13 FIELD\n" +
			"        location = [TYPE_ARGUMENT(0)]\n" +
			"      )\n" +
			"  \n" +
			"  // Field descriptor #14 Ljava/util/Map;\n" +
			"  // Signature: Ljava/util/Map<Ljava/lang/String;[[[Ljava/lang/String;>;\n" +
			"  java.util.Map field3;\n" +
			"    RuntimeVisibleTypeAnnotations: \n" +
			"      #18 @A(\n" +
			"        target type = 0x13 FIELD\n" +
			"      )\n" +
			"      #11 @H(\n" +
			"        target type = 0x13 FIELD\n" +
			"        location = [TYPE_ARGUMENT(1), ARRAY, ARRAY, ARRAY]\n" +
			"      )\n" +
			"      #12 @F(\n" +
			"        target type = 0x13 FIELD\n" +
			"        location = [TYPE_ARGUMENT(1), ARRAY]\n" +
			"      )\n" +
			"    RuntimeInvisibleTypeAnnotations: \n" +
			"      #17 @B(\n" +
			"        target type = 0x13 FIELD\n" +
			"        location = [TYPE_ARGUMENT(0)]\n" +
			"      )\n" +
			"      #8 @E(\n" +
			"        target type = 0x13 FIELD\n" +
			"        location = [TYPE_ARGUMENT(1)]\n" +
			"      )\n" +
			"      #9 @G(\n" +
			"        target type = 0x13 FIELD\n" +
			"        location = [TYPE_ARGUMENT(1), ARRAY, ARRAY]\n" +
			"      )\n";
		checkDisassembledClassFile(OUTPUT_DIR + File.separator + "X.class", "X", expectedOutput, ClassFileBytesDisassembler.SYSTEM);
	}

