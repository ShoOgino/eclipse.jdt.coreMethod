// null analysis -- static fields
// to check static field access from fieldReference and QualifiedReference when the type is parameterized
public void testBug247564i_6() {
	if (this.complianceLevel < ClassFileConstants.JDK1_5) return;
	Map compilerOptions = getCompilerOptions();
	compilerOptions.put(CompilerOptions.OPTION_ReportNonStaticAccessToStatic, CompilerOptions.IGNORE);
	this.runNegativeTest(
		true,
		new String[] {
			"X.java",
			"public class X<T> {\n" +
			"  static Object field0;\n" +
			"  static Object field1;\n" +
			"  Y getY(){ return new Y();}\n" +
			"  X getX() { return new X();}\n" +
			"  void goo(Object var) {\n" +
			"    	if (new Y().getY().yField1 == null && X.field0.toString() == \"\"){}\n" +  // no warn
			"    	if (getY().yField1 == null && X.field0.toString() == \"\"){}\n" +  // no warn
			"    	if (getY().yField1 == null && this.field0.toString() == \"\"){}\n" +  // no warn
			"    	if (new Y().getX().field0 == null && X.field0.toString() == \"\"){}\n" +   // warn
			"    	if (getX().field0 == null && X.field0.toString() == \"\"){}\n" +   // warn
			"    	if (getX().field0 == null && this.field0.toString() == \"\"){}\n" +   // warn
			"    	if (getX().field0 == null && getX().field0.toString() == \"\"){}\n" +   // no warn, getX() wipes out null info
			// fields from other types, don't warn
			"    	if (new Y().getY().yField1 == null && Y.yField1.toString() == \"\"){}\n" +  // no warn
			"    	if (getY().yField1 == null && Y.yField1.toString() == \"\"){}\n" +  // no warn
			"    	if (getX().field0 == null && Y.yField1.toString() == \"\"){}\n" +  // no warn
			"  }\n" +
			"}\n" +
			"class Y<K>{\n" +
			"	Y getY(){ return new Y();}\n" +
			"	X getX(){ return new X();}\n" +
			"   static Object yField1;\n" +
			"}"},
		null,
		compilerOptions,
		"----------\n" + 
		"1. ERROR in X.java (at line 10)\n" + 
		"	if (new Y().getX().field0 == null && X.field0.toString() == \"\"){}\n" + 
		"	                                       ^^^^^^\n" + 
		"Potential null pointer access: The field field0 may be null at this location\n" + 
		"----------\n" + 
		"2. ERROR in X.java (at line 11)\n" + 
		"	if (getX().field0 == null && X.field0.toString() == \"\"){}\n" + 
		"	                               ^^^^^^\n" + 
		"Potential null pointer access: The field field0 may be null at this location\n" + 
		"----------\n" + 
		"3. ERROR in X.java (at line 12)\n" + 
		"	if (getX().field0 == null && this.field0.toString() == \"\"){}\n" + 
		"	                                  ^^^^^^\n" + 
		"Potential null pointer access: The field field0 may be null at this location\n" + 
		"----------\n",
		JavacTestOptions.Excuse.EclipseWarningConfiguredAsError
	);
}

