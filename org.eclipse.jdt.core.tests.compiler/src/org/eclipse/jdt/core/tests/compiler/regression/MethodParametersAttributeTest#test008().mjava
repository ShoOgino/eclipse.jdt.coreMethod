	public void test008() throws Exception {
		// Test that the code generator can emit synthetic and mandated names, just to match javac as closely as possibly
		
		this.runParameterNameTest(
			"ParameterNames.java",
			this.originalSource);

		ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
		String path = OUTPUT_DIR + File.separator + "ParameterNames$1.class";
		byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(path));
		String actualOutput =
			disassembler.disassemble(
				classFileBytes,
				"\n",
				ClassFileBytesDisassembler.DETAILED);

		String nestHost = "";
		CompilerOptions options = new CompilerOptions(getCompilerOptions());
		if (options.complianceLevel >= ClassFileConstants.JDK11) {
			nestHost = "\n" +
		               "Nest Host: #36 ParameterNames\n";
		}
		String expectedOutput =
			"// Compiled from ParameterNames.java (" + this.versionString + ", super bit)\n" + 
			"// Signature: Ljava/lang/Object;Ljava/util/concurrent/Callable<Ljava/lang/String;>;\n" + 
			"class ParameterNames$1 implements java.util.concurrent.Callable {\n" + 
			"  \n" + 
			"  // Field descriptor #8 LParameterNames;\n" + 
			"  final synthetic ParameterNames this$0;\n" + 
			"  \n" + 
			"  // Field descriptor #10 Ljava/lang/String;\n" + 
			"  private final synthetic java.lang.String val$finalMessage;\n" + 
			"  \n" + 
			"  // Method descriptor #12 (LParameterNames;Ljava/lang/String;)V\n" + 
			"  // Stack: 2, Locals: 3\n" + 
			"  ParameterNames$1(ParameterNames this$0, java.lang.String val$finalMessage);\n" + 
			"     0  aload_0 [this]\n" + 
			"     1  aload_1 [this$0]\n" + 
			"     2  putfield ParameterNames$1.this$0 : ParameterNames [14]\n" + 
			"     5  aload_0 [this]\n" + 
			"     6  aload_2 [val$finalMessage]\n" + 
			"     7  putfield ParameterNames$1.val$finalMessage : java.lang.String [16]\n" + 
			"    10  aload_0 [this]\n" + 
			"    11  invokespecial java.lang.Object() [18]\n" + 
			"    14  return\n" + 
			"      Line numbers:\n" + 
			"        [pc: 0, line: 9]\n" + 
			"      Method Parameters:\n" + 
			"        final mandated this$0\n" + 
			"        final synthetic val$finalMessage\n" + 
			"  \n" + 
			"  // Method descriptor #24 ()Ljava/lang/String;\n" + 
			"  // Stack: 1, Locals: 1\n" + 
			"  public java.lang.String call() throws java.lang.Exception;\n" + 
			"    0  aload_0 [this]\n" + 
			"    1  getfield ParameterNames$1.val$finalMessage : java.lang.String [16]\n" + 
			"    4  areturn\n" + 
			"      Line numbers:\n" + 
			"        [pc: 0, line: 11]\n" + 
			"  \n" + 
			"  // Method descriptor #28 ()Ljava/lang/Object;\n" + 
			"  // Stack: 1, Locals: 1\n" + 
			"  public bridge synthetic java.lang.Object call() throws java.lang.Exception;\n" + 
			"    0  aload_0 [this]\n" + 
			"    1  invokevirtual ParameterNames$1.call() : java.lang.String [29]\n" + 
			"    4  areturn\n" + 
			"      Line numbers:\n" + 
			"        [pc: 0, line: 1]\n" + 
			"\n" + 
			"  Inner classes:\n" + 
			"    [inner class info: #1 ParameterNames$1, outer class info: #0\n" + 
			"     inner name: #0, accessflags: 0 default]\n" + 
			"  Enclosing Method: #36  #38 ParameterNames.makeInnerWithCapture(Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/Callable;\n" +
			nestHost +
			"}"	;

		assertSubstring(actualOutput, expectedOutput);
	}

