	// https://bugs.eclipse.org/bugs/show_bug.cgi?id=386259 variation.
	public void test010() {
		Map customOptions = getCompilerOptions();
		customOptions.put(CompilerOptions.OPTION_ReportUnnecessaryTypeCheck, CompilerOptions.ERROR);
		runNegativeTest(
				// test directory preparation
				true /* flush output directory */,
				new String[] { /* test files */
						"X.java",
						"import java.lang.invoke.MethodHandle;\n" +
						"import java.lang.invoke.MethodHandles;\n" +
						"import java.lang.invoke.MethodType;\n" +
						"public class X {\n" +
						"  public static void main(String[] args) throws Throwable {\n" +
						"    String str = \"test\";\n" +
						"    MethodHandle mh = MethodHandles.lookup().findVirtual(String.class, \"toString\", \n" +
						"        MethodType.methodType(String.class));\n" +
						"    Object actual = (Object) mh.invoke(str);\n" +
						"    assert \"test\".equals(actual);\n" +
						"    Zork z;\n" +
						"  }\n" +
						"}\n"
				},
				// compiler options
				null /* no class libraries */,
				customOptions /* custom options */,
				// compiler results
				"----------\n" + 
				"1. ERROR in X.java (at line 9)\n" + 
				"	Object actual = (Object) mh.invoke(str);\n" + 
				"	                ^^^^^^^^^^^^^^^^^^^^^^^\n" + 
				"Unnecessary cast from Object to Object\n" + 
				"----------\n" + 
				"2. ERROR in X.java (at line 11)\n" + 
				"	Zork z;\n" + 
				"	^^^^\n" + 
				"Zork cannot be resolved to a type\n" + 
				"----------\n",
				// javac options
				JavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);
	}

