/*
 * Break the loop
 */
public void test020() {
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" + 
			"    \n" + 
			"	public static void main(String[] args) {\n" + 
			"		int[] tab = new int[] {};\n" + 
			"		System.out.print(\"SUC\");\n" + 
			"		loop: for (final int e : tab) {\n" + 
			"			System.out.print(\"1x\");\n" +
			"			continue loop;\n" +
			"		}\n" + 
			"		System.out.println(\"CESS\");\n" + 
			"	}\n" + 
			"}\n",
		},
		"SUCCESS");
	
	String expectedOutput =
		"  // Method descriptor  #15 ([Ljava/lang/String;)V\n" + 
		"  // Stack: 2, Locals: 5\n" + 
		"  public static void main(String[] args);\n" + 
		"     0  iconst_0\n" + 
		"     1  newarray int [10]\n" + 
		"     3  astore_1 [tab]\n" + 
		"     4  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\n" + 
		"     7  ldc <String \"SUC\"> [23]\n" + 
		"     9  invokevirtual java/io/PrintStream.print(Ljava/lang/String;)V [29]\n" + 
		"    12  aload_1 [tab]\n" + 
		"    13  astore [local_4]\n" + 
		"    15  iconst_0\n" + 
		"    16  istore_2 [local_2]\n" + 
		"    17  aload [local_4]\n" + 
		"    19  arraylength\n" + 
		"    20  istore_3 [local_3]\n" + 
		"    21  goto 35\n" + 
		"    24  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\n" + 
		"    27  ldc <String \"1x\"> [31]\n" + 
		"    29  invokevirtual java/io/PrintStream.print(Ljava/lang/String;)V [29]\n" + 
		"    32  iinc 2 1 [local_2]\n" + 
		"    35  iload_2 [local_2]\n" + 
		"    36  iload_3 [local_3]\n" + 
		"    37  if_icmplt 24\n" + 
		"    40  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\n" + 
		"    43  ldc <String \"CESS\"> [33]\n" + 
		"    45  invokevirtual java/io/PrintStream.println(Ljava/lang/String;)V [36]\n" + 
		"    48  return\n" + 
		"      Line numbers:\n" + 
		"        [pc: 0, line: 4]\n" + 
		"        [pc: 4, line: 5]\n" + 
		"        [pc: 12, line: 6]\n" + 
		"        [pc: 24, line: 7]\n" + 
		"        [pc: 35, line: 6]\n" + 
		"        [pc: 40, line: 10]\n" + 
		"        [pc: 48, line: 11]\n" + 
		"      Local variable table:\n" + 
		"        [pc: 0, pc: 49] local: args index: 0 type: [Ljava/lang/String;\n" + 
		"        [pc: 4, pc: 49] local: tab index: 1 type: [I\n";
	
	try {
		File f = new File(OUTPUT_DIR + File.separator + "X.class");
		byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
		ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
		String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
		int index = result.indexOf(expectedOutput);
		if (index == -1 || expectedOutput.length() == 0) {
			System.out.println(Util.displayString(result, 3));
		}
		if (index == -1) {
			assertEquals("Wrong contents", expectedOutput, result);
		}
	} catch (org.eclipse.jdt.core.util.ClassFormatException e) {
		assertTrue(false);
	} catch (IOException e) {
		assertTrue(false);
	}
}

