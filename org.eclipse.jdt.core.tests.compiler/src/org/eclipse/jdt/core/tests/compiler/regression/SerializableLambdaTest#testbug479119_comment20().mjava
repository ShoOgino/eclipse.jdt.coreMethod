	public void testbug479119_comment20() {
		this.runConformTest(
			new String[]{
				"Testbed.java",
				"import java.io.ByteArrayInputStream;\n" +
				"import java.io.ByteArrayOutputStream;\n" +
				"import java.io.IOException;\n" +
				"import java.io.ObjectInputStream;\n" +
				"import java.io.ObjectOutputStream;\n" +
				"import java.io.Serializable;\n" +
				"interface FI extends Serializable{\n" +
				"	void run(Testbed args);\n" +
				"}\n" +
				"interface IF extends Serializable{\n" +
				"	void run();\n" +
				"}\n" +
				"public class Testbed implements Serializable{\n" +
				"	String f;\n" +
				"	Testbed(String str) {\n" +
				"		f = str;\n" +
				"	}\n" +
				"	void test() throws IOException, ClassNotFoundException {\n" +
				"		accept(Testbed::foo);\n" +
				"		accept(this::foo);		\n" +
				"	}\n" +
				"	void foo() {\n" +
				"		System.out.println(this.f);\n" +
				"	}\n" +
				"	void accept(FI fi) {\n" +
				"		fi.run(this);\n" +
				"	}\n" +
				"	void accept(IF i) {\n" +
				"		i.run();\n" +
				"	}\n" +
				"	public static void main(String[] args) throws ClassNotFoundException, IOException {\n" +
				"		Testbed t = new Testbed(\"IF\");\n" +
				"		Testbed t2 = new Testbed(\"FI\");\n" +
				"		IF i = t::foo;\n" +
				"		FI f = Testbed::foo;\n" +
				"		ByteArrayOutputStream debug=new ByteArrayOutputStream();\n" +
				"		try(ObjectOutputStream oo=new ObjectOutputStream(debug))\n" +
				"		{\n" +
				"			oo.writeObject(i);\n" +
				"		}\n" +
				"		try(ObjectInputStream oi=new ObjectInputStream(new ByteArrayInputStream(debug.toByteArray())))\n" +
				"		{\n" +
				"			IF x = (IF)oi.readObject();\n" +
				"			t.accept(x);\n" +
				"		}\n" +
				"		debug=new ByteArrayOutputStream();\n" +
				"		try(ObjectOutputStream oo=new ObjectOutputStream(debug))\n" +
				"		{\n" +
				"			oo.writeObject(f);\n" +
				"		}\n" +
				"		try(ObjectInputStream oi=new ObjectInputStream(new ByteArrayInputStream(debug.toByteArray())))\n" +
				"		{\n" +
				"			FI x = (FI)oi.readObject();\n" +
				"			t2.accept(x);\n" +
				"		}\n" +
				"	}\n" +
				"}"
		},
		"IF\n" +
		"FI",
		null,true,
		new String[]{"-Ddummy"});
	}

