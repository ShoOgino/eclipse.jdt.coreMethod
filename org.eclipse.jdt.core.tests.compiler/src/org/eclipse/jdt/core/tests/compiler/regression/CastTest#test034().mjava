/*
 * check non insertion of checkcast for unnecessary cast to interfaces
 * (same test case as test033)
 */
public void test034() {
	this.runConformTest(
		new String[] {
			"X.java",
			"import java.util.ArrayList;\n" + 
			"import java.util.List;\n" + 
			"\n" + 
			"public class X {\n" + 
			"    public static void main(String [] args) {\n" + 
			"        List list = (List) new ArrayList();\n" + 
			"        list = (List) new ArrayList();\n" + 
			"        \n" + 
			"        ArrayList alist = new ArrayList();\n" + 
			"        List list2 = (List) alist;\n" + 
			"        list2 = (List) alist;\n" + 
			"        \n" + 
			"       System.out.println(\"SUCCESS\");\n" +
			"    }\n" + 
			"}\n",
		},
		"SUCCESS");

	ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
	String actualOutput = null;
	try {
		byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +"X.class"));
		actualOutput =
			disassembler.disassemble(
				classFileBytes,
				"\n",
				ClassFileBytesDisassembler.DETAILED); 
	} catch (org.eclipse.jdt.core.util.ClassFormatException e) {
		assertTrue("ClassFormatException", false);
	} catch (IOException e) {
		assertTrue("IOException", false);
	}

	String expectedOutput =
		"  // Method descriptor  #15 ([Ljava/lang/String;)V\n" + 
		"  // Stack: 2, Locals: 4\n" + 
		"  public static void main(String[] args);\n" + 
		"     0  new #17 java/util/ArrayList\n" + 
		"     3  dup\n" + 
		"     4  invokespecial #18 <Method java/util/ArrayList.<init>()V>\n" + 
		"     7  astore_1\n" + 
		"     8  new #17 java/util/ArrayList\n" + 
		"    11  dup\n" + 
		"    12  invokespecial #18 <Method java/util/ArrayList.<init>()V>\n" + 
		"    15  astore_1\n" + 
		"    16  new #17 java/util/ArrayList\n" + 
		"    19  dup\n" + 
		"    20  invokespecial #18 <Method java/util/ArrayList.<init>()V>\n" + 
		"    23  astore_2\n" + 
		"    24  aload_2\n" + 
		"    25  astore_3\n" + 
		"    26  aload_2\n" + 
		"    27  astore_3\n" + 
		"    28  getstatic #24 <Field java/lang/System.out Ljava/io/PrintStream;>\n" + 
		"    31  ldc #26 <String \"SUCCESS\">\n" + 
		"    33  invokevirtual #32 <Method java/io/PrintStream.println(Ljava/lang/String;)V>\n" + 
		"    36  return\n" + 
		"      Line numbers:\n" + 
		"        [pc: 0, line: 6]\n" + 
		"        [pc: 8, line: 7]\n" + 
		"        [pc: 16, line: 9]\n" + 
		"        [pc: 24, line: 10]\n" + 
		"        [pc: 26, line: 11]\n" + 
		"        [pc: 28, line: 13]\n" + 
		"        [pc: 36, line: 14]\n" + 
		"      Local variable table:\n" + 
		"        [pc: 0, pc: 37] local: args index: 0 type: [Ljava/lang/String;\n" + 
		"        [pc: 8, pc: 37] local: list index: 1 type: Ljava/util/List;\n" + 
		"        [pc: 24, pc: 37] local: alist index: 2 type: Ljava/util/ArrayList;\n" + 
		"        [pc: 26, pc: 37] local: list2 index: 3 type: Ljava/util/List;\n";
	if (actualOutput.indexOf(expectedOutput) == -1){
		System.out.println(Util.displayString(actualOutput, 2));
	}
	assertTrue("unexpected bytecode sequence", actualOutput.indexOf(expectedOutput) != -1);
}

