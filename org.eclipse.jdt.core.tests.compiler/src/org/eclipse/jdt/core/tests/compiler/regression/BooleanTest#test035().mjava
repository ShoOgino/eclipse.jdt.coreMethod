//https://bugs.eclipse.org/bugs/show_bug.cgi?id=117451 - variation
public void test035() throws Exception {
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" + 
			"	static float f0;\n" + 
			"	public static void main(String[] args) {\n" + 
			"		System.out.println((X.f0 > 0 || true) == false);\n" + 
			"	} \n" + 
			"}\n",
		},
		"false");
	// 	ensure optimized boolean codegen sequence
	String expectedOutput =
		"  // Method descriptor #17 ([Ljava/lang/String;)V\n" + 
		"  // Stack: 2, Locals: 1\n" + 
		"  public static void main(java.lang.String[] args);\n" + 
		"    0  getstatic java.lang.System.out : java.io.PrintStream [18]\n" + 
		"    3  iconst_0\n" + 
		"    4  invokevirtual java.io.PrintStream.println(boolean) : void [24]\n" + 
		"    7  return\n" + 
		"      Line numbers:\n" + 
		"        [pc: 0, line: 4]\n" + 
		"        [pc: 7, line: 5]\n" + 
		"      Local variable table:\n" + 
		"        [pc: 0, pc: 8] local: args index: 0 type: java.lang.String[]\n";
	
	File f = new File(OUTPUT_DIR + File.separator + "X.class");
	byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
	ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
	String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
	int index = result.indexOf(expectedOutput);
	if (index == -1 || expectedOutput.length() == 0) {
		System.out.println(Util.displayString(result, 3));
	}
	if (index == -1) {
		assertEquals("Wrong contents", expectedOutput, result);
	}	
}

