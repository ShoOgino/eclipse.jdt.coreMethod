	public void test008_methodTypeParameter() throws Exception {
		this.runConformTest(
			new String[] {
				"A.java",
				"import java.lang.annotation.Target;\n" +
				"import static java.lang.annotation.ElementType.*;\n" +
				"import java.lang.annotation.Retention;\n" +
				"import static java.lang.annotation.RetentionPolicy.*;\n" +
				"@Target(TYPE_PARAMETER)\n" +
				"@Retention(RUNTIME)\n" +
				"@interface A {\n" +
				"	String value() default \"default\";\n" +
				"}\n",
				"B.java",
				"import java.lang.annotation.Target;\n" +
				"import static java.lang.annotation.ElementType.*;\n" +
				"import java.lang.annotation.Retention;\n" +
				"import static java.lang.annotation.RetentionPolicy.*;\n" +
				"@Target(TYPE_PARAMETER)\n" +
				"@Retention(CLASS)\n" +
				"@interface B {\n" +
				"	int value() default -1;\n" +
				"}",
				"X.java",
				"public class X {\n" +
				"	<T1, @A @B(3) T2> void foo(T1 t1,T2 t2) {}\n" +
				"}",
		},
		"");
		String expectedOutput =
			"    RuntimeVisibleTypeAnnotations: \n" +
			"      #29 @A(\n" +
			"        target type = 0x1 METHOD_TYPE_PARAMETER\n" +
			"        type parameter index = 1\n" +
			"      )\n" +
			"    RuntimeInvisibleTypeAnnotations: \n" +
			"      #25 @B(\n" +
			"        #26 value=(int) 3 (constant type)\n" +
			"        target type = 0x1 METHOD_TYPE_PARAMETER\n" +
			"        type parameter index = 1\n" +
			"      )\n";
		checkDisassembledClassFile(OUTPUT_DIR + File.separator + "X.class", "X", expectedOutput, ClassFileBytesDisassembler.SYSTEM);
	}

