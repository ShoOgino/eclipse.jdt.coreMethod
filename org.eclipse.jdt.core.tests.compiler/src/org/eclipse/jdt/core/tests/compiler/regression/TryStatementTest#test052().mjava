//https://bugs.eclipse.org/bugs/show_bug.cgi?id=114894 - variation
public void test052() {
	this.runConformTest(
			new String[] {
				"X.java",
				"public class X {\n" + 
				"	public static void main(String argv[]) {\n" + 
				"		try {\n" + 
				"			for (int i = 0; i < 0; i++)\n" + 
				"				do ;  while (true);\n" + 
				"		} catch(Exception e) {\n" + 
				"		}\n" + 
				"	} \n" + 
				"}\n",
			},
			"");
	
	String expectedOutput = new CompilerOptions(this.getCompilerOptions()).complianceLevel < ClassFileConstants.JDK1_6
		?	"  // Method descriptor #15 ([Ljava/lang/String;)V\n" + 
			"  // Stack: 1, Locals: 2\n" + 
			"  public static void main(java.lang.String[] argv);\n" + 
			"     0  iconst_0\n" + 
			"     1  istore_1 [i]\n" + 
			"     2  goto 8\n" + 
			"     5  goto 5\n" + 
			"     8  iload_1 [i]\n" + 
			"     9  iflt 5\n" + 
			"    12  goto 16\n" + 
			"    15  astore_1\n" + 
			"    16  return\n" + 
			"      Exception Table:\n" + 
			"        [pc: 0, pc: 12] -> 15 when : java.lang.Exception\n" + 
			"      Line numbers:\n" + 
			"        [pc: 0, line: 4]\n" + 
			"        [pc: 5, line: 5]\n" + 
			"        [pc: 8, line: 4]\n" + 
			"        [pc: 15, line: 6]\n" + 
			"        [pc: 16, line: 8]\n" + 
			"      Local variable table:\n" + 
			"        [pc: 0, pc: 17] local: argv index: 0 type: java.lang.String[]\n" + 
			"        [pc: 2, pc: 12] local: i index: 1 type: int\n"
		:	
			"  // Method descriptor #15 ([Ljava/lang/String;)V\n" + 
			"  // Stack: 1, Locals: 2\n" + 
			"  public static void main(java.lang.String[] argv);\n" + 
			"     0  iconst_0\n" + 
			"     1  istore_1 [i]\n" + 
			"     2  goto 8\n" + 
			"     5  goto 5\n" + 
			"     8  iload_1 [i]\n" + 
			"     9  iflt 5\n" + 
			"    12  goto 16\n" + 
			"    15  astore_1\n" + 
			"    16  return\n" + 
			"      Exception Table:\n" + 
			"        [pc: 0, pc: 12] -> 15 when : java.lang.Exception\n" + 
			"      Line numbers:\n" + 
			"        [pc: 0, line: 4]\n" + 
			"        [pc: 5, line: 5]\n" + 
			"        [pc: 8, line: 4]\n" + 
			"        [pc: 15, line: 6]\n" + 
			"        [pc: 16, line: 8]\n" + 
			"      Local variable table:\n" + 
			"        [pc: 0, pc: 17] local: argv index: 0 type: java.lang.String[]\n" + 
			"        [pc: 2, pc: 12] local: i index: 1 type: int\n" + 
			"      Stack map table: number of frames 4\n" + 
			"        [pc: 5, append: {int}]\n" + 
			"        [pc: 8, same]\n" + 
			"        [pc: 15, full, stack: {java.lang.Exception}, locals: {java.lang.String[]}]\n" + 
			"        [pc: 16, same]\n";
	
	try {
		File f = new File(OUTPUT_DIR + File.separator + "X.class");
		byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
		ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
		String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
		int index = result.indexOf(expectedOutput);
		if (index == -1 || expectedOutput.length() == 0) {
			System.out.println(Util.displayString(result, 3));
		}
		if (index == -1) {
			assertEquals("Wrong contents", expectedOutput, result);
		}
	} catch (org.eclipse.jdt.core.util.ClassFormatException e) {
		assertTrue(false);
	} catch (IOException e) {
		assertTrue(false);
	}	
}

