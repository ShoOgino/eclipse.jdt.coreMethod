// Bug 361407 - Resource leak warning when resource is assigned to a field outside of constructor
// a closeable is not assigned to a field - constructor vs. method
public void test061l3() throws IOException {
	Map options = getCompilerOptions();
	options.put(CompilerOptions.OPTION_ReportUnclosedCloseable, CompilerOptions.ERROR);
	options.put(CompilerOptions.OPTION_ReportPotentiallyUnclosedCloseable, CompilerOptions.ERROR);
	this.runNegativeTest(
		new String[] {
			"xy/Leaks.java",
			"package xy;\n" +
			"\n" +
			"import java.io.FileInputStream;\n" +
			"import java.io.IOException;\n" +
			"\n" +
			"public class Leaks {\n" +
			"\n" +
			"    Leaks(String name) throws IOException {\n" +
			"        FileInputStream fileInputStream= new FileInputStream(name);\n" +
			"        Objects.hashCode(fileInputStream);\n" +
			"        \n" +
			"        init(name);\n" +
			"    }\n" +
			"    void init(String name) throws IOException {\n" +
			"        FileInputStream fileInputStream= new FileInputStream(name);\n" +
			"        Objects.hashCode(fileInputStream);\n" +
			"    }\n" +
			"}\n" +
			"class Objects {\n" + // mock java.util.Objects (@since 1.7).
			"    static int hashCode(Object o) { return 13; }\n" +
			"}\n"
		},
		"----------\n" +
		"1. ERROR in xy\\Leaks.java (at line 9)\n" +
		"	FileInputStream fileInputStream= new FileInputStream(name);\n" +
		"	                ^^^^^^^^^^^^^^^\n" +
		"Potential resource leak: \'fileInputStream\' may not be closed\n" +
		"----------\n" +
		"2. ERROR in xy\\Leaks.java (at line 15)\n" +
		"	FileInputStream fileInputStream= new FileInputStream(name);\n" +
		"	                ^^^^^^^^^^^^^^^\n" +
		"Potential resource leak: \'fileInputStream\' may not be closed\n" +
		"----------\n",
		null,
		true,
		options);
}

