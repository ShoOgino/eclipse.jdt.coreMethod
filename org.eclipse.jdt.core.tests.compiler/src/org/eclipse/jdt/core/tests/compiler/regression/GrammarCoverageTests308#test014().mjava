	// ArrayCreationWithoutArrayInitializer ::= 'new' PrimitiveType DimWithOrWithOutExprs
	// ArrayCreationWithArrayInitializer ::= 'new' PrimitiveType DimWithOrWithOutExprs ArrayInitializer
	public void test014() throws Exception {
		this.runNegativeTest(
				new String[] {
					"X.java",
					"public class X  {\n" +
					"    public static void main(String [] args) {\n" +
					"        int i [] = new @Marker int @Marker [4];\n" +
					"        int j [] = new @Marker int @Marker [] { 10 };\n" +
					"        Zork z;\n" +
					"    }\n" +
					"}\n"
				},
				"----------\n" +
				"1. ERROR in X.java (at line 3)\n" +
				"	int i [] = new @Marker int @Marker [4];\n" +
				"	                ^^^^^^\n" +
				"Marker cannot be resolved to a type\n" +
				"----------\n" +
				"2. ERROR in X.java (at line 3)\n" +
				"	int i [] = new @Marker int @Marker [4];\n" +
				"	                            ^^^^^^\n" +
				"Marker cannot be resolved to a type\n" +
				"----------\n" +
				"3. ERROR in X.java (at line 4)\n" +
				"	int j [] = new @Marker int @Marker [] { 10 };\n" +
				"	                ^^^^^^\n" +
				"Marker cannot be resolved to a type\n" +
				"----------\n" +
				"4. ERROR in X.java (at line 4)\n" +
				"	int j [] = new @Marker int @Marker [] { 10 };\n" +
				"	                            ^^^^^^\n" +
				"Marker cannot be resolved to a type\n" +
				"----------\n" +
				"5. ERROR in X.java (at line 5)\n" +
				"	Zork z;\n" +
				"	^^^^\n" +
				"Zork cannot be resolved to a type\n" +
				"----------\n");
	}

