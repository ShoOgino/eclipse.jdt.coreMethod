// extending java.lang.annotation.Annotation
public void test218() {
    this.runNegativeTest(
        new String[] {
            "X.java",
			"import java.lang.annotation.Annotation;\n" + 
			"import java.lang.reflect.Constructor;\n" + 
			"public class X {\n" + 
			"  void bar(Constructor constructor, Class<Ann> ann) {\n" + 
			"    constructor.getAnnotation(ann).message();\n" + 
			"  }\n" + 
			"}\n" + 
			"@interface Ann {\n" + 
			"  String message();\n" + 
			"}\n",
        },
		"----------\n" + 
		"1. WARNING in X.java (at line 4)\n" + 
		"	void bar(Constructor constructor, Class<Ann> ann) {\n" + 
		"	         ^^^^^^^^^^^\n" + 
		"Constructor is a raw type. References to generic type Constructor<T> should be parameterized\n" + 
		"----------\n" + 
		"2. WARNING in X.java (at line 5)\n" + 
		"	constructor.getAnnotation(ann).message();\n" + 
		"	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
		"Type safety: The method getAnnotation(Class) belongs to the raw type Constructor. References to generic type Constructor<T> should be parameterized\n" + 
		"----------\n" + 
		"3. ERROR in X.java (at line 5)\n" + 
		"	constructor.getAnnotation(ann).message();\n" + 
		"	                               ^^^^^^^\n" + 
		"The method message() is undefined for the type Annotation\n" + 
		"----------\n",
		JavacTestOptions.JavacHasABug.JavacBug6400189);
}

