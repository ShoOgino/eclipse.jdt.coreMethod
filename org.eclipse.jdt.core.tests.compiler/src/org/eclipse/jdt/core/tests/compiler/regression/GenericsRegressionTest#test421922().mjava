// https://bugs.eclipse.org/bugs/show_bug.cgi?id=421922, [1.8][compiler] Varargs & Overload - Align to JLS8
public void test421922() {
	runNegativeTest(
		new String[] {
			"X.java",
			"import p.*;\n" +
			"public class X  {\n" +
			"    public static void main(String argv[]) {\n" +
			"        new B().foo(null, null);\n" +
			"    }\n" +
			"}\n",

			"p/B.java",
			"package p;\n" +
			"interface A {\n" +
			"}\n" +
			"public class B implements A {\n" +
			"    public <T extends A> void foo(T ... o) { System.out.println(\"PGMB\"); }\n" +
			"    public void foo(Object... o) { System.out.println(\"MB\"); }\n" +
			"}\n",
		},
		this.complianceLevel < ClassFileConstants.JDK1_7 ?
		"----------\n" +
		"1. ERROR in X.java (at line 4)\n" +
		"	new B().foo(null, null);\n" +
		"	        ^^^\n" +
		"The method foo(T...) of type B is not applicable as the formal varargs element type T is not accessible here\n" +
		"----------\n" :
			"----------\n" +
			"1. ERROR in X.java (at line 4)\n" +
			"	new B().foo(null, null);\n" +
			"	        ^^^\n" +
			"The method foo(T...) of type B is not applicable as the formal varargs element type T is not accessible here\n" +
			"----------\n" +
			"----------\n" +
			"1. WARNING in p\\B.java (at line 5)\n" +
			"	public <T extends A> void foo(T ... o) { System.out.println(\"PGMB\"); }\n" +
			"	                                    ^\n" +
			"Type safety: Potential heap pollution via varargs parameter o\n" +
			"----------\n");
}

