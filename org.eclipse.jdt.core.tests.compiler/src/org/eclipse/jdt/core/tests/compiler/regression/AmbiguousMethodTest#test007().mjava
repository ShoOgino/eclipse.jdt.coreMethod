	//https://bugs.eclipse.org/bugs/show_bug.cgi?id=129056
	public void test007() {
		this.runNegativeTest(
			new String[] {
				"B.java",
				"public class B {\n" +
				"   public static void main(String[] args) {\n" +
				"   	new M().foo(new Integer(1), 2);\n" +
				"   	new N().foo(new Integer(1), 2);\n" +
				"   }\n" +
				"}" +
				"interface I { void foo(Number arg1, Number arg2); }\n" +
				"class M {\n" +
				"	public void foo(int arg1, int arg2) {}\n" +
				"	public void foo(Number arg1, Number arg2) {}\n" +
				"}\n" +
				"class N implements I {\n" +
				"	public void foo(int arg1, int arg2) {}\n" +
				"	public void foo(Number arg1, Number arg2) {}\n" +
				"}\n"
			},
			"----------\n" +
			"1. ERROR in B.java (at line 3)\r\n" +
			"	new M().foo(new Integer(1), 2);\r\n" +
			"	        ^^^\n" +
			"The method foo(int, int) is ambiguous for the type M\n" +
			"----------\n" +
			"2. ERROR in B.java (at line 4)\r\n" +
			"	new N().foo(new Integer(1), 2);\r\n" +
			"	        ^^^\n" +
			"The method foo(int, int) is ambiguous for the type N\n" +
			"----------\n"
			// reference to foo is ambiguous, both method foo(int,int) in M and method foo(java.lang.Number,java.lang.Number) in M match
			// reference to foo is ambiguous, both method foo(int,int) in N and method foo(java.lang.Number,java.lang.Number) in N match
		);
	}

