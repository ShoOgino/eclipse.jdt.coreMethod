	public void testBug549855c() {
		File outputDirectory = new File(OUTPUT_DIR);
		Util.flushDirectoryContent(outputDirectory);
		String out = "bin";
		String directory = OUTPUT_DIR + File.separator + "src";
		String moduleLoc = directory + File.separator + "mod.one";
		List<String> files = new ArrayList<>();
		writeFileCollecting(files, moduleLoc, "module-info.java",
						"/**\n" +
						" @provides p.I1\n" +
						" @uses java.util.Currency\n" +
						" @provides p.I1\n" +
						" @uses java.util.Currency\n" +
						" */\n" +
						"module mod.one { \n" +
						" exports p;\n" +
						" provides p.I1 with p.P1;\n" +
						" uses java.util.Currency;\n" +
						"}");
		writeFileCollecting(files, moduleLoc + File.separator + "p", "I1.java",
				"package p;\n" +
				"/**\n" +
				" * interface I1\n" +
				" */\n" +
				"public interface I1 {\n" +
				"	/**\n" +
				"	 * Method foo\n" +
				"    * @return int\n" +
				"    */\n" +
				"	public int foo();\n" +
				"}");
		writeFileCollecting(files, moduleLoc + File.separator + "p", "P1.java",
				"package p;\n" +
				"/**\n" +
				" * class P1\n" +
				" */\n" +
				"public class P1 implements I1 {\n" +
				"	@Override\n" +
				"	public int foo() { return 0; }\n" +
				"}");

		StringBuilder buffer = new StringBuilder();
		buffer.append("-d " + OUTPUT_DIR + File.separator + out )
			.append(" -9 ")
			.append(" -enableJavadoc ")
			.append(" -err:allJavadoc ")
			.append(" -classpath \"")
			.append(Util.getJavaClassLibsAsString())
			.append("\" ")
			.append(" -warn:-unused")
			.append(" --module-source-path " + "\"" + directory + "\" ")
			.append(moduleLoc + File.separator + "module-info.java ")
			.append(moduleLoc + File.separator + "p" + File.separator + "I1.java ")
			.append(moduleLoc + File.separator + "p" + File.separator + "P1.java");

		runNegativeModuleTest(
				new String[0],
				buffer.toString(),
				"",
				"----------\n" +
				"1. ERROR in ---OUTPUT_DIR_PLACEHOLDER---/src/mod.one/module-info.java (at line 4)\n" +
				"	@provides p.I1\n" +
				"	          ^^^^\n" +
				"Javadoc: Duplicate provides tag\n" +
				"----------\n" +
				"2. ERROR in ---OUTPUT_DIR_PLACEHOLDER---/src/mod.one/module-info.java (at line 5)\n" +
				"	@uses java.util.Currency\n" +
				"	      ^^^^^^^^^^^^^^^^^^\n" +
				"Javadoc: Duplicate uses tag\n" +
				"----------\n" +
				"2 problems (2 errors)\n",
				false,
				"duplicate tags",
				OUTPUT_DIR,
				JavacTestOptions.JavacHasABug.NoWarningForDuplicateJavadocTag);
	}

