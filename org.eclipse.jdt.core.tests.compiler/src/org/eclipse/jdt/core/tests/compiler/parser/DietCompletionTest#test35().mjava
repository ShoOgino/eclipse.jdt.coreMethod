/*
 * Invalid completion inside a unicode
 *
 * -- compute the unicode representation for a given string --
   [ String str = "IOEx";
	StringBuffer buffer = new StringBuffer("\"");
	for (int i = 0; i < str.length(); i++){
		String hex = Integer.toHexString(str.charAt(i));
		buffer.append("\\u0000".substring(0, 6-hex.length()));
		buffer.append(hex);
	}
	buffer.append("\"");
	buffer.toString()
	]
 */
public void test35() {

	String str =
		"import java.io.*;									\n" +
		"													\n" +
		"public class X extends IOE\\u0078ception {			\n" +
		"}													\n";

	String completeBehind = "IOE\\u00";
	String expectedCompletionNodeToString = NONE;
	String completionIdentifier = NONE;
	String expectedUnitDisplayString = "";
	String expectedReplacedSource = NONE;
	String testName = "<complete inside unicode>";

	try {
		int cursorLocation = str.indexOf(completeBehind) + completeBehind.length() - 1;
		this.checkDietParse(
			str.toCharArray(),
			cursorLocation,
			expectedCompletionNodeToString,
			expectedUnitDisplayString,
			completionIdentifier,
			expectedReplacedSource,
			testName);
		assertTrue("failed to detect invalid cursor location", false);
	} catch(InvalidCursorLocation e){
		assertEquals("invalid cursor location: ", e.irritant, InvalidCursorLocation.NO_COMPLETION_INSIDE_UNICODE);
	}
}

