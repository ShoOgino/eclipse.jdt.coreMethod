	public void test006() throws Exception {
		// Test that the code generator can emit the names, so the ClassFileReader may read them back
		
		this.runParameterNameTest(
			"X.java",
			"public class X {\n" +
			"    X(int wholeNumber) {\n" +
			"    }\n" +
			"    void foo(final float pluggedTheHoles, boolean yesItFloats) {\n" +
			"    }\n" +
			"}");

		try {
			ClassFileReader classFileReader = ClassFileReader.read(OUTPUT_DIR + File.separator + "X.class");
			IBinaryMethod[] methods = classFileReader.getMethods();
			assertNotNull("No methods", methods);
			assertEquals("Wrong size", 2, methods.length);
			assertEquals("Wrong name", "<init>", new String(methods[0].getSelector()));
			char[][] argumentNames = methods[0].getArgumentNames();
			assertEquals("<init> should have 1 parameter", 1, argumentNames.length);
			assertEquals("wholeNumber", new String(argumentNames[0]));
			assertEquals("Wrong name", "foo", new String(methods[1].getSelector()));
			assertEquals("pluggedTheHoles", new String(methods[1].getArgumentNames()[0]));
			assertEquals("yesItFloats", new String(methods[1].getArgumentNames()[1]));
		} catch (ClassFormatException e) {
			assertTrue(false);
		} catch (IOException e) {
			assertTrue(false);
		}
	}

