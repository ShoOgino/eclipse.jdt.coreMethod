@Override
void printDefinitions(BufferedWriter output, State[] consideredStates, String tab)
		throws IOException {
	// only difference with parent is that we print only half of possible
	// combinations
	int i, j, length = consideredStates.length;
	State result;
	// temporary store to support lexical sorting:
	String[] lines = new String[length * (length +1) / 2 ];
	int lCount = 0;
	for (i = 0; i < length; i++) {
		for (j = i; j < length; j++) {
			StringBuffer line = new StringBuffer();
			line.append(tab);
			line.append("// ");
			line.append(consideredStates[i].name);
			line.append(" + ");
			line.append(consideredStates[j].name);
			line.append(" => ");
			line.append(
				(result = (State) getResult(this.computedTransitions, consideredStates[i], consideredStates[j])).name);
			if (!result.symbolic ||
				result != getResult(this.initializedTransitions, consideredStates[i], consideredStates[j])) {
				line.append("\t\t CHECK");
			}
			line.append('\n');
			lines[lCount++] = line.toString();
		}
	}
	Arrays.sort(lines);
	for (i = 0; i < lCount; i++) {
		output.write(lines[i]);
	}
}

