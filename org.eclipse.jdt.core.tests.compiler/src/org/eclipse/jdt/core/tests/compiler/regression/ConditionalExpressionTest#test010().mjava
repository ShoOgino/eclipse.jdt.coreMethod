	// https://bugs.eclipse.org/bugs/show_bug.cgi?id=427207, - [1.8][bytecode] Runtime type problem: Instruction type does not match stack map
	// Reference poly conditional in poly invocation context 
	public void test010() {
		if (this.complianceLevel < ClassFileConstants.JDK1_8)
			return;
		this.runConformTest(
				new String[] {
						"X.java",
						"import java.util.function.Function;\n" +
						"public class X {\n" +
						"	public static void main(String[] args) {\n" +
						"		System.out.println(test(1, X::intToSome));\n" +
						"	}\n" +
						"	static <T> Some test(T value, Function<T, Some> f) {\n" +
						"		return id((value == null) ? new Nothing<>() : f.apply(value));\n" +
						"	}\n" +
						"	static <T> T id(T t) {\n" +
						"		return t;\n" +
						"	}\n" +
						"	static SomeInt intToSome(int i) {\n" +
						"		return new SomeInt();\n" +
						"	}\n" +
						"	static abstract class Some {}\n" +
						"	static class SomeInt extends Some {\n" +
						"	    public String toString() {\n" +
						"		return \"SomeInt instance\";\n" +
						"            }\n" +
						"        }\n" +
						"	static class Nothing<T> extends Some {}\n" +
						"}\n",
				},
				"SomeInt instance");
	}

