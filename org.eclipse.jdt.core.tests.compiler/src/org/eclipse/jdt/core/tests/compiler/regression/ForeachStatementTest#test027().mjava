// 68863 - missing local variable attribute after foreach statement
public void test027() throws Exception { 
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" + 
			"	public static void main(String[] args) {\n" + 
			"    Object[] array = {\n" + 
			"    };\n" + 			
			"		java.util.ArrayList i;	\n" + 
			"		for (Object object : array) {\n" + 
			"			if (args == null) {\n" + 
			"				i = null;\n" + 
			"				break;\n" + 
			"			}\n" + 
			"			return;\n" + 
			"		};\n" + 
			"		System.out.println(\"SUCCESS\");	\n" + 
			"	}\n" + 
			"}\n",
		},
		"SUCCESS");
		
	String expectedOutput =
		"  // Method descriptor #15 ([Ljava/lang/String;)V\n" + 
		"  // Stack: 2, Locals: 3\n" + 
		"  public static void main(java.lang.String[] args);\n" + 
		"     0  iconst_0\n" + 
		"     1  anewarray java.lang.Object [3]\n" + 
		"     4  astore_1 [array]\n" + 
		"     5  aload_1 [array]\n" + 
		"     6  dup\n" + 
		"     7  astore_2\n" + 
		"     8  arraylength\n" + 
		"     9  ifeq 22\n" + 
		"    12  aload_0 [args]\n" + 
		"    13  ifnonnull 21\n" + 
		"    16  aconst_null\n" + 
		"    17  pop\n" + 
		"    18  goto 22\n" + 
		"    21  return\n" + 
		"    22  getstatic java.lang.System.out : java.io.PrintStream [16]\n" + 
		"    25  ldc <String \"SUCCESS\"> [22]\n" + 
		"    27  invokevirtual java.io.PrintStream.println(java.lang.String) : void [24]\n" + 
		"    30  return\n" + 
		"      Line numbers:\n" + 
		"        [pc: 0, line: 3]\n" + 
		"        [pc: 5, line: 6]\n" + 
		"        [pc: 12, line: 7]\n" + 
		"        [pc: 16, line: 8]\n" + 
		"        [pc: 18, line: 9]\n" + 
		"        [pc: 21, line: 11]\n" + 
		"        [pc: 22, line: 13]\n" + 
		"        [pc: 30, line: 14]\n" + 
		"      Local variable table:\n" + 
		"        [pc: 0, pc: 31] local: args index: 0 type: java.lang.String[]\n" + 
		"        [pc: 5, pc: 31] local: array index: 1 type: java.lang.Object[]\n";
	
	File f = new File(OUTPUT_DIR + File.separator + "X.class");
	byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
	ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
	String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
	int index = result.indexOf(expectedOutput);
	if (index == -1 || expectedOutput.length() == 0) {
		System.out.println(Util.displayString(result, 3));
	}
	if (index == -1) {
		assertEquals("Wrong contents", expectedOutput, result);
	}
}

