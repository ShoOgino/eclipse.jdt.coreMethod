public void _test122() {
	CompilerOptions options = new CompilerOptions(getCompilerOptions());
	if (options.sourceLevel < ClassFileConstants.JDK1_5) {
		this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X {\n" +
				"	public static void main(String[] args) {\n" +
				"		new X().new M();\n" +
				"	}\n" +
				"	void foo(String s) { System.out.print(\"<foo:\"+s+\">\"); }\n" +
				"	class M {\n" +
				"		M(Runnable r) { r.run(); }\n" +
				"		M() {\n" +
				"			this(new Runnable() {\n" +
				"				{\n" +
				"					foo(\"0\");\n" +
				"					bar(\"0\");\n" +
				"				}\n" +
				"				public void run() {\n" +
				"				}\n" +
				"			});\n" +
				"		}\n" +
				"		void bar(String s) { System.out.print(\"<bar:\"+s+\">\"); }\n" +
				"	}\n" +
				"}\n",
			},
			"----------\n" +
			"cannot access foo(0)\n" +
			"----------\n" +
			"2. ERROR in X.java (at line 12)\n" +
			"	bar(\"0\");\n" +
			"	^^^\n" +
			"Cannot refer to an instance method while explicitly invoking a constructor\n" +
			"----------\n");
		return;
	}
	this.runNegativeTest(
		new String[] {
			"X.java",
			"public class X {\n" +
			"	public static void main(String[] args) {\n" +
			"		new X().new M();\n" +
			"	}\n" +
			"	void foo(String s) { System.out.print(\"<foo:\"+s+\">\"); }\n" +
			"	class M {\n" +
			"		M(Runnable r) { r.run(); }\n" +
			"		M() {\n" +
			"			this(new Runnable() {\n" +
			"				{\n" +
			"					foo(\"0\");\n" +
			"					bar(\"0\");\n" +
			"				}\n" +
			"				public void run() {\n" +
			"				}\n" +
			"			});\n" +
			"		}\n" +
			"		void bar(String s) { System.out.print(\"<bar:\"+s+\">\"); }\n" +
			"	}\n" +
			"}\n",
		},
		"----------\n" +
		"1. ERROR in X.java (at line 12)\n" +
		"	bar(\"0\");\n" +
		"	^^^\n" +
		"Cannot refer to an instance method while explicitly invoking a constructor\n" +
		"----------\n");
}

