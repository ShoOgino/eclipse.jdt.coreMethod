	public void test_redundant_nnbd_vs_module() {
		associateToModule("my.mod", "my.mod/p/X.java", "my.mod/p2/package-info.java");
		Runner runner = getDefaultRunner();
		runner.testFiles = new String[] {
				"my.mod/module-info.java",
				  "import org.eclipse.jdt.annotation.*;\n" +
				  "@NonNullByDefault\n" +
				  "module my.mod {\n" +
				  "		requires static org.eclipse.jdt.annotation;\n" +
				  "}\n",
				"my.mod/p/X.java",
				  "package p;\n" +
				  "@org.eclipse.jdt.annotation.NonNullByDefault\n" +
				  "public class X {\n" +
				  "		String f; // missing nn init\n" +
				  "    	void foo(String s) {\n" +
				  "        this.f = s; // OK\n" +
				  "    	}\n" +
				  "}\n",
				"my.mod/p/Y.java",
				  "package p;\n" +
				  "import static org.eclipse.jdt.annotation.DefaultLocation.*;\n" +
				  "@org.eclipse.jdt.annotation.NonNullByDefault(PARAMETER)\n" + // not: FIELD, due to details not redundant
				  "public class Y {\n" +
				  "		String f; // missing init is NOT a problem\n" +
				  "    	void foo(String s) {\n" +
				  "        this.f = s; // OK\n" +
				  "    	}\n" +
				  "}\n",
				"my.mod/p2/package-info.java",
				  "@org.eclipse.jdt.annotation.NonNullByDefault\n" +
				  "package p2;\n"
			};
		runner.expectedCompilerLog =
			"----------\n" + 
			"1. WARNING in my.mod\\p\\X.java (at line 2)\n" + 
			"	@org.eclipse.jdt.annotation.NonNullByDefault\n" + 
			"	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Nullness default is redundant with a default specified for the enclosing module my.mod\n" + 
			"----------\n" + 
			"2. ERROR in my.mod\\p\\X.java (at line 4)\n" + 
			"	String f; // missing nn init\n" + 
			"	       ^\n" + 
			"The @NonNull field f may not have been initialized\n" + 
			"----------\n" + 
			"----------\n" + 
			"1. WARNING in my.mod\\p2\\package-info.java (at line 1)\n" + 
			"	@org.eclipse.jdt.annotation.NonNullByDefault\n" + 
			"	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Nullness default is redundant with a default specified for the enclosing module my.mod\n" + 
			"----------\n";
		runner.runNegativeTest();
	}

