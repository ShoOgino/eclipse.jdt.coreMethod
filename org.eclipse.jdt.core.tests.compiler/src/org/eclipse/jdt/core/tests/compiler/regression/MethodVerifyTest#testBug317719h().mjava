// https://bugs.eclipse.org/bugs/show_bug.cgi?id=317719
public void testBug317719h() throws Exception {
	String output = this.complianceLevel == ClassFileConstants.JDK1_6 ?
			"----------\n" + 
			"1. WARNING in Test.java (at line 3)\n" + 
			"	public class Test<Key, Value> extends LinkedHashMap<Key, Collection<Value>> {\n" + 
			"	             ^^^^\n" + 
			"The serializable class Test does not declare a static final serialVersionUID field of type long\n" + 
			"----------\n" + 
			"2. WARNING in Test.java (at line 4)\n" + 
			"	public Collection<Value> put(Key k, Value v) { return null; }\n" + 
			"	                         ^^^^^^^^^^^^^^^^^^^\n" + 
			"Name clash: The method put(Key, Value) of type Test<Key,Value> has the same erasure as put(K, V) of type HashMap<K,V> but does not override it\n" + 
			"----------\n" + 
			"3. WARNING in Test.java (at line 5)\n" + 
			"	public Collection<Value> get(Key k) { return null; }\n" + 
			"	                         ^^^^^^^^^^\n" + 
			"Name clash: The method get(Key) of type Test<Key,Value> has the same erasure as get(Object) of type LinkedHashMap<K,V> but does not override it\n" + 
			"----------\n" + 
			"4. ERROR in Test.java (at line 6)\n" + 
			"	Zork z;\n" + 
			"	^^^^\n" + 
			"Zork cannot be resolved to a type\n" + 
			"----------\n":
				"----------\n" + 
				"1. WARNING in Test.java (at line 3)\n" + 
				"	public class Test<Key, Value> extends LinkedHashMap<Key, Collection<Value>> {\n" + 
				"	             ^^^^\n" + 
				"The serializable class Test does not declare a static final serialVersionUID field of type long\n" + 
				"----------\n" + 
				"2. ERROR in Test.java (at line 4)\n" + 
				"	public Collection<Value> put(Key k, Value v) { return null; }\n" + 
				"	                         ^^^^^^^^^^^^^^^^^^^\n" + 
				"Name clash: The method put(Key, Value) of type Test<Key,Value> has the same erasure as put(K, V) of type HashMap<K,V> but does not override it\n" + 
				"----------\n" + 
				"3. ERROR in Test.java (at line 5)\n" + 
				"	public Collection<Value> get(Key k) { return null; }\n" + 
				"	                         ^^^^^^^^^^\n" + 
				"Name clash: The method get(Key) of type Test<Key,Value> has the same erasure as get(Object) of type LinkedHashMap<K,V> but does not override it\n" + 
				"----------\n" + 
				"4. ERROR in Test.java (at line 6)\n" + 
				"	Zork z;\n" + 
				"	^^^^\n" + 
				"Zork cannot be resolved to a type\n" + 
				"----------\n";
	this.runNegativeTest(
		new String[] {
			"Test.java",
			"import java.util.Collection;\n" +
			"import java.util.LinkedHashMap;\n" +
			"public class Test<Key, Value> extends LinkedHashMap<Key, Collection<Value>> {\n" +
			"    public Collection<Value> put(Key k, Value v) { return null; }\n" +
			"	 public Collection<Value> get(Key k) { return null; }\n" +
			"	 Zork z;\n" +
			"}\n"
		},
		output);
}

