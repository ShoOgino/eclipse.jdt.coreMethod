public void test022() {
	this.runConformTest(
		new String[] {
			"X.java",
			"interface I {\n" + 
			"	void foo(String s) throws Exception;\n" + 
			"}\n" + 
			"public class X {\n" + 
			"	void zoo(I i) {}\n" + 
			"	void test() {\n" + 
			"		final boolean FALSE = false;\n" + 
			"		final boolean TRUE = true;\n" + 
			"		zoo((x) -> {while (TRUE) throw new Exception();});\n" + 
			"		zoo((x) -> {while (!FALSE) return ;});\n" + 
			"		zoo((x) -> {while (x.length() > 0) {\n" + 
			"			if(x.length() > 0) {return ;} else {break;}\n" + 
			"			}});\n" + 
			"		zoo((x) -> {while (x.length() > 0) {\n" + 
			"			if(x.length() > 0) {return ;}\n" + 
			"			}});\n" + 
			"		zoo((x) -> {while (true) {\n" + 
			"			if(x.length() > 0) {System.out.println();}\n" + 
			"			}});\n" + 
			"		zoo((x) -> {while (TRUE) {\n" + 
			"			if(x.length() > 0) {System.out.println();}\n" + 
			"			}});\n" + 
			"		zoo((x) -> {\n" + 
			"			int i = 100;\n" + 
			"			outer: while(x.length() > 0) {\n" + 
			"				inner: while(i > 0) {\n" + 
			"				if(--i > 50) {\n" + 
			"					break inner ;\n" + 
			"				}\n" + 
			"				if(i > 90) {\n" + 
			"					break outer;\n" + 
			"				}\n" + 
			"				return ;\n" + 
			"				}\n" + 
			"			}});\n" + 
			"	}\n" + 
			"}\n"
		});
}

