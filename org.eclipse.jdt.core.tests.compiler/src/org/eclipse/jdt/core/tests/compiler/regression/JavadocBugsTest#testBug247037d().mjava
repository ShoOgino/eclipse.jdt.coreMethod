// https://bugs.eclipse.org/bugs/show_bug.cgi?id=247037, make sure that we complain when @inheritdoc
// is used where it is outlawed by the specs. Test to verify that every bad use of @inheritDoc triggers
// a message from the compiler
public void testBug247037d() {
	this.reportMissingJavadocTags = CompilerOptions.ERROR;
	runNegativeTest(
		new String[] {
			"X.java",
			"public class X {\n" +
			"}\n" +
			"class Y extends X {\n" +
			"    /**\n" +
			"     * @param blah {@inheritDoc}\n" + // error n() doesn't override anything.
			"     * @return {@inheritDoc}\n" +  // error, n() doesn't override anything
			"     * @author {@inheritDoc}\n" +   // error, cannot be used in @author
			"     */\n" +
			"    public int n(int blah) {\n" +
			"		return 1;\n" +
			"    }\n" +
			"}\n"
		},
		"----------\n" +
		"1. ERROR in X.java (at line 5)\n" +
		"	* @param blah {@inheritDoc}\n" +
		"	                ^^^^^^^^^^\n" +
		"Javadoc: Unexpected tag\n" +
		"----------\n" +
		"2. ERROR in X.java (at line 6)\n" +
		"	* @return {@inheritDoc}\n" +
		"	            ^^^^^^^^^^\n" +
		"Javadoc: Unexpected tag\n" +
		"----------\n" +
		"3. ERROR in X.java (at line 7)\n" +
		"	* @author {@inheritDoc}\n" +
		"	            ^^^^^^^^^^\n" +
		"Javadoc: Unexpected tag\n" +
		"----------\n",
		JavacTestOptions.Excuse.EclipseWarningConfiguredAsError
	);
}

