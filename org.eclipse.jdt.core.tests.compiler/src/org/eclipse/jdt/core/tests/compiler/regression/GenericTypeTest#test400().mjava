	public void test400() {
		this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X <T> {\n" + 
				"    T t;\n" + 
				"    X(X<? extends T> xt){\n" + 
				"        this.t = xt.t;\n" + 
				"    }\n" + 
				"    public static void main(String[] args) {\n" + 
				"		X<? extends AX> x = new X<AX<Math>>(new X<AX<String>>(null));\n" + 
				"	}\n" + 
				"}\n" + 
				"class AX<P> {\n" + 
				"    P foo() { return null; }\n" + 
				"}",
			},
			"----------\n" + 
			"1. WARNING in X.java (at line 7)\n" + 
			"	X<? extends AX> x = new X<AX<Math>>(new X<AX<String>>(null));\n" + 
			"	            ^^\n" + 
			"AX is a raw type. References to generic type AX<P> should be parameterized\n" + 
			"----------\n" + 
			"2. ERROR in X.java (at line 7)\n" + 
			"	X<? extends AX> x = new X<AX<Math>>(new X<AX<String>>(null));\n" + 
			"	                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"The constructor X<AX<Math>>(X<AX<String>>) is undefined\n" + 
			"----------\n");	
	}		

