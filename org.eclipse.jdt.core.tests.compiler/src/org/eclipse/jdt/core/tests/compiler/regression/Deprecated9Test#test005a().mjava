	// Bug 354536 - compiling package-info.java still depends on the order of compilation units
	public void test005a() {
		Map<String, String> customOptions = new HashMap<>();
		customOptions.put(CompilerOptions.OPTION_ReportDeprecation, CompilerOptions.WARNING);
		customOptions.put(CompilerOptions.OPTION_ReportTerminalDeprecation, CompilerOptions.ERROR);
		this.runNegativeTest(
			true,
			new String[] {
				"p1/X.java",
				"package p1;\n" +
				"public class X {\n" +
				"    public static class Inner {" +
				"        public void foo() {}\n" +
				"    }\n" +
				"}\n",
				"p1/package-info.java",
				"@java.lang.Deprecated(forRemoval=true)\n" +
				"package p1;\n",
				"p2/C.java",
				"package p2;\n" +
				"public class C {\n" +
				"    void bar(p1.X.Inner a) {\n" +
				"        a.foo();\n" +
				"    }\n" +
				"}\n",
			},
			null, customOptions,
			"----------\n" +
			"1. ERROR in p2\\C.java (at line 3)\n" + 
			"	void bar(p1.X.Inner a) {\n" + 
			"	            ^\n" + 
			"The type X has been deprecated and marked for removal\n" + 
			"----------\n" + 
			"2. ERROR in p2\\C.java (at line 3)\n" + 
			"	void bar(p1.X.Inner a) {\n" + 
			"	              ^^^^^\n" + 
			"The type X.Inner has been deprecated and marked for removal\n" + 
			"----------\n" + 
			"3. ERROR in p2\\C.java (at line 4)\n" + 
			"	a.foo();\n" + 
			"	  ^^^^^\n" + 
			"The method foo() from the type X.Inner has been deprecated and marked for removal\n" + 
			"----------\n",
			JavacTestOptions.Excuse.EclipseWarningConfiguredAsError);
	}

