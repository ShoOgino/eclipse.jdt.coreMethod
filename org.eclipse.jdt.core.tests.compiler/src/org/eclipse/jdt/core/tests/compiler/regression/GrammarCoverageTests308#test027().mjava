	// ArrayCreationWithoutArrayInitializer ::= 'new' ClassOrInterfaceType DimWithOrWithOutExprs
	// ArrayCreationWithArrayInitializer ::= 'new' ClassOrInterfaceType DimWithOrWithOutExprs ArrayInitializer
	public void test027() throws Exception {
		this.runNegativeTest(
				new String[] {
					"X.java",
					"public class X  {\n" +
					"    public static void main(String [] args) {\n" +
					"        X [] x = new @Marker X @Marker [5];\n" +
					"        X [] x2 = new @Marker X @Marker [] { null };\n" +
					"        Zork z;\n" +
					"    }\n" +
					"}\n"				},
					"----------\n" + 
					"1. ERROR in X.java (at line 3)\n" + 
					"	X [] x = new @Marker X @Marker [5];\n" + 
					"	              ^^^^^^\n" + 
					"Marker cannot be resolved to a type\n" + 
					"----------\n" + 
					"2. ERROR in X.java (at line 3)\n" + 
					"	X [] x = new @Marker X @Marker [5];\n" + 
					"	                        ^^^^^^\n" + 
					"Marker cannot be resolved to a type\n" + 
					"----------\n" + 
					"3. ERROR in X.java (at line 4)\n" + 
					"	X [] x2 = new @Marker X @Marker [] { null };\n" + 
					"	               ^^^^^^\n" + 
					"Marker cannot be resolved to a type\n" + 
					"----------\n" + 
					"4. ERROR in X.java (at line 4)\n" + 
					"	X [] x2 = new @Marker X @Marker [] { null };\n" + 
					"	                         ^^^^^^\n" + 
					"Marker cannot be resolved to a type\n" + 
					"----------\n" + 
					"5. ERROR in X.java (at line 5)\n" + 
					"	Zork z;\n" + 
					"	^^^^\n" + 
					"Zork cannot be resolved to a type\n" + 
					"----------\n");
	}

