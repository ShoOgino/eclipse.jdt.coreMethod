	// TODO (philippe) check enum syntax recovery
	/**
	 * https://bugs.eclipse.org/bugs/show_bug.cgi?id=78914 - variation
	 */
	public void test056() {
		this.runConformTest(
			new String[] {
				"X.java",
				"public enum X {\n" +
				"    PLUS {\n" +
				"        double eval(double x, double y) { return x + y; }\n" +
				"    };\n" +
				"\n" +
				"    // Perform the arithmetic X represented by this constant\n" +
				"    abstract double eval(double x, double y);\n" +
				"}"
			},
			""
		);
		String expectedOutput = 
			"// Compiled from X.java (version 1.5 : 49.0, super bit)\n" + 
			"// Signature: Ljava/lang/Enum<LX;>;\n" + 
			"public abstract enum X extends java.lang.Enum {\n"; 

		ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
		String actualOutput = null;
		try {
			byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +"X.class"));
			actualOutput =
				disassembler.disassemble(
					classFileBytes,
					"\n",
					ClassFileBytesDisassembler.DETAILED); 
			int index = actualOutput.indexOf(expectedOutput);
			if (index == -1 || expectedOutput.length() == 0) {
				System.out.println(Util.displayString(actualOutput, 3));
			}
			if (index == -1) {
				assertEquals("Wrong contents", expectedOutput, actualOutput);
			}
		} catch (org.eclipse.jdt.core.util.ClassFormatException e) {
			assertTrue("ClassFormatException", false);
		} catch (IOException e) {
			assertTrue("IOException", false);
		}
	}

