	public void _test054_codeblocks_exceptionParameter() throws Exception {
		this.runConformTest(
			new String[] {
				"X.java",
				"import java.lang.annotation.Target;\n" + 
				"import java.lang.annotation.Retention;\n" + 
				"import static java.lang.annotation.ElementType.*;\n" + 
				"import static java.lang.annotation.RetentionPolicy.*;\n" + 
				"public class X {\n" + 
				"	public static void main(String[] args) {\n" + 
				"		try {\n" + 
				"			System.out.println(42);\n" + 
				"		} catch(@B(1) RuntimeException e) {\n" + 
				"			e.printStackTrace();\n" + 
				"		} catch(@B(2) Throwable t) {\n" + 
				"			t.printStackTrace();\n" + 
				"		}\n" + 
				"	}\n" + 
				"}",
				"B.java",
				"import java.lang.annotation.Target;\n" + 
				"import static java.lang.annotation.ElementType.*;\n" + 
				"import java.lang.annotation.Retention;\n" + 
				"import static java.lang.annotation.RetentionPolicy.*;\n" + 
				"@Target(TYPE_USE)\n" + 
				"@Retention(RUNTIME)\n" + 
				"@interface B {\n" + 
				"	int value() default 99;\n" + 
				"}\n",
		},
		"42");
		String expectedOutput =
			"    RuntimeVisibleTypeAnnotations: \n" + 
			"      #44 @B(\n" + 
			"        #45 value=(int) 1 (constant type)\n" + 
			"        target type = 0x42 EXCEPTION_PARAMETER\n" + 
			"        exception table index = 0\n" + 
			"      )\n" + 
			"      #44 @B(\n" + 
			"        #45 value=(int) 2 (constant type)\n" + 
			"        target type = 0x42 EXCEPTION_PARAMETER\n" + 
			"        exception table index = 1\n" + 
			"      )\n";
		checkDisassembledClassFile(OUTPUT_DIR + File.separator + "X.class", "X", expectedOutput, ClassFileBytesDisassembler.SYSTEM);
	}

