/*
 * Complete on variable behind closed scope
 */
public void test04() {

	String str = 
		"import java.io.*;							\n" + 
		"											\n" + 
		"public class X extends 					\n" +
		"	int foo(String str)						\n" +
		"		String variable = ;					\n" +
		"		{									\n" +
		"		 	String variableNotInScope;		\n" +
		"		}									\n" +
		"		foo(varia							\n"; 

	String completeBehind = "foo(var";
	String expectedCompletionNodeToString = "<CompleteOnName:var>";
	String completionIdentifier = "var";
	String expectedUnitDisplayString =
		"import java.io.*;\n" + 
		"public class X {\n" + 
		"  public X() {\n" + 
		"  }\n" + 
		"  int foo(String str) {\n" + 
		"    String variable;\n" + 
		"    <CompleteOnName:var>;\n" + 
		"  }\n" + 
		"}\n";
	String expectedReplacedSource = "varia";
	String testName = "<complete on variable behind closed scope>";

	int cursorLocation = str.indexOf(completeBehind) + completeBehind.length() - 1;
	this.checkMethodParse(
		str.toCharArray(), 
		cursorLocation, 
		expectedCompletionNodeToString,
		expectedUnitDisplayString,
		completionIdentifier,
		expectedReplacedSource,
		testName); 
}

