	public void acceptResult(CompilationResult cr) {
		if (cr.hasProblems() || cr.hasTasks()) {
			if (cr.hasErrors()) {
				this.hasErrors = true;
			}
			
			IProblem[] actualProblems = cr.getAllProblems();
			int actualProblemsCount = actualProblems == null ? 0 : actualProblems.length;
			ExpectedProblem[] problems = (ExpectedProblem[])this.expectedProblems.get(new String(cr.getFileName()));
			int expectedProblemsCount = problems == null ? 0 : problems.length;

			if (actualProblemsCount > 0 || expectedProblemsCount > 0) {
				boolean areMessagesDifferent = false;
				String message = new String(cr.getFileName()) + " does not have the correct errors.\nFound :\n";
				for (int i = 0; i < actualProblemsCount; i++) {
					message += "\t" + actualProblems[i].getMessage() + "\n";
					/* START PRINT */
/*					
					System.out.print(actualProblems[i].getID()+":");
					String[] pbArgs =  actualProblems[i].getArguments();
					for (int j = 0; j < pbArgs.length; j++){
						if (j > 0) System.out.print(", ");
						System.out.print(pbArgs[j]);
					}
					System.out.println();
*/					
					/* END PRINT */
					if (i < expectedProblemsCount 
						&& !actualProblems[i].getMessage().equals(problemFactory.getLocalizedMessage(problems[i].id, problems[i].arguments))) {
						areMessagesDifferent = true;
					System.out.print(actualProblems[i].getID()+":");
					String[] pbArgs =  actualProblems[i].getArguments();
					for (int j = 0; j < pbArgs.length; j++){
						if (j > 0) System.out.print(", ");
						System.out.print(pbArgs[j]);
					}
					System.out.println();
					}
				}
				if (expectedProblemsCount == 0) {
					message += "Expecting no problems.";
				} else {
					message += "Expecting :\n";
					for (int i = 0; i < expectedProblemsCount; i++) {
						ExpectedProblem expectedProblem = problems[i];
						message += "\t" + problemFactory.getLocalizedMessage(expectedProblem.id, expectedProblem.arguments) + "\n";
					}
				}
				assertTrue(message, (actualProblemsCount == expectedProblemsCount) && !areMessagesDifferent);
			}
		}
		outputClassFiles(cr);
	}

