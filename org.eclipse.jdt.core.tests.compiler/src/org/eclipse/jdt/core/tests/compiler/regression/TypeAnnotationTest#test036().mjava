//	// annotation on catch variable
//	public void test035() throws Exception {
//		this.runConformTest(
//			new String[] {
//				"X.java",
//				"import java.lang.annotation.Target;\n" + 
//				"import java.lang.annotation.Retention;\n" + 
//				"import static java.lang.annotation.ElementType.*;\n" + 
//				"import static java.lang.annotation.RetentionPolicy.*;\n" + 
//				"public class X {\n" + 
//				"	public static void main(String[] args) {\n" + 
//				"		@A Exception test = new Exception() {\n" +
//				"			private static final long serialVersionUID = 1L;\n" +
//				"			@Override\n" +
//				"			public String toString() {\n" +
//				"				return \"SUCCESS\";\n" +
//				"			}\n" +
//				"		};\n" + 
//				"		try {\n" + 
//				"			System.out.println(test);\n" + 
//				"		} catch(@A Exception e) {\n" + 
//				"			e.printStackTrace();\n" + 
//				"		}\n" + 
//				"	}\n" + 
//				"}",
//				"A.java",
//				"import java.lang.annotation.Target;\n" + 
//				"import static java.lang.annotation.ElementType.*;\n" + 
//				"import java.lang.annotation.Retention;\n" + 
//				"import static java.lang.annotation.RetentionPolicy.*;\n" + 
//				"@Target(TYPE_USE)\n" + 
//				"@Retention(RUNTIME)\n" + 
//				"@interface A {\n" + 
//				"	String value() default \"default\";\n" + 
//				"}\n",
//		},
//		"SUCCESS");
//		String expectedOutput =
//			"    RuntimeVisibleTypeAnnotations: \n" + 
//			"      #44 @A(\n" + 
//			"        target type = 0x8 LOCAL_VARIABLE\n" + 
//			"        local variable entries:\n" + 
//			"          [pc: 8, pc: 24] index: 1\n" + 
//			"      )\n" + 
//			"      #44 @A(\n" + 
//			"        target type = 0x8 LOCAL_VARIABLE\n" + 
//			"        local variable entries:\n" + 
//			"          [pc: 19, pc: 23] index: 2\n" + 
//			"      )\n";
//		checkDisassembledClassFile(OUTPUT_DIR + File.separator + "X.class", "X", expectedOutput, ClassFileBytesDisassembler.SYSTEM);
//	}
	// annotation on catch variable
	public void test036() throws Exception {
		this.runConformTest(
			new String[] {
				"X.java",
				"import java.lang.annotation.Target;\n" + 
				"import java.lang.annotation.Retention;\n" + 
				"import static java.lang.annotation.ElementType.*;\n" + 
				"import static java.lang.annotation.RetentionPolicy.*;\n" + 
				"public class X {\n" + 
				"	public static void main(String[] args) {\n" + 
				"		@B int j = 9;\n" + 
				"		try {\n" + 
				"			System.out.print(\"SUCCESS\" + j);\n" + 
				"		} catch(@A Exception e) {\n" + 
				"		}\n" + 
				"		@B int k = 3;\n" + 
				"		System.out.println(k);\n" + 
				"	}\n" + 
				"}",
				"A.java",
				"import java.lang.annotation.Target;\n" + 
				"import static java.lang.annotation.ElementType.*;\n" + 
				"import java.lang.annotation.Retention;\n" + 
				"import static java.lang.annotation.RetentionPolicy.*;\n" + 
				"@Target(TYPE_USE)\n" + 
				"@Retention(RUNTIME)\n" + 
				"@interface A {\n" + 
				"	String value() default \"default\";\n" + 
				"}\n",
				"B.java",
				"import java.lang.annotation.Target;\n" + 
				"import static java.lang.annotation.ElementType.*;\n" + 
				"import java.lang.annotation.Retention;\n" + 
				"import static java.lang.annotation.RetentionPolicy.*;\n" + 
				"@Target(TYPE_USE)\n" + 
				"@Retention(CLASS)\n" + 
				"@interface B {\n" + 
				"	String value() default \"default\";\n" + 
				"}\n",
		},
		"SUCCESS93");
		String expectedOutput =
			"    RuntimeInvisibleTypeAnnotations: \n" + 
			"      #56 @B(\n" + 
			"        target type = 0x8 LOCAL_VARIABLE\n" + 
			"        local variable entries:\n" + 
			"          [pc: 3, pc: 39] index: 1\n" + 
			"      )\n" + 
			"      #56 @B(\n" + 
			"        target type = 0x8 LOCAL_VARIABLE\n" + 
			"        local variable entries:\n" + 
			"          [pc: 31, pc: 39] index: 2\n" + 
			"      )\n";
		checkDisassembledClassFile(OUTPUT_DIR + File.separator + "X.class", "X", expectedOutput, ClassFileBytesDisassembler.SYSTEM);
	}

