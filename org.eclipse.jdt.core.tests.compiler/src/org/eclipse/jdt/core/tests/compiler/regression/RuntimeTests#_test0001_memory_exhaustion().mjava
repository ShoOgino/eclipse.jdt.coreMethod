// decided not to keep this active because of negative effects on the test
// series (the OOME potentially causing grief to others)
// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=217078
// memory exhaustion - try to allocate too big an instance
public void _test0001_memory_exhaustion() {
	runTest(
		new String[] { /* testFiles */
			"X.java",
			"public class X {\n" +
			"  public static void main(String args[]) {\n" +
			"    try {" +
			"      Y y = new Y(Integer.MAX_VALUE);\n" +
			"    }" +
			"    catch (OutOfMemoryError e) {\n" +
			"      System.out.println(\"SUCCESS\");\n" +
			"      return;\n" +
			"    }\n" +
			"    System.out.println(\"FAILURE\");\n" +
			"  }\n" +
			"}\n" +
			"class Y {\n" +
			"  long storage[];\n" +
			"  Y(int itemsNb) {\n" +
			"    storage = new long[itemsNb];\n" +
			"  }\n" +
			"}\n"},
		false /* expectingCompilerErrors */,
		"" /* expectedCompilerLog */,
		"SUCCESS" /* expectedOutputString */,
		null /* expectedErrorString - skip this because some JREs emit additional info to stderr in case of exception */,
		false /* forceExecution */,
		null /* classLib */,
		true /* shouldFlushOutputDirectory */,
		null /* vmArguments */,
		null /* customOptions */,
		null /* clientRequestor */,
		true /* skipJavac */);
}

