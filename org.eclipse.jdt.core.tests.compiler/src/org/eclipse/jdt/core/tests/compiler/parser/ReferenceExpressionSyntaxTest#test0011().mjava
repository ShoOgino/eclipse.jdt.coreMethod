	// Reference expression - X<T>.Name:: form, without type arguments.
	public void test0011() throws IOException {
		String source = 
				"interface I {\n" +
				"    void foo(Y<String>.Z z, int x);\n" +
				"}\n" +
				"public class X  {\n" +
				"    public static void main(String [] args) {\n" +
				"        I i = Y<String>.Z::foo;\n" +
				"        i.foo(new Y<String>().new Z(), 10); \n" +
				"    }\n" +
				"}\n" +
				"class Y<T> {\n" +
				"    class Z {\n" +
				"        void foo(int x) {\n" +
				"	    System.out.println(x);\n" +
				"        }\n" +
				"    }\n" +
				"}\n";
		String expectedUnitToString = 
				"interface I {\n" + 
				"  void foo(Y<String>.Z z, int x);\n" + 
				"}\n" + 
				"public class X {\n" + 
				"  public X() {\n" + 
				"    super();\n" + 
				"  }\n" + 
				"  public static void main(String[] args) {\n" + 
				"    I i = Y<String>.Z::foo;\n" + 
				"    i.foo(new Y<String>().new Z(), 10);\n" + 
				"  }\n" + 
				"}\n" + 
				"class Y<T> {\n" + 
				"  class Z {\n" + 
				"    Z() {\n" + 
				"      super();\n" + 
				"    }\n" + 
				"    void foo(int x) {\n" + 
				"      System.out.println(x);\n" + 
				"    }\n" + 
				"  }\n" + 
				"  Y() {\n" + 
				"    super();\n" + 
				"  }\n" + 
				"}\n";
		checkParse(CHECK_PARSER | CHECK_JAVAC_PARSER , source.toCharArray(), null, "test0011", expectedUnitToString);
	}

