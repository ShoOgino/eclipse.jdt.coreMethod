// https://bugs.eclipse.org/bugs/show_bug.cgi?id=427411, [1.8][generics] JDT reports type mismatch when using method that returns generic type
public void test427411() {
	runNegativeTest(
		new String[] {
			"X.java",
			"import java.util.List;\n" +
			"public class X {\n" +
			"\n" +
			"    public static void main() {\n" +

			"        List<Object> list = null;\n" +
			"        Object o = null;\n" +

			"        genericMethod(list, genericClassTransformer(genericClassFactory(o)));\n" +

			"        genericMethod(list, genericClassFactory(o)); // works\n" +

			"        GenericClass<Iterable<? super Object>> tempVariable = genericClassTransformer(genericClassFactory(o));\n" +

			"        GenericClass<Iterable<? super Object>> tempVariable2 = genericClassFactory(o); // works\n" +

			"    }\n" +

			"    private static <T> void genericMethod(T param1, GenericClass<? super T> param2) {\n" +
			"        throw new UnsupportedOperationException();\n" +
			"    }\n" +

			"    public static <T> GenericClass<Iterable<? super T>> genericClassFactory(T item) {\n" +
			"        throw new UnsupportedOperationException();\n" +
			"    }\n" +

			"    public static <T> GenericClass<T> genericClassTransformer(GenericClass<T> matcher) {\n" +
			"        throw new UnsupportedOperationException();\n" +
			"    }\n" +

			"    private static class GenericClass<T> {\n" +
			"    }\n" +
			"}\n"
		},
		"");
}

