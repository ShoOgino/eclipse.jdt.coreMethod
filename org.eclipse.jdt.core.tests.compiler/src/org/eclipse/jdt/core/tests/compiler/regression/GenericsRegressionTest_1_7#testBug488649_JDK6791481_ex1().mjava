public void testBug488649_JDK6791481_ex1() {
	int count = 1;
	runNegativeTest(
		new String[] {
			"Test.java",
			"class Test<X> {\n" + 
			"	X m(Class<X> c) {return null;}\n" + 
			"	X x = m((Class)String.class);\n" + 
			"}\n"
		},
		"----------\n" + 
		(this.complianceLevel >= ClassFileConstants.JDK1_8
			?
		(count++)+". ERROR in Test.java (at line 3)\n" + 
		"	X x = m((Class)String.class);\n" + 
		"	      ^^^^^^^^^^^^^^^^^^^^^^\n" + 
		"Type mismatch: cannot convert from Object to X\n" + // <- want to see this error, but at 1.7- we keep javac compatibility
		"----------\n"
			:
		""
		)+
		(count++)+". WARNING in Test.java (at line 3)\n" +
		"	X x = m((Class)String.class);\n" +
		"	        ^^^^^^^^^^^^^^^^^^^\n" + 
		"Type safety: The expression of type Class needs unchecked conversion to conform to Class<X>\n" + 
		"----------\n" + 
		(count++)+". WARNING in Test.java (at line 3)\n" +
		"	X x = m((Class)String.class);\n" + 
		"	         ^^^^^\n" + 
		"Class is a raw type. References to generic type Class<T> should be parameterized\n" + 
		"----------\n");
}

