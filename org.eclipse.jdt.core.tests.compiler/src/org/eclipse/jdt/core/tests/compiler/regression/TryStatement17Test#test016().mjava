// Test precise rethrow works good even in nested try catch block
public void test016() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			"public class X {\n" +
			"	public static void main(String[] args) {\n" +
			"		try {\n" +
			"			throw new DaughterOfFoo();\n"+
			"		} catch(Foo e) {\n" +
			"			try {\n" +
			"				throw new Foo();\n" +
			"			} catch (Foo e1) {\n" +
			"				try {\n" +
			"					throw e;\n" +
			"				} catch (SonOfFoo e2) {\n" +
			"			 		e1.printStackTrace();\n" +
			"				} catch (Foo e3) {}\n" +
			"			}\n" +
			"		}\n" +
			"	}\n" +
			"}\n"+
			"class Foo extends Exception {}\n"+
			"class SonOfFoo extends Foo {}\n"+
			"class DaughterOfFoo extends Foo {}\n"
		},
		"----------\n" +
		"1. ERROR in X.java (at line 11)\n" +
		"	} catch (SonOfFoo e2) {\n" +
		"	         ^^^^^^^^\n" +
		"Unreachable catch block for SonOfFoo. This exception is never thrown from the try statement body\n" +
		"----------\n" +
		"2. WARNING in X.java (at line 18)\n" +
		"	class Foo extends Exception {}\n" +
		"	      ^^^\n" +
		"The serializable class Foo does not declare a static final serialVersionUID field of type long\n" +
		"----------\n" +
		"3. WARNING in X.java (at line 19)\n" +
		"	class SonOfFoo extends Foo {}\n" +
		"	      ^^^^^^^^\n" +
		"The serializable class SonOfFoo does not declare a static final serialVersionUID field of type long\n" +
		"----------\n" +
		"4. WARNING in X.java (at line 20)\n" +
		"	class DaughterOfFoo extends Foo {}\n" +
		"	      ^^^^^^^^^^^^^\n" +
		"The serializable class DaughterOfFoo does not declare a static final serialVersionUID field of type long\n" +
		"----------\n");
}

