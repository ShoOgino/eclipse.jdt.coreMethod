	// type path tests.
	public void test042() throws Exception {
		this.runConformTest(
			new String[] {
				"X.java",
				"import java.lang.annotation.*;\n" +
				"import java.util.Map;\n" +
				"import java.util.List;\n" +
				"@Target(ElementType.TYPE_USE)\n" +
				"@interface A {\n" +
				"	String value() default \"default\";\n" +
				"}\n" +
				"@Target(ElementType.TYPE_USE)\n" +
				"@interface B {\n" +
				"	String value() default \"default\";\n" +
				"}\n" +
				"@Target(ElementType.TYPE_USE)\n" +
				"@interface C {\n" +
				"	String value() default \"default\";\n" +
				"}\n" +
				"@Target(ElementType.TYPE_USE)\n" +
				"@interface D {\n" +
				"	String value() default \"default\";\n" +
				"}\n" +
				"@Target(ElementType.TYPE_USE)\n" +
				"@interface E {\n" +
				"	String value() default \"default\";\n" +
				"}\n" +
				"class X {\n" +
				"	@A Map <@B ? extends @C String, @D List<@E Object>> f;\n" +
				"}\n",
		},
		"");
		String expectedOutput =
				"  java.util.Map f;\n" +
				"    RuntimeInvisibleTypeAnnotations: \n" +
				"      #10 @A(\n" +
				"        target type = 0x13 FIELD\n" +
				"      )\n" +
				"      #11 @B(\n" +
				"        target type = 0x13 FIELD\n" +
				"        location = [TYPE_ARGUMENT(0)]\n" +
				"      )\n" +
				"      #12 @C(\n" +
				"        target type = 0x13 FIELD\n" +
				"        location = [TYPE_ARGUMENT(0), WILDCARD]\n" +
				"      )\n" +
				"      #13 @D(\n" +
				"        target type = 0x13 FIELD\n" +
				"        location = [TYPE_ARGUMENT(1)]\n" +
				"      )\n" +
				"      #14 @E(\n" +
				"        target type = 0x13 FIELD\n" +
				"        location = [TYPE_ARGUMENT(1), TYPE_ARGUMENT(0)]\n" +
				"      )\n" +
				"  \n";
		checkDisassembledClassFile(OUTPUT_DIR + File.separator + "X.class", "X", expectedOutput, ClassFileBytesDisassembler.SYSTEM);
	}

