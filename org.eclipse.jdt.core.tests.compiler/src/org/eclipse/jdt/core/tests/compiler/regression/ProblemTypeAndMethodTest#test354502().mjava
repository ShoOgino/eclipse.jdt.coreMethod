// https://bugs.eclipse.org/bugs/show_bug.cgi?id=354502
// Anonymous class instantiation of a non-static member type, method can't be static
public void test354502() {
	if (this.complianceLevel < ClassFileConstants.JDK1_5)
		return;
	Runner runner = new Runner();
	runner.customOptions = getCompilerOptions();
	runner.customOptions.put(CompilerOptions.OPTION_ReportMethodCanBeStatic, CompilerOptions.ERROR);
	runner.customOptions.put(CompilerOptions.OPTION_ReportMethodCanBePotentiallyStatic, CompilerOptions.ERROR);
	runner.customOptions.put(CompilerOptions.OPTION_ReportUnusedPrivateMember, CompilerOptions.IGNORE);
	runner.testFiles =

		new String[] {
				"X.java",
				"public class X {\n" +
				"   public abstract class Abstract{}\n" +
				"   public static abstract class Abstract2{}\n" +
				"	private void method1() {\n" + 	// don't warn
				"		new Abstract() {};\n" +
				"	}\n" +
				"	private void method2() {\n" + 	// warn
				"		new Abstract2() {};\n" +
				"	}\n" +
				"}"
		};
	runner.expectedCompilerLog =
		"----------\n" +
		"1. ERROR in X.java (at line 7)\n" +
		"	private void method2() {\n" +
		"	             ^^^^^^^^^\n" +
		"The method method2() from the type X can be declared as static\n" +
		"----------\n";
	runner.javacTestOptions =
		JavacTestOptions.Excuse.EclipseWarningConfiguredAsError;
	runner.runNegativeTest();
}

