//https://bugs.eclipse.org/bugs/show_bug.cgi?id=190209 - variation
public void test063() {
	this.runConformTest(
			new String[] {
				"X.java",
				"final public class X {\n" + 
				"	final class MyClass {\n" + 
				"		/** @param s */\n" + 
				"		void foo(final String s) {\n" + 
				"			 /* do nothing */\n" + 
				"		}\n" + 
				"	}\n" + 
				"	void bar() {\n" + 
				"		try {\n" + 
				"			final MyClass myClass = new MyClass();\n" + 
				"			try {\n" + 
				"				return;\n" + 
				"			} catch (final Throwable ex) {\n" + 
				"				myClass.foo(this == null ? \"\" : \"\");\n" + 
				"			}\n" + 
				"			return;\n" + 
				"		} finally {\n" + 
				"			{ /* do nothing */ }\n" + 
				"		}\n" + 
				"	}\n" + 
				"	public static void main(String[] args) {\n" + 
				"		new X().bar();\n" + 
				"		System.out.print(\"SUCCESS\");\n" + 
				"	}\n" + 
				"}\n",
			},
			"SUCCESS");
	
	String expectedOutput = new CompilerOptions(this.getCompilerOptions()).complianceLevel <= ClassFileConstants.JDK1_4
		?	"  // Method descriptor #6 ()V\n" + 
			"  // Stack: 3, Locals: 5\n" + 
			"  void bar();\n" + 
			"     0  new X$MyClass [15]\n" + 
			"     3  dup\n" + 
			"     4  aload_0 [this]\n" + 
			"     5  invokespecial X$MyClass(X) [17]\n" + 
			"     8  astore_1 [myClass]\n" + 
			"     9  jsr 40\n" + 
			"    12  return\n" + 
			"    13  astore_2 [ex]\n" + 
			"    14  aload_1 [myClass]\n" + 
			"    15  aload_0 [this]\n" + 
			"    16  ifnonnull 24\n" + 
			"    19  ldc <String \"\"> [20]\n" + 
			"    21  goto 26\n" + 
			"    24  ldc <String \"\"> [20]\n" + 
			"    26  invokevirtual X$MyClass.foo(java.lang.String) : void [22]\n" + 
			"    29  goto 9\n" + 
			"    32  astore 4\n" + 
			"    34  jsr 40\n" + 
			"    37  aload 4\n" + 
			"    39  athrow\n" + 
			"    40  astore_3\n" + 
			"    41  ret 3\n" + 
			"      Exception Table:\n" + 
			"        [pc: 0, pc: 12] -> 32 when : any\n" + 
			"        [pc: 13, pc: 32] -> 32 when : any\n"
		:	
			"  // Method descriptor #6 ()V\n" + 
			"  // Stack: 3, Locals: 4\n" + 
			"  void bar();\n" + 
			"     0  new X$MyClass [15]\n" + 
			"     3  dup\n" + 
			"     4  aload_0 [this]\n" + 
			"     5  invokespecial X$MyClass(X) [17]\n" + 
			"     8  astore_1 [myClass]\n" + 
			"     9  return\n" + 
			"    10  astore_2 [ex]\n" + 
			"    11  aload_1 [myClass]\n" + 
			"    12  aload_0 [this]\n" + 
			"    13  ifnonnull 21\n" + 
			"    16  ldc <String \"\"> [20]\n" + 
			"    18  goto 23\n" + 
			"    21  ldc <String \"\"> [20]\n" + 
			"    23  invokevirtual X$MyClass.foo(java.lang.String) : void [22]\n" + 
			"    26  goto 9\n" + 
			"    29  astore_3\n" + 
			"    30  aload_3\n" + 
			"    31  athrow\n" + 
			"      Exception Table:\n" + 
			"        [pc: 0, pc: 9] -> 29 when : any\n" + 
			"        [pc: 10, pc: 29] -> 29 when : any\n";
	
	try {
		File f = new File(OUTPUT_DIR + File.separator + "X.class");
		byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
		ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
		String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
		int index = result.indexOf(expectedOutput);
		if (index == -1 || expectedOutput.length() == 0) {
			System.out.println(Util.displayString(result, 3));
		}
		if (index == -1) {
			assertEquals("Wrong contents", expectedOutput, result);
		}
	} catch (org.eclipse.jdt.core.util.ClassFormatException e) {
		assertTrue(false);
	} catch (IOException e) {
		assertTrue(false);
	}	
}

