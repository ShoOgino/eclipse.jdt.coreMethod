	// null analysis -- attributes
	// check that attributes that are protected against concurrent access
	// behave as locals when no call to further methods can affect them
	public void test0013_attribute_synchronized() {
		this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X {\n" + 
				"	 Object o;\n" + 
				"  public synchronized void foo() {\n" + 				
				"		 o = null;\n" + 
				"		 // bar();\n" + 
				"		 if (false) {\n" + 
				"			 o = new Object();\n" + 
				"		 }\n" + 
				"		 if (true) {\n" + 
				"			 //\n" + 
				"		 }\n" + 
				"		 else {\n" + 
				"			 o = new Object();\n" + 
				"		 }\n" + 
				"		 System.out.println(o.toString());\n" + 
				"	 }\n" + 
				"  void bar() {/* */}\n" + 				
				"}\n"},
			"----------\n" + 
			"1. WARNING in X.java (at line 15)\n" + 
			"	System.out.println(o.toString());\n" + 
			"	                   ^\n" + 
			"The field o is likely null; it was either set to null or checked for null when last used\n" + 
			"----------\n" 
		);
	}

