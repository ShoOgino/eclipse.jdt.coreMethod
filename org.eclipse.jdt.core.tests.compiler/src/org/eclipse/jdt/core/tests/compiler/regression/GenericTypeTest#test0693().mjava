// bound checks
public void test0693() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			"public class X<T extends Runnable> {\n" + 
			"	X<X<String>> x1;\n" + 
			"	X<? extends String> x2;\n" + 
			"}\n",
		},
		"----------\n" + 
		"1. ERROR in X.java (at line 2)\n" + 
		"	X<X<String>> x1;\n" + 
		"	  ^\n" + 
		"Bound mismatch: The type X<String> is not a valid substitute for the bounded parameter <T extends Runnable> of the type X<T>\n" + 
		"----------\n" + 
		"2. ERROR in X.java (at line 2)\n" + 
		"	X<X<String>> x1;\n" + 
		"	    ^^^^^^\n" + 
		"Bound mismatch: The type String is not a valid substitute for the bounded parameter <T extends Runnable> of the type X<T>\n" + 
		"----------\n" + 
		"3. ERROR in X.java (at line 3)\n" + 
		"	X<? extends String> x2;\n" + 
		"	  ^^^^^^^^^^^^^^^^\n" + 
		"Bound mismatch: The type ? extends String is not a valid substitute for the bounded parameter <T extends Runnable> of the type X<T>\n" + 
		"----------\n");
}	

