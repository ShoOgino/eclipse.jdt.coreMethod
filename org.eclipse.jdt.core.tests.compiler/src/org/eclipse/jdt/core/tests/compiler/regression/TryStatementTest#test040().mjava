//https://bugs.eclipse.org/bugs/show_bug.cgi?id=128705
public void test040() throws Exception {
	this.runConformTest(
			new String[] {
				"X.java",
				"public class X {\n" + 
				"	public void foo(boolean b) {\n" + 
				"		try { \n" + 
				"			if (b){ \n" + 
				"				int i = 0;\n" + 
				"				return;\n" + 
				"			} else {\n" + 
				"				Object o = null;\n" + 
				"				return;\n" + 
				"			}\n" + 
				"		} finally {\n" + 
				"			System.out.println(\"done\");\n" + 
				"		}\n" + 
				"	}\n" + 
				"	public static void main(String[] args) {\n" + 
				"		new X().foo(true);\n" + 
				"	}\n" + 
				"}\n",
			},
			"done");
	
	CompilerOptions compilerOptions = new CompilerOptions(this.getCompilerOptions());
	String expectedOutput = !compilerOptions.inlineJsrBytecode
		?	"  // Method descriptor #15 (Z)V\n" + 
			"  // Stack: 2, Locals: 5\n" + 
			"  public void foo(boolean b);\n" + 
			"     0  iload_1 [b]\n" + 
			"     1  ifeq 10\n" + 
			"     4  iconst_0\n" + 
			"     5  istore_2 [i]\n" + 
			"     6  jsr 23\n" + 
			"     9  return\n" + 
			"    10  aconst_null\n" + 
			"    11  astore_2 [o]\n" + 
			"    12  goto 6\n" + 
			"    15  astore 4\n" + 
			"    17  jsr 23\n" + 
			"    20  aload 4\n" + 
			"    22  athrow\n" + 
			"    23  astore_3\n" + 
			"    24  getstatic java.lang.System.out : java.io.PrintStream [16]\n" + 
			"    27  ldc <String \"done\"> [22]\n" + 
			"    29  invokevirtual java.io.PrintStream.println(java.lang.String) : void [24]\n" + 
			"    32  ret 3\n" + 
			"      Exception Table:\n" + 
			"        [pc: 0, pc: 9] -> 15 when : any\n" + 
			"        [pc: 10, pc: 15] -> 15 when : any\n" + 
			"      Line numbers:\n" + 
			"        [pc: 0, line: 4]\n" + 
			"        [pc: 4, line: 5]\n" + 
			"        [pc: 6, line: 6]\n" + 
			"        [pc: 10, line: 8]\n" + 
			"        [pc: 12, line: 9]\n" + 
			"        [pc: 15, line: 11]\n" + 
			"        [pc: 20, line: 13]\n" + 
			"        [pc: 23, line: 11]\n" + 
			"        [pc: 24, line: 12]\n" + 
			"        [pc: 32, line: 13]\n" + 
			"      Local variable table:\n" + 
			"        [pc: 0, pc: 34] local: this index: 0 type: X\n" + 
			"        [pc: 0, pc: 34] local: b index: 1 type: boolean\n" + 
			"        [pc: 6, pc: 10] local: i index: 2 type: int\n" + 
			"        [pc: 12, pc: 15] local: o index: 2 type: java.lang.Object\n"
	: 		null;
	if (expectedOutput == null) {
		if (compilerOptions.targetJDK == ClassFileConstants.JDK1_5) {
			expectedOutput = "  // Method descriptor #15 (Z)V\n" + 
			"  // Stack: 2, Locals: 4\n" + 
			"  public void foo(boolean b);\n" + 
			"     0  iload_1 [b]\n" + 
			"     1  ifeq 15\n" + 
			"     4  iconst_0\n" + 
			"     5  istore_2 [i]\n" + 
			"     6  getstatic java.lang.System.out : java.io.PrintStream [16]\n" + 
			"     9  ldc <String \"done\"> [22]\n" + 
			"    11  invokevirtual java.io.PrintStream.println(java.lang.String) : void [24]\n" + 
			"    14  return\n" + 
			"    15  aconst_null\n" + 
			"    16  astore_2 [o]\n" + 
			"    17  goto 6\n" + 
			"    20  astore_3\n" + 
			"    21  getstatic java.lang.System.out : java.io.PrintStream [16]\n" + 
			"    24  ldc <String \"done\"> [22]\n" + 
			"    26  invokevirtual java.io.PrintStream.println(java.lang.String) : void [24]\n" + 
			"    29  aload_3\n" + 
			"    30  athrow\n" + 
			"      Exception Table:\n" + 
			"        [pc: 0, pc: 6] -> 20 when : any\n" + 
			"        [pc: 15, pc: 20] -> 20 when : any\n" + 
			"      Line numbers:\n" + 
			"        [pc: 0, line: 4]\n" + 
			"        [pc: 4, line: 5]\n" + 
			"        [pc: 6, line: 12]\n" + 
			"        [pc: 14, line: 6]\n" + 
			"        [pc: 15, line: 8]\n" + 
			"        [pc: 17, line: 9]\n" + 
			"        [pc: 20, line: 11]\n" + 
			"        [pc: 21, line: 12]\n" + 
			"        [pc: 29, line: 13]\n" + 
			"      Local variable table:\n" + 
			"        [pc: 0, pc: 31] local: this index: 0 type: X\n" + 
			"        [pc: 0, pc: 31] local: b index: 1 type: boolean\n" + 
			"        [pc: 6, pc: 15] local: i index: 2 type: int\n" + 
			"        [pc: 17, pc: 20] local: o index: 2 type: java.lang.Object\n";
		} else {
			expectedOutput = "  // Method descriptor #15 (Z)V\n" + 
			"  // Stack: 2, Locals: 4\n" + 
			"  public void foo(boolean b);\n" + 
			"     0  iload_1 [b]\n" + 
			"     1  ifeq 15\n" + 
			"     4  iconst_0\n" + 
			"     5  istore_2 [i]\n" + 
			"     6  getstatic java.lang.System.out : java.io.PrintStream [16]\n" + 
			"     9  ldc <String \"done\"> [22]\n" + 
			"    11  invokevirtual java.io.PrintStream.println(java.lang.String) : void [24]\n" + 
			"    14  return\n" + 
			"    15  aconst_null\n" + 
			"    16  astore_2 [o]\n" + 
			"    17  getstatic java.lang.System.out : java.io.PrintStream [16]\n" + 
			"    20  ldc <String \"done\"> [22]\n" + 
			"    22  invokevirtual java.io.PrintStream.println(java.lang.String) : void [24]\n" + 
			"    25  return\n" + 
			"    26  astore_3\n" + 
			"    27  getstatic java.lang.System.out : java.io.PrintStream [16]\n" + 
			"    30  ldc <String \"done\"> [22]\n" + 
			"    32  invokevirtual java.io.PrintStream.println(java.lang.String) : void [24]\n" + 
			"    35  aload_3\n" + 
			"    36  athrow\n" + 
			"      Exception Table:\n" + 
			"        [pc: 0, pc: 6] -> 26 when : any\n" + 
			"        [pc: 15, pc: 17] -> 26 when : any\n" + 
			"      Line numbers:\n" + 
			"        [pc: 0, line: 4]\n" + 
			"        [pc: 4, line: 5]\n" + 
			"        [pc: 6, line: 12]\n" + 
			"        [pc: 14, line: 6]\n" + 
			"        [pc: 15, line: 8]\n" + 
			"        [pc: 17, line: 12]\n" + 
			"        [pc: 25, line: 9]\n" + 
			"        [pc: 26, line: 11]\n" + 
			"        [pc: 27, line: 12]\n" + 
			"        [pc: 35, line: 13]\n" + 
			"      Local variable table:\n" + 
			"        [pc: 0, pc: 37] local: this index: 0 type: X\n" + 
			"        [pc: 0, pc: 37] local: b index: 1 type: boolean\n" + 
			"        [pc: 6, pc: 15] local: i index: 2 type: int\n" + 
			"        [pc: 17, pc: 26] local: o index: 2 type: java.lang.Object\n" + 
			"      Stack map table: number of frames 2\n" + 
			"        [pc: 15, same]\n" + 
			"        [pc: 26, same_locals_1_stack_item, stack: {java.lang.Throwable}]\n";
		}
	}

	File f = new File(OUTPUT_DIR + File.separator + "X.class");
	byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
	ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
	String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
	int index = result.indexOf(expectedOutput);
	if (index == -1 || expectedOutput.length() == 0) {
		System.out.println(Util.displayString(result, 3));
	}
	if (index == -1) {
		assertEquals("Wrong contents", expectedOutput, result);
	}	
}

