	// Reference expression - X<T>.Y<K>[]:: form, with type arguments.
	public void test0018() throws IOException {
		String source =
				"interface I {\n" +
				"    Object copy(X<String>.Y<Integer> [] p);\n" +
				"}\n" +
				"public class X<T>  {\n" +
				"    class Y<K> {\n" +
				"    }\n" +
				"    public static void main(String [] args) {\n" +
				"        I i = X<String>.Y<Integer>[]::<String>clone;\n" +
				"        X<String>.Y<Integer>[] xs = null;\n" +
				"        i.copy(xs); \n" +
				"    }\n" +
				"}\n";
		String expectedUnitToString =
				"interface I {\n" +
				"  Object copy(X<String>.Y<Integer>[] p);\n" +
				"}\n" +
				"public class X<T> {\n" +
				"  class Y<K> {\n" +
				"    Y() {\n" +
				"      super();\n" +
				"    }\n" +
				"  }\n" +
				"  public X() {\n" +
				"    super();\n" +
				"  }\n" +
				"  public static void main(String[] args) {\n" +
				"    I i = X<String>.Y<Integer>[]::<String>clone;\n" +
				"    X<String>.Y<Integer>[] xs = null;\n" +
				"    i.copy(xs);\n" +
				"  }\n" +
				"}\n";
		checkParse(CHECK_PARSER | CHECK_JAVAC_PARSER , source.toCharArray(), null, "test0018", expectedUnitToString);
	}

