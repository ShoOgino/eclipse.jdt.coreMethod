	public void test013() throws Exception {
		// Test that synthesized enum constructor arguments show up as synthetic

		this.runParameterNameTest(
			"FancyEnum.java",
			"\n" +
			"public enum FancyEnum {\n" +
			"	ONE, TWO;\n" +
			"}\n" +
			"");

		ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
		String path = OUTPUT_DIR + File.separator + "FancyEnum.class";
		byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(path));
		String actualOutput =
			disassembler.disassemble(
				classFileBytes,
				"\n",
				ClassFileBytesDisassembler.DETAILED);

		String expectedOutput =
				"  private FancyEnum(java.lang.String $enum$name, int $enum$ordinal);\n" +
				"    0  aload_0 [this]\n" +
				"    1  aload_1 [$enum$name]\n" +
				"    2  iload_2 [$enum$ordinal]\n" +
				"    3  invokespecial java.lang.Enum(java.lang.String, int) [26]\n" +
				"    6  return\n" +
				"      Line numbers:\n" +
				"        [pc: 0, line: 2]\n" +
				"      Method Parameters:\n" +
				"        synthetic $enum$name\n" +
				"        synthetic $enum$ordinal\n" +
				"  \n";

		assertSubstring(actualOutput, expectedOutput);
	}

