// AST implementation - visiting binary expressions
// https://bugs.eclipse.org/bugs/show_bug.cgi?id=102728
// Adding combined binary expressions - effect of a literal at the start without
// string literals optimization
public void test0005_combined_binary_expression() {
	runConformTest(
		"X.java",
		"public class X {\n" +
		"  void foo() {\n" +
		"    String s1 = \"s1\";\n" +
		"    System.out.println(\"l\" + \"1\" + s1);\n" +
			// "l" + "1" is handled by a string literal concatenation without
			// affecting binary expressions: only one BE
		"  }\n" +
		"}\n",
		defaultParser,
		new ASTBinaryExpressionCollector(),
		"[v SL \"s1\"]\n" +
		"[ev SL \"s1\"]\n" +
		"[v BE (StringLiteralConcat...} + s1)]\n" +
		"[v SLC StringLiteralConcate...\n" +
		"\"1\"+\n" +
		"}]\n" +
		"[v SL \"l\"]\n" +
		"[ev SL \"l\"]\n" +
		"[v SL \"1\"]\n" +
		"[ev SL \"1\"]\n" +
		"[ev SLC StringLiteralConcate...\n" +
		"\"1\"+\n" +
		"}]\n" +
		"[v SNR s1]\n" +
		"[ev SNR s1]\n" +
		"[ev BE (StringLiteralConcat...} + s1)]\n");
}

