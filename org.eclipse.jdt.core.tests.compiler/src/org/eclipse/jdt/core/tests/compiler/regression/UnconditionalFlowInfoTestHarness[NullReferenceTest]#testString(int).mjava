/**
 * Return a string suitable for use as a representation of this flow info
 * within test series.
 * @param position a position to consider instead of this flow info default
 *                 test position
 * @return a string suitable for use as a representation of this flow info
 */
public String testString(int position) {
	if (this == DEAD_END) {
		return "FlowInfo.DEAD_END"; //$NON-NLS-1$
	}
	if (position < BitCacheSize) {
		return "{" + (this.nullAssignmentStatusBit1 >> position) //$NON-NLS-1$
					+ "," + (this.nullAssignmentStatusBit2 >> position) //$NON-NLS-1$
					+ "," + (this.nullAssignmentValueBit1 >> position) //$NON-NLS-1$
					+ "," + (this.nullAssignmentValueBit2 >> position) //$NON-NLS-1$
					+ "}"; //$NON-NLS-1$
	}
	else {
		int vectorIndex = position / BitCacheSize - 1,
			shift = position % BitCacheSize;
			return "{" + (this.extra[2][vectorIndex] //$NON-NLS-1$
			               >> shift) 
						+ "," + (this.extra[3][vectorIndex] //$NON-NLS-1$
						   >> shift)
						+ "," + (this.extra[4][vectorIndex] //$NON-NLS-1$
						   >> shift)
						+ "," + (this.extra[5][vectorIndex] //$NON-NLS-1$
						   >> shift)
						+ "}"; //$NON-NLS-1$
	}
}

