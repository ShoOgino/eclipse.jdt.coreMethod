//https://bugs.eclipse.org/bugs/show_bug.cgi?id=110182 - variation
public void test015() throws Exception {
	if(this.complianceLevel > ClassFileConstants.JDK1_5) return;
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" + 
			"	X fx;\n" + 
			"	final static boolean DBG = false;\n" + 
			"	void foo1(X x) {\n" + 
			"		if (x.DBG) {\n" + 
			"			boolean b = x.DBG;\n" + 
			"		}\n" + 
			"		boolean bb;\n" + 
			"		if (bb = x.DBG) {\n" + 
			"			boolean b = x.DBG;\n" + 
			"		}\n" + 
			"	}\n" + 
			"	void foo2(X x) {\n" + 
			"		while (x.DBG) {\n" + 
			"			boolean b = x.DBG;\n" + 
			"		}\n" + 
			"	}\n" + 
			"	void foo3(X x) {\n" + 
			"		for (;x.DBG;) {\n" + 
			"			boolean b = x.DBG;\n" + 
			"		}\n" + 
			"	}\n" + 
			"	void foo4(X x) {\n" + 
			"		boolean b = x.DBG ? x == null : x.DBG;\n" + 
			"	}\n" + 
			"	void foo5() {\n" + 
			"		if (this.fx.DBG) {\n" + 
			"			boolean b = this.fx.DBG;\n" + 
			"		}\n" + 
			"	}\n" + 
			"	void foo6() {\n" + 
			"		while (this.fx.DBG) {\n" + 
			"			boolean b = this.fx.DBG;\n" + 
			"		}\n" + 
			"	}\n" + 
			"	void foo7() {\n" + 
			"		for (;this.fx.DBG;) {\n" + 
			"			boolean b = this.fx.DBG;\n" + 
			"		}\n" + 
			"	}\n" + 
			"	void foo8() {\n" + 
			"		boolean b = this.fx.DBG ? this.fx == null : this.fx.DBG;\n" + 
			"	}\n" +
			"}\n",
		},
		"");
	// ensure boolean codegen got optimized (optimizedBooleanConstant)
	String expectedOutput =
		"  // Method descriptor #20 (LX;)V\n" + 
		"  // Stack: 2, Locals: 4\n" + 
		"  void foo1(X x);\n" + 
		"    0  iconst_0\n" + 
		"    1  dup\n" + 
		"    2  istore_2 [bb]\n" + 
		"    3  ifeq 8\n" + 
		"    6  iconst_0\n" + 
		"    7  istore_3\n" + 
		"    8  return\n" + 
		"      Line numbers:\n" + 
		"        [pc: 0, line: 9]\n" + 
		"        [pc: 6, line: 10]\n" + 
		"        [pc: 8, line: 12]\n" + 
		"      Local variable table:\n" + 
		"        [pc: 0, pc: 9] local: this index: 0 type: X\n" + 
		"        [pc: 0, pc: 9] local: x index: 1 type: X\n" + 
		"        [pc: 3, pc: 9] local: bb index: 2 type: boolean\n" + 
		"  \n" + 
		"  // Method descriptor #20 (LX;)V\n" + 
		"  // Stack: 0, Locals: 2\n" + 
		"  void foo2(X x);\n" + 
		"    0  return\n" + 
		"      Line numbers:\n" + 
		"        [pc: 0, line: 17]\n" + 
		"      Local variable table:\n" + 
		"        [pc: 0, pc: 1] local: this index: 0 type: X\n" + 
		"        [pc: 0, pc: 1] local: x index: 1 type: X\n" + 
		"  \n" + 
		"  // Method descriptor #20 (LX;)V\n" + 
		"  // Stack: 0, Locals: 2\n" + 
		"  void foo3(X x);\n" + 
		"    0  return\n" + 
		"      Line numbers:\n" + 
		"        [pc: 0, line: 22]\n" + 
		"      Local variable table:\n" + 
		"        [pc: 0, pc: 1] local: this index: 0 type: X\n" + 
		"        [pc: 0, pc: 1] local: x index: 1 type: X\n" + 
		"  \n" + 
		"  // Method descriptor #20 (LX;)V\n" + 
		"  // Stack: 1, Locals: 3\n" + 
		"  void foo4(X x);\n" + 
		"    0  iconst_0\n" + 
		"    1  istore_2 [b]\n" + 
		"    2  return\n" + 
		"      Line numbers:\n" + 
		"        [pc: 0, line: 24]\n" + 
		"        [pc: 2, line: 25]\n" + 
		"      Local variable table:\n" + 
		"        [pc: 0, pc: 3] local: this index: 0 type: X\n" + 
		"        [pc: 0, pc: 3] local: x index: 1 type: X\n" + 
		"        [pc: 2, pc: 3] local: b index: 2 type: boolean\n" + 
		"  \n" + 
		"  // Method descriptor #12 ()V\n" + 
		"  // Stack: 0, Locals: 1\n" + 
		"  void foo5();\n" + 
		"    0  return\n" + 
		"      Line numbers:\n" + 
		"        [pc: 0, line: 30]\n" + 
		"      Local variable table:\n" + 
		"        [pc: 0, pc: 1] local: this index: 0 type: X\n" + 
		"  \n" + 
		"  // Method descriptor #12 ()V\n" + 
		"  // Stack: 0, Locals: 1\n" + 
		"  void foo6();\n" + 
		"    0  return\n" + 
		"      Line numbers:\n" + 
		"        [pc: 0, line: 35]\n" + 
		"      Local variable table:\n" + 
		"        [pc: 0, pc: 1] local: this index: 0 type: X\n" + 
		"  \n" + 
		"  // Method descriptor #12 ()V\n" + 
		"  // Stack: 0, Locals: 1\n" + 
		"  void foo7();\n" + 
		"    0  return\n" + 
		"      Line numbers:\n" + 
		"        [pc: 0, line: 40]\n" + 
		"      Local variable table:\n" + 
		"        [pc: 0, pc: 1] local: this index: 0 type: X\n" + 
		"  \n" + 
		"  // Method descriptor #12 ()V\n" + 
		"  // Stack: 1, Locals: 2\n" + 
		"  void foo8();\n" + 
		"    0  iconst_0\n" + 
		"    1  istore_1 [b]\n" + 
		"    2  return\n" + 
		"      Line numbers:\n" + 
		"        [pc: 0, line: 42]\n" + 
		"        [pc: 2, line: 43]\n" + 
		"      Local variable table:\n" + 
		"        [pc: 0, pc: 3] local: this index: 0 type: X\n" + 
		"        [pc: 2, pc: 3] local: b index: 1 type: boolean\n";		
	
	File f = new File(OUTPUT_DIR + File.separator + "X.class");
	byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
	ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
	String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
	int index = result.indexOf(expectedOutput);
	if (index == -1 || expectedOutput.length() == 0) {
		System.out.println(Util.displayString(result, 3));
	}
	if (index == -1) {
		assertEquals("Wrong contents", expectedOutput, result);
	}	
}

