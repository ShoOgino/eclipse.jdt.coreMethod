// https://bugs.eclipse.org/bugs/show_bug.cgi?id=250056
// Test to verify that asserts are exempted from redundant null check warnings in a looping context,
// but this doesn't affect the downstream info.
public void test0959b_assert_loop() {
	if (this.complianceLevel >= ClassFileConstants.JDK1_4) {
		this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X {\n" +
				"  void m() {\n" +
				"	 while (true) {\n" +
				"   	X foo = new X();\n" +
				"	 	assert (foo != null);\n" +	//don't warn
				"	 	if (foo == null) {}\n" +
				"    	X foo2 = new X();\n" +
				"	 	assert (foo2 == null);\n" +	//don't warn
				"	 	if (foo2 == null) {}\n" +
				"    	X bar = null;\n" +
				"	 	assert (bar == null);\n" +	//don't warn
				"	 	if (bar == null) {}\n" +
				"    	X bar2 = null;\n" +
				"	 	assert (bar2 != null);\n" +	//don't warn
				"	 	if (bar2 == null) {}\n" +
				"	 }\n" +
				"  }\n" +
				"}\n"},
		"----------\n" +
		"1. ERROR in X.java (at line 6)\n" +
		"	if (foo == null) {}\n" +
		"	    ^^^\n" +
		"Null comparison always yields false: The variable foo cannot be null at this location\n" +
		"----------\n" +
		"2. WARNING in X.java (at line 6)\n" +
		"	if (foo == null) {}\n" +
		"	                 ^^\n" +
		"Dead code\n" +
		"----------\n" +
		"3. ERROR in X.java (at line 8)\n" +
		"	assert (foo2 == null);\n" +
		"	        ^^^^\n" +
		"Null comparison always yields false: The variable foo2 cannot be null at this location\n" +
		"----------\n" +
		"4. ERROR in X.java (at line 9)\n" +
		"	if (foo2 == null) {}\n" +
		"	    ^^^^\n" +
		"Redundant null check: The variable foo2 can only be null at this location\n" +
		"----------\n" +
		"5. ERROR in X.java (at line 12)\n" +
		"	if (bar == null) {}\n" +
		"	    ^^^\n" +
		"Redundant null check: The variable bar can only be null at this location\n" +
		"----------\n" +
		"6. ERROR in X.java (at line 14)\n" +
		"	assert (bar2 != null);\n" +
		"	        ^^^^\n" +
		"Null comparison always yields false: The variable bar2 can only be null at this location\n" +
		"----------\n" +
		"7. ERROR in X.java (at line 15)\n" +
		"	if (bar2 == null) {}\n" +
		"	    ^^^^\n" +
		"Null comparison always yields false: The variable bar2 cannot be null at this location\n" +
		"----------\n" +
		"8. WARNING in X.java (at line 15)\n" +
		"	if (bar2 == null) {}\n" +
		"	                  ^^\n" +
		"Dead code\n" +
		"----------\n",
	    JavacTestOptions.Excuse.EclipseWarningConfiguredAsError);
	}
}

