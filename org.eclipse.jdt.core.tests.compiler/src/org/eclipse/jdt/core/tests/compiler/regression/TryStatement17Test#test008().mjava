// test that lub is not used for precise rethrow
public void test008() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			"public class X {\n" +
			"	public static void main(String[] args) {\n" +
			"		try {\n" +
			"			if (args.length == 0) throw new SonOfFoo();\n"+
			"			throw new DaughterOfFoo();\n" +
			"		} catch(SonOfFoo | DaughterOfFoo e) {\n" +
			"			try {\n" +
			"				throw e;\n" +
			"			} catch(SonOfFoo | DaughterOfFoo e1) {}\n"+
			"		}\n" +
			"	}\n" +
			"}\n" +
			"class Foo extends Exception {}\n"+
			"class SonOfFoo extends Foo {}\n"+
			"class DaughterOfFoo extends Foo {}\n"
		},
		"----------\n" +
		"1. WARNING in X.java (at line 13)\n" +
		"	class Foo extends Exception {}\n" +
		"	      ^^^\n" +
		"The serializable class Foo does not declare a static final serialVersionUID field of type long\n" +
		"----------\n" +
		"2. WARNING in X.java (at line 14)\n" +
		"	class SonOfFoo extends Foo {}\n" +
		"	      ^^^^^^^^\n" +
		"The serializable class SonOfFoo does not declare a static final serialVersionUID field of type long\n" +
		"----------\n" +
		"3. WARNING in X.java (at line 15)\n" +
		"	class DaughterOfFoo extends Foo {}\n" +
		"	      ^^^^^^^^^^^^^\n" +
		"The serializable class DaughterOfFoo does not declare a static final serialVersionUID field of type long\n" +
		"----------\n");
}

