public void test021() {
	Map customOptions = getCompilerOptions();
	customOptions.put(CompilerOptions.OPTION_ReportInconsistentNullCheck, CompilerOptions.ERROR);
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" + 
			"	int kind;\n" + 
			"	X parent;\n" + 
			"	Object[] foo() { return null; }\n" + 
			"	private void findTypeParameters(X scope) {\n" + 
			"		Object[] typeParameters = null;\n" + 
			"		while (scope != null) {\n" + 
			"			typeParameters = null;\n" + 
			"			switch (scope.kind) {\n" + 
			"				case 0 :\n" + 
			"					typeParameters = foo();\n" + 
			"					break;\n" + 
			"				case 1 :\n" + 
			"					typeParameters = foo();\n" + 
			"					break;\n" + 
			"				case 2 :\n" + 
			"					return;\n" + 
			"			}\n" + 
			"			if(typeParameters != null) {\n" + 
			"				foo();\n" + 
			"			}\n" + 
			"			scope = scope.parent;\n" + 
			"		}\n" + 
			"	}\n" + 
			"}\n",
		},
		"",
		null,
		true,
		null,
		customOptions,
		null);
}

