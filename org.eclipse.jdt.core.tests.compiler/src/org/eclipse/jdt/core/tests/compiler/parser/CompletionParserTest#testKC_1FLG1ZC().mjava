public void testKC_1FLG1ZC() {
	String str =
			"package p; \n" +
			"/**\n" +
			" * 1FLG1ZC\n" +
			" */\n" +
			"import java.io.*;\n" +
			"public class KC {\n" +
			"private static char[] read(String fileName){\n" +
			"	try {\n" +
			"		File file = new File(fileName);\n" +
			"		FileReader reader =\n" +
			"			new FileReader(file);\n" +
			"		int length;\n" +
			"		char[] contents =\n" +
			"			new char[\n" +
			"				length =\n" +
			"				(int) file.length()];\n" +
			"		int len = 0;\n" +
			"		int readSize = 0;\n" +
			"		while ((readSize != -1)\n" +
			"			&& (len != length)) {\n" +
			"			readSize = reader.read(\n" +
			"				contents,\n" +
			"				len,\n" +
			"				length - len);\n" +
			"			len += readSize;\n" +
			"		}\n" +
			"		reader. t\n";

	String testName = "<complete on method/field with dummy spaces>";
	String completeBehind = "reader. t";
	String expectedCompletionNodeToString = "<CompleteOnName:reader.t>";
	String completionIdentifier = "t";
	String expectedReplacedSource = "reader. t";
	int cursorLocation = str.indexOf(completeBehind) + completeBehind.length() - 1;
	String expectedUnitDisplayString =
		"package p;\n" +
		"import java.io.*;\n" +
		"public class KC {\n" +
		"  public KC() {\n" +
		"  }\n" +
		"  private static char[] read(String fileName) {\n" +
		"    {\n" +
		"      File file;\n" +
		"      FileReader reader;\n" +
		"      int length;\n" +
		"      char[] contents;\n" +
		"      int len;\n" +
		"      int readSize;\n" +
		"      <CompleteOnName:reader.t>;\n" +
		"    }\n" +
		"  }\n" +
		"}\n";

	checkMethodParse(
		str.toCharArray(),
		cursorLocation,
		expectedCompletionNodeToString,
		expectedUnitDisplayString,
		completionIdentifier,
		expectedReplacedSource,
		testName); }

