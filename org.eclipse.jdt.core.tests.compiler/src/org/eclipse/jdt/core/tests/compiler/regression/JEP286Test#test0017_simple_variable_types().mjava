public void test0017_simple_variable_types() throws Exception {
	InferredTypeVerifier typeVerifier = new InferredTypeVerifier();
	this.runConformTest(
			new String[] {
				"X.java",
				"import java.util.List;\n" + 
				"\n" + 
				"public class X {\n" + 
				"    void test() {\n" + 
				"        var i_String = \"\";\n" + 
				"        for (var i2_String = \"\" ; ; ) { break; }\n" + 
				"        for (var i2_String : iterableOfString()) { break; }\n" + 
				"        for (var i2_String : arrayOfString()) { break; }\n" + 
				"        try (var i2_Bar = new Bar()) { } finally { }\n" + 
				"        try (var i2_Bar = new Bar(); var i3_Bar = new Bar()) { } finally { }\n" + 
				"    }\n" + 
				"\n" + 
				"    Iterable<String> iterableOfString() { return null; }\n" + 
				"    String[] arrayOfString() { return null; }\n" + 
				"\n" + 
				"    static class Bar implements AutoCloseable {\n" + 
				"        @Override\n" + 
				"        public void close() { }\n" + 
				"    }\n" + 
				"}\n" + 
				"\n"
			},
			typeVerifier);
	Assert.assertEquals(7, typeVerifier.localsChecked);
}

