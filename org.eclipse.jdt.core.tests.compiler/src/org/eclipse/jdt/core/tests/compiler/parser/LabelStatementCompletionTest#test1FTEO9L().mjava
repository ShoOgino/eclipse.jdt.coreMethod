/*
 * Completion inside an inner class defined inside a labeled statement.
 */
public void test1FTEO9L() {
	String cu =
		"package p; 					\n" +
		"								\n" +
		"class CCHelper {				\n" +
		"	class Member1 {				\n" +
		"	}							\n" +
		"	class Member2 {				\n" +
		"	}							\n" +
		"	void foo() {				\n" +
		"	}							\n" +
		"}								\n" +
		"								\n" +
		"public class CC {				\n" +
		"	void foo() {				\n" +
		"		new CCHelper()			\n" +
		"			.new CCHelper()		\n" +
		"			.new M				\n" +
		"	}							\n" +
		"}								\n";
	// first case
	this.runTestCheckMethodParse(
		// compilationUnit:
		cu,
		// completeBehind:
		"			.n",
		// expectedCompletionNodeToString:
		"<CompleteOnMemberAccess:new CCHelper().n>",
		// expectedUnitDisplayString:
		"package p;\n" +
		"class CCHelper {\n" +
		"  class Member1 {\n" +
		"    Member1() {\n" +
		"    }\n" +
		"  }\n" +
		"  class Member2 {\n" +
		"    Member2() {\n" +
		"    }\n" +
		"  }\n" +
		"  CCHelper() {\n" +
		"  }\n" +
		"  void foo() {\n" +
		"  }\n" +
		"}\n" +
		"public class CC {\n" +
		"  public CC() {\n" +
		"  }\n" +
		"  void foo() {\n" +
		"    <CompleteOnMemberAccess:new CCHelper().n>;\n" +
		"  }\n" +
		"}\n",
		// expectedCompletionIdentifier:
		"n",
		// expectedReplacedSource:
		"new",
		// test name
		"<regression test 1FTEO9L (first case)>"
	);
	// second case
	this.runTestCheckMethodParse(
		// compilationUnit:
		cu,
		// completeBehind:
		"			.new CC",
		// expectedCompletionNodeToString:
		"<CompleteOnType:CC>",
		// expectedUnitDisplayString:
		"package p;\n" +
		"class CCHelper {\n" +
		"  class Member1 {\n" +
		"    Member1() {\n" +
		"    }\n" +
		"  }\n" +
		"  class Member2 {\n" +
		"    Member2() {\n" +
		"    }\n" +
		"  }\n" +
		"  CCHelper() {\n" +
		"  }\n" +
		"  void foo() {\n" +
		"  }\n" +
		"}\n" +
		"public class CC {\n" +
		"  public CC() {\n" +
		"  }\n" +
		"  void foo() {\n" +
		"    new CCHelper().new <CompleteOnType:CC>();\n" +
		"  }\n" +
		"}\n",
		// expectedCompletionIdentifier:
		"CC",
		// expectedReplacedSource:
		"CCHelper",
		// test name
		"<regression test 1FTEO9L (second case)>"
	);
	// third case
	this.runTestCheckMethodParse(
		// compilationUnit:
		cu,
		// completeBehind:
		"			.new CCHelper()		\n" +
		"			.n",
		// expectedCompletionNodeToString:
		"<CompleteOnMemberAccess:new CCHelper().new CCHelper().n>",
		// expectedUnitDisplayString:
		"package p;\n" +
		"class CCHelper {\n" +
		"  class Member1 {\n" +
		"    Member1() {\n" +
		"    }\n" +
		"  }\n" +
		"  class Member2 {\n" +
		"    Member2() {\n" +
		"    }\n" +
		"  }\n" +
		"  CCHelper() {\n" +
		"  }\n" +
		"  void foo() {\n" +
		"  }\n" +
		"}\n" +
		"public class CC {\n" +
		"  public CC() {\n" +
		"  }\n" +
		"  void foo() {\n" +
		"    <CompleteOnMemberAccess:new CCHelper().new CCHelper().n>;\n" +
		"  }\n" +
		"}\n",
		// expectedCompletionIdentifier:
		"n",
		// expectedReplacedSource:
		"new",
		// test name
		"<regression test 1FTEO9L (third case)>"
	);
	// fourth case
	this.runTestCheckMethodParse(
		// compilationUnit:
		cu,
		// completeBehind:
		"			.new CCHelper()		\n" +
		"			.new M",
		// expectedCompletionNodeToString:
		"<CompleteOnType:M>",
		// expectedUnitDisplayString:
		"package p;\n" +
		"class CCHelper {\n" +
		"  class Member1 {\n" +
		"    Member1() {\n" +
		"    }\n" +
		"  }\n" +
		"  class Member2 {\n" +
		"    Member2() {\n" +
		"    }\n" +
		"  }\n" +
		"  CCHelper() {\n" +
		"  }\n" +
		"  void foo() {\n" +
		"  }\n" +
		"}\n" +
		"public class CC {\n" +
		"  public CC() {\n" +
		"  }\n" +
		"  void foo() {\n" +
		"    new CCHelper().new CCHelper().new <CompleteOnType:M>();\n" +
		"  }\n" +
		"}\n",
		// expectedCompletionIdentifier:
		"M",
		// expectedReplacedSource:
		"M",
		// test name
		"<regression test 1FTEO9L (fourth case)>"
	);
}

