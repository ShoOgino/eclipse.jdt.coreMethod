public void test753() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			"import java.io.Serializable;\n" + 
			"\n" + 
			"public class X<E extends Serializable> {\n" + 
			"	X<? super I<E>> parent;\n" + 
			"	X<? super I<E>> current;\n" + 
			"	void foo() {\n" + 
			"		current = current.parent;\n" + 
			"	}\n" + 
			"}\n" + 
			"\n" + 
			"interface I<T> {\n" + 
			"}\n",
		},
		"----------\n" + 
		"1. ERROR in X.java (at line 4)\n" + 
		"	X<? super I<E>> parent;\n" + 
		"	  ^^^^^^^^^\n" + 
		"Bound mismatch: The type ? super I<E> is not a valid substitute for the bounded parameter <E extends Serializable> of the type X<E>\n" + 
		"----------\n" + 
		"2. ERROR in X.java (at line 5)\n" + 
		"	X<? super I<E>> current;\n" + 
		"	  ^^^^^^^^^\n" + 
		"Bound mismatch: The type ? super I<E> is not a valid substitute for the bounded parameter <E extends Serializable> of the type X<E>\n" + 
		"----------\n" + 
		"3. ERROR in X.java (at line 7)\n" + 
		"	current = current.parent;\n" + 
		"	          ^^^^^^^^^^^^^^\n" + 
		"Type mismatch: cannot convert from X<capture-of ? super I<capture-of ? super I<E>>> to X<? super I<E>>\n" + 
		"----------\n");
}

