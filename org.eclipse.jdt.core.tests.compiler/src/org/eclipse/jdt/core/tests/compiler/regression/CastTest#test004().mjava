public void test004() {
	Map customOptions = getCompilerOptions();
	customOptions.put(CompilerOptions.OPTION_ReportUnnecessaryTypeCheck, CompilerOptions.ERROR);
	runNegativeTest(
		// test directory preparation
		true /* flush output directory */, 
		new String[] { /* test files */
			"X.java",
			"public class X {\n" + 
			"	public static void main(String[] args) {\n" + 
			"		// constructors\n" + 
			"		new X((Object) \"hello\");	//   necessary\n" + 
			"		new X((String) \"hello\");	// UNnecessary\n" + 
			"		new X((Object) null);		//   necessary\n" + 
			"		new X((String) null);		// UNnecessary but keep as useful documentation\n" + 
			"	}\n" + 
			"	X(){}\n" + 
			"	X(String s){\n" + 
			"		System.out.println(\"new X(String):\"+s);\n" + 
			"	}\n" + 
			"	X(Object o){\n" + 
			"		System.out.println(\"new X(Object):\"+o);\n" + 
			"	}\n" + 
			"}\n"
		},
		// compiler options
		null /* no class libraries */,
		customOptions /* custom options */,
		// compiler results
		"----------\n" + /* expected compiler log */
		"1. ERROR in X.java (at line 5)\n" + 
		"	new X((String) \"hello\");	// UNnecessary\n" + 
		"	      ^^^^^^^^^^^^^^^^\n" + 
		"Unnecessary cast from String to String\n" + 
		"----------\n",
		// javac options
		JavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);
}

