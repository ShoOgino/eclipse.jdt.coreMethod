//https://bugs.eclipse.org/bugs/show_bug.cgi?id=142935
public void test1054() {
	Map customOptions = getCompilerOptions();
	// check no unsafe type operation problem is issued
	customOptions.put(CompilerOptions.OPTION_ReportUncheckedTypeOperation, CompilerOptions.IGNORE);
	customOptions.put(CompilerOptions.OPTION_ReportRawTypeReference, CompilerOptions.IGNORE);
	String expectedOutput =
		"----------\n" +
		"1. ERROR in X.java (at line 11)\n" +
		"	Bar bar= clazz.getAnnotation(Bar.class);\n" +
		"	         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" +
		"Type mismatch: cannot convert from Annotation to Bar\n" +
		"----------\n";
	this.runNegativeTest(
		new String[] {
			"X.java",
			"import java.lang.annotation.Retention;\r\n" +
			"import java.lang.annotation.RetentionPolicy;\r\n" +
			"import java.lang.reflect.Method;\r\n" +
			"\r\n" +
			"@Bar\r\n" +
			"public class X {\r\n" +
			"\r\n" +
			"        @Bar\r\n" +
			"        public void bar() throws Exception {\r\n" +
			"                Class clazz= X.class;\r\n" +
			"                Bar bar= clazz.getAnnotation(Bar.class);\n" +
			"                Method method= clazz.getMethod(\"bar\");\r\n" +
			"                Bar bar2= method.getAnnotation(Bar.class);\r\n" +
			"        }\r\n" +
			"}\r\n" +
			"\r\n" +
			"@Retention(RetentionPolicy.RUNTIME)\r\n" +
			"@interface Bar {\r\n" +
			"}",
		},
		expectedOutput,
		null,
		true,
		customOptions);
}

