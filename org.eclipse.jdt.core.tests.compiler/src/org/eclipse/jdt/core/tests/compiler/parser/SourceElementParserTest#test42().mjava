public void test42() {

	String s =
		"public class X {		\n" +
		"	int x				\n";

	String expectedUnitToString =
		"public class X {\n"
		+ "\tint x;\n"
		+ "\tjava.lang.Object(0)\n"
		+ "}";

	String testName = "test42: full parse";
	fullParse(s,testName);

	assertEquals(
		"Invalid class declarationSourceStart ",
		0,
		this.currentType.getDeclarationSourceStart());

	assertEquals(
		"Invalid class declarationSourceEnd ",
		29,
		this.currentType.getDeclarationSourceEnd());

	assertTrue("doesn't contain superinterfaces " , this.currentType.getInterfaceNames() == null);

	SourceField[] fields = this.currentType.getFields();
	assertTrue(" invalid fields ", fields != null);
	assertEquals(" contains one field", 1, fields.length);

	assertEquals("Invalid declaration source start for field x", 20, fields[0].getDeclarationSourceStart());
	assertEquals("Invalid declaration source end for field x", 24, fields[0].getDeclarationSourceEnd());

	SourceMethod[] methods = this.currentType.getMethods();
	assertTrue(" invalid methods ", methods == null);

	SourceType[] members = this.currentType.getMemberTypes();
	assertTrue(" invalid members ", members == null);

	assertEquals(
		"Invalid source " + testName,
		expectedUnitToString,
		this.currentType.toString());
}

