	// 412151: TC's @Targets, if specified, must be a subset or the same as T's @Targets
	// TC's @Targets, if specified, must be a subset or the same as T's @Targets. Test this as a separate pass, so that
	// FooContainer is loaded from binary.
	public void test023() {
		this.runConformTest(
			new String[] {
				"FooContainer.java",
				"import java.lang.annotation.Target;\n" + 
				"import java.lang.annotation.ElementType;\n" + 
				"public @Target({ElementType.METHOD})\n" +
				"@interface FooContainer { Foo[] value(); }\n",
				"Foo.java",
				"import java.lang.annotation.Target;\n" + 
				"import java.lang.annotation.ElementType;\n" + 
				"public @Target({ElementType.METHOD})\n" +
				"@interface Foo { }\n"
			});
		this.runNegativeTest(
			new String[] {
				"Foo.java",
				"import java.lang.annotation.Target;\n" + 
				"import java.lang.annotation.ElementType;\n" + 
				"public @java.lang.annotation.Repeatable(FooContainer.class)\n" +
				"@java.lang.annotation.Target({ElementType.FIELD})\n" +
				"@interface Foo { }\n"
			}, 
		"----------\n" + 
		"1. ERROR in Foo.java (at line 3)\n" + 
		"	public @java.lang.annotation.Repeatable(FooContainer.class)\n" + 
		"	                                        ^^^^^^^^^^^^^^^^^^\n" + 
		"The containing annotation @FooContainer is allowed at targets where the repeatable annotation @Foo is not: METHOD\n" + 
		"----------\n",
		null, false /* don't flush*/);
	}

