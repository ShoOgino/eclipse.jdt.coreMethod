// https://bugs.eclipse.org/bugs/show_bug.cgi?id=317719
public void testBug317719g() throws Exception {
	String output = this.complianceLevel == ClassFileConstants.JDK1_6 ?
			"----------\n" + 
			"1. WARNING in X.java (at line 3)\n" + 
			"	public static int[] doIt(Collection<int[]> col) { return new int[1]; }\n" + 
			"	                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Method doIt(Collection<int[]>) has the same erasure doIt(Collection<E>) as another method in type X<Z>\n" + 
			"----------\n" + 
			"2. WARNING in X.java (at line 4)\n" + 
			"	public static int[][] doIt(Collection<int[][]> col) { return new int[0][0]; }\n" + 
			"	                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Method doIt(Collection<int[][]>) has the same erasure doIt(Collection<E>) as another method in type X<Z>\n" + 
			"----------\n" + 
			"3. WARNING in X.java (at line 5)\n" + 
			"	public int[] doIt2(Collection<int[]> col) { return new int[0]; }\n" + 
			"	             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Method doIt2(Collection<int[]>) has the same erasure doIt2(Collection<E>) as another method in type X<Z>\n" + 
			"----------\n" + 
			"4. WARNING in X.java (at line 6)\n" + 
			"	public int[][] doIt2(Collection<int[][]> col) { return new int[0][0]; }\n" + 
			"	               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Method doIt2(Collection<int[][]>) has the same erasure doIt2(Collection<E>) as another method in type X<Z>\n" + 
			"----------\n" + 
			"5. ERROR in X.java (at line 7)\n" + 
			"	Zork z;\n" + 
			"	^^^^\n" + 
			"Zork cannot be resolved to a type\n" + 
			"----------\n":
				"----------\n" + 
				"1. ERROR in X.java (at line 3)\n" + 
				"	public static int[] doIt(Collection<int[]> col) { return new int[1]; }\n" + 
				"	                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
				"Method doIt(Collection<int[]>) has the same erasure doIt(Collection<E>) as another method in type X<Z>\n" + 
				"----------\n" + 
				"2. ERROR in X.java (at line 4)\n" + 
				"	public static int[][] doIt(Collection<int[][]> col) { return new int[0][0]; }\n" + 
				"	                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
				"Method doIt(Collection<int[][]>) has the same erasure doIt(Collection<E>) as another method in type X<Z>\n" + 
				"----------\n" + 
				"3. ERROR in X.java (at line 5)\n" + 
				"	public int[] doIt2(Collection<int[]> col) { return new int[0]; }\n" + 
				"	             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
				"Method doIt2(Collection<int[]>) has the same erasure doIt2(Collection<E>) as another method in type X<Z>\n" + 
				"----------\n" + 
				"4. ERROR in X.java (at line 6)\n" + 
				"	public int[][] doIt2(Collection<int[][]> col) { return new int[0][0]; }\n" + 
				"	               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
				"Method doIt2(Collection<int[][]>) has the same erasure doIt2(Collection<E>) as another method in type X<Z>\n" + 
				"----------\n" + 
				"5. ERROR in X.java (at line 7)\n" + 
				"	Zork z;\n" + 
				"	^^^^\n" + 
				"Zork cannot be resolved to a type\n" + 
				"----------\n";
	this.runNegativeTest(
		new String[] {
			"X.java",
			"import java.util.Collection;\n" +
			"class X<Z> {\n" +
			"    public static int[] doIt(Collection<int[]> col) { return new int[1]; }\n" +
			"	 public static int[][] doIt(Collection<int[][]> col) { return new int[0][0]; }\n" +
			"	 public int[] doIt2(Collection<int[]> col) { return new int[0]; }\n" +
			"	 public int[][] doIt2(Collection<int[][]> col) { return new int[0][0]; }\n" +
			"	 Zork z;\n" +
			"}\n" +
			"class ChildX<Z> extends X<Z>{}\n"
		},
		output);
}

