public void testBug490403negative() {
	runNegativeTestWithLibs(
		new String[] {
			"test/TestNullInt.java",
			"package test;\n" +
			"import org.eclipse.jdt.annotation.*;\n" +
			"\n" +
			"public abstract class TestNullInt {\n" +
			"	public abstract boolean b();\n" +
			"\n" +
			"	public void warning(@NonNull Object[] keys, String o) {\n" +
			"		while (b()) {\n" +
			"			keys[0] = o;\n" +
			"			keys[1] = b() ? o : \"\";\n" +
			"		}\n" +
			"	}\n" +
			"	public void error(@NonNull Object[] keys, @Nullable String o) {\n" +
			"		while (b()) {\n" +
			"			keys[0] = o;\n" +
			"			keys[1] = b() ? \"\" : o;\n" +
			"		}\n" +
			"	}\n" +
			"}\n" +
			"",
		},
		getCompilerOptions(),
		"----------\n" +
		"1. WARNING in test\\TestNullInt.java (at line 9)\n" +
		"	keys[0] = o;\n" +
		"	          ^\n" +
		"Null type safety (type annotations): The expression of type \'String\' needs unchecked conversion to conform to \'@NonNull Object\'\n" +
		"----------\n" +
		"2. WARNING in test\\TestNullInt.java (at line 10)\n" +
		"	keys[1] = b() ? o : \"\";\n" +
		"	                ^\n" +
		"Null type safety (type annotations): The expression of type \'String\' needs unchecked conversion to conform to \'@NonNull Object\'\n" +
		"----------\n" +
		"3. ERROR in test\\TestNullInt.java (at line 15)\n" +
		"	keys[0] = o;\n" +
		"	          ^\n" +
		"Null type mismatch (type annotations): required \'@NonNull Object\' but this expression has type \'@Nullable String\'\n" +
		"----------\n" +
		"4. ERROR in test\\TestNullInt.java (at line 16)\n" +
		"	keys[1] = b() ? \"\" : o;\n" +
		"	                     ^\n" +
		"Null type mismatch (type annotations): required \'@NonNull Object\' but this expression has type \'@Nullable String\'\n" +
		"----------\n"
	);
}

