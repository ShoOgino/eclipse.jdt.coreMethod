public void testBug558574() {
	if (this.complianceLevel < ClassFileConstants.JDK1_5) return; // uses varargs signatures

	Map options = getCompilerOptions();
	options.put(CompilerOptions.OPTION_ReportUnclosedCloseable, CompilerOptions.ERROR);
	options.put(CompilerOptions.OPTION_ReportPotentiallyUnclosedCloseable, CompilerOptions.ERROR);

	runLeakTest(
		new String[] {
			"X.java",
			"import java.io.*;\n" +
			"public class X {\n" +
			"	void m1() throws FileNotFoundException {\n" +
			"		PrintWriter pw = new PrintWriter(new OutputStreamWriter(new FileOutputStream(\"/tmp/out\")));\n" +
			"		pw.printf(\"%d\", 42).close();\n" +
			"	}\n" +
			"	void m2(PrintWriter pw) throws FileNotFoundException {\n" +
			"		pw.printf(\"%d\", 42).append(\"end\").close();\n" +
			"	}\n" +
			"	void m3() throws FileNotFoundException {\n" +
			"		new PrintWriter(new OutputStreamWriter(new FileOutputStream(\"/tmp/out\")))\n" +
			"			.format(\"%d\", 42)\n" +
			"			.append(\"end\")\n" +
			"			.close();\n" +
			"	}\n" +
			"	void m4(PrintWriter pw) throws FileNotFoundException {\n" +
			"		pw.printf(\"%d\", 42).append(\"end\");\n" +
			"	}\n" +
			"}\n"
		},
		"",
		options);
}

