//https://bugs.eclipse.org/bugs/show_bug.cgi?id=190209 - variation
public void test062() throws Exception {
	if (new CompilerOptions(getCompilerOptions()).complianceLevel < ClassFileConstants.JDK1_5) return; // need autoboxing
	this.runConformTest(
			new String[] {
				"X.java",
				"final public class X {\n" +
				"	final class MyClass {\n" +
				"		/** @param s */\n" +
				"		void foo(final String s) {\n" +
				"			 /* do nothing */\n" +
				"		}\n" +
				"	}\n" +
				"	Object bar() {\n" +
				"		try {\n" +
				"			final MyClass myClass = new MyClass();\n" +
				"			try {\n" +
				"				return 0;\n" +
				"			} catch (final Throwable ex) {\n" +
				"				myClass.foo(this == null ? \"\" : \"\");\n" +
				"			}\n" +
				"	\n" +
				"			return this;\n" +
				"		} finally {\n" +
				"			{ /* do nothing */ }\n" +
				"		}\n" +
				"	}\n" +
				"	public static void main(String[] args) {\n" +
				"		new X().bar();\n" +
				"		System.out.print(\"SUCCESS\");\n" +
				"	}\n" +
				"}\n",
			},
			"SUCCESS");

	String expectedOutput =
			"  // Method descriptor #15 ()Ljava/lang/Object;\n" +
			"  // Stack: 3, Locals: 5\n" +
			"  java.lang.Object bar();\n" +
			"     0  new X$MyClass [16]\n" +
			"     3  dup\n" +
			"     4  aload_0 [this]\n" +
			"     5  invokespecial X$MyClass(X) [18]\n" +
			"     8  astore_1 [myClass]\n" +
			"     9  iconst_0\n" +
			"    10  invokestatic java.lang.Integer.valueOf(int) : java.lang.Integer [21]\n" +
			"    13  astore 4\n" +
			"    15  aload 4\n" +
			"    17  areturn\n" +
			"    18  astore_2 [ex]\n" +
			"    19  aload_1 [myClass]\n" +
			"    20  aload_0 [this]\n" +
			"    21  ifnonnull 29\n" +
			"    24  ldc <String \"\"> [27]\n" +
			"    26  goto 31\n" +
			"    29  ldc <String \"\"> [27]\n" +
			"    31  invokevirtual X$MyClass.foo(java.lang.String) : void [29]\n" +
			"    34  aload_0 [this]\n" +
			"    35  astore 4\n" +
			"    37  aload 4\n" +
			"    39  areturn\n" +
			"    40  astore_3\n" +
			"    41  aload_3\n" +
			"    42  athrow\n" +
			"      Exception Table:\n" +
			"        [pc: 9, pc: 15] -> 18 when : java.lang.Throwable\n" +
			"        [pc: 0, pc: 15] -> 40 when : any\n" +
			"        [pc: 18, pc: 37] -> 40 when : any\n";

	File f = new File(OUTPUT_DIR + File.separator + "X.class");
	byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
	ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
	String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
	int index = result.indexOf(expectedOutput);
	if (index == -1 || expectedOutput.length() == 0) {
		System.out.println(Util.displayString(result, 3));
	}
	if (index == -1) {
		assertEquals("Wrong contents", expectedOutput, result);
	}
}

