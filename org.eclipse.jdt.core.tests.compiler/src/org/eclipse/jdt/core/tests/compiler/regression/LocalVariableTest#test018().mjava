//https://bugs.eclipse.org/bugs/show_bug.cgi?id=118217 - variation
public void test018() {
	Map options = getCompilerOptions();
	options.put(CompilerOptions.OPTION_DocCommentSupport, CompilerOptions.ENABLED);
	options.put(CompilerOptions.OPTION_ReportUnusedParameter, CompilerOptions.ERROR);
	options.put(CompilerOptions.OPTION_ReportUnusedParameterIncludeDocCommentReference, CompilerOptions.DISABLED);
	options.put(CompilerOptions.OPTION_ReportUnusedParameterWhenOverridingConcrete, CompilerOptions.DISABLED);
	options.put(CompilerOptions.OPTION_ReportUnusedParameterWhenImplementingAbstract, CompilerOptions.DISABLED);
	this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X extends Parent implements Doable {\n" + 
				"	/**\n" + 
				"	 * @param value\n" + 
				"	 */\n" + 
				"	void foo(int value) { // X#foo(...)\n" + 
				"	}\n" + 
				"	void bar(int value) { // X#bar(...)\n" + 
				"	}\n" + 
				"\n" + 
				"	void top(int value) { /* X#top(...)*/}\n" + 
				"	void parent(int value) { /* X#parent(...) */}\n" + 
				"	public void doit(int value) { /* X#doit(...) */}\n" + 
				"}\n" + 
				"abstract class Top {\n" + 
				"	/**\n" + 
				"	 * @param value\n" + 
				"	 */\n" + 
				"	abstract void top(int value); // Top#top(...)\n" + 
				"}\n" + 
				"abstract class Parent extends Top {\n" + 
				"	/**\n" + 
				"	 * @param value\n" + 
				"	 */\n" + 
				"	void parent(int value) { /* Parent#parent(...) */}\n" + 
				"}\n" + 
				"interface Doable {\n" + 
				"	/**\n" + 
				"	 * @param value\n" + 
				"	 */\n" + 
				"	void doit (int value); // Doable#doit(...)\n" + 
				"}", // =================
			},
			"----------\n" + 
			"1. ERROR in X.java (at line 5)\n" + 
			"	void foo(int value) { // X#foo(...)\n" + 
			"	             ^^^^^\n" + 
			"The parameter value is never read\n" + 
			"----------\n" + 
			"2. ERROR in X.java (at line 7)\n" + 
			"	void bar(int value) { // X#bar(...)\n" + 
			"	             ^^^^^\n" + 
			"The parameter value is never read\n" + 
			"----------\n" + 
			"3. ERROR in X.java (at line 24)\n" + 
			"	void parent(int value) { /* Parent#parent(...) */}\n" + 
			"	                ^^^^^\n" + 
			"The parameter value is never read\n" + 
			"----------\n",
			null /* classLib */,
			true /* shouldFlushOutputDirectory */,
			options);
}

