// Bug 438467 - [compiler][null] Better error position for "The method _ cannot implement the corresponding method _ due to incompatible nullness constraints"
public void testTypeVariable15a() {
	runNegativeTestWithLibs(
		new String[] {
			"ITest.java",
			"import java.util.List;\n" +
			"interface ITest {\n" +
			"	<T> T foo(List<T> arg); // or arg Class<T> or TypeToken<T> + return TypeAdapter<T>, etc.\n" +
			"}",
			"Test.java",
			"import java.util.List;\n" +
			"class Test implements ITest {\n" +
			"	@Override\n" +
			"	public <T> T foo(List<@org.eclipse.jdt.annotation.NonNull T> arg) {\n" +
			"		return arg.get(0);\n" +
			"	}\n" +
			"}\n",
		},
		getCompilerOptions(),
		"----------\n" +
		"1. ERROR in Test.java (at line 4)\n" +
		"	public <T> T foo(List<@org.eclipse.jdt.annotation.NonNull T> arg) {\n" +
		"	                 ^^^^\n" +
		"Illegal redefinition of parameter arg, inherited method from ITest declares this parameter as \'List<T>\' (mismatching null constraints)\n" +
		"----------\n" +
		"2. INFO in Test.java (at line 5)\n" +
		"	return arg.get(0);\n" +
		"	       ^^^^^^^^^^\n" +
		"Unsafe interpretation of method return type as \'@NonNull\' based on the receiver type \'List<@NonNull T>\'. Type \'List<E>\' doesn\'t seem to be designed with null type annotations in mind\n" +
		"----------\n");
}

