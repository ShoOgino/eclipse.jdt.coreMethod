// Verify that locals inside a lambda block don't get promoted to the parent block.
public void testLocalsPromotion() {
	String string = 
			"interface I {\n" +
			"	void foo(int x);\n" +
			"}\n" +
			"public class X {\n" +
			"	static void goo(I i) {}\n" +
			"	public static void main(String[] args) {\n" +
			"       int outerLocal;\n" +
			"		goo ((x) -> {\n" +
			"			int lambdaLocal = 10;\n" +
			"			System.out.println(\"Statement inside lambda\");\n" +
			"			lam\n" +
			"		});\n" +
			"	}\n" +
			"}\n";

			String completeBehind = "lam";
			int cursorLocation = string.lastIndexOf(completeBehind) + completeBehind.length() - 1;

			String expectedCompletionNodeToString = "<CompleteOnName:lam>";
			String expectedParentNodeToString = "<NONE>";
			String completionIdentifier = "lam";
			String expectedReplacedSource = "lam";
			String expectedUnitDisplayString =
					"interface I {\n" + 
					"  void foo(int x);\n" + 
					"}\n" + 
					"public class X {\n" + 
					"  public X() {\n" + 
					"  }\n" + 
					"  static void goo(I i) {\n" + 
					"  }\n" + 
					"  public static void main(String[] args) {\n" + 
					"    int outerLocal;\n" + 
					"    goo((<no type> x) -> {\n" + 
					"  int lambdaLocal;\n" + 
					"  System.out.println(\"Statement inside lambda\");\n" + 
					"  <CompleteOnName:lam>;\n" + 
					"});\n" + 
					"  }\n" + 
					"}\n";

			checkMethodParse(
				string.toCharArray(),
				cursorLocation,
				expectedCompletionNodeToString,
				expectedParentNodeToString,
				expectedUnitDisplayString,
				completionIdentifier,
				expectedReplacedSource,
				"diet ast");
}

