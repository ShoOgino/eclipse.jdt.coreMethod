public void test0018_primitive_variable_types() throws Exception {
	InferredTypeVerifier typeVerifier = new InferredTypeVerifier();
	this.runConformTest(
			new String[] {
				"Y.java",
				"class Y {\n" + 
				"    boolean[] booleanArray = { true };\n" + 
				"    byte[] byteArray = { 1 };\n" + 
				"    char[] charArray = { 'c' };\n" + 
				"    short[] shortArray = { 42 };\n" + 
				"    int[] intArray = { 42 };\n" + 
				"    long[] longArray = { 42L };\n" + 
				"    float[] floatArray = { 0.1f };\n" + 
				"    double[] doubleArray = { 0.2d };\n" + 
				"\n" + 
				"    void testBuiltins() {\n" + 
				"        var z_boolean = false;\n" + 
				"        var b_byte = (byte)0xff;\n" + 
				"        var c_char = 'c';\n" + 
				"        var s_short = (short)42;\n" + 
				"        var i_int = 42;\n" + 
				"        var l_long = 42L;\n" + 
				"        var f_float = 0.25f;\n" + 
				"        var d_double = 0.35d;\n" + 
				"    }\n" + 
				"\n" + 
				"    void testBuiltinsForEach() {\n" + 
				"        for (var z_boolean : booleanArray) { System.out.print(\".\"); }\n" + 
				"        for (var b_byte : byteArray) { System.out.print(\".\"); }\n" + 
				"        for (var c_char : charArray) { System.out.print(\".\"); }\n" + 
				"        for (var s_short : shortArray) { System.out.print(\".\"); }\n" + 
				"        for (var i_int : intArray) { System.out.print(\".\"); }\n" + 
				"        for (var l_long : longArray) { System.out.print(\".\"); }\n" + 
				"        for (var f_float : floatArray) { System.out.print(\".\"); }\n" + 
				"        for (var d_double : doubleArray) { System.out.print(\".\"); }\n" + 
				"    }\n" + 
				"    void testBuiltinsArray() {\n" + 
				"        var z_booleanARRAY = booleanArray;\n" + 
				"        var b_byteARRAY = byteArray;\n" + 
				"        var c_charARRAY = charArray;\n" + 
				"        var s_shortARRAY = shortArray;\n" + 
				"        var i_intARRAY = intArray;\n" + 
				"        var l_longARRAY = longArray;\n" + 
				"        var f_floatARRAY = floatArray;\n" + 
				"        var d_doubleARRAY = doubleArray;\n" + 
				"    }\n" + 
				"\n" + 
				"}\n"
			},
			typeVerifier);
	Assert.assertEquals(24, typeVerifier.localsChecked);
}

