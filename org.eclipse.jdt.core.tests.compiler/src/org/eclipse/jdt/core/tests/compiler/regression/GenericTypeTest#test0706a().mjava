//https://bugs.eclipse.org/bugs/show_bug.cgi?id=97219
public void test0706a() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			"public class X {\n" + 
			"	void foo() {\n" + 
			"		BB bb = new BB();\n" + 
			"		AA<Object> res1 = bb.test();\n" + 
			"		AA res3 = bb.test();\n" + 
			"	}\n" + 
			"}\n" + 
			"class AA<T> { AA<Object> test() {return null;} }\n" + 
			"class BB extends AA<CC> { <U> BB test() {return null;} }\n" + 
			"class CC {}\n",
		},
		"----------\n" + 
		"1. ERROR in X.java (at line 4)\n" + 
		"	AA<Object> res1 = bb.test();\n" + 
		"	                     ^^^^\n" + 
		"The method test() is ambiguous for the type BB\n" + 
		"----------\n" + 
		"2. WARNING in X.java (at line 5)\n" + 
		"	AA res3 = bb.test();\n" + 
		"	^^\n" + 
		"AA is a raw type. References to generic type AA<T> should be parameterized\n" + 
		"----------\n" + 
		"3. ERROR in X.java (at line 5)\n" + 
		"	AA res3 = bb.test();\n" + 
		"	             ^^^^\n" + 
		"The method test() is ambiguous for the type BB\n" + 
		"----------\n"
		// 4: reference to test is ambiguous, both method test() in AA<CC> and method <U>test() in BB match
		// 5: reference to test is ambiguous, both method test() in AA<CC> and method <U>test() in BB match
	);
}

