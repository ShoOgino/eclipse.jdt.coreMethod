public void test001h_1() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			"public class X<T> {\n" +
			"	class X2<T>{\n" +
			"		void methodx(T param){\n" +
			"			System.out.println(param);\n" +
			"		}\n" +
			"	}\n" +
			"	X<String>.X2<String> x;\n" +
			"	public static void main(String[] args) {\n" +
			"		X test = new X();\n" +
			"		test.x = new X<>().new X2<>();\n" +
			"		test.x.methodx(1);\n" +
			"	}\n" +
			"}",
		},
		"----------\n" +
		"1. WARNING in X.java (at line 2)\n" +
		"	class X2<T>{\n" +
		"	         ^\n" +
		"The type parameter T is hiding the type T\n" +
		"----------\n" +
		"2. WARNING in X.java (at line 9)\n" +
		"	X test = new X();\n" +
		"	^\n" +
		"X is a raw type. References to generic type X<T> should be parameterized\n" +
		"----------\n" +
		"3. WARNING in X.java (at line 9)\n" +
		"	X test = new X();\n" +
		"	             ^\n" +
		"X is a raw type. References to generic type X<T> should be parameterized\n" +
		"----------\n" +
		"4. WARNING in X.java (at line 10)\n" +
		"	test.x = new X<>().new X2<>();\n" +
		"	     ^\n" +
		"Type safety: The field x from the raw type X is assigned a value of type X<Object>.X2<Object>. References to generic type X<T> should be parameterized\n" +
		"----------\n" +
		"5. WARNING in X.java (at line 11)\n" +
		"	test.x.methodx(1);\n" +
		"	^^^^^^^^^^^^^^^^^\n" +
		"Type safety: The method methodx(Object) belongs to the raw type X.X2. References to generic type X<T>.X2<T> should be parameterized\n" +
		"----------\n");
}

