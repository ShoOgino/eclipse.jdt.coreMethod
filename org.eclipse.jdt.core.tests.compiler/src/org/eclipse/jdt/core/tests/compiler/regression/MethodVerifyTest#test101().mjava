// name conflict
public void test101() {
	String expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?
			"----------\n" + 
			"1. WARNING in X.java (at line 3)\n" + 
			"	Integer getX(List<Integer> l) {\n" + 
			"	        ^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Method getX(List<Integer>) has the same erasure getX(List<E>) as another method in type X\n" + 
			"----------\n" + 
			"2. WARNING in X.java (at line 6)\n" + 
			"	String getX(List<String> l) {\n" + 
			"	       ^^^^^^^^^^^^^^^^^^^^\n" + 
			"Method getX(List<String>) has the same erasure getX(List<E>) as another method in type X\n" + 
			"----------\n" + 
			"3. WARNING in X.java (at line 11)\n" + 
			"	Integer getX(List<Integer> l) {\n" + 
			"	        ^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Duplicate method getX(List<Integer>) in type Y\n" + 
			"----------\n" + 
			"4. WARNING in X.java (at line 14)\n" + 
			"	String getX(List<Integer> l) {\n" + 
			"	       ^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Duplicate method getX(List<Integer>) in type Y\n" + 
			"----------\n":
				"----------\n" + 
				"1. ERROR in X.java (at line 3)\n" + 
				"	Integer getX(List<Integer> l) {\n" + 
				"	        ^^^^^^^^^^^^^^^^^^^^^\n" + 
				"Method getX(List<Integer>) has the same erasure getX(List<E>) as another method in type X\n" + 
				"----------\n" + 
				"2. ERROR in X.java (at line 6)\n" + 
				"	String getX(List<String> l) {\n" + 
				"	       ^^^^^^^^^^^^^^^^^^^^\n" + 
				"Method getX(List<String>) has the same erasure getX(List<E>) as another method in type X\n" + 
				"----------\n" + 
				"3. ERROR in X.java (at line 11)\n" + 
				"	Integer getX(List<Integer> l) {\n" + 
				"	        ^^^^^^^^^^^^^^^^^^^^^\n" + 
				"Duplicate method getX(List<Integer>) in type Y\n" + 
				"----------\n" + 
				"4. ERROR in X.java (at line 14)\n" + 
				"	String getX(List<Integer> l) {\n" + 
				"	       ^^^^^^^^^^^^^^^^^^^^^\n" + 
				"Duplicate method getX(List<Integer>) in type Y\n" + 
				"----------\n";
	this.runNegativeTest(
		new String[] {
			"X.java",
			"import java.util.List;\n" +
			"public class X {\n" +
			"    Integer getX(List<Integer> l) {\n" +
			"        return null;\n" +
			"    }\n" +
			"    String getX(List<String> l) {\n" +
			"        return null;\n" +
			"    }\n" +
			"}\n" +
			"class Y {\n" +
			"    Integer getX(List<Integer> l) {\n" +
			"        return null;\n" +
			"    }\n" +
			"    String getX(List<Integer> l) {\n" +
			"        return null;\n" +
			"    }\n" +
			"}"
		},
		expectedCompilerLog
	);
}

