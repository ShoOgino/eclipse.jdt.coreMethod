/*
 * Type mismatch, using non parameterized collection type (indirectly implementing parameterized type)
 */
public void test023() {
	Map customOptions = getCompilerOptions();
	customOptions.put(
			CompilerOptions.OPTION_ReportMissingOverrideAnnotationForInterfaceMethodImplementation,
			CompilerOptions.DISABLED);
	this.runNegativeTest(
			true,
			new String[] {
				"X.java",
				"import java.util.Iterator;\n" +
				"\n" +
				"public class X {\n" +
				"    public static void main(String[] args) {\n" +
				"		for (Thread s : new AX()) {\n" +
				"		}\n" +
				"	}\n" +
				"}\n" +
				"\n" +
				"class AX implements Iterable<String> {\n" +
				"    \n" +
				"   public Iterator<String> iterator() {\n" +
				"        return null;\n" +
				"    }\n" +
				"}\n",
			},
			null, customOptions,
			"----------\n" +
			"1. ERROR in X.java (at line 5)\n" +
			"	for (Thread s : new AX()) {\n" +
			"	                ^^^^^^^^\n" +
			"Type mismatch: cannot convert from element type String to Thread\n" +
			"----------\n",
			JavacTestOptions.SKIP);
}

