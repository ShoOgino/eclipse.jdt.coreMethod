	// 412149: [1.8][compiler] Emit repeated annotations into the designated container
	// Test that repeated annotations can appear at package targets - doesn't work due to VarifyClassLoader not defining packages.
	public void _test039() {
		String[] testFiles = {
				"repeatable/Main.java",
				"package repeatable;\n" +
				"public class Main {\n" +
				"    public static void main (String[] argv) {\n" + 
				"          System.out.println(repeatable.Main.class.getClassLoader().getClass().getSimpleName());\n" + 
				"          System.out.println(\"Pacakage has \" + Main.class.getClassLoader().getClass().getName());\n" +
				"        System.out.println(\"The pacakage has \" + Main.class.getPackage().getAnnotationsByType(Foo.class).length + \" annotations\");\n" +
				"    };\n" +
				"}",

			"repeatable/FooContainer.java",
			"package repeatable;\n" +
			"@java.lang.annotation.Target(java.lang.annotation.ElementType.PACKAGE)\n" +
			"@java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.RUNTIME)\n" +
			"public @interface FooContainer {\n" +
			"	Foo[] value();\n" +
			"}\n",

			"repeatable/Foo.java",
			"package repeatable;\n" +
			"@java.lang.annotation.Repeatable(FooContainer.class)\n" + 
			"public @interface Foo {}\n",

			"repeatable/package-info.java",
			"@Foo @Foo\n" +
			"package repeatable;\n" +
			"import repeatable.Foo;",
		};
		runConformTest(testFiles, "The package has 2 annotations");
	}

