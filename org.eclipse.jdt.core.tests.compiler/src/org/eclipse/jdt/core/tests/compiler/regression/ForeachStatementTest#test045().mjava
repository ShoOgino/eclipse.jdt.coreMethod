//https://bugs.eclipse.org/bugs/show_bug.cgi?id=150074
public void test045() throws Exception {
	Map options = getCompilerOptions();
	options.put(CompilerOptions.OPTION_PreserveUnusedLocal, CompilerOptions.PRESERVE);

	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" +
			"        public static void main(String[] args) {\n" +
			"                for (int i : initForEach()) {\n" +
			"                	System.out.print(\'a\');\n" +
			"                }\n" +
			"        }\n" +
			"        static int[] initForEach() {\n" +
			"                return new int[] {1, 2, 3, 4};\n" +
			"        }\n" +
			"}",
		},
		"aaaa",
		null,
		true,
		null,
		options,
		null);

	String expectedOutput =
		"  // Method descriptor #15 ([Ljava/lang/String;)V\n" +
		"  // Stack: 2, Locals: 5\n" +
		"  public static void main(java.lang.String[] args);\n" +
		"     0  invokestatic X.initForEach() : int[] [16]\n" +
		"     3  dup\n" +
		"     4  astore 4\n" +
		"     6  arraylength\n" +
		"     7  istore_3\n" +
		"     8  iconst_0\n" +
		"     9  istore_2\n" +
		"    10  goto 29\n" +
		"    13  aload 4\n" +
		"    15  iload_2\n" +
		"    16  iaload\n" +
		"    17  istore_1 [i]\n" +
		"    18  getstatic java.lang.System.out : java.io.PrintStream [20]\n" +
		"    21  bipush 97\n" +
		"    23  invokevirtual java.io.PrintStream.print(char) : void [26]\n" +
		"    26  iinc 2 1\n" +
		"    29  iload_2\n" +
		"    30  iload_3\n" +
		"    31  if_icmplt 13\n" +
		"    34  return\n" +
		"      Line numbers:\n" +
		"        [pc: 0, line: 3]\n" +
		"        [pc: 18, line: 4]\n" +
		"        [pc: 26, line: 3]\n" +
		"        [pc: 34, line: 6]\n" +
		"      Local variable table:\n" +
		"        [pc: 0, pc: 35] local: args index: 0 type: java.lang.String[]\n" +
		"        [pc: 18, pc: 26] local: i index: 1 type: int\n";

	File f = new File(OUTPUT_DIR + File.separator + "X.class");
	byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
	ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
	String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
	int index = result.indexOf(expectedOutput);
	if (index == -1 || expectedOutput.length() == 0) {
		System.out.println(Util.displayString(result, 3));
	}
	if (index == -1) {
		assertEquals("Wrong contents", expectedOutput, result);
	}
}

