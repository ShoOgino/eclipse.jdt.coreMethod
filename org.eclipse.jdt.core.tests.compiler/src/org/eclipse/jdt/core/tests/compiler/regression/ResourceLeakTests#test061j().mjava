// Bug 358903 - Filter practically unimportant resource leak warnings
// self-wrapping a method argument (caused NPE UnconditionalFlowInfo.markAsDefinitelyNull(..)).
public void test061j() {
	Map options = getCompilerOptions();
	options.put(CompilerOptions.OPTION_ReportUnclosedCloseable, CompilerOptions.ERROR);
	options.put(CompilerOptions.OPTION_ReportPotentiallyUnclosedCloseable, CompilerOptions.ERROR);
	this.runConformTest(
		new String[] {
			"X.java",
			"import java.io.InputStream;\n" +
			"import java.io.BufferedInputStream;\n" +
			"import java.io.IOException;\n" +
			"public class X {\n" +
			"    void foo(InputStream stream) throws IOException {\n" +
			"        stream = new BufferedInputStream(stream);\n" +
			"        System.out.println(stream.available());\n" +
			"        stream.close();\n" +
			"    }\n" +
			"    void boo(InputStream stream2) throws IOException {\n" +
			"        stream2 = new BufferedInputStream(stream2);\n" +
			"        System.out.println(stream2.available());\n" +
			"    }\n" +
			"}\n"
		},
		"",
		null,
		true,
		null,
		options,
		null);
}

