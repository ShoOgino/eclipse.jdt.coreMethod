	public void testApiLeak1() {
		File outputDirectory = new File(OUTPUT_DIR);
		Util.flushDirectoryContent(outputDirectory);
		String out = "bin";
		String directory = OUTPUT_DIR + File.separator + "src";
		
		String moduleLoc = directory + File.separator + "mod.one";
		writeFile(moduleLoc, "module-info.java", 
						"module mod.one { \n" +
						"	exports pm;\n" +
						"}");
		writeFile(moduleLoc + File.separator + "impl", "Other.java", 
						"package impl;\n" +
						"public class Other {\n" +
						"}\n");
		writeFile(moduleLoc + File.separator + "pm", "C1.java", 
						"package pm;\n" +
						"import impl.Other;\n" + 
						"public class C1 extends Other {\n" +
						"	public void m1(Other o) {}\n" + 
						"}\n");

		moduleLoc = directory + File.separator + "mod.two";
		writeFile(moduleLoc, "module-info.java", 
						"module mod.two { \n" +
						"	requires mod.one;\n" +
						"}");
		writeFile(moduleLoc + File.separator + "impl", "Other.java", 
						"package impl;\n" +
						"public class Other {\n" +
						"}\n");
		writeFile(moduleLoc + File.separator + "po", "Client.java", 
						"package po;\n" + 
						"import pm.C1;\n" + 
						"public class Client {\n" + 
						"    void test1(C1 one) {\n" + 
						"        one.m1(one);\n" + 
						"    }\n" + 
						"}\n");

		StringBuffer buffer = new StringBuffer();
		buffer.append("-d " + OUTPUT_DIR + File.separator + out )
			.append(" -9 ")
			.append(" -classpath \"")
			.append(Util.getJavaClassLibsAsString())
			.append("\" ")
			.append(" --module-source-path " + "\"" + directory + "\"");

		runConformTest(new String[]{}, 
				buffer.toString(), 
				"",
				"",
				false);
	}

