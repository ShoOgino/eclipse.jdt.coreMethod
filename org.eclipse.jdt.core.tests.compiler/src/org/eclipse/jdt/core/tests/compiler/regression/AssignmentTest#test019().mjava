public void test019() {
	Map customOptions = getCompilerOptions();
	customOptions.put(CompilerOptions.OPTION_ReportInconsistentNullCheck, CompilerOptions.ERROR);
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" + 
			"	public static final char[] replaceOnCopy(\n" + 
			"		char[] array,\n" + 
			"		char toBeReplaced,\n" + 
			"		char replacementChar) {\n" + 
			"		\n" + 
			"		char[] result = null;\n" + 
			"		for (int i = 0, length = array.length; i < length; i++) {\n" + 
			"			char c = array[i];\n" + 
			"			if (c == toBeReplaced) {\n" + 
			"				if (result == null) {\n" + 
			"					result = new char[length];\n" + 
			"					System.arraycopy(array, 0, result, 0, i);\n" + 
			"				}\n" + 
			"				result[i] = replacementChar;\n" + 
			"			} else if (result != null) {\n" + 
			"				result[i] = c;\n" + 
			"			}\n" + 
			"		}\n" + 
			"		if (result == null) return array;\n" + 
			"		return result;\n" + 
			"	}\n" + 
			"}\n",
		},
		"",
		null,
		true,
		null,
		customOptions,
		null);
}

