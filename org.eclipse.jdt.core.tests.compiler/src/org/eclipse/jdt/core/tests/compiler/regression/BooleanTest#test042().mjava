//https://bugs.eclipse.org/bugs/show_bug.cgi?id=162965 - variation
public void test042() throws Exception {
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" + 
			"	public static void main(String[] args) {\n" + 
			"		boolean a = true, b;\n" + 
			"		if (a ? (b = true) : false)\n" + 
			"		a = b;\n" + 
			"		System.out.println(\"SUCCESS\");\n" + 
			"    }        \n" + 
			"}\n", // =================
		},
		"SUCCESS");
	// 	ensure optimized boolean codegen sequence
	String expectedOutput =
		"  // Method descriptor #15 ([Ljava/lang/String;)V\n" + 
		"  // Stack: 2, Locals: 3\n" + 
		"  public static void main(java.lang.String[] args);\n" + 
		"     0  iconst_1\n" + 
		"     1  istore_1 [a]\n" + 
		"     2  iload_1 [a]\n" + 
		"     3  ifeq 14\n" + 
		"     6  iconst_1\n" + 
		"     7  dup\n" + 
		"     8  istore_2 [b]\n" + 
		"     9  ifeq 14\n" + 
		"    12  iload_2 [b]\n" + 
		"    13  istore_1 [a]\n" + 
		"    14  getstatic java.lang.System.out : java.io.PrintStream [16]\n" + 
		"    17  ldc <String \"SUCCESS\"> [22]\n" + 
		"    19  invokevirtual java.io.PrintStream.println(java.lang.String) : void [24]\n" + 
		"    22  return\n" + 
		"      Line numbers:\n" + 
		"        [pc: 0, line: 3]\n" + 
		"        [pc: 2, line: 4]\n" + 
		"        [pc: 12, line: 5]\n" + 
		"        [pc: 14, line: 6]\n" + 
		"        [pc: 22, line: 7]\n" + 
		"      Local variable table:\n" + 
		"        [pc: 0, pc: 23] local: args index: 0 type: java.lang.String[]\n" + 
		"        [pc: 2, pc: 23] local: a index: 1 type: boolean\n" + 
		"        [pc: 9, pc: 14] local: b index: 2 type: boolean\n";
	
	File f = new File(OUTPUT_DIR + File.separator + "X.class");
	byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
	ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
	String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
	int index = result.indexOf(expectedOutput);
	if (index == -1 || expectedOutput.length() == 0) {
		System.out.println(Util.displayString(result, 3));
	}
	if (index == -1) {
		assertEquals("Wrong contents", expectedOutput, result);
	}	
}

