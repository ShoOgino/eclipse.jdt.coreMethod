//https://bugs.eclipse.org/bugs/show_bug.cgi?id=231094 - variation
public void _test1323() {
	this.runNegativeTest(
			new String[] {
					"X.java", // =================
					"public class X {\n" +
					"	public static void main(String[] args) {\n" +
					"		X x = new X();\n" +
					"		x.doStuff2(Jim.class, new Thingy());\n" +
					"		String s = x.doStuff2(Bob2.class, new Thingy());\n" +
					"	}\n" +
					"	<T extends Bob, U extends Bob> T doStuff2(Class<T> klass, Thingy<U> thingy) { return null; }\n" +
					"}\n" +
					"class Jim {}\n" +
					"class Bob {}\n" +
					"class Bob2 extends Bob {}\n" +
					"class Thingy<T extends Bob> {}\n", // =================
			},
			"----------\n" +
			"1. ERROR in X.java (at line 4)\n" +
			"	x.doStuff2(Jim.class, new Thingy());\n" +
			"	  ^^^^^^^^\n" +
			"Bound mismatch: The generic method doStuff2(Class<T>, Thingy<U>) of type X is not applicable for the arguments (Class<Jim>, Thingy). The inferred type Jim is not a valid substitute for the bounded parameter <T extends Bob>\n" +
			"----------\n" +
			"2. WARNING in X.java (at line 4)\n" +
			"	x.doStuff2(Jim.class, new Thingy());\n" +
			"	                          ^^^^^^\n" +
			"Thingy is a raw type. References to generic type Thingy<T> should be parameterized\n" +
			"----------\n" +
			"3. WARNING in X.java (at line 5)\n" +
			"	String s = x.doStuff2(Bob2.class, new Thingy());\n" +
			"	           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" +
			"Type safety: Unchecked invocation doStuff2(Class<Bob2>, Thingy<Bob>) of the generic method doStuff2(Class<T>, Thingy<U>) of type X\n" +
			"----------\n" +
			"4. ERROR in X.java (at line 5)\n" +
			"	String s = x.doStuff2(Bob2.class, new Thingy());\n" +
			"	           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" +
			"Type mismatch: cannot convert from Bob2 to String\n" +
			"----------\n" +
			"5. WARNING in X.java (at line 5)\n" +
			"	String s = x.doStuff2(Bob2.class, new Thingy());\n" +
			"	                                  ^^^^^^^^^^^^\n" +
			"Type safety: The expression of type Thingy needs unchecked conversion to conform to Thingy<U>\n" +
			"----------\n" +
			"6. WARNING in X.java (at line 5)\n" +
			"	String s = x.doStuff2(Bob2.class, new Thingy());\n" +
			"	                                      ^^^^^^\n" +
			"Thingy is a raw type. References to generic type Thingy<T> should be parameterized\n" +
			"----------\n");
}

