	//https://bugs.eclipse.org/bugs/show_bug.cgi?id=147690
	public void test090() {
		this.runConformTest(
			new String[] {
				"X.java",
				"class XSuper {\n" + 
				"	Object foo() throws Exception { return null; }\n" + 
				"	protected Object bar() throws Exception { return null; }\n" + 
				"}\n" + 
				"public class X extends XSuper {\n" + 
				"	protected String foo() { return null; }\n" + 
				"	public String bar() { return null; }\n" + 
				"}", // =================
			},
			"");
		// 	ensure bridge methods have target method modifiers, and inherited thrown exceptions
		String expectedOutput =
			"  // Method descriptor #17 ()Ljava/lang/Object;\n" + 
			"  // Stack: 1, Locals: 1\n" + 
			"  public bridge synthetic java.lang.Object bar() throws java.lang.Exception;\n" + 
			"    0  aload_0\n" + 
			"    1  invokevirtual X.bar() : java.lang.String [21]\n" + 
			"    4  areturn\n" + 
			"      Line numbers:\n" + 
			"        [pc: 0, line: 1]\n" + 
			"  \n" + 
			"  // Method descriptor #17 ()Ljava/lang/Object;\n" + 
			"  // Stack: 1, Locals: 1\n" + 
			"  protected bridge synthetic java.lang.Object foo() throws java.lang.Exception;\n" + 
			"    0  aload_0\n" + 
			"    1  invokevirtual X.foo() : java.lang.String [23]\n" + 
			"    4  areturn\n" + 
			"      Line numbers:\n" + 
			"        [pc: 0, line: 1]\n";
		
		try {
			File f = new File(OUTPUT_DIR + File.separator + "X.class");
			byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
			ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
			String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
			int index = result.indexOf(expectedOutput);
			if (index == -1 || expectedOutput.length() == 0) {
				System.out.println(Util.displayString(result, 3));
			}
			if (index == -1) {
				assertEquals("Wrong contents", expectedOutput, result);
			}
		} catch (org.eclipse.jdt.core.util.ClassFormatException e) {
			assertTrue(false);
		} catch (IOException e) {
			assertTrue(false);
		}		
	}	

