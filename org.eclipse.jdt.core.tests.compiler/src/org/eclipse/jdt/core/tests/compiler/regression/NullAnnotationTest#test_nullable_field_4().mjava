// access to a nullable field - dereference after check
public void test_nullable_field_4() {
	runNegativeTestWithLibs(
		new String[] {
			"X.java",
			"import org.eclipse.jdt.annotation.*;\n" +
			"public class X {\n" +
			"    @Nullable Object o = new Object();\n" +
			"    public String oString() {\n" +
			"         if (this.o != null)\n" +
			"             return this.o.toString();\n" + // silent after check
			"         return \"\";\n" +
			"    }\n" +
			"    public String oString2() {\n" +
			"         String local = o.toString();\n" +
			"         if (this.o != null) {\n" +
			"             this.toString();\n" + // method call wipes null info
			"             return this.o.toString(); // warn here\n" +
			"         }\n" +
			"         return \"\";\n" +
			"    }\n" +
			"}\n"
		},
		null /*customOptions*/,
		"----------\n" + 
		"1. ERROR in X.java (at line 10)\n" + 
		"	String local = o.toString();\n" + 
		"	               ^\n" + 
		"Potential null pointer access: The field o is declared as @Nullable\n" + 
		"----------\n" + 
		"2. ERROR in X.java (at line 13)\n" + 
		"	return this.o.toString(); // warn here\n" + 
		"	            ^\n" + 
		"Potential null pointer access: The field o is declared as @Nullable\n" + 
		"----------\n");
}

