	public void testBug559951() {
		if (this.complianceLevel < ClassFileConstants.JDK10) return; // uses 'var'
		runConformTest(
			new String[] {
				"no/Demo.java",
				"package no;\n" +
				"public class Demo {\n" +
				"	static void broken_method_dispatch_on_bounded_type_in_lambda_argument_with_Eclipse_compiler() {\n" +
				"		WithMessageRecipients withRecipients = new Message(new EmailRecipient(\"Jane\", \"jane@example.com\"), new EmailRecipient(\"Joe\", \"joe@example.com\"));\n" +
				"\n" +
				"		withRecipients.getMessageRecipients()\n" +
				"			.stream()\n" +
				"			.forEach(recipient -> System.out.println(recipient.getName() + \" <\" + recipient.getEmailAddress() + \">\"));\n" +
				"	}\n" +
				"	static void works_fine_in_for_loop() {\n" +
				"		WithMessageRecipients withRecipients = new Message(new EmailRecipient(\"Jane\", \"jane@example.com\"), new EmailRecipient(\"Joe\", \"joe@example.com\"));\n" +
				"\n" +
				"		for (var recipient : withRecipients.getMessageRecipients()) {\n" +
				"			System.out.println(recipient.getName() + \" <\" + recipient.getEmailAddress() + \">\");\n" +
				"		}\n" +
				"	}\n" +
				"	public static void main(String... args) {\n" +
				"		works_fine_in_for_loop();\n" +
				"		broken_method_dispatch_on_bounded_type_in_lambda_argument_with_Eclipse_compiler();\n" +
				"	}\n" +
				"}\n",
				"no/WithName.java",
				"package no;\n" +
				"public interface WithName {\n" +
				"	String getName();\n" +
				"}",
				"no/WithEmailAddress.java",
				"package no;\n" +
				"public interface WithEmailAddress {\n" +
				"	String getEmailAddress();\n" +
				"}\n",
				"no/WithMessageRecipients.java",
				"package no;\n" +
				"import java.util.List;\n" +
				"public interface WithMessageRecipients {\n" +
				"	<CONTACT extends WithName & WithEmailAddress> List<? extends CONTACT> getMessageRecipients();\n" +
				"}",
				"no/EmailRecipient.java",
				"package no;\n" +
				"public class EmailRecipient implements WithName, WithEmailAddress {\n" +
				"	private final String name;\n" +
				"	private final String emailAddress;\n" +
				"	public EmailRecipient(String name, String emailAddress) {\n" +
				"		this.name = name;\n" +
				"		this.emailAddress = emailAddress;\n" +
				"	}\n" +
				"	@Override\n" +
				"	public String getEmailAddress() {\n" +
				"		return emailAddress;\n" +
				"	}\n" +
				"	@Override\n" +
				"	public String getName() {\n" +
				"		return name;\n" +
				"	}\n" +
				"}",
				"no/Message.java",
				"package no;\n" +
				"import java.util.List;\n" +
				"public class Message implements WithMessageRecipients {\n" +
				"	private final List<EmailRecipient> recipients;\n" +
				"	public Message(EmailRecipient ... recipients) {\n" +
				"		this.recipients = List.of(recipients);\n" +
				"	}\n" +
				"	@Override\n" +
				"	public List<EmailRecipient> getMessageRecipients() {\n" +
				"		return recipients;\n" +
				"	}\n" +
				"}"
			},
			"Jane <jane@example.com>\n" +
			"Joe <joe@example.com>\n" +
			"Jane <jane@example.com>\n" +
			"Joe <joe@example.com>");
	}

