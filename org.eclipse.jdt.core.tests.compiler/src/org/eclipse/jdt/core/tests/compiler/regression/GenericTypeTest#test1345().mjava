//https://bugs.eclipse.org/bugs/show_bug.cgi?id=235921 - variation
public void test1345() throws Exception {
	this.runNegativeTest(
			new String[] {
				"X.java", // =================
				"import java.util.*;\n" +
				"class Adapter<T> {\n" +
				"  class Setter<V> {}\n" +
				"  public <V> Setter<V> makeSetter() { return null; }\n" +
				"}\n" +
				"\n" +
				"public class X<T> extends Adapter {\n" +
				"  public <V> X.Setter makeSetter() {\n" +
				"    return (String) new X().new Setter() {};\n" +
				"  }\n" +
				"  void foo() {\n" +
				"          List<Adapter.Setter> l = new ArrayList<X.Setter>();\n" +
				"  }\n" +
				"}\n", // =================
			},
			"----------\n" +
			"1. WARNING in X.java (at line 7)\n" +
			"	public class X<T> extends Adapter {\n" +
			"	                          ^^^^^^^\n" +
			"Adapter is a raw type. References to generic type Adapter<T> should be parameterized\n" +
			"----------\n" +
			"2. WARNING in X.java (at line 8)\n" +
			"	public <V> X.Setter makeSetter() {\n" +
			"	           ^^^^^^^^\n" +
			"Adapter.Setter is a raw type. References to generic type Adapter<T>.Setter<V> should be parameterized\n" +
			"----------\n" +
			"3. WARNING in X.java (at line 8)\n" +
			"	public <V> X.Setter makeSetter() {\n" +
			"	                    ^^^^^^^^^^^^\n" +
			"The method makeSetter() of type X<T> should be tagged with @Override since it actually overrides a superclass method\n" +
			"----------\n" +
			"4. ERROR in X.java (at line 9)\n" +
			"	return (String) new X().new Setter() {};\n" +
			"	       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" +
			"Cannot cast from new Adapter.Setter(){} to String\n" +
			"----------\n" +
			"5. ERROR in X.java (at line 9)\n" +
			"	return (String) new X().new Setter() {};\n" +
			"	       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" +
			"Type mismatch: cannot convert from String to Adapter.Setter\n" +
			"----------\n" +
			"6. WARNING in X.java (at line 9)\n" +
			"	return (String) new X().new Setter() {};\n" +
			"	                    ^\n" +
			"X is a raw type. References to generic type X<T> should be parameterized\n" +
			"----------\n" +
			"7. WARNING in X.java (at line 9)\n" +
			"	return (String) new X().new Setter() {};\n" +
			"	                            ^^^^^^\n" +
			"Adapter.Setter is a raw type. References to generic type Adapter<T>.Setter<V> should be parameterized\n" +
			"----------\n" +
			"8. WARNING in X.java (at line 12)\n" +
			"	List<Adapter.Setter> l = new ArrayList<X.Setter>();\n" +
			"	     ^^^^^^^^^^^^^^\n" +
			"Adapter.Setter is a raw type. References to generic type Adapter<T>.Setter<V> should be parameterized\n" +
			"----------\n" +
			"9. WARNING in X.java (at line 12)\n" +
			"	List<Adapter.Setter> l = new ArrayList<X.Setter>();\n" +
			"	                                       ^^^^^^^^\n" +
			"Adapter.Setter is a raw type. References to generic type Adapter<T>.Setter<V> should be parameterized\n" +
			"----------\n");
}

