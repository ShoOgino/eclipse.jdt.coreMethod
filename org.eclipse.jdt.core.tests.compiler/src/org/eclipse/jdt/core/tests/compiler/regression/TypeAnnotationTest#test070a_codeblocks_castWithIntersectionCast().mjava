	public void test070a_codeblocks_castWithIntersectionCast() throws Exception {
		this.runConformTest(
			new String[] {
				"X.java",
			"import java.io.*;\n" +
				"public class X {\n" + 
				"   public void foo(Object o) {\n" +
				"	  I i = (@B(1) I & J) o;\n" +
				"	  J j = (I & @B(2) J) o;\n" +
			    "   }\n" +
				"}\n" +
				"interface I {}\n" +
				"interface J {}\n",
				
				"B.java",
				"import java.lang.annotation.*;\n" + 
				"@Target(ElementType.TYPE_USE)\n" + 
				"@Retention(RetentionPolicy.RUNTIME)\n" + 
				"@interface B {\n" + 
				"	int value() default 1;\n" + 
				"}\n",
		},
		"");
		String expectedOutput =
				"  // Method descriptor #15 (Ljava/lang/Object;)V\n" + 
				"  // Stack: 1, Locals: 4\n" + 
				"  public void foo(java.lang.Object o);\n" + 
				"     0  aload_1 [o]\n" + 
				"     1  checkcast J [16]\n" + 
				"     4  checkcast I [18]\n" + 
				"     7  astore_2 [i]\n" + 
				"     8  aload_1 [o]\n" + 
				"     9  checkcast J [16]\n" + 
				"    12  checkcast I [18]\n" + 
				"    15  astore_3 [j]\n" + 
				"    16  return\n" + 
				"      Line numbers:\n" + 
				"        [pc: 0, line: 4]\n" + 
				"        [pc: 8, line: 5]\n" + 
				"        [pc: 16, line: 6]\n" + 
				"      Local variable table:\n" + 
				"        [pc: 0, pc: 17] local: this index: 0 type: X\n" + 
				"        [pc: 0, pc: 17] local: o index: 1 type: java.lang.Object\n" + 
				"        [pc: 8, pc: 17] local: i index: 2 type: I\n" + 
				"        [pc: 16, pc: 17] local: j index: 3 type: J\n" + 
				"    RuntimeVisibleTypeAnnotations: \n" + 
				"      #27 @B(\n" + 
				"        #28 value=(int) 1 (constant type)\n" + 
				"        target type = 0x47 CAST\n" + 
				"        offset = 4\n" + 
				"        type argument index = 0\n" + 
				"      )\n" + 
				"      #27 @B(\n" + 
				"        #28 value=(int) 2 (constant type)\n" + 
				"        target type = 0x47 CAST\n" + 
				"        offset = 9\n" + 
				"        type argument index = 1\n" + 
				"      )\n";
		checkDisassembledClassFile(OUTPUT_DIR + File.separator + "X.class", "X", expectedOutput, ClassFileBytesDisassembler.SYSTEM);
	}

