//https://bugs.eclipse.org/bugs/show_bug.cgi?id=196200 - variation
public void test015() {
	String expectedResult;
	if (this.complianceLevel <= ClassFileConstants.JDK1_4) {
		expectedResult =
			"----------\n" +
			"1. ERROR in X.java (at line 2)\n" +
			"	Class a = zork1[].class;\n" +
			"	          ^^^^^\n" +
			"zork1 cannot be resolved to a type\n" +
			"----------\n" +
			"2. ERROR in X.java (at line 3)\n" +
			"	Class x = zork1.zork2[].class;	// compile time error\n" +
			"	          ^^^^^\n" +
			"zork1 cannot be resolved to a type\n" +
			"----------\n" +
			"3. ERROR in X.java (at line 5)\n" +
			"	Class a2 = zork1.class;\n" +
			"	           ^^^^^\n" +
			"zork1 cannot be resolved to a type\n" +
			"----------\n" +
			"4. ERROR in X.java (at line 6)\n" +
			"	Class x2 = zork1.zork2.class;	// compile time error	\n" +
			"	           ^^^^^\n" +
			"zork1 cannot be resolved to a type\n" +
			"----------\n";
	} else {
		expectedResult =
			"----------\n" +
			"1. WARNING in X.java (at line 2)\n" +
			"	Class a = zork1[].class;\n" +
			"	^^^^^\n" +
			"Class is a raw type. References to generic type Class<T> should be parameterized\n" +
			"----------\n" +
			"2. ERROR in X.java (at line 2)\n" +
			"	Class a = zork1[].class;\n" +
			"	          ^^^^^\n" +
			"zork1 cannot be resolved to a type\n" +
			"----------\n" +
			"3. WARNING in X.java (at line 3)\n" +
			"	Class x = zork1.zork2[].class;	// compile time error\n" +
			"	^^^^^\n" +
			"Class is a raw type. References to generic type Class<T> should be parameterized\n" +
			"----------\n" +
			"4. ERROR in X.java (at line 3)\n" +
			"	Class x = zork1.zork2[].class;	// compile time error\n" +
			"	          ^^^^^\n" +
			"zork1 cannot be resolved to a type\n" +
			"----------\n" +
			"5. WARNING in X.java (at line 5)\n" +
			"	Class a2 = zork1.class;\n" +
			"	^^^^^\n" +
			"Class is a raw type. References to generic type Class<T> should be parameterized\n" +
			"----------\n" +
			"6. ERROR in X.java (at line 5)\n" +
			"	Class a2 = zork1.class;\n" +
			"	           ^^^^^\n" +
			"zork1 cannot be resolved to a type\n" +
			"----------\n" +
			"7. WARNING in X.java (at line 6)\n" +
			"	Class x2 = zork1.zork2.class;	// compile time error	\n" +
			"	^^^^^\n" +
			"Class is a raw type. References to generic type Class<T> should be parameterized\n" +
			"----------\n" +
			"8. ERROR in X.java (at line 6)\n" +
			"	Class x2 = zork1.zork2.class;	// compile time error	\n" +
			"	           ^^^^^\n" +
			"zork1 cannot be resolved to a type\n" +
			"----------\n";
	}
	this.runNegativeTest(new String[] {
			"X.java",
			"public class  X {\n" +
			"	Class a = zork1[].class;\n" +
			"	Class x = zork1.zork2[].class;	// compile time error\n" +
			"	\n" +
			"	Class a2 = zork1.class;\n" +
			"	Class x2 = zork1.zork2.class;	// compile time error	\n" +
			"}\n",
		},
		expectedResult);
}

