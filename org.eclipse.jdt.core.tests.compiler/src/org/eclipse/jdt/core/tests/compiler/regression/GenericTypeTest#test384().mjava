	public void test384() {
		this.runConformTest(
			new String[] {
				"X.java",
				"public class X extends Y {\n" + 
				"	<T> java.util.List<T> foo3(java.util.List<T> t) { return t; }\n" + 
				"	Class<String> foo4() { return null; }\n" + 
				"	Class<String>[] foo5() { return null; }\n" + 
				"}\n" + 
				"class Y {\n" +
				"	<T> java.util.List<T> foo3(java.util.List<T> t) { return t; }\n" + 
				"	Class<? extends String> foo4() { return null; }\n" + 
				"	Class<? extends String>[] foo5() { return null; }\n" + 
				"}\n"
			},
			"");
		this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X extends Y {\n" + 
				"	Class<? extends String> foo() { return null; }\n" + 
				"	Class<? extends String>[] foo2() { return null; }\n" + 
				"}\n" + 
				"class Y {\n" +
				"	Class<String> foo() { return null; }\n" + 
				"	Class<String>[] foo2() { return null; }\n" + 
				"}\n"
			},
			"----------\n" + 
			"1. ERROR in X.java (at line 2)\r\n" + 
			"	Class<? extends String> foo() { return null; }\r\n" + 
			"	                        ^^^^^\n" + 
			"The return type is incompatible with Y.foo()\n" + 
			"----------\n" + 
			"2. ERROR in X.java (at line 3)\r\n" + 
			"	Class<? extends String>[] foo2() { return null; }\r\n" + 
			"	                          ^^^^^^\n" + 
			"The return type is incompatible with Y.foo2()\n" + 
			"----------\n");
	}

