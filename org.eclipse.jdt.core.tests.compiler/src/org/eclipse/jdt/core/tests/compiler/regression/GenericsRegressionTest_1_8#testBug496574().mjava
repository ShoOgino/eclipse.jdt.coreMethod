public void testBug496574() {
	runNegativeTest(
		new String[] {
			"EclipseNeonBug.java",
			"import java.util.ArrayList;\n" + 
			"import java.util.Collections;\n" + 
			"import java.util.List;\n" + 
			"import java.util.Map;\n" + 
			"import java.util.Optional;\n" + 
			"import java.util.stream.Collectors;\n" + 
			"\n" + 
			"public class EclipseNeonBug {\n" + 
			"\n" + 
			"	public static void main(String[] args) {\n" + 
			"		List<KeyValueObj> keyValObjs = new ArrayList<>();\n" + 
			"		Map<String, String> mses = Optional.ofNullable(keyValObjs)\n" + 
			"                .filter(ms -> !ms.isEmpty())\n" + 
			"                .map(ms -> ms.stream().collect(Collectors.toMap(\n" + 
			"                    metafield -> metafield.getKey(),\n" + 
			"                    metafield -> metafield.getValue())))\n" + 
			"                .orElseGet(() -> Collections.emptyMap());\n" + 
			"	}\n" + 
			"\n" + 
			"	public static class KeyValueObj {\n" + 
			"		private String key;\n" + 
			"		private String value;\n" + 
			"\n" + 
			"	    public String getKey() {\n" + 
			"	        return key;\n" + 
			"	    }\n" + 
			"\n" + 
			"	    public void setKey(String key) {\n" + 
			"	        this.key = key;\n" + 
			"	    }\n" + 
			"\n" + 
			"	    public String getValue() {\n" + 
			"	        return value;\n" + 
			"	    }\n" + 
			"\n" + 
			"	    public void setValue(String value) {\n" + 
			"	        this.value = value;\n" + 
			"	    }\n" + 
			"	}\n" + 
			"}\n"
		},
		"----------\n" + 
		"1. ERROR in EclipseNeonBug.java (at line 12)\n" + 
		"	Map<String, String> mses = Optional.ofNullable(keyValObjs)\n" + 
		"                .filter(ms -> !ms.isEmpty())\n" + 
		"                .map(ms -> ms.stream().collect(Collectors.toMap(\n" + 
		"                    metafield -> metafield.getKey(),\n" + 
		"                    metafield -> metafield.getValue())))\n" + 
		"	                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
		"Cannot infer type argument(s) for <U> map(Function<? super T,? extends U>)\n" + 
		"----------\n");
}

