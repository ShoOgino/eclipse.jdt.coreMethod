public void test0920() {
	this.runConformTest(
		new String[] {
			"X.java",
			"import java.util.*;\n" + 
			"class Stack<E> {\n" + 
			"	private List<E> contents = new ArrayList<E>();\n" + 
			"	void push(E e) {\n" + 
			"		this.contents.add(e);\n" + 
			"	}\n" + 
			"	E pop() {\n" + 
			"		int last = this.contents.size() - 1;\n" + 
			"		if (last < 0) throw new EmptyStackException();\n" + 
			"		return this.contents.remove(last);\n" + 
			"	}\n" + 
			"	private static <T> void doSwap(Stack<T> s) {\n" + 
			"		T t1 = s.pop();\n" + 
			"		T t2 = s.pop();\n" + 
			"		s.push(t1);\n" + 
			"		s.push(t2);\n" + 
			"	}\n" + 
			"	static void swap(Stack<?> s) { doSwap(s); }\n" + 
			"}\n" + 
			"public class X {\n" + 
			"	public static void main(String[] args) {\n" + 
			"		Stack<Integer> si = new Stack<Integer>();\n" + 
			"		Integer[] ints = { 12, 13, 14, 15, };\n" + 
			"		for (Integer i : ints) si.push(i);\n" + 
			"		try {\n" + 
			"			while(true) {\n" + 
			"				System.out.print(\"[\"+si.pop()+\"]\");\n" + 
			"			}\n" + 
			"		} catch(EmptyStackException e) {\n" + 
			"			System.out.println(\"[done]\");\n" + 
			"		}\n" + 
			"	}\n" + 
			"}\n",
		},
		"[15][14][13][12][done]");
}

