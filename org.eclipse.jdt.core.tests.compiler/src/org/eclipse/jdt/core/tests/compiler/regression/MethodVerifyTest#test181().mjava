//https://bugs.eclipse.org/bugs/show_bug.cgi?id=249134
public void test181() {
	this.runNegativeTest(
		new String[] {
			"I.java",
			"interface I {\n" +
			"	String m();\n" +
			"	Object n();\n" +
			"	String o();\n" +
			"	Object p();\n" +
			"}\n" +
			"abstract class A {\n" +
			"	public abstract Object m();\n" +
			"	public abstract String n();\n" +
			"	abstract Object o();\n" +
			"	abstract String p();\n" +
			"}\n" +
			"class A2 {\n" +
			"	public abstract Object m();\n" +
			"	public abstract String n();\n" +
			"	abstract Object o();\n" +
			"	abstract String p();\n" +
			"}\n",
			"B.java",
			"class B extends A implements I {}",
			"B2.java",
			"class B2 extends A2 implements I {}"
		},
		"----------\n" +
		"1. ERROR in I.java (at line 13)\n" +
		"	class A2 {\n" +
		"	      ^^\n" +
		"The type A2 must be an abstract class to define abstract methods\n" +
		"----------\n" +
		"2. ERROR in I.java (at line 14)\n" +
		"	public abstract Object m();\n" +
		"	                       ^^^\n" +
		"The abstract method m in type A2 can only be defined by an abstract class\n" +
		"----------\n" +
		"3. ERROR in I.java (at line 15)\n" +
		"	public abstract String n();\n" +
		"	                       ^^^\n" +
		"The abstract method n in type A2 can only be defined by an abstract class\n" +
		"----------\n" +
		"4. ERROR in I.java (at line 16)\n" +
		"	abstract Object o();\n" +
		"	                ^^^\n" +
		"The abstract method o in type A2 can only be defined by an abstract class\n" +
		"----------\n" +
		"5. ERROR in I.java (at line 17)\n" +
		"	abstract String p();\n" +
		"	                ^^^\n" +
		"The abstract method p in type A2 can only be defined by an abstract class\n" +
		"----------\n" +
		"----------\n" +
		"1. ERROR in B.java (at line 1)\n" +
		"	class B extends A implements I {}\n" +
		"	      ^\n" +
		"The type B must implement the inherited abstract method A.p()\n" +
		"----------\n" +
		"2. ERROR in B.java (at line 1)\n" +
		"	class B extends A implements I {}\n" +
		"	      ^\n" +
		"The type B must implement the inherited abstract method I.o() to override A.o()\n" +
		"----------\n" +
		"3. ERROR in B.java (at line 1)\n" +
		"	class B extends A implements I {}\n" +
		"	      ^\n" +
		"The type B must implement the inherited abstract method A.n()\n" +
		"----------\n" +
		"4. ERROR in B.java (at line 1)\n" +
		"	class B extends A implements I {}\n" +
		"	      ^\n" +
		"The type B must implement the inherited abstract method I.m() to override A.m()\n" +
		"----------\n" +
		"----------\n" +
		"1. ERROR in B2.java (at line 1)\n" +
		"	class B2 extends A2 implements I {}\n" +
		"	      ^^\n" +
		"The type B2 must implement the inherited abstract method I.o() to override A2.o()\n" +
		"----------\n" +
		"2. ERROR in B2.java (at line 1)\n" +
		"	class B2 extends A2 implements I {}\n" +
		"	      ^^\n" +
		"The type B2 must implement the inherited abstract method I.m() to override A2.m()\n" +
		"----------\n",
		null,
		true,
		null,
		true,
		false,
		false
	);
	this.runNegativeTest(
		new String[] {
			"B.java",
			"class B extends A implements I {}",
			"B2.java",
			"class B2 extends A2 implements I {}"
		},
		"----------\n" +
		"1. ERROR in B.java (at line 1)\n" +
		"	class B extends A implements I {}\n" +
		"	      ^\n" +
		"The type B must implement the inherited abstract method A.p()\n" +
		"----------\n" +
		"2. ERROR in B.java (at line 1)\n" +
		"	class B extends A implements I {}\n" +
		"	      ^\n" +
		"The type B must implement the inherited abstract method I.o() to override A.o()\n" +
		"----------\n" +
		"3. ERROR in B.java (at line 1)\n" +
		"	class B extends A implements I {}\n" +
		"	      ^\n" +
		"The type B must implement the inherited abstract method A.n()\n" +
		"----------\n" +
		"4. ERROR in B.java (at line 1)\n" +
		"	class B extends A implements I {}\n" +
		"	      ^\n" +
		"The type B must implement the inherited abstract method I.m() to override A.m()\n" +
		"----------\n" +
		"----------\n" +
		"1. ERROR in B2.java (at line 1)\n" +
		"	class B2 extends A2 implements I {}\n" +
		"	      ^^\n" +
		"The type B2 must implement the inherited abstract method I.o() to override A2.o()\n" +
		"----------\n" +
		"2. ERROR in B2.java (at line 1)\n" +
		"	class B2 extends A2 implements I {}\n" +
		"	      ^^\n" +
		"The type B2 must implement the inherited abstract method I.m() to override A2.m()\n" +
		"----------\n",
		null,
		false
	);
}

