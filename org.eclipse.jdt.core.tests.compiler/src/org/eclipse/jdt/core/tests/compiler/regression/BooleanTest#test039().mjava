//https://bugs.eclipse.org/bugs/show_bug.cgi?id=162965
public void test039() throws Exception {
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" +
			"        public static void main(String[] args) {\n" +
			"                boolean a = true, b;\n" +
			"                if (a ? false : (b = true))\n" +
			"                        a = b;\n" +
			"                System.out.println(\"SUCCESS\");\n" +
			"        }\n" +
			"}\n", // =================
		},
		"SUCCESS");
	// 	ensure optimized boolean codegen sequence
	String expectedOutput =
		"  // Method descriptor #15 ([Ljava/lang/String;)V\n" +
		"  // Stack: 2, Locals: 3\n" +
		"  public static void main(java.lang.String[] args);\n" +
		"     0  iconst_1\n" +
		"     1  istore_1 [a]\n" +
		"     2  iload_1 [a]\n" +
		"     3  ifeq 9\n" +
		"     6  goto 17\n" +
		"     9  iconst_1\n" +
		"    10  dup\n" +
		"    11  istore_2 [b]\n" +
		"    12  ifeq 17\n" +
		"    15  iload_2 [b]\n" +
		"    16  istore_1 [a]\n" +
		"    17  getstatic java.lang.System.out : java.io.PrintStream [16]\n" +
		"    20  ldc <String \"SUCCESS\"> [22]\n" +
		"    22  invokevirtual java.io.PrintStream.println(java.lang.String) : void [24]\n" +
		"    25  return\n" +
		"      Line numbers:\n" +
		"        [pc: 0, line: 3]\n" +
		"        [pc: 2, line: 4]\n" +
		"        [pc: 15, line: 5]\n" +
		"        [pc: 17, line: 6]\n" +
		"        [pc: 25, line: 7]\n" +
		"      Local variable table:\n" +
		"        [pc: 0, pc: 26] local: args index: 0 type: java.lang.String[]\n" +
		"        [pc: 2, pc: 26] local: a index: 1 type: boolean\n" +
		"        [pc: 12, pc: 17] local: b index: 2 type: boolean\n";

	File f = new File(OUTPUT_DIR + File.separator + "X.class");
	byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
	ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
	String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
	int index = result.indexOf(expectedOutput);
	if (index == -1 || expectedOutput.length() == 0) {
		System.out.println(Util.displayString(result, 3));
	}
	if (index == -1) {
		assertEquals("Wrong contents", expectedOutput, result);
	}
}

