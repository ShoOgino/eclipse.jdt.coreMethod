public void test010() {
	Map customOptions = getCompilerOptions();
	customOptions.put(CompilerOptions.OPTION_ReportUnnecessaryTypeCheck, CompilerOptions.ERROR);
	this.runNegativeTest(
		new String[] {
			"X.java",
			"public class X {\n" + 
			"	public static void main(String[] args) {\n" + 
			"		long l1 = ((long) 1) + 2L; // UNnecessary\n" + 
			"		long l2 = ((long)1) + 2; // necessary\n" + 
			"		long l3 = 0;" + 
			"		l3 += (long)12; // UNnecessary\n" + 
			"	}\n" + 
			"}\n"
		},
		"----------\n" + 
		"1. ERROR in X.java (at line 3)\n" + 
		"	long l1 = ((long) 1) + 2L; // UNnecessary\n" + 
		"	          ^^^^^^^^^^\n" + 
		"Unnecessary cast to type long for expression of type int. It is already compatible with the argument type long\n" + 
		"----------\n" + 
		"2. ERROR in X.java (at line 5)\n" + 
		"	long l3 = 0;		l3 += (long)12; // UNnecessary\n" + 
		"	            		      ^^^^^^^^\n" + 
		"Unnecessary cast to type long for expression of type int\n" + 
		"----------\n",
		null,
		true,
		customOptions);
}

