	public void testBug564047_001(){
		String currentWorkingDirectoryPath = System.getProperty("user.dir");
		if (currentWorkingDirectoryPath == null) {
			System.err.println("BatchCompilerTest#testBug564047_001 could not access the current working directory " + currentWorkingDirectoryPath);
		} else if (!new File(currentWorkingDirectoryPath).isDirectory()) {
			System.err.println("BatchCompilerTest#testBug564047_001 current working directory is not a directory " + currentWorkingDirectoryPath);
		} else {
			String lib1Path = currentWorkingDirectoryPath + File.separator + "lib1.jar";
			try {
			Util.createJar(
					new String[] {
						"p/Y.java",
						"package p;\n" +
						"public sealed class Y permits Z{}",
						"p/Z.java",
						"package p;\n" +
						"public final class Z extends Y{}",
					},
					lib1Path,
					JavaCore.VERSION_15,
					true);
			this.runNegativeTest(
					new String[] {
						"src/p/X.java",
						"package p;\n" +
						"public class X extends Y {\n" +
						"  public static void main(String[] args){\n" +
						"     System.out.println(0);\n" +
						"  }\n" +
						"}",
					},
			        "\"" + OUTPUT_DIR +  File.separator + "src/p/X.java\""
					+ " -cp " + lib1Path  // relative
					+ " -sourcepath \"" + OUTPUT_DIR +  File.separator + "src\""
			        + " --release 15 --enable-preview -g -preserveAllLocals"
			        + " -proceedOnError -referenceInfo"
			        + " -d \"" + OUTPUT_DIR + File.separator + "bin\" ",
			        "",
			        "----------\n" +
			        "1. ERROR in ---OUTPUT_DIR_PLACEHOLDER---/src/p/X.java (at line 2)\n" +
			        "	public class X extends Y {\n" +
			        "	                       ^\n" +
			        "The class X with a sealed direct superclass or a sealed direct superinterface Y should be declared either final, sealed, or non-sealed\n" +
			        "----------\n" +
			        "2. ERROR in ---OUTPUT_DIR_PLACEHOLDER---/src/p/X.java (at line 2)\n" +
			        "	public class X extends Y {\n" +
			        "	                       ^\n" +
			        "The type X extending a sealed class Y should be a permitted subtype of Y\n" +
			        "----------\n" +
			        "2 problems (2 errors)\n",
			        true);
			} catch (IOException e) {
				System.err.println("BatchCompilerTest#testBug563430_001 could not write to current working directory " + currentWorkingDirectoryPath);
			} finally {
				new File(lib1Path).delete();
			}
		}
	}

