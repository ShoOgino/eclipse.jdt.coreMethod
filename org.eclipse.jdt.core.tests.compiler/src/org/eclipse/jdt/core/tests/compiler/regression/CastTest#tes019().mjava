//fault tolerance (40288)
public void tes019() {
	Map customOptions = getCompilerOptions();
	customOptions.put(CompilerOptions.OPTION_ReportUnnecessaryTypeCheck, CompilerOptions.ERROR);
	this.runNegativeTest(
		new String[] {
			"X.java",
			"public class X {\n" + 
			"	void bar() {\n" + 
			"		X x1 =(X) this;\n" + 
			"		X x2 = (X) zork();\n" + // unbound #zork() should not cause NPE
			"	}\n" + 
			"}\n"
		},
		"----------\n" + 
		"1. ERROR in X.java (at line 3)\n" + 
		"	X x1 =(X) this;\n" + 
		"	      ^^^^^^^^\n" + 
		"Unnecessary cast to type X for expression of type X\n" + 
		"----------\n" + 
		"2. ERROR in X.java (at line 4)\n" + 
		"	X x2 = (X) zork();\n" + 
		"	           ^^^^\n" + 
		"The method zork() is undefined for the type X\n" + 
		"----------\n",
		null,
		true,
		customOptions);
}

