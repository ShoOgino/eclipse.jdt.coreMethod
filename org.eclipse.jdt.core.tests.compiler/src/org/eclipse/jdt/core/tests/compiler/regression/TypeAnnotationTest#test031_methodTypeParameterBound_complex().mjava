	public void test031_methodTypeParameterBound_complex() throws Exception {
		this.runConformTest(
			new String[] {
				"A.java",
				"import java.lang.annotation.*;\n" + 
				"@Target(ElementType.TYPE_USE)\n" + 
				"@Retention(RetentionPolicy.RUNTIME)\n" + 
				"@interface A {\n" + 
				"	String value() default \"default\";\n" + 
				"}\n",
				"B.java",
				"import java.lang.annotation.*;\n" + 
				"@Target(ElementType.TYPE_USE)\n" + 
				"@Retention(RetentionPolicy.CLASS)\n" + 
				"@interface B {\n" + 
				"	int value() default -1;\n" + 
				"}",
				"C.java",
				"import java.lang.annotation.*;\n" + 
				"@Target(ElementType.TYPE_USE)\n" + 
				"@Retention(RetentionPolicy.RUNTIME)\n" + 
				"@interface C {\n" + 
				"	char value() default '-';\n" + 
				"}\n",
				"Z.java",
				"public class Z {}",
				"Y.java",
				"public class Y<T> {}",
				"X.java",
				"public class X {\n" +
				"	<T extends Y<@A Z @C[][]@B[]> & @B(3) Cloneable> void foo(T t) {}\n" +
				"}",
		},
		"");
		// javac-b81:
		// Bytes:28[0 2 18 0 0 1 3 0 0 13 0 0 18 0 0 4 3 0 0 0 0 0 0 0 0 14 0 0]
		// Bytes:29[0 2 18 0 0 3 3 0 0 0 0 0 0 16 0 0 18 0 1 0 0 16 0 1 0 17 73 0 18]
		String expectedOutput =
			"    RuntimeVisibleTypeAnnotations: \n" + 
			"      #27 @A(\n" + 
			"        target type = 0x12 METHOD_TYPE_PARAMETER_BOUND\n" + 
			"        type parameter index = 0 type parameter bound index = 0\n" + 
			"        location = [TYPE_ARGUMENT(0), ARRAY, ARRAY, ARRAY]\n" + 
			"      )\n" + 
			"      #28 @C(\n" + 
			"        target type = 0x12 METHOD_TYPE_PARAMETER_BOUND\n" + 
			"        type parameter index = 0 type parameter bound index = 0\n" + 
			"        location = [TYPE_ARGUMENT(0)]\n" + 
			"      )\n" + 
			"    RuntimeInvisibleTypeAnnotations: \n" +  
			"      #23 @B(\n" + 
			"        target type = 0x12 METHOD_TYPE_PARAMETER_BOUND\n" + 
			"        type parameter index = 0 type parameter bound index = 0\n" + 
			"        location = [TYPE_ARGUMENT(0), ARRAY, ARRAY]\n" + 
			"      )\n" + 
			"      #23 @B(\n" + 
			"        #24 value=(int) 3 (constant type)\n" + 
			"        target type = 0x12 METHOD_TYPE_PARAMETER_BOUND\n" + 
			"        type parameter index = 0 type parameter bound index = 1\n" + 
			"      )\n";
		checkDisassembledClassFile(OUTPUT_DIR + File.separator + "X.class", "X", expectedOutput, ClassFileBytesDisassembler.SYSTEM);
	}

