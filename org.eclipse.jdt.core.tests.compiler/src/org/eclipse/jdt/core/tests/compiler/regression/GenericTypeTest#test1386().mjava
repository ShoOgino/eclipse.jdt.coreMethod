//https://bugs.eclipse.org/bugs/show_bug.cgi?id=247953 - variation
//FIXME javac8 rejects (why?)
public void test1386()  throws Exception {
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X<T extends AA & p.IB> {\n" +
			"	T get() { return null; }\n" +
			"	\n" +
			"	void foo(X<T> xt) {\n" +
			"		xt.get().baz();\n" +
			"	}\n" +
			"}\n" +
			"class AA {\n" +
			"	void bar() {}\n" +
			"}\n",
			"p/IB.java", // =====================
			"package p;\n" +
			"interface IA {\n" +
			"	void baz();\n" +
			"}\n" +
			"public interface IB extends IA {\n" +
			"}\n",
		},
		"");
	// check #baz() invocation declaring class is not IA
	String expectedOutput =
		"  // Method descriptor #21 (LX;)V\n" +
		"  // Signature: (LX<TT;>;)V\n" +
		"  // Stack: 1, Locals: 2\n" +
		"  void foo(X xt);\n" +
		"     0  aload_1 [xt]\n" +
		"     1  invokevirtual X.get() : AA [23]\n" +
		"     4  checkcast p.IB [25]\n" +
		"     7  invokeinterface p.IB.baz() : void [27] [nargs: 1]\n" +
		"    12  return\n" +
		"      Line numbers:\n" +
		"        [pc: 0, line: 5]\n" +
		"        [pc: 12, line: 6]\n" +
		"      Local variable table:\n" +
		"        [pc: 0, pc: 13] local: this index: 0 type: X\n" +
		"        [pc: 0, pc: 13] local: xt index: 1 type: X\n";

	File f = new File(OUTPUT_DIR + File.separator + "X.class");
	byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
	ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
	String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
	int index = result.indexOf(expectedOutput);
	if (index == -1 || expectedOutput.length() == 0) {
		System.out.println(Util.displayString(result, 3));
	}
	if (index == -1) {
		assertEquals("Wrong contents", expectedOutput, result);
	}
}

