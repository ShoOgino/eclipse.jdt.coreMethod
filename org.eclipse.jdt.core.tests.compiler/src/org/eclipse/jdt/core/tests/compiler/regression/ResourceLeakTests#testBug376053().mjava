// Bug 376053 - [compiler][resource] Strange potential resource leak problems
// include line number when reporting against <unassigned Closeable value>
public void testBug376053() {
	Map options = getCompilerOptions();
	options.put(CompilerOptions.OPTION_ReportPotentiallyUnclosedCloseable, CompilerOptions.ERROR);
	options.put(CompilerOptions.OPTION_ReportUnclosedCloseable, CompilerOptions.ERROR);
	runLeakTest(
		new String[] {
			"Try.java",
			"package xy;\n" + 
			"\n" + 
			"import java.io.FileNotFoundException;\n" + 
			"import java.io.PrintStream;\n" + 
			"\n" + 
			"public class Try {\n" + 
			"    public static void main(String[] args) throws FileNotFoundException {\n" + 
			"        System.setOut(new PrintStream(\"log.txt\"));\n" + 
			"        \n" + 
			"        if (Math.random() > .5) {\n" + 
			"            return;\n" + 
			"        }\n" + 
			"        System.out.println(\"Hello World\");\n" + 
			"        return;\n" + 
			"    }\n" + 
			"}"
		},
		"----------\n" + 
		"1. ERROR in Try.java (at line 11)\n" + 
		"	return;\n" + 
		"	^^^^^^^\n" + 
		"Potential resource leak: \'<unassigned Closeable value from line 8>\' may not be closed at this location\n" + 
		"----------\n" + 
		"2. ERROR in Try.java (at line 14)\n" + 
		"	return;\n" + 
		"	^^^^^^^\n" + 
		"Potential resource leak: \'<unassigned Closeable value from line 8>\' may not be closed at this location\n" + 
		"----------\n",
		options);
}

