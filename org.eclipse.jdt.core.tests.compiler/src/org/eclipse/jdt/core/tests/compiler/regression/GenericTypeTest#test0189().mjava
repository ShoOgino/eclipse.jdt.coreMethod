	// parameterized invocation of non generic method
	public void test0189() {
		String expectedOutput = this.complianceLevel < ClassFileConstants.JDK1_7
			? 	"----------\n" + 
				"1. ERROR in X.java (at line 7)\n" + 
				"	System.out.println(new X().<String>foo());\n" + 
				"	                                   ^^^\n" + 
				"The method foo() of type X is not generic; it cannot be parameterized with arguments <String>\n" + 
				"----------\n"
			: 	"----------\n" + 
				"1. ERROR in X.java (at line 7)\n" + 
				"	System.out.println(new X().<String>foo());\n" + 
				"	           ^^^^^^^\n" + 
				"The method println(boolean) in the type PrintStream is not applicable for the arguments (void)\n" + 
				"----------\n" + 
				"2. WARNING in X.java (at line 7)\n" + 
				"	System.out.println(new X().<String>foo());\n" + 
				"	                            ^^^^^^\n" + 
				"Unused type arguments for the non generic method foo() of type X; it should not be parameterized with arguments <String>\n" + 
				"----------\n";
		
		this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X {\n" + 
				"\n" + 
				"	void foo() {\n" + 
				"		return;\n" + 
				"	}\n" + 
				"	public static void main(String[] args) {\n" + 
				"		System.out.println(new X().<String>foo());\n" + 
				"	}\n" + 
				"}\n", 
			},
			expectedOutput);
	}		

