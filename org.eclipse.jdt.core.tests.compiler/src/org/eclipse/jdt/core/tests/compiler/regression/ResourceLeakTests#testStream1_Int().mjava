// normal java.util.stream.IntStream doesn't hold on to any resources
public void testStream1_Int() {
	if (this.complianceLevel < ClassFileConstants.JDK1_8)
		return; // uses JRE 8 API
	Map options = getCompilerOptions();
	options.put(CompilerOptions.OPTION_ReportPotentiallyUnclosedCloseable, CompilerOptions.ERROR);
	options.put(CompilerOptions.OPTION_ReportUnclosedCloseable, CompilerOptions.ERROR);
	runConformTest(
		new String[] {
			"A.java",
			"import java.util.stream.*;\n" +
			"class A {\n" +
			"    public void f(Stream<Object> s) {\n" +
			"        IntStream n = s.mapToInt(Object::hashCode);\n" +
			"        IntStream n2 = IntStream.range(23, 42);\n" +
			"        n.forEach(i -> System.out.println(i));\n" +
			"        n2.forEach(i -> System.out.println(i));\n" +
			"    }\n" +
			"}"
		},
		options
		);
}

