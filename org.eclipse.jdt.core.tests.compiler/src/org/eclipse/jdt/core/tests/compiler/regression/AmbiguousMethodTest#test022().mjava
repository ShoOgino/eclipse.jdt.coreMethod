	// https://bugs.eclipse.org/bugs/show_bug.cgi?id=147647
	// variant: using instances triggers raw methods, which are ambiguous
	public void test022() {
		// http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6182950
		String expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?
		"----------\n" + 
		"1. WARNING in X.java (at line 3)\n" + 
		"	class Y<V extends String> extends X<V> {\n" + 
		"	                  ^^^^^^\n" + 
		"The type parameter V should not be bounded by the final type String. Final types cannot be further extended\n" + 
		"----------\n" + 
		"2. WARNING in X.java (at line 4)\n" + 
		"	public <W extends String> Y<W> make(Class<W> clazz) {\n" + 
		"	                  ^^^^^^\n" + 
		"The type parameter W should not be bounded by the final type String. Final types cannot be further extended\n" + 
		"----------\n" + 
		"3. WARNING in X.java (at line 4)\n" + 
		"	public <W extends String> Y<W> make(Class<W> clazz) {\n" + 
		"	                               ^^^^^^^^^^^^^^^^^^^^\n" + 
		"Erasure of method make(Class<W>) is the same as another method in type Y<V>\n" +
		"----------\n" + 
		"4. WARNING in X.java (at line 7)\n" + 
		"	public <U extends Object> X<U> make(Class<U> clazz) {\n" + 
		"	                               ^^^^^^^^^^^^^^^^^^^^\n" + 
		"Erasure of method make(Class<U>) is the same as another method in type Y<V>\n" +
		"----------\n" + 
		"5. WARNING in X.java (at line 11)\n" + 
		"	Y y = new Y();\n" + 
		"	^\n" + 
		"Y is a raw type. References to generic type Y<V> should be parameterized\n" + 
		"----------\n" + 
		"6. WARNING in X.java (at line 11)\n" + 
		"	Y y = new Y();\n" + 
		"	          ^\n" + 
		"Y is a raw type. References to generic type Y<V> should be parameterized\n" + 
		"----------\n" + 
		"7. ERROR in X.java (at line 12)\n" + 
		"	y.make(String.class);\n" + 
		"	  ^^^^\n" + 
		"The method make(Class) is ambiguous for the type Y\n" + 
		"----------\n" + 
		"8. ERROR in X.java (at line 13)\n" + 
		"	y.make(getClazz());\n" + 
		"	  ^^^^\n" + 
		"The method make(Class) is ambiguous for the type Y\n" + 
		"----------\n" + 
		"9. ERROR in X.java (at line 14)\n" + 
		"	y.make(getClazz().newInstance().getClass());\n" + 
		"	  ^^^^\n" + 
		"The method make(Class) is ambiguous for the type Y\n" + 
		"----------\n" + 
		"10. WARNING in X.java (at line 16)\n" + 
		"	public static Class getClazz() {\n" + 
		"	              ^^^^^\n" + 
		"Class is a raw type. References to generic type Class<T> should be parameterized\n" + 
		"----------\n":
			"----------\n" + 
			"1. WARNING in X.java (at line 3)\n" + 
			"	class Y<V extends String> extends X<V> {\n" + 
			"	                  ^^^^^^\n" + 
			"The type parameter V should not be bounded by the final type String. Final types cannot be further extended\n" + 
			"----------\n" + 
			"2. WARNING in X.java (at line 4)\n" + 
			"	public <W extends String> Y<W> make(Class<W> clazz) {\n" + 
			"	                  ^^^^^^\n" + 
			"The type parameter W should not be bounded by the final type String. Final types cannot be further extended\n" + 
			"----------\n" + 
			"3. ERROR in X.java (at line 4)\n" + 
			"	public <W extends String> Y<W> make(Class<W> clazz) {\n" + 
			"	                               ^^^^^^^^^^^^^^^^^^^^\n" + 
			"Erasure of method make(Class<W>) is the same as another method in type Y<V>\n" +
			"----------\n" + 
			"4. ERROR in X.java (at line 7)\n" + 
			"	public <U extends Object> X<U> make(Class<U> clazz) {\n" + 
			"	                               ^^^^^^^^^^^^^^^^^^^^\n" + 
			"Erasure of method make(Class<U>) is the same as another method in type Y<V>\n" +
			"----------\n" + 
			"5. WARNING in X.java (at line 11)\n" + 
			"	Y y = new Y();\n" + 
			"	^\n" + 
			"Y is a raw type. References to generic type Y<V> should be parameterized\n" + 
			"----------\n" + 
			"6. WARNING in X.java (at line 11)\n" + 
			"	Y y = new Y();\n" + 
			"	          ^\n" + 
			"Y is a raw type. References to generic type Y<V> should be parameterized\n" + 
			"----------\n" + 
			"7. WARNING in X.java (at line 12)\n" + 
			"	y.make(String.class);\n" + 
			"	^^^^^^^^^^^^^^^^^^^^\n" + 
			"Type safety: The method make(Class) belongs to the raw type Y. References to generic type Y<V> should be parameterized\n" + 
			"----------\n" + 
			"8. WARNING in X.java (at line 13)\n" + 
			"	y.make(getClazz());\n" + 
			"	^^^^^^^^^^^^^^^^^^\n" + 
			"Type safety: The method make(Class) belongs to the raw type Y. References to generic type Y<V> should be parameterized\n" + 
			"----------\n" + 
			"9. WARNING in X.java (at line 14)\n" + 
			"	y.make(getClazz().newInstance().getClass());\n" + 
			"	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Type safety: The method make(Class) belongs to the raw type Y. References to generic type Y<V> should be parameterized\n" + 
			"----------\n" + 
			"10. WARNING in X.java (at line 16)\n" + 
			"	public static Class getClazz() {\n" + 
			"	              ^^^^^\n" + 
			"Class is a raw type. References to generic type Class<T> should be parameterized\n" + 
			"----------\n";
		this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X<T extends Object> {\n" +
				"}\n" +
				"class Y<V extends String> extends X<V> {\n" +
				"  public <W extends String> Y<W> make(Class<W> clazz) {\n" +
				"    return new Y<W>();\n" +
				"  }\n" +
				"  public <U extends Object> X<U> make(Class<U> clazz) {\n" +
				"    return new X<U>();\n" +
				"  }\n" +
				"  public static void main(String[] args) throws Exception {\n" +
				"    Y y = new Y();\n" +
				"    y.make(String.class);\n" +
				"    y.make(getClazz());\n" +
				"    y.make(getClazz().newInstance().getClass());\n" +
				"  }\n" +
				"  public static Class getClazz() {\n" +
				"    return String.class;\n" +
				"  }\n" +
				"}"
			},
			expectedCompilerLog
		);
/* javac 7
X.java:7: name clash: <U>make(Class<U>) and <W>make(Class<W>) have the same erasure
  public <U extends Object> X<U> make(Class<U> clazz) {
                                 ^
  where U,W are type-variables:
    U extends Object declared in method <U>make(Class<U>)
    W extends String declared in method <W>make(Class<W>)
X.java:12: warning: [unchecked] unchecked call to <W>make(Class<W>) as a member of the raw type Y
    y.make(String.class);
          ^
  where W is a type-variable:
    W extends String declared in method <W>make(Class<W>)
X.java:13: warning: [unchecked] unchecked call to <W>make(Class<W>) as a member of the raw type Y
    y.make(getClazz());
          ^
  where W is a type-variable:
    W extends String declared in method <W>make(Class<W>)
X.java:14: warning: [unchecked] unchecked call to <W>make(Class<W>) as a member of the raw type Y
    y.make(getClazz().newInstance().getClass());
          ^
  where W is a type-variable:
    W extends String declared in method <W>make(Class<W>)
1 error
3 warnings
 */
	}

