		public boolean visit(MethodDeclaration methodDeclaration, ClassScope scope) {
			TypeReference returnType = methodDeclaration.returnType;
			if (returnType != null) {
				this.enclosingReference = returnType;
				returnType.traverse(this, scope);
			}
			if (methodDeclaration.thrownExceptions != null) {
				int thrownExceptionsLength = methodDeclaration.thrownExceptions.length;
				for (int i = 0; i < thrownExceptionsLength; i++) {
					TypeReference typeReference = methodDeclaration.thrownExceptions[i];
					this.enclosingReference = typeReference;
					typeReference.traverse(this, scope);
				}
			}
			return false;
		}

