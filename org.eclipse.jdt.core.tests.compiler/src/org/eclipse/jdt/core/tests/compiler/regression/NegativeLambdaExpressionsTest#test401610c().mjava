// https://bugs.eclipse.org/bugs/show_bug.cgi?id=401610, [1.8][compiler] Allow lambda/reference expressions in non-overloaded method invocation contexts
public void test401610c() {
this.runNegativeTest(
		new String[] {
				"X.java",
				"interface I {\n" +
				"    void foo();\n" +
				"}\n" +
				"interface K {\n" +
				"    String foo(String s);\n" +
				"}\n" +
				"public class X {\n" +
				"	void foo(I i) {\n" +
				"		System.out.println(\"foo(I)\");\n" +
				"	}\n" +
				"	void foo(K k) {\n" +
				"		System.out.println(\"foo(K)\");\n" +
				"	}\n" +
				"	public static void main(String[] args) {\n" +
				"		new X().foo(()->{ return \"\";});\n" +
				"		new X().foo(()-> 10);\n" +
				"		new X().foo((s)->{});\n" +
				"		new X().foo((s)->{ return;});\n" +
				"		new X().foo((s)->{ return \"\";});\n" +
				"		new X().foo((s)-> \"hello\");\n" +
				"		new X().foo(()->{ return;});\n" +
				"		new X().foo(()-> System.out.println());\n" +
				"	}\n" +
				"}\n",
				},
				"----------\n" +
				"1. ERROR in X.java (at line 15)\n" +
				"	new X().foo(()->{ return \"\";});\n" +
				"	        ^^^\n" +
				"The method foo(I) in the type X is not applicable for the arguments (() -> {})\n" +
				"----------\n" +
				"2. ERROR in X.java (at line 15)\n" +
				"	new X().foo(()->{ return \"\";});\n" +
				"	                  ^^^^^^^^^^\n" +
				"Void methods cannot return a value\n" +
				"----------\n" +
				"3. ERROR in X.java (at line 16)\n" +
				"	new X().foo(()-> 10);\n" +
				"	        ^^^\n" +
				"The method foo(I) in the type X is not applicable for the arguments (() -> {})\n" +
				"----------\n" +
				"4. ERROR in X.java (at line 16)\n" +
				"	new X().foo(()-> 10);\n" +
				"	                 ^^\n" +
				"Void methods cannot return a value\n" +
				"----------\n" +
				"5. ERROR in X.java (at line 17)\n" +
				"	new X().foo((s)->{});\n" +
				"	        ^^^\n" +
				"The method foo(I) in the type X is not applicable for the arguments ((<no type> s) -> {})\n" +
				"----------\n" +
				"6. ERROR in X.java (at line 17)\n" +
				"	new X().foo((s)->{});\n" +
				"	            ^^^^^\n" +
				"Lambda expression\'s signature does not match the signature of the functional interface method foo()\n" +
				"----------\n" +
				"7. ERROR in X.java (at line 18)\n" +
				"	new X().foo((s)->{ return;});\n" +
				"	        ^^^\n" +
				"The method foo(I) in the type X is not applicable for the arguments ((<no type> s) -> {})\n" +
				"----------\n" +
				"8. ERROR in X.java (at line 18)\n" +
				"	new X().foo((s)->{ return;});\n" +
				"	            ^^^^^\n" +
				"Lambda expression\'s signature does not match the signature of the functional interface method foo()\n" +
				"----------\n");
}

