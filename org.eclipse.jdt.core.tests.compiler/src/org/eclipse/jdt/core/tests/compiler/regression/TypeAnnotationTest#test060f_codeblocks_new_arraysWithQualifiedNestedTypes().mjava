	public void test060f_codeblocks_new_arraysWithQualifiedNestedTypes() throws Exception {
		this.runConformTest(
			new String[] {
				"Z.java",
				"public class Z {}",
				"X.java",
				"package org.foo.bar;\n" +
				"public class X {\n" +
				"	public boolean foo(String s) {\n" +
				"		System.out.println(\"xyz\");\n" +
				"		Object o = new org.foo.bar.@B(1) Outer.@B(2) Inner @B(3) [2] @B(4)[4];\n" +
				"		return true;\n" +
				"	}\n" +
				"}\n" +
				"class Outer { class Inner {}}\n",
				"B.java",
				"package org.foo.bar;\n" +
				"import java.lang.annotation.*;\n" +
				"@Target(ElementType.TYPE_USE)\n" +
				"@Retention(RetentionPolicy.RUNTIME)\n" +
				"@interface B {\n" +
				"	int value() default 99;\n" +
				"}\n",
		},
		"");
		String expectedOutput =
			"    RuntimeVisibleTypeAnnotations: \n" +
			"      #37 @org.foo.bar.B(\n" +
			"        #38 value=(int) 1 (constant type)\n" +
			"        target type = 0x44 NEW\n" +
			"        offset = 10\n" +
			"        location = [ARRAY, ARRAY]\n" +
			"      )\n" +
			"      #37 @org.foo.bar.B(\n" +
			"        #38 value=(int) 2 (constant type)\n" +
			"        target type = 0x44 NEW\n" +
			"        offset = 10\n" +
			"        location = [ARRAY, ARRAY, INNER_TYPE]\n" +
			"      )\n" +
			"      #37 @org.foo.bar.B(\n" +
			"        #38 value=(int) 3 (constant type)\n" +
			"        target type = 0x44 NEW\n" +
			"        offset = 10\n" +
			"      )\n" +
			"      #37 @org.foo.bar.B(\n" +
			"        #38 value=(int) 4 (constant type)\n" +
			"        target type = 0x44 NEW\n" +
			"        offset = 10\n" +
			"        location = [ARRAY]\n" +
			"      )\n";
		checkDisassembledClassFile(OUTPUT_DIR + File.separator + "org" + File.separator + "foo" + File.separator + "bar" + File.separator + "X.class",
				"org.foo.bar.X", expectedOutput, ClassFileBytesDisassembler.SYSTEM);
	}

