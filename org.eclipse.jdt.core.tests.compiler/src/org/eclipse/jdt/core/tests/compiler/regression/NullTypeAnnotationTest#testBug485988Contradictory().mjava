public void testBug485988Contradictory() {
	runNegativeTestWithLibs(
		new String[] {
			"test/Test1.java",
			"package test;\n" +
			"\n" +
			"import org.eclipse.jdt.annotation.*;\n" +
			"interface A<T> {\n" +
			"}\n" +
			"public class Test1{\n" +
			"	void f1(A<@Nullable @NonNull ?> a) {\n" +
			"	}\n" +
			"	void f2(A<@NonNull @Nullable ?> a) {\n" +
			"	}\n" +
			"	void f3(A<@Nullable ? extends @NonNull Object> a) {\n" +
			"	}\n" +
			"	void f4(A<@NonNull ? super @Nullable Integer> a) {\n" +
			"	}\n" +
			"	void f5(A<@Nullable ? super @Nullable Integer> a) {\n" + // OK
			"	}\n" +
			"	@NonNullByDefault void f6(A<@Nullable ? extends Integer> a) {\n" + // OK
			"	}\n" +
			"}\n" +
			"\n",
		},
		getCompilerOptions(),
		"----------\n" +
		"1. ERROR in test\\Test1.java (at line 7)\n" +
		"	void f1(A<@Nullable @NonNull ?> a) {\n" +
		"	                    ^^^^^^^^\n" +
		"Contradictory null specification; only one of @NonNull and @Nullable can be specified at any location\n" +
		"----------\n" +
		"2. ERROR in test\\Test1.java (at line 9)\n" +
		"	void f2(A<@NonNull @Nullable ?> a) {\n" +
		"	                   ^^^^^^^^^\n" +
		"Contradictory null specification; only one of @NonNull and @Nullable can be specified at any location\n" +
		"----------\n" +
		"3. ERROR in test\\Test1.java (at line 11)\n" +
		"	void f3(A<@Nullable ? extends @NonNull Object> a) {\n" +
		"	                              ^^^^^^^^\n" +
		"This nullness annotation conflicts with a \'@Nullable\' annotation which is effective on the same type parameter \n" +
		"----------\n" +
		"4. ERROR in test\\Test1.java (at line 13)\n" +
		"	void f4(A<@NonNull ? super @Nullable Integer> a) {\n" +
		"	                           ^^^^^^^^^\n" +
		"This nullness annotation conflicts with a \'@NonNull\' annotation which is effective on the same type parameter \n" +
		"----------\n"
	);
}

