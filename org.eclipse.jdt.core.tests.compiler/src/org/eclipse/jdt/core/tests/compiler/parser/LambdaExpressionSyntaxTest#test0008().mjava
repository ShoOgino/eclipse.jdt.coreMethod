	// type elided, unparenthesized parameter + expression body lambda in constructor call.
	public void test0008() throws IOException {
		String source =
				"interface I {\n" +
				"    int square(int x);\n" +
				"}\n" +
				"public class X {\n" +
				"    X (I i1, I i2) {\n" +
				"        System.out.println(i1.square(10));\n" +
				"        System.out.println(i2.square(10));\n" +
				"    }\n" +
				"    public static void main(String [] args) {\n" +
				"        new X(x -> x * x, x -> x * x * x);\n" +
				"    }\n" +
				"}\n";

		String expectedUnitToString =
				"interface I {\n" +
				"  int square(int x);\n" +
				"}\n" +
				"public class X {\n" +
				"  X(I i1, I i2) {\n" +
				"    super();\n" +
				"    System.out.println(i1.square(10));\n" +
				"    System.out.println(i2.square(10));\n" +
				"  }\n" +
				"  public static void main(String[] args) {\n" +
				"    new X((<no type> x) -> (x * x), (<no type> x) -> ((x * x) * x));\n" +
				"  }\n" +
				"}\n";
		checkParse(CHECK_PARSER | CHECK_JAVAC_PARSER , source.toCharArray(), null, "test0008", expectedUnitToString);
	}

