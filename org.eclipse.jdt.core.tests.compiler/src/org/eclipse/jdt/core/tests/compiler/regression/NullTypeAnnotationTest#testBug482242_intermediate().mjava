public void testBug482242_intermediate() {
	Map options = getCompilerOptions();
	options.put(JavaCore.COMPILER_PB_ANNOTATED_TYPE_ARGUMENT_TO_UNANNOTATED, JavaCore.ERROR);
	runNegativeTestWithLibs(
		new String[] {
			"Test.java",
			"import java.util.*;\n" +
			"import org.eclipse.jdt.annotation.*;\n" +
			"\n" +
			"public class Test {\n" +
			"    public static void main(String[] args) {\n" +
			"        ArrayList<@NonNull String> list = new ArrayList<>();\n" +
			"        collect(list, null);\n" +
			"        for (String s : list)\n" +
			"            System.out.println(s.toUpperCase());\n" +
			"    }\n" +
			"    static void collect(List<@NonNull String> list, String string) {\n" +
			"        list.add(string);     // (1)\n" +
			"        insert(list, string); // (2)\n" +
			"    }\n" +
			"    static void insert(List<? super String> l, String s) {\n" +
			"        l.add(s);\n" +
			"    }\n" +
			"}\n"
		},
		options,
		"----------\n" +
		"1. WARNING in Test.java (at line 12)\n" +
		"	list.add(string);     // (1)\n" +
		"	         ^^^^^^\n" +
		"Null type safety (type annotations): The expression of type \'String\' needs unchecked conversion to conform to \'@NonNull String\'\n" +
		"----------\n" +
		"2. ERROR in Test.java (at line 13)\n" +
		"	insert(list, string); // (2)\n" +
		"	       ^^^^\n" +
		"Unsafe null type conversion (type annotations): The value of type \'List<@NonNull String>\' is made accessible using the less-annotated type \'List<? super String>\'\n" +
		"----------\n");
}

