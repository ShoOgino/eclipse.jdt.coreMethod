// https://bugs.eclipse.org/bugs/show_bug.cgi?id=381172
// To check that code gen is ok
public void testBug381172() throws Exception {
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" +
			"    public static void main(String[] args){\n" +
			"        System.out.println(\"Test\");\n" +
			"    }\n" +
			"    public void method() {\n" +
			"        try {\n" +
			"            int rc;\n" +
			"            switch ( 0 )\n" +
			"            {\n" +
			"                case 0:\n" +
			"                    rc = 0;\n" +
			"                    setRC( rc );\n" +
			"                    break;\n" +
			"                case 1:\n" +
			"                    rc = 1;\n" +
			"                    setRC( 0 );\n" +
			"                    break;\n" +
			"                case 2:\n" +
			"                    rc = 2;\n" +
			"                    setRC( 0 );\n" +
			"                    break;\n" +
			"                default:\n" +
			"                    break;\n" +
			"            }\n" +
			"        }\n" +
			"        catch ( final Exception ex ) {}\n" +
			"    }\n" +
			"    private void setRC(int rc) {}\n" +
			"}",
		}); // custom requestor

	String expectedOutput = this.complianceLevel < ClassFileConstants.JDK1_6 ?
			"      Local variable table:\n" +
			"        [pc: 0, pc: 1] local: this index: 0 type: X\n" +
			"        [pc: 0, pc: 1] local: rc index: 1 type: int\n":
				"      Local variable table:\n" +
				"        [pc: 0, pc: 63] local: this index: 0 type: X\n" +
				"        [pc: 30, pc: 38] local: rc index: 1 type: int\n" +
				"        [pc: 40, pc: 48] local: rc index: 1 type: int\n" +
				"        [pc: 50, pc: 58] local: rc index: 1 type: int\n" +
				"      Stack map table: number of frames 6\n" +
				"        [pc: 28, same]\n" +
				"        [pc: 38, same]\n" +
				"        [pc: 48, same]\n" +
				"        [pc: 58, same]\n" +
				"        [pc: 61, same_locals_1_stack_item, stack: {java.lang.Exception}]\n" +
				"        [pc: 62, same]\n";

	File f = new File(OUTPUT_DIR + File.separator + "X.class");
	byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
	ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
	String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
	int index = result.indexOf(expectedOutput);
	if (index == -1 || expectedOutput.length() == 0) {
		System.out.println(Util.displayString(result, 3));
	}
	if (index == -1) {
		assertEquals("Wrong contents", expectedOutput, result);
	}
}

