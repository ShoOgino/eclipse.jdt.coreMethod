// https://bugs.eclipse.org/bugs/show_bug.cgi?id=382721, [1.8][compiler] Effectively final variables needs special treatment
public void test067() {
	// This test checks that common semantic checks are indeed run
	this.runNegativeTest(
			new String[] {
					"X.java",
					"interface I {\n" +
					"	void doit ();\n" +
					"}\n" +
					"class X {\n" +
					"	int p;\n" +
					"	void foo(int p) {\n" +
					"		int i = 10;\n" +
					"		X x = new X();\n" +
					"		x = new X();\n" +
					"		I l = () -> {\n" +
					"			x.p = i++;\n" +
					"		};\n" +
					"	}\n" +
					"}\n",
				},
				"----------\n" +
				"1. WARNING in X.java (at line 6)\n" +
				"	void foo(int p) {\n" +
				"	             ^\n" +
				"The parameter p is hiding a field from type X\n" +
				"----------\n" +
				"2. ERROR in X.java (at line 11)\n" +
				"	x.p = i++;\n" +
				"	      ^\n" +
				"Local variable i defined in an enclosing scope must be final or effectively final\n" +
				"----------\n");
}

