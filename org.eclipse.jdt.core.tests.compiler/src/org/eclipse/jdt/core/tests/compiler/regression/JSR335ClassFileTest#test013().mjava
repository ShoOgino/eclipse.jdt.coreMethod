// https://bugs.eclipse.org/bugs/show_bug.cgi?id=406627,  [1.8][compiler][codegen] Annotations on lambda parameters go the way of /dev/null
public void test013() throws Exception {
	this.runConformTest(
		new String[] {
				"X.java",
				"import java.lang.annotation.ElementType;\n" +
				"import java.lang.annotation.Retention;\n" +
				"import java.lang.annotation.RetentionPolicy;\n" +
				"import java.lang.annotation.Target;\n" +
				"interface I {\n" +
				"	void doit (Object o, Object p);\n" +
				"}\n" +
				"public class X {\n" +
				"   public static void main(String [] args) {\n" +
				"	I i = (@Annotation Object o, @Annotation Object p) -> {\n" +
				"	};\n" +
				"}\n" +
				"}\n" +
				"@Target(ElementType.PARAMETER)\n" +
				"@Retention(RetentionPolicy.RUNTIME)\n" +
				"@interface Annotation {\n" +
				"}\n",
		},
		"");

	String expectedOutput =
			"// Compiled from X.java (" + this.versionString + ", super bit)\n" +
			"public class X {\n" +
			"  Constant pool:\n" +
			"    constant #1 class: #2 X\n" +
			"    constant #2 utf8: \"X\"\n" +
			"    constant #3 class: #4 java/lang/Object\n" +
			"    constant #4 utf8: \"java/lang/Object\"\n" +
			"    constant #5 utf8: \"<init>\"\n" +
			"    constant #6 utf8: \"()V\"\n" +
			"    constant #7 utf8: \"Code\"\n" +
			"    constant #8 method_ref: #3.#9 java/lang/Object.<init> ()V\n" +
			"    constant #9 name_and_type: #5.#6 <init> ()V\n" +
			"    constant #10 utf8: \"LineNumberTable\"\n" +
			"    constant #11 utf8: \"LocalVariableTable\"\n" +
			"    constant #12 utf8: \"this\"\n" +
			"    constant #13 utf8: \"LX;\"\n" +
			"    constant #14 utf8: \"main\"\n" +
			"    constant #15 utf8: \"([Ljava/lang/String;)V\"\n" +
			"    constant #16 invoke dynamic: #0 #17 doit ()LI;\n" +
			"    constant #17 name_and_type: #18.#19 doit ()LI;\n" +
			"    constant #18 utf8: \"doit\"\n" +
			"    constant #19 utf8: \"()LI;\"\n" +
			"    constant #20 utf8: \"args\"\n" +
			"    constant #21 utf8: \"[Ljava/lang/String;\"\n" +
			"    constant #22 utf8: \"i\"\n" +
			"    constant #23 utf8: \"LI;\"\n" +
			"    constant #24 utf8: \"lambda$0\"\n" +
			"    constant #25 utf8: \"(Ljava/lang/Object;Ljava/lang/Object;)V\"\n" +
			"    constant #26 utf8: \"RuntimeVisibleParameterAnnotations\"\n" +
			"    constant #27 utf8: \"LAnnotation;\"\n" +
			"    constant #28 utf8: \"o\"\n" +
			"    constant #29 utf8: \"Ljava/lang/Object;\"\n" +
			"    constant #30 utf8: \"p\"\n" +
			"    constant #31 utf8: \"SourceFile\"\n" +
			"    constant #32 utf8: \"X.java\"\n" +
			"    constant #33 utf8: \"BootstrapMethods\"\n" +
			"    constant #34 method_ref: #35.#37 java/lang/invoke/LambdaMetafactory.metafactory (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n" +
			"    constant #35 class: #36 java/lang/invoke/LambdaMetafactory\n" +
			"    constant #36 utf8: \"java/lang/invoke/LambdaMetafactory\"\n" +
			"    constant #37 name_and_type: #38.#39 metafactory (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n" +
			"    constant #38 utf8: \"metafactory\"\n" +
			"    constant #39 utf8: \"(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\"\n" +
			"    constant #40 method handle: invokestatic (6) #34 \n" +
			"    constant #41 method type: #25 (Ljava/lang/Object;Ljava/lang/Object;)V\n" +
			"    constant #42 method_ref: #1.#43 X.lambda$0 (Ljava/lang/Object;Ljava/lang/Object;)V\n" +
			"    constant #43 name_and_type: #24.#25 lambda$0 (Ljava/lang/Object;Ljava/lang/Object;)V\n" +
			"    constant #44 method handle: invokestatic (6) #42 \n" +
			"    constant #45 method type: #25 (Ljava/lang/Object;Ljava/lang/Object;)V\n" +
			"    constant #46 utf8: \"InnerClasses\"\n" +
			"    constant #47 class: #48 java/lang/invoke/MethodHandles$Lookup\n" +
			"    constant #48 utf8: \"java/lang/invoke/MethodHandles$Lookup\"\n" +
			"    constant #49 class: #50 java/lang/invoke/MethodHandles\n" +
			"    constant #50 utf8: \"java/lang/invoke/MethodHandles\"\n" +
			"    constant #51 utf8: \"Lookup\"\n" +
			"  \n" +
			"  // Method descriptor #6 ()V\n" +
			"  // Stack: 1, Locals: 1\n" +
			"  public X();\n" +
			"    0  aload_0 [this]\n" +
			"    1  invokespecial java.lang.Object() [8]\n" +
			"    4  return\n" +
			"      Line numbers:\n" +
			"        [pc: 0, line: 8]\n" +
			"      Local variable table:\n" +
			"        [pc: 0, pc: 5] local: this index: 0 type: X\n" +
			"  \n" +
			"  // Method descriptor #15 ([Ljava/lang/String;)V\n" +
			"  // Stack: 1, Locals: 2\n" +
			"  public static void main(java.lang.String[] args);\n" +
			"    0  invokedynamic 0 doit() : I [16]\n" +
			"    5  astore_1 [i]\n" +
			"    6  return\n" +
			"      Line numbers:\n" +
			"        [pc: 0, line: 10]\n" +
			"        [pc: 6, line: 12]\n" +
			"      Local variable table:\n" +
			"        [pc: 0, pc: 7] local: args index: 0 type: java.lang.String[]\n" +
			"        [pc: 6, pc: 7] local: i index: 1 type: I\n" +
			"  \n" +
			"  // Method descriptor #25 (Ljava/lang/Object;Ljava/lang/Object;)V\n" +
			"  // Stack: 0, Locals: 2\n" +
			"  private static synthetic void lambda$0(java.lang.Object o, java.lang.Object p);\n" +
			"    0  return\n" +
			"      Line numbers:\n" +
			"        [pc: 0, line: 11]\n" +
			"      Local variable table:\n" +
			"        [pc: 0, pc: 1] local: o index: 0 type: java.lang.Object\n" +
			"        [pc: 0, pc: 1] local: p index: 1 type: java.lang.Object\n" +
			"    RuntimeVisibleParameterAnnotations: \n" +
			"      Number of annotations for parameter 0: 1\n" +
			"        #27 @Annotation(\n" +
			"        )\n" +
			"      Number of annotations for parameter 1: 1\n" +
			"        #27 @Annotation(\n" +
			"        )\n" +
			"\n" +
			"  Inner classes:\n" +
			"    [inner class info: #47 java/lang/invoke/MethodHandles$Lookup, outer class info: #49 java/lang/invoke/MethodHandles\n" +
			"     inner name: #51 Lookup, accessflags: 25 public static final]\n" +
			"Bootstrap methods:\n" +
			"  0 : # 40 invokestatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;" +
			"Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n" +
			"	Method arguments:\n" +
			"		#41 (Ljava/lang/Object;Ljava/lang/Object;)V\n" +
			"		#44 invokestatic X.lambda$0:(Ljava/lang/Object;Ljava/lang/Object;)V\n" +
			"		#45 (Ljava/lang/Object;Ljava/lang/Object;)V\n" +
			"}";

	verifyClassFile(expectedOutput, "X.class", ClassFileBytesDisassembler.SYSTEM);
}

