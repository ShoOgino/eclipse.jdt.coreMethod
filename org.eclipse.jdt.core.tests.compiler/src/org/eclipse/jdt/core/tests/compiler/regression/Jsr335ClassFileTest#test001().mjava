public void test001() throws Exception {
	this.runConformTest(
		new String[] {
			"Main.java",
			"public class Main {\n" +
			"    public static void main(String[] args) {\n" +
			"        new X().referenceExpression.run();\n" +
			"        System.out.println(\"SUCCESS\");\n" +
			"    }\n" +
			"}\n",
			"X.java",
			"public class X {\n" +
			"    public Runnable referenceExpression = Thread::yield;\n" +
			"}\n",
		},
	"SUCCESS"
	);

	String expectedOutput =
		"// Compiled from X.java (version 1.8 : 52.0, super bit)\n" + 
		"public class X {\n" + 
		"  Constant pool:\n" + 
		"    constant #1 class: #2 X\n" + 
		"    constant #2 utf8: \"X\"\n" + 
		"    constant #3 class: #4 java/lang/Object\n" + 
		"    constant #4 utf8: \"java/lang/Object\"\n" + 
		"    constant #5 utf8: \"referenceExpression\"\n" + 
		"    constant #6 utf8: \"Ljava/lang/Runnable;\"\n" + 
		"    constant #7 utf8: \"<init>\"\n" + 
		"    constant #8 utf8: \"()V\"\n" + 
		"    constant #9 utf8: \"Code\"\n" + 
		"    constant #10 method_ref: #3.#11 java/lang/Object.<init> ()V\n" + 
		"    constant #11 name_and_type: #7.#8 <init> ()V\n" + 
		"    constant #12 name_and_type: #13.#14 lambda ()Ljava/lang/Runnable;\n" + 
		"    constant #13 utf8: \"lambda\"\n" + 
		"    constant #14 utf8: \"()Ljava/lang/Runnable;\"\n" + 
		"    constant #15 invoke dynamic: #0 #12 lambda ()Ljava/lang/Runnable;\n" + 
		"    constant #16 field_ref: #1.#17 X.referenceExpression Ljava/lang/Runnable;\n" + 
		"    constant #17 name_and_type: #5.#6 referenceExpression Ljava/lang/Runnable;\n" + 
		"    constant #18 utf8: \"LineNumberTable\"\n" + 
		"    constant #19 utf8: \"LocalVariableTable\"\n" + 
		"    constant #20 utf8: \"this\"\n" + 
		"    constant #21 utf8: \"LX;\"\n" + 
		"    constant #22 utf8: \"SourceFile\"\n" + 
		"    constant #23 utf8: \"X.java\"\n" + 
		"    constant #24 method_ref: #25.#27 java/lang/invoke/LambdaMetafactory.metaFactory (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n" + 
		"    constant #25 class: #26 java/lang/invoke/LambdaMetafactory\n" + 
		"    constant #26 utf8: \"java/lang/invoke/LambdaMetafactory\"\n" + 
		"    constant #27 name_and_type: #28.#29 metaFactory (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n" + 
		"    constant #28 utf8: \"metaFactory\"\n" + 
		"    constant #29 utf8: \"(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\"\n" + 
		"    constant #30 method handle: invokestatic (6) #24 \n" + 
		"    constant #31 utf8: \"BootstrapMethods\"\n" + 
		"    constant #32 interface_method_ref: #33.#35 java/lang/Runnable.run ()V\n" + 
		"    constant #33 class: #34 java/lang/Runnable\n" + 
		"    constant #34 utf8: \"java/lang/Runnable\"\n" + 
		"    constant #35 name_and_type: #36.#8 run ()V\n" + 
		"    constant #36 utf8: \"run\"\n" + 
		"    constant #37 method handle: invokeinterface (9) #32 \n" + 
		"    constant #38 method_ref: #39.#41 java/lang/Thread.yield ()V\n" + 
		"    constant #39 class: #40 java/lang/Thread\n" + 
		"    constant #40 utf8: \"java/lang/Thread\"\n" + 
		"    constant #41 name_and_type: #42.#8 yield ()V\n" + 
		"    constant #42 utf8: \"yield\"\n" + 
		"    constant #43 method handle: invokestatic (6) #38 \n" + 
		"    constant #44 method type: #8 ()V\n" + 
		"    constant #45 utf8: \"InnerClasses\"\n" + 
		"    constant #46 class: #47 java/lang/invoke/MethodHandles$Lookup\n" + 
		"    constant #47 utf8: \"java/lang/invoke/MethodHandles$Lookup\"\n" + 
		"    constant #48 class: #49 java/lang/invoke/MethodHandles\n" + 
		"    constant #49 utf8: \"java/lang/invoke/MethodHandles\"\n" + 
		"    constant #50 utf8: \"Lookup\"\n" + 
		"  \n" + 
		"  // Field descriptor #6 Ljava/lang/Runnable;\n" + 
		"  public java.lang.Runnable referenceExpression;\n" + 
		"  \n" + 
		"  // Method descriptor #8 ()V\n" + 
		"  // Stack: 2, Locals: 1\n" + 
		"  public X();\n" + 
		"     0  aload_0 [this]\n" + 
		"     1  invokespecial java.lang.Object() [10]\n" + 
		"     4  aload_0 [this]\n" + 
		"     5  invokedynamic 0 lambda() : java.lang.Runnable [15]\n" + 
		"    10  putfield X.referenceExpression : java.lang.Runnable [16]\n" + 
		"    13  return\n" + 
		"      Line numbers:\n" + 
		"        [pc: 0, line: 1]\n" + 
		"        [pc: 4, line: 2]\n" + 
		"        [pc: 13, line: 1]\n" + 
		"      Local variable table:\n" + 
		"        [pc: 0, pc: 14] local: this index: 0 type: X\n" + 
		"\n" + 
		"  Inner classes:\n" + 
		"    [inner class info: #46 java/lang/invoke/MethodHandles$Lookup, outer class info: #48 java/lang/invoke/MethodHandles\n" + 
		"     inner name: #50 Lookup, accessflags: 25 public static final]\n" + 
		"Bootstrap methods:\n" + 
		"  0 : # 30 arguments: {#37,#43,#44}\n" + 
		"}";

	verifyClassFile(expectedOutput, "X.class", ClassFileBytesDisassembler.SYSTEM);
}

