public void testBug471280_comment0() {
	runConformTest(
		new String[] {
			"Test0.java",
			"import java.util.*;\n" + 
			"import java.util.function.*;\n" + 
			"import java.util.concurrent.*;\n" + 
			"\n" + 
			"public class Test0 {\n" + 
			"  public CompletableFuture<List<String>> does_not_compile() throws Exception {\n" + 
			"    CompletableFuture<List<String>> firstAsync = new CompletableFuture<>();\n" + 
			"    firstAsync.complete(Collections.singletonList(\"test\"));\n" + 
			"    // The following line gives error \"Type mismatch: cannot convert from CompletableFuture<Object> to CompletableFuture<List<String>>\"\n" + 
			"    return transform(firstAsync, first -> Collections.singletonList(first.get(0)));\n" + 
			"  }\n" + 
			"\n" + 
			"  public CompletableFuture<List<String>> does_compile() throws Exception {\n" + 
			"    CompletableFuture<List<String>> firstAsync = new CompletableFuture<>();\n" + 
			"    firstAsync.complete(Collections.singletonList(\"test\"));\n" + 
			"    return transform(firstAsync, first -> {\n" + 
			"      return Collections.singletonList(first.get(0));\n" + 
			"    });\n" + 
			"  }\n" + 
			"\n" + 
			"  public <T, R> CompletableFuture<R> transform(CompletableFuture<T> future, Function<T, R> fun) throws Exception {\n" + 
			"    return future.thenApply(fun);\n" + 
			"  }\n" + 
			"}\n"
		});
}

