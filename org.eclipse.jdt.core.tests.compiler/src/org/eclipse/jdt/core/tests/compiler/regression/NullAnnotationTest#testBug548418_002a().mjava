public void testBug548418_002a() {
	if (this.complianceLevel != ClassFileConstants.JDK13)
		return;
	Map options = getCompilerOptions();
	options.put(JavaCore.COMPILER_PB_POTENTIAL_NULL_REFERENCE, JavaCore.ERROR);
	options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_13); 
	options.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_13);
	options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_13);
	options.put(CompilerOptions.OPTION_EnablePreviews, CompilerOptions.ENABLED);
	options.put(CompilerOptions.OPTION_ReportPreviewFeatures, CompilerOptions.IGNORE);
	runNegativeTestWithLibs(
			new String[] {
			"X.java",
			"import org.eclipse.jdt.annotation.*;\n" +
			"public class X {\n" +
			"    	void m1(@NonNull String a) {}\n" +
			"		void m2(@Nullable String b, int i) {\n" +
			"			m1(switch(i) {\n" +
			"			case 0 : {\n" +
			"				break \"hello\";\n" +
			"			}\n" +
			"			default : break \"world\";\n" +
			"			});\n" +
			"		}\n" +
			"		void m3() {\n" +
			"			Zork();\n" +
			"		}\n" +
			"}\n"
				},
		options,
		"----------\n" + 
		"1. ERROR in X.java (at line 7)\n" + 
		"	break \"hello\";\n" + 
		"	      ^^^^^^^\n" + 
		"Syntax error on token \"\"hello\"\", delete this token\n" + 
		"----------\n" + 
		"2. ERROR in X.java (at line 9)\n" + 
		"	default : break \"world\";\n" + 
		"	                ^^^^^^^\n" + 
		"Syntax error on token \"\"world\"\", delete this token\n" + 
		"----------\n" + 
		"3. ERROR in X.java (at line 13)\n" + 
		"	Zork();\n" + 
		"	^^^^\n" + 
		"The method Zork() is undefined for the type X\n" + 
		"----------\n"
	);
}

