	// from https://bugs.eclipse.org/bugs/show_bug.cgi?id=385593#c11
	public void test385593_2() throws Exception {
		this.runConformTest(
			new String[] {
					"snippet/X.java",
					"package snippet;\n" + 
					"\n" + 
					"\n" + 
					"public class X { \n" + 
					"	private void foo(boolean delete) { \n" + 
					"		 \n" + 
					"		String s = bar(); \n" + 
					"		StringBuffer buffer =new StringBuffer(); \n" + 
					"		 \n" + 
					"		try { \n" + 
					"			 \n" + 
					"			String[] datas = new String[] { \"\" }; \n" + 
					"			Object[] data= new Object[] { s }; \n" + 
					"			try { \n" + 
					"				buffer.append(datas).append(data); \n" + 
					"			} catch (Exception e) { \n" + 
					"				if (e != null) \n" + 
					"					throw e; \n" + 
					"				return; \n" + 
					"			} \n" + 
					"				 \n" + 
					"			if (delete) \n" + 
					"				buffer.delete(0, buffer.length()); \n" + 
					"			 \n" + 
					"		} catch (Exception x) { \n" + 
					"		} finally { \n" + 
					"			buffer = null; \n" + 
					"		} \n" + 
					"	} \n" + 
					"	 \n" + 
					"	String bar() { \n" + 
					"		return \"\"; \n" + 
					"	} \n" + 
					"	 \n" + 
					"	public static void main(String[] args) { \n" + 
					"		new X().foo(false); \n" + 
					"		System.out.println(\"SUCCESS\"); \n" + 
					"	} \n" + 
					"}\n"
			});

		ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
		byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR+File.separator+"snippet"+File.separator+"X.class"));
		String actualOutput =
			disassembler.disassemble(
				classFileBytes,
				"\n",
				ClassFileBytesDisassembler.DETAILED);

		String expectedOutput =
				"Stack map table: number of frames 7\n" + 
				"        [pc: 49, full, stack: {java.lang.Exception}, locals: {snippet.X, int, java.lang.String, java.lang.StringBuffer, java.lang.String[], java.lang.Object[]}]\n" + 
				"        [pc: 59, append: {java.lang.Exception}]\n" + 
				"        [pc: 62, chop 1 local(s)]\n" + 
				"        [pc: 79, full, stack: {java.lang.Exception}, locals: {snippet.X, int, java.lang.String, java.lang.StringBuffer}]\n" + 
				"        [pc: 86, same_locals_1_stack_item, stack: {java.lang.Throwable}]\n" + 
				"        [pc: 93, same]\n" + 
				"        [pc: 95, same]\n"; 
		
		int index = actualOutput.indexOf(expectedOutput);
		if (index == -1 || expectedOutput.length() == 0) {
			System.out.println(Util.displayString(actualOutput, 2));
		}
		if (index == -1) {
			assertEquals("Wrong contents", expectedOutput, actualOutput);
		}
	}

