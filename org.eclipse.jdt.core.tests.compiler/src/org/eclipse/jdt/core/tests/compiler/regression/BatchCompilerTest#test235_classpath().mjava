// https://bugs.eclipse.org/bugs/show_bug.cgi?id=216684
// different from javac: with javac, newer class file down the classpath wins 
// over source file upstream, while we select the first source or binary found
// in classpath order
public void test235_classpath() {
	runTest(
		true /* shouldCompileOK */,
		new String[] { /* testFiles */
			"Y.java",
			"public class Y {\n" +
			"  X x;\n" +
			"}\n",
			"src1/X.java",
			"public class X {\n" +
			"}\n",
			"src2/X.java",
			"public class X {\n" +
			"  Zork z;\n" +
			"}\n",
		},
		"\"" + OUTPUT_DIR +  File.separator + "Y.java\"" /* commandLine */
		+ " -classpath \"" + OUTPUT_DIR + File.separator + "src1\"[-d \"" + OUTPUT_DIR + File.separator + "bin1\"]"
		+ " -proc:none -d \"" + OUTPUT_DIR + "\"",
		"" /* expectedOutOutputString */,
		"" /* expectedErrOutputString */,
		true /* shouldFlushOutputDirectory */,
		null /* progress */);
	// X.class found before X.java in classpath order entry
	runTest(
		true /* shouldCompileOK */,
		null,
		"\"" + OUTPUT_DIR +  File.separator + "Y.java\"" /* commandLine */
		+ " -classpath \"" + OUTPUT_DIR + File.separator + "bin1\""
		+ " -classpath \"" + OUTPUT_DIR + File.separator + "src2\""
		+ " -verbose -proc:none -d \"" + OUTPUT_DIR + "\"",
		"[parsing    ---OUTPUT_DIR_PLACEHOLDER---/Y.java - #1/1]\n" + 
		"[reading    java/lang/Object.class]\n" + 
		"[analyzing  ---OUTPUT_DIR_PLACEHOLDER---/Y.java - #1/1]\n" + 
		"[reading    X.class]\n" + 
		"[writing    Y.class - #1]\n" + 
		"[completed  ---OUTPUT_DIR_PLACEHOLDER---/Y.java - #1/1]\n" + 
		"[1 unit compiled]\n" + 
		"[1 .class file generated]\n" /* expectedOutOutputString */,
		"" /* expectedErrOutputString */,
		false /* shouldFlushOutputDirectory */,
		null /* progress */);
	// X.java found before X.class in classpath order entry; javac would select
	// X.class since it is more recent (except if using -Xprefer:source)
	runTest(
		false /* shouldCompileOK */,
		null,
		"\"" + OUTPUT_DIR +  File.separator + "Y.java\"" /* commandLine */
		+ " -classpath \"" + OUTPUT_DIR + File.separator + "src2\""
		+ " -classpath \"" + OUTPUT_DIR + File.separator + "bin1\""
		+ " -verbose -proc:none -d \"" + OUTPUT_DIR + "\"",
		"[parsing    ---OUTPUT_DIR_PLACEHOLDER---/Y.java - #1/1]\n" + 
		"[reading    java/lang/Object.class]\n" + 
		"[analyzing  ---OUTPUT_DIR_PLACEHOLDER---/Y.java - #1/1]\n" + 
		"[parsing    ---OUTPUT_DIR_PLACEHOLDER---/src2/X.java - #2/2]\n" + 
		"[writing    Y.class - #1]\n" + 
		"[completed  ---OUTPUT_DIR_PLACEHOLDER---/Y.java - #1/2]\n" + 
		"[analyzing  ---OUTPUT_DIR_PLACEHOLDER---/src2/X.java - #2/2]\n" + 
		"[completed  ---OUTPUT_DIR_PLACEHOLDER---/src2/X.java - #2/2]\n" + 
		"[2 units compiled]\n" + 
		"[1 .class file generated]\n" /* expectedOutOutputString */,
		"----------\n" + 
		"1. ERROR in ---OUTPUT_DIR_PLACEHOLDER---/src2/X.java (at line 2)\n" + 
		"	Zork z;\n" + 
		"	^^^^\n" + 
		"Zork cannot be resolved to a type\n" + 
		"----------\n" + 
		"1 problem (1 error)" /* expectedErrOutputString */,
		false /* shouldFlushOutputDirectory */,
		null /* progress */);
}

