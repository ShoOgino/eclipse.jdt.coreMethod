	// More type path tests
	public void test045() throws Exception {
		this.runConformTest(
			new String[] {
				"X.java",
				"import java.lang.annotation.*;\n" +
				"@Target(ElementType.TYPE_USE)\n" +
				"@interface M {\n" +
				"	String value() default \"default\";\n" +
				"}\n" +
				"@Target(ElementType.TYPE_USE)\n" +
				"@interface L {\n" +
				"	String value() default \"default\";\n" +
				"}\n" +
				"@Target(ElementType.TYPE_USE)\n" +
				"@interface K {\n" +
				"	String value() default \"default\";\n" +
				"}\n" +
				"@Target(ElementType.TYPE_USE)\n" +
				"@interface J {\n" +
				"	String value() default \"default\";\n" +
				"}\n" +
				"class O1 {\n" +
				"	class O2 {\n" +
				"		class O3 {\n" +
				"			class Nested {}\n" +
				"		}\n" +
				"	}\n" +
				"}\n" +
				"class X {\n" +
				"	@M O1.@L O2.@K O3.@J Nested f = null;\n" +
				"}\n",
		},
		"");

		String expectedOutput =
				"  // Field descriptor #6 LO1$O2$O3$Nested;\n" + 
				"  O1$O2$O3$Nested f;\n" + 
				"    RuntimeInvisibleTypeAnnotations: \n" + 
				"      #8 @M(\n" + 
				"        target type = 0x13 FIELD\n" + 
				"      )\n" + 
				"      #9 @L(\n" + 
				"        target type = 0x13 FIELD\n" + 
				"        location = [INNER_TYPE]\n" + 
				"      )\n" + 
				"      #10 @K(\n" + 
				"        target type = 0x13 FIELD\n" + 
				"        location = [INNER_TYPE, INNER_TYPE]\n" + 
				"      )\n" + 
				"      #11 @J(\n" + 
				"        target type = 0x13 FIELD\n" + 
				"        location = [INNER_TYPE, INNER_TYPE, INNER_TYPE]\n" + 
				"      )\n" + 
				"  \n";
		checkDisassembledClassFile(OUTPUT_DIR + File.separator + "X.class", "Z", expectedOutput, ClassFileBytesDisassembler.SYSTEM);
	}

