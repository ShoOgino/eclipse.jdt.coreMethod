// To test Parser.consumeArrayCreationExpressionWithInitializer() with Type Annotations
public void test0092() throws IOException {
	String source =
		"class X {\n" +
		"	static class T {\n" +
		"		public @Readonly Object @Normal(value = 10) [] f() {\n" +
		"			return new @Readonly Object @Normal(value = 10) [] {this, T.this};\n" +
		"		}\n" +
		"	}\n" +
		"}";
	String expectedUnitToString =
		"class X {\n" +
		"  static class T {\n" +
		"    T() {\n" +
		"      super();\n" +
		"    }\n" +
		"    public @Readonly Object @Normal(value = 10) [] f() {\n" +
		"      return new @Readonly Object @Normal(value = 10) []{this, T.this};\n" +
		"    }\n" +
		"  }\n" +
		"  X() {\n" +
		"    super();\n" +
		"  }\n" +
		"}\n";
	checkParse(source.toCharArray(), null, "test0092", expectedUnitToString );
}

