	// check param type equivalences
	public void test367() {
		this.runNegativeTest(
			new String[] {
				"X.java",	
				"public class X { \n" + 
				"	\n" + 
				"	void foo1(MX<? extends MX> target, MX<MX<String>> value) {\n" + 
				"		target= value; // foo1\n" + 
				"	}\n" + 
				"	void foo2(MX<?> target, MX<MX<String>> value) {\n" + 
				"		target= value; // foo2\n" + 
				"	}\n" + 
				"	void foo3(MX<? super MX> target, MX<MX<String>> value) {\n" + 
				"		target= value; // foo3\n" + 
				"	}\n" + 
				"}\n" + 
				"\n" + 
				"class MX<E> {\n" + 
				"}\n"	,
			},
			"----------\n" + 
			"1. WARNING in X.java (at line 3)\n" + 
			"	void foo1(MX<? extends MX> target, MX<MX<String>> value) {\n" + 
			"	                       ^^\n" + 
			"MX is a raw type. References to generic type MX<E> should be parameterized\n" + 
			"----------\n" + 
			"2. WARNING in X.java (at line 9)\n" + 
			"	void foo3(MX<? super MX> target, MX<MX<String>> value) {\n" + 
			"	                     ^^\n" + 
			"MX is a raw type. References to generic type MX<E> should be parameterized\n" + 
			"----------\n" + 
			"3. ERROR in X.java (at line 10)\n" + 
			"	target= value; // foo3\n" + 
			"	        ^^^^^\n" + 
			"Type mismatch: cannot convert from MX<MX<String>> to MX<? super MX>\n" + 
			"----------\n");
	}

