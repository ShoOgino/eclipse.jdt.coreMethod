public void testBug429490() {
	runConformTest(
		new String[] {
			"Junk11.java",
			"public class Junk11 {\n" +
			"    class Observable<T> {}\n" +
			"    class ObservableValue<T> {}\n" +
			"    interface InvalidationListener {\n" +
			"        public void invalidated(Observable observable);\n" +
			"    }\n" +
			"    public interface ChangeListener<T> {\n" +
			"        void changed(ObservableValue<? extends T> observable, T oldValue, T newValue);\n" +
			"    }\n" +
			"    class ExpressionHelper<T> {}\n" +
			"    public static <T> ExpressionHelper<T> addListener(ExpressionHelper<T> helper, ObservableValue<T> observable, InvalidationListener listener) {\n" +
			"        return helper;\n" +
			"    }\n" +
			"    public static <T> ExpressionHelper<T> addListener(ExpressionHelper<T> helper, ObservableValue<T> observable, ChangeListener<? super T> listener) {\n" +
			"        return helper;\n" +
			"    }\n" +
			"    void junk() {\n" +
			"        addListener(null, null, new InvalidationListener () {\n" +
			"            public void invalidated(Observable o) {throw new RuntimeException();}\n" +
			"        });\n" +
			"        addListener(null, null, (o) -> {throw new RuntimeException();});\n" +
			"    }\n" +
			"}\n"
		});
}

