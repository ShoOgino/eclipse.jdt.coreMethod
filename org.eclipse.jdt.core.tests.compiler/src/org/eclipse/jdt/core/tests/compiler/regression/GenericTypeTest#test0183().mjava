	public void test0183() {
		this.runNegativeTest(
			new String[] {
				"X.java",
				"import java.util.*;\n" + 
				"\n" + 
				"public class X {\n" + 
				"	\n" + 
				"	{\n" + 
				"		Dictionary<String, Integer> d;\n" + 
				"		Object o;\n" + 
				"		\n" + 
				"		Object a1 = (Hashtable<String,Integer>) d;\n" + 
				"		Object a2 = (Hashtable) o;\n" + 
				"\n" + 
				"		Object a3 = (Hashtable<Float, Double>) d;\n" + 
				"		Object a4 = (Hashtable<String,Integer>) o;\n" + 
				"		\n" + 
				"		abstract class Z1 extends Hashtable<String,Integer> {\n" + 
				"			private static final long serialVersionUID = 1L;\n" +
				"		}\n" + 
				"		Z1 z1;\n" + 
				"		Object a5 = (Hashtable<String,Integer>) z1;\n" + 
				"\n" + 
				"		abstract class Z2 extends Z1 {\n" + 
				"			private static final long serialVersionUID = 1L;\n" +
				"		}\n" + 
				"		Object a6 = (Z2) z1;\n" + 
				"\n" + 
				"		abstract class Z3 extends Hashtable {\n" + 
				"			private static final long serialVersionUID = 1L;\n" +
				"		}\n" + 
				"		Z3 z3;\n" + 
				"		Object a7 = (Hashtable<String,Integer>) z3;\n" + 
				"	}\n" + 
				"}\n", 
			},
			"----------\n" + 
			"1. WARNING in X.java (at line 9)\n" + 
			"	Object a1 = (Hashtable<String,Integer>) d;\n" + 
			"	            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Unnecessary cast from Dictionary<String,Integer> to Hashtable<String,Integer>\n" + 
			"----------\n" + 
			"2. WARNING in X.java (at line 10)\n" + 
			"	Object a2 = (Hashtable) o;\n" + 
			"	            ^^^^^^^^^^^^^\n" + 
			"Unnecessary cast from Object to Hashtable\n" + 
			"----------\n" + 
			"3. WARNING in X.java (at line 10)\n" + 
			"	Object a2 = (Hashtable) o;\n" + 
			"	             ^^^^^^^^^\n" + 
			"Hashtable is a raw type. References to generic type Hashtable<K,V> should be parameterized\n" + 
			"----------\n" + 
			"4. ERROR in X.java (at line 12)\n" + 
			"	Object a3 = (Hashtable<Float, Double>) d;\n" + 
			"	            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Cannot cast from Dictionary<String,Integer> to Hashtable<Float,Double>\n" + 
			"----------\n" + 
			"5. WARNING in X.java (at line 12)\n" + 
			"	Object a3 = (Hashtable<Float, Double>) d;\n" + 
			"	            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Unnecessary cast from Dictionary<String,Integer> to Hashtable<Float,Double>\n" + 
			"----------\n" + 
			"6. WARNING in X.java (at line 13)\n" + 
			"	Object a4 = (Hashtable<String,Integer>) o;\n" + 
			"	            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Type safety: Unchecked cast from Object to Hashtable<String,Integer>\n" + 
			"----------\n" + 
			"7. WARNING in X.java (at line 13)\n" + 
			"	Object a4 = (Hashtable<String,Integer>) o;\n" + 
			"	            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Unnecessary cast from Object to Hashtable<String,Integer>\n" + 
			"----------\n" + 
			"8. WARNING in X.java (at line 19)\n" + 
			"	Object a5 = (Hashtable<String,Integer>) z1;\n" + 
			"	            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Unnecessary cast from Z1 to Hashtable<String,Integer>\n" + 
			"----------\n" + 
			"9. WARNING in X.java (at line 24)\n" + 
			"	Object a6 = (Z2) z1;\n" + 
			"	            ^^^^^^^\n" + 
			"Unnecessary cast from Z1 to Z2\n" + 
			"----------\n" + 
			"10. WARNING in X.java (at line 26)\n" + 
			"	abstract class Z3 extends Hashtable {\n" + 
			"	                          ^^^^^^^^^\n" + 
			"Hashtable is a raw type. References to generic type Hashtable<K,V> should be parameterized\n" + 
			"----------\n" + 
			"11. WARNING in X.java (at line 30)\n" + 
			"	Object a7 = (Hashtable<String,Integer>) z3;\n" + 
			"	            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Type safety: Unchecked cast from Z3 to Hashtable<String,Integer>\n" + 
			"----------\n" + 
			"12. WARNING in X.java (at line 30)\n" + 
			"	Object a7 = (Hashtable<String,Integer>) z3;\n" + 
			"	            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"Unnecessary cast from Z3 to Hashtable<String,Integer>\n" + 
			"----------\n");
	}

