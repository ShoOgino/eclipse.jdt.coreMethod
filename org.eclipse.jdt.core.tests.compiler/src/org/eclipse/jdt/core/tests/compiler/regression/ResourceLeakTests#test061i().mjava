// Bug 358903 - Filter practically unimportant resource leak warnings
// local var is re-used for two levels of wrappers
public void test061i() {
	Map options = getCompilerOptions();
	options.put(CompilerOptions.OPTION_ReportUnclosedCloseable, CompilerOptions.ERROR);
	options.put(CompilerOptions.OPTION_ReportPotentiallyUnclosedCloseable, CompilerOptions.ERROR);
	this.runNegativeTest(
		new String[] {
			"X.java",
			"import java.io.File;\n" +
			"import java.io.InputStream;\n" +
			"import java.io.BufferedInputStream;\n" +
			"import java.io.FileInputStream;\n" +
			"import java.io.IOException;\n" +
			"public class X {\n" +
			"    void closeMiddle() throws IOException {\n" +
			"        File file = new File(\"somefile\");\n" +
			"        InputStream stream  = new FileInputStream(file);\n" +
			"        stream = new BufferedInputStream(stream);\n" +
			"        InputStream middle;\n" +
			"        stream = new BufferedInputStream(middle = stream);\n" +
			"        System.out.println(stream.available());\n" +
			"        middle.close();\n" +
			"    }\n" +
			"    void closeOuter() throws IOException {\n" +
			"        File file = new File(\"somefile\");\n" +
			"        InputStream stream2  = new FileInputStream(file);\n" +
			"        stream2 = new BufferedInputStream(stream2);\n" +
			"        stream2 = new BufferedInputStream(stream2);\n" +
			"        System.out.println(stream2.available());\n" +
			"        stream2.close();\n" +
			"    }\n" +
			"    void neverClosed() throws IOException {\n" +
			"        File file = new File(\"somefile\");\n" +
			"        InputStream stream3  = new FileInputStream(file);\n" +
			"        stream3 = new BufferedInputStream(stream3);\n" +
			"        stream3 = new BufferedInputStream(stream3);\n" +
			"        System.out.println(stream3.available());\n" +
			"    }\n" +
			"}\n"
		},
		"----------\n" +
		"1. ERROR in X.java (at line 26)\n" +
		"	InputStream stream3  = new FileInputStream(file);\n" +
		"	            ^^^^^^^\n" +
		"Resource leak: \'stream3\' is never closed\n" +
		"----------\n",
		null,
		true,
		options);
}

