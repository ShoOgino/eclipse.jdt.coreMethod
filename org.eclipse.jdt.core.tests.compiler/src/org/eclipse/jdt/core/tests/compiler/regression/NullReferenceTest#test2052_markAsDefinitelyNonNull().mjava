public void test2052_markAsDefinitelyNonNull() {
	long [][][] testData = {
		{{0,0,0,0},{1,0,0,1}},
		{{0,0,0,1},{1,0,0,1}},
		{{0,0,1,0},{1,0,0,1}},
		{{0,0,1,1},{1,0,0,1}},
		{{0,1,0,0},{1,0,0,1}},
		{{0,1,0,1},{1,0,0,1}},
		{{0,1,1,0},{1,0,0,1}},
		{{0,1,1,1},{1,0,0,1}},
		{{1,0,0,0},{1,0,0,1}},
		{{1,0,0,1},{1,0,0,1}},
		{{1,0,1,0},{1,0,0,1}},
		{{1,0,1,1},{1,0,0,1}},
		{{1,1,0,0},{1,0,0,1}},
		{{1,1,0,1},{1,0,0,1}},
		{{1,1,1,0},{1,0,0,1}},
		{{1,1,1,1},{1,0,0,1}},
	};
	int failures = 0;
	LocalVariableBinding local = new TestLocalVariableBinding(0);
	for (int i = 0; i < testData.length; i++) {
		UnconditionalFlowInfoTestHarness 
			result = UnconditionalFlowInfoTestHarness.
				testUnconditionalFlowInfo(testData[i][0]);
		result.markAsDefinitelyNonNull(local);
		if (!(result.testEquals(UnconditionalFlowInfoTestHarness.
				testUnconditionalFlowInfo(testData[i][1])))) {
			if (failures == 0) {
				System.out.println("markAsDefinitelyNonNull failures: ");
			}
			failures++;
			System.out.println("\t\t{" + testStringValueOf(testData[i][0]) + 
				',' + result.testString() + 
				"}, // instead of: " + testStringValueOf(testData[i][1]));
		}
	}
	local = new TestLocalVariableBinding(64);
	for (int i = 0; i < testData.length; i++) {
		UnconditionalFlowInfoTestHarness 
			result = UnconditionalFlowInfoTestHarness.
				testUnconditionalFlowInfo(testData[i][0], 64);
		result.markAsDefinitelyNonNull(local);
		if (!(result.testEquals(UnconditionalFlowInfoTestHarness.
				testUnconditionalFlowInfo(testData[i][1], 64)))) {
			if (failures == 0) {
				System.out.println("markAsDefinitelyNonNull failures: ");
			}
			failures++;
			System.out.println("\t\t{" + testStringValueOf(testData[i][0]) + 
				',' + result.testString() + 
				"}, // (64) instead of: " + testStringValueOf(testData[i][1]));
		}
	}
	if (printTablesAsNames) {
		System.out.println("RECAP TABLE FOR MARK DEFINITELY NON NULL");
		for (int i = 0; i < testData.length; i++) {
			System.out.println(testSymbolicValueOf(testData[i][0]) + " -> " +
				testSymbolicValueOf(testData[i][1]));
		}	
	}
	if (printTablesAsCodes) {
		System.out.println("RECAP TABLE FOR MARK DEFINITELY NON NULL");
		for (int i = 0; i < testData.length; i++) {
			System.out.println(testCodedValueOf(testData[i][0]) + " " +
				testCodedValueOf(testData[i][1]));
		}
	}
	assertTrue("nb of failures: " + failures, failures == 0);
}

