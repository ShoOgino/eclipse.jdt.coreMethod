//https://bugs.eclipse.org/bugs/show_bug.cgi?id=156736
public void test116() {
	if (this.complianceLevel.compareTo(COMPLIANCE_1_5) >= 0) {
    	Map options = this.getCompilerOptions();
    	options.put(CompilerOptions.OPTION_ReportOverridingMethodWithoutSuperInvocation, CompilerOptions.ERROR);
    	this.runNegativeTest(
    		new String[] {
    			"X.java",
    			"class Y {\n" + 
    			"  Zork foo() {}\n" + 
    			"}\n" + 
    			"public class X extends Y {\n" + 
    			"  @Override\n" +
    			"  Object foo() {\n" +
    			"     return new Y() {\n" +
    			"         Object foo() {\n" +
    			"            return null;\n" +
    			"         }\n" +
    			"     };" +
    			"  }\n" + 
    			"}"
    		},
    		"----------\n" + 
    		"1. ERROR in X.java (at line 2)\n" + 
    		"	Zork foo() {}\n" + 
    		"	^^^^\n" + 
    		"Zork cannot be resolved to a type\n" + 
    		"----------\n" + 
    		"2. ERROR in X.java (at line 6)\n" + 
    		"	Object foo() {\n" + 
    		"	       ^^^^^\n" + 
    		"The method foo() of type X must override a superclass method\n" + 
    		"----------\n",
    		null,
    		true,
    		options
    	);
	}
}

