	public void test014c() {
		this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X {\n" + 
				"	void a(G x) {}\n" + 
				"	void a(F<C> x) {}\n" + 
				"	void b(G<C> x) {}\n" + 
				"	void b(F x) {}\n" + 
				"	public static void main(String[] args) {\n" + 
				"		H<C> h = null;\n" +
				"		new X().a(h);\n" +
				"		new X().b(h);\n" +
				"	}\n" + 
				"}\n" +
				"class A {}\n" + 
				"class B extends A {}\n" +
				"class C extends B {}\n" +
				"class F<T1> {} \n" + 
				"class G<T2> extends F<T2> {}\n" +
				"class H<T3> extends G<T3> {}"
			},
			"----------\n" + 
			"1. WARNING in X.java (at line 2)\r\n" + 
			"	void a(G x) {}\r\n" + 
			"	       ^\n" + 
			"G is a raw type. References to generic type G<T2> should be parameterized\n" + 
			"----------\n" + 
			"2. WARNING in X.java (at line 5)\r\n" + 
			"	void b(F x) {}\r\n" + 
			"	       ^\n" + 
			"F is a raw type. References to generic type F<T1> should be parameterized\n" + 
			"----------\n" + 
			"3. ERROR in X.java (at line 8)\r\n" + 
			"	new X().a(h);\r\n" + 
			"	        ^\n" + 
			"The method a(G) is ambiguous for the type X\n" + 
			"----------\n"
			// reference to a is ambiguous, both method a(G) in X and method a(F<C>) in X match
		);
	}

