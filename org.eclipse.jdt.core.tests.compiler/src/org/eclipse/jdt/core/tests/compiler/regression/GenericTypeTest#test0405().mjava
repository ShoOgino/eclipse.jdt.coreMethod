	// check cast between generic types
	public void test0405() {
		this.runNegativeTest(
			new String[] {
				"X.java",
				"public class X <E> {\n" + 
				"	\n" + 
				"	<T> void foo(X<X<T>> xs) {\n" + 
				"		X<X<String>> x = (X<X<String>>) xs;\n" + 
				"	}\n" + 
				"	<T> void bar(X<T> xs) {\n" + 
				"		X<String> x = (X<String>) xs;\n" + 
				"	}	\n" + 
				"}\n",
			},
			"----------\n" + 
			"1. ERROR in X.java (at line 4)\n" + 
			"	X<X<String>> x = (X<X<String>>) xs;\n" + 
			"	                 ^^^^^^^^^^^^^^^^^\n" + 
			"Cannot cast from X<X<T>> to X<X<String>>\n" + 
			"----------\n" + 
			"2. WARNING in X.java (at line 7)\n" + 
			"	X<String> x = (X<String>) xs;\n" + 
			"	              ^^^^^^^^^^^^^^\n" + 
			"Type safety: The cast from X<T> to X<String> is actually checking against the erased type X\n" + 
			"----------\n");	
	}		

