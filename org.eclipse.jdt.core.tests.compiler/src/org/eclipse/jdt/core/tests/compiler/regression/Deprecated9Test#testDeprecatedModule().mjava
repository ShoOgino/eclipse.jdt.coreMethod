	public void testDeprecatedModule() {
		Runner runner = new Runner();
		runner.customOptions = new HashMap<>();
		runner.customOptions.put(JavaCore.COMPILER_PB_DEPRECATION, CompilerOptions.WARNING);
		runner.customOptions.put(JavaCore.COMPILER_PB_TERMINAL_DEPRECATION, CompilerOptions.ERROR);
		runner.testFiles =
			new String[] {
				"folder0/module-info.java",
				"@Deprecated module mod.dep {}\n",
				"folder1/module-info.java",
				"@Deprecated(since=\"42\") module mod.dep.since {}\n",
				"folder2/module-info.java",
				"@Deprecated(forRemoval=true) module mod.dep.terminally {}\n",
				"folder3/module-info.java",
				"@Deprecated(since=\"42\",forRemoval=true) module mod.dep.since.terminally {}\n",
				"module-info.java",
				"module mod1 {\n" +
				"	requires mod.dep;\n" +
				"	requires mod.dep.since;\n" +
				"	requires mod.dep.terminally;\n" +
				"	requires mod.dep.since.terminally;\n" +
				"}\n"
			};
		runner.expectedCompilerLog =
			"----------\n" +
			"1. WARNING in module-info.java (at line 2)\n" +
			"	requires mod.dep;\n" +
			"	         ^^^^^^^\n" +
			"The module mod.dep is deprecated\n" +
			"----------\n" +
			"2. WARNING in module-info.java (at line 3)\n" +
			"	requires mod.dep.since;\n" +
			"	         ^^^^^^^^^^^^^\n" +
			"The module mod.dep.since is deprecated since version 42\n" +
			"----------\n" +
			"3. ERROR in module-info.java (at line 4)\n" +
			"	requires mod.dep.terminally;\n" +
			"	         ^^^^^^^^^^^^^^^^^^\n" +
			"The module mod.dep.terminally has been deprecated and marked for removal\n" +
			"----------\n" +
			"4. ERROR in module-info.java (at line 5)\n" +
			"	requires mod.dep.since.terminally;\n" +
			"	         ^^^^^^^^^^^^^^^^^^^^^^^^\n" +
			"The module mod.dep.since.terminally has been deprecated since version 42 and marked for removal\n" +
			"----------\n";
		runner.runNegativeTest();
	}

