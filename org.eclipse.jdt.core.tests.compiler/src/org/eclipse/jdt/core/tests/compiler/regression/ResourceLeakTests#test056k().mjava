// Bug 349326 - [1.7] new warning for missing try-with-resources
// many locals, some are AutoCloseable.
// Unfortunately analysis cannot respect how exception exits may affect ra3 and rb3,
// doing so would create false positives.
public void test056k() {
	Map options = getCompilerOptions();
	options.put(CompilerOptions.OPTION_ReportUnclosedCloseable, CompilerOptions.ERROR);
	options.put(CompilerOptions.OPTION_ReportPotentiallyUnclosedCloseable, CompilerOptions.WARNING);
	options.put(CompilerOptions.OPTION_ReportExplicitlyClosedAutoCloseable, CompilerOptions.ERROR);
	String expectedProblems = this.complianceLevel < ClassFileConstants.JDK1_7 ?
				"----------\n" +
				"1. ERROR in X.java (at line 15)\n" +
				"	ra2 = new FileReader(file);\n" +
				"	^^^^^^^^^^^^^^^^^^^^^^^^^^\n" +
				"Resource leak: \'ra2\' is never closed\n" +
				"----------\n" +
				"2. ERROR in X.java (at line 28)\n" +
				"	rb2 = new FileReader(file);\n" +
				"	^^^^^^^^^^^^^^^^^^^^^^^^^^\n" +
				"Resource leak: \'rb2\' is never closed\n" +
				"----------\n"
			:
				"----------\n" +
				"1. ERROR in X.java (at line 12)\n" +
				"	FileReader ra1 = null, ra2 = null;\n" +
				"	           ^^^\n" +
				"Resource 'ra1' should be managed by try-with-resource\n" +
				"----------\n" +
				"2. ERROR in X.java (at line 15)\n" +
				"	ra2 = new FileReader(file);\n" +
				"	^^^^^^^^^^^^^^^^^^^^^^^^^^\n" +
				"Resource leak: 'ra2' is never closed\n" +
				"----------\n" +
				"3. ERROR in X.java (at line 16)\n" +
				"	FileReader ra3 = new FileReader(file);\n" +
				"	           ^^^\n" +
				"Resource 'ra3' should be managed by try-with-resource\n" +
				"----------\n" +
				"4. ERROR in X.java (at line 25)\n" +
				"	FileReader rb1 = null, rb2 = null;\n" +
				"	           ^^^\n" +
				"Resource 'rb1' should be managed by try-with-resource\n" +
				"----------\n" +
				"5. ERROR in X.java (at line 28)\n" +
				"	rb2 = new FileReader(file);\n" +
				"	^^^^^^^^^^^^^^^^^^^^^^^^^^\n" +
				"Resource leak: 'rb2' is never closed\n" +
				"----------\n" +
				"6. ERROR in X.java (at line 29)\n" +
				"	FileReader rb3 = new FileReader(file);\n" +
				"	           ^^^\n" +
				"Resource 'rb3' should be managed by try-with-resource\n" +
				"----------\n";
	this.runNegativeTest(
		new String[] {
			"X.java",
			"import java.io.File;\n" +
			"import java.io.FileReader;\n" +
			"import java.io.IOException;\n" +
			"public class X {\n" +
			"    void foo() throws IOException {\n" +
			"        int i01, i02, i03, i04, i05, i06, i07, i08, i09,\n" +
			"            i11, i12, i13, i14, i15, i16, i17, i18, i19,\n" +
			"            i21, i22, i23, i24, i25, i26, i27, i28, i29,\n" +
			"            i31, i32, i33, i34, i35, i36, i37, i38, i39,\n" +
			"            i41, i42, i43, i44, i45, i46, i47, i48, i49;\n" +
			"        File file = new File(\"somefile\");\n" +
			"        FileReader ra1 = null, ra2 = null;\n" +
			"        try {\n" +
			"            ra1 = new FileReader(file);\n" +
			"            ra2 = new FileReader(file);\n" +
			"            FileReader ra3 = new FileReader(file);\n" +
			"            char[] in = new char[50];\n" +
			"            ra1.read(in);\n" +
			"            ra2.read(in);\n" +
			"            ra3.close();\n" +
			"        } finally {\n" +
			"            ra1.close();\n" +
			"        }\n" +
			"        int i51, i52, i53, i54, i55, i56, i57, i58, i59, i60;\n" + // beyond this point locals are analyzed using extraBits
			"        FileReader rb1 = null, rb2 = null;\n" +
			"        try {\n" +
			"            rb1 = new FileReader(file);\n" +
			"            rb2 = new FileReader(file);\n" +
			"            FileReader rb3 = new FileReader(file);\n" +
			"            char[] in = new char[50];\n" +
			"            rb1.read(in);\n" +
			"            rb2.read(in);\n" +
			"            rb3.close();\n" +
			"        } finally {\n" +
			"            rb1.close();\n" +
			"        }\n" +
			"    }\n" +
			"    public static void main(String[] args) throws IOException {\n" +
			"        new X().foo();\n" +
			"    }\n" +
			"}\n"
		},
		expectedProblems,
		null,
		true,
		options);
}

