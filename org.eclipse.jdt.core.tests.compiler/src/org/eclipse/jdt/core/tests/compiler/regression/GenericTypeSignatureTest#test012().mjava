	public void test012() {
		final String[] testsSource = new String[] {
			"X.java",
			"public class X<T> {\n" + 
			"  class MX<U> {\n" + 
			"  }\n" + 
			"\n" + 
			"  public static void main(String[] args) {\n" + 
			"    new X<Thread>().foo(new X<String>().new MX<Thread>());\n" + 
			"  }\n" + 
			"  void foo(X.MX mx) {			// pas de signature\n" + 
			"	System.out.println(\"SUCCESS\");\n" + 
			"  }\n" + 
			"}",
		};
		this.runConformTest(
			testsSource,
			"SUCCESS");
	
		try {
			ClassFileReader classFileReader = ClassFileReader.read(OUTPUT_DIR + File.separator + "X.class");
			IBinaryMethod[] methods = classFileReader.getMethods();
			assertNotNull("No methods", methods);
			assertEquals("Wrong size", 3, methods.length);
			assertEquals("Wrong name", "foo", new String(methods[2].getSelector()));
			assertNull("Wrong signature", methods[2].getGenericSignature());
		} catch (ClassFormatException e) {
			assertTrue(false);
		} catch (IOException e) {
			assertTrue(false);
		}
	}

