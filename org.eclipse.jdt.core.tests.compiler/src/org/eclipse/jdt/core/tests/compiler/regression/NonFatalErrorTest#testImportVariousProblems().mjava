	public void testImportVariousProblems() {
		Map<String,String> options = getCompilerOptions();
		try {
			options.put(CompilerOptions.OPTION_ReportDeprecation, CompilerOptions.IGNORE);

			runNegativeTest(
					true, // flush dir
					new String[] {
							"p/Z.java",
							"package p;\n" +
									"public class Z {\n" +
									"	public static void main(String[] args) throws Exception {\n" +
									"		try {\n" +
									"			Class.forName(\"X\").newInstance();\n" + // forward reference, workaround by using reflection
									"		} catch (ClassNotFoundException e) {\n" +
									"			System.out.println(e.getClass().getName());\n" +
									"		}\n" +
									"	}\n" +
									"}\n",
									"p1/Y.java",
									"package p1;\n" +
											"public class Y {}\n",
											"p2/Y.java",
											"package p2;\n" +
													"public class Y {}\n",
													"X.java",
													"import java.util;\n" +
															"import p.Z;\n" +
															"import p1.Y;\n" +
															"import p2.Y;\n" +
															"public class X {\n" +
															"	public X() {\n" +
															"		System.out.println(\"OK\");\n" +
															"	}\n" +
															"}\n" +
															"class Z {}\n"
					},
					null, // libs
					options,
					"----------\n" + 
							"1. ERROR in X.java (at line 1)\n" + 
							"	import java.util;\n" + 
							"	       ^^^^^^^^^\n" + 
							"Only a type can be imported. java.util resolves to a package\n" + 
							"----------\n" + 
							"2. ERROR in X.java (at line 2)\n" + 
							"	import p.Z;\n" + 
							"	       ^^^\n" + 
							"The import p.Z conflicts with a type defined in the same file\n" + 
							"----------\n" + 
							"3. ERROR in X.java (at line 4)\n" + 
							"	import p2.Y;\n" + 
							"	       ^^^^\n" + 
							"The import p2.Y collides with another import statement\n" + 
							"----------\n",
							"OK",
							"",
							JavacTestOptions.SKIP);
		} finally {
			options.put(CompilerOptions.OPTION_ReportDeprecation, CompilerOptions.WARNING);
		}
	}

