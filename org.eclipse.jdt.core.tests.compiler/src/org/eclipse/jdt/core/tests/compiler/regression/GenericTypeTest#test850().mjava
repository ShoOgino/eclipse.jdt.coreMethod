public void test850() {
	this.runNegativeTest(
		new String[] {
			"X.java", // =================
			"public class X {\n" + 
			"    <T> T f(Object o) {\n" + 
			"	return (T) o; // OK\n" + 
			"    }\n" + 
			"\n" + 
			"    <U, T extends U> T g(Object o) {\n" + 
			"	return (T) o; // bug???\n" + 
			"    }\n" + 
			"\n" + 
			"    <U, T extends U> T h(Object o) {\n" + 
			"	return X.<T>castTo(o); // workaround\n" + 
			"    }\n" + 
			"\n" + 
			"    private static <T> T castTo(Object o) {\n" + 
			"	return (T) o;\n" + 
			"    }\n" + 
			"    Zork z;\n" + 
			"}\n", // =================
		},
		"----------\n" + 
		"1. WARNING in X.java (at line 3)\n" + 
		"	return (T) o; // OK\n" + 
		"	       ^^^^^\n" + 
		"Type safety: The cast from Object to T is actually checking against the erased type Object\n" + 
		"----------\n" + 
		"2. WARNING in X.java (at line 7)\n" + 
		"	return (T) o; // bug???\n" + 
		"	       ^^^^^\n" + 
		"Type safety: The cast from Object to T is actually checking against the erased type Object\n" + 
		"----------\n" + 
		"3. WARNING in X.java (at line 15)\n" + 
		"	return (T) o;\n" + 
		"	       ^^^^^\n" + 
		"Type safety: The cast from Object to T is actually checking against the erased type Object\n" + 
		"----------\n" + 
		"4. ERROR in X.java (at line 17)\n" + 
		"	Zork z;\n" + 
		"	^^^^\n" + 
		"Zork cannot be resolved to a type\n" + 
		"----------\n");	
}

