// https://bugs.eclipse.org/bugs/show_bug.cgi?id=166355
// variant
public void test053() {
	this.runNegativeTest(
		false /* skipJavac */,
		this.complianceLevel < ClassFileConstants.JDK1_8 ?
				null : JavacTestOptions.EclipseHasABug.EclipseBug427719,
		new String[] { /* test files */
			"X.java",
			"interface I<T> {\n" +
			"}\n" +
			"class Y {\n" +
			"  void bar(I<?> x) {\n" +
			"  }\n" +
			"}\n" +
			"public class X extends Y {\n" +
			"  void foo() {\n" +
			"    bar(new Z(){});\n" +
			"  }\n" +
			"  void bar(Z x) {\n" +
			"  }\n" +
			"  private static class Z implements I {\n" +
			"  }\n" +
			"}\n"
		},
		(this.complianceLevel < ClassFileConstants.JDK1_8 ?
		"----------\n" + 
		"1. ERROR in X.java (at line 9)\n" + 
		"	bar(new Z(){});\n" + 
		"	^^^\n" + 
		"The method bar(X.Z) is ambiguous for the type X\n" + 
		"----------\n" + 
		"2. WARNING in X.java (at line 13)\n" + 
		"	private static class Z implements I {\n" + 
		"	                                  ^\n" + 
		"I is a raw type. References to generic type I<T> should be parameterized\n" + 
		"----------\n"
		: // in 1.8 bar(Z) is recognized as being more specific than bar(I<#RAW>)
			"----------\n" + 
			"1. WARNING in X.java (at line 9)\n" + 
			"	bar(new Z(){});\n" + 
			"	        ^^^\n" + 
			"Access to enclosing constructor X.Z() is emulated by a synthetic accessor method\n" + 
			"----------\n" + 
			"2. WARNING in X.java (at line 13)\n" + 
			"	private static class Z implements I {\n" + 
			"	                                  ^\n" + 
			"I is a raw type. References to generic type I<T> should be parameterized\n" + 
			"----------\n"));
}

