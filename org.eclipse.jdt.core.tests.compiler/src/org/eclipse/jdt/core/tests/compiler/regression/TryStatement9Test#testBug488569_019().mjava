//negative tests: duplicate fields
public void testBug488569_019() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			"import java.io.IOException;\n" +
			"\n" +
			"class Z {\n" +
			"	 final Y yz = new Y();\n" +
			"}\n" +
			"public class X extends Z {\n" +
			"	final  Y y2 = new Y();\n" +
			"	\n" +
			"	 Y bar() {\n" +
			"		 return new Y();\n" +
			"	 }\n" +
			"	public void foo() {\n" +
			"		Y y3 = new Y();\n" +
			"		try (y3; y3;super.yz;super.yz;this.y2;)  {  \n" +
			"			System.out.println(\"In Try\");\n" +
			"		} catch (IOException e) {			  \n" +
			"		} \n" +
			"	}\n" +
			"	public static void main(String[] args) {\n" +
			"		new X().foo();\n" +
			"	}\n" +
			"}\n" +
			"class Y implements AutoCloseable {\n" +
			"	@Override\n" +
			"	public void close() throws IOException {\n" +
			"		System.out.println(\"Closed\");\n" +
			"	}  \n" +
			"}  \n",
		},
		"----------\n" +
		"1. WARNING in X.java (at line 14)\n" +
		"	try (y3; y3;super.yz;super.yz;this.y2;)  {  \n" +
		"	         ^^\n" +
		"Duplicate resource reference y3\n" +
		"----------\n" +
		"2. WARNING in X.java (at line 14)\n" +
		"	try (y3; y3;super.yz;super.yz;this.y2;)  {  \n" +
		"	                     ^^^^^^^^\n" +
		"Duplicate resource reference super.yz\n" +
		"----------\n");
}

