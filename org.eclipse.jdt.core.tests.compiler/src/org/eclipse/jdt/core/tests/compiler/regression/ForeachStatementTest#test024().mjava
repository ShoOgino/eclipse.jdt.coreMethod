public void test024() { 
	this.runConformTest(
		new String[] {
			"X.java",
			"import java.util.List;\n" + 
			"import java.util.ArrayList;\n" + 
			"\n" + 
			"public class X {\n" + 
			"	public static void main(String[] args) {\n" + 
			"		String[] tab = new String[] {\"SUCCESS\"};\n" + 
			"		List list = new ArrayList();\n" + 
			"		for (String arg : tab) {		\n" + 
			"			list.add(arg);\n" + 
			"		}\n" + 
			"		for (Object arg: list) {\n" + 
			"			System.out.print(arg);\n" + 
			"		}\n" + 
			"	}\n" + 
			"}",
		},
		"SUCCESS");
		
	String expectedOutput =
		"  // Method descriptor  #15 ([Ljava/lang/String;)V\n" + 
		"  // Stack: 4, Locals: 7\n" + 
		"  public static void main(String[] args);\n" + 
		"     0  iconst_1\n" + 
		"     1  anewarray #17 java/lang/String\n" + 
		"     4  dup\n" + 
		"     5  iconst_0\n" + 
		"     6  ldc #19 <String \"SUCCESS\">\n" + 
		"     8  aastore\n" + 
		"     9  astore_1\n" + 
		"    10  new #21 java/util/ArrayList\n" + 
		"    13  dup\n" + 
		"    14  invokespecial #22 <Method java/util/ArrayList.<init>()V>\n" + 
		"    17  astore_2\n" + 
		"    18  aload_1\n" + 
		"    19  astore 6\n" + 
		"    21  iconst_0\n" + 
		"    22  istore 4\n" + 
		"    24  aload 6\n" + 
		"    26  arraylength\n" + 
		"    27  istore 5\n" + 
		"    29  goto 49\n" + 
		"    32  aload 6\n" + 
		"    34  iload 4\n" + 
		"    36  aaload\n" + 
		"    37  astore_3\n" + 
		"    38  aload_2\n" + 
		"    39  aload_3\n" + 
		"    40  invokeinterface [nargs : 2] #28 <Interface method java/util/List.add(Ljava/lang/Object;)Z>\n" + 
		"    45  pop\n" + 
		"    46  iinc 4 1\n" + 
		"    49  iload 4\n" + 
		"    51  iload 5\n" + 
		"    53  if_icmplt 32\n" + 
		"    56  aload_2\n" + 
		"    57  invokeinterface [nargs : 1] #33 <Interface method java/util/List.iterator()Ljava/util/Iterator;>\n" + 
		"    62  astore 4\n" + 
		"    64  goto 82\n" + 
		"    67  aload 4\n" + 
		"    69  invokeinterface [nargs : 1] #39 <Interface method java/util/Iterator.next()Ljava/lang/Object;>\n" + 
		"    74  astore_3\n" + 
		"    75  getstatic #45 <Field java/lang/System.out Ljava/io/PrintStream;>\n" + 
		"    78  aload_3\n" + 
		"    79  invokevirtual #51 <Method java/io/PrintStream.print(Ljava/lang/Object;)V>\n" + 
		"    82  aload 4\n" + 
		"    84  invokeinterface [nargs : 1] #55 <Interface method java/util/Iterator.hasNext()Z>\n" + 
		"    89  ifne 67\n" + 
		"    92  return\n" + 
		"      Line numbers:\n" + 
		"        [pc: 0, line: 6]\n" + 
		"        [pc: 10, line: 7]\n" + 
		"        [pc: 18, line: 8]\n" + 
		"        [pc: 38, line: 9]\n" + 
		"        [pc: 46, line: 8]\n" + 
		"        [pc: 56, line: 11]\n" + 
		"        [pc: 75, line: 12]\n" + 
		"        [pc: 82, line: 11]\n" + 
		"        [pc: 92, line: 14]\n" + 
		"      Local variable table:\n" + 
		"        [pc: 0, pc: 93] local: args index: 0 type: [Ljava/lang/String;\n" + 
		"        [pc: 10, pc: 93] local: tab index: 1 type: [Ljava/lang/String;\n" + 
		"        [pc: 18, pc: 93] local: list index: 2 type: Ljava/util/List;\n" + 
		"        [pc: 38, pc: 56] local: arg index: 3 type: Ljava/lang/String;\n" + 
		"        [pc: 75, pc: 92] local: arg index: 3 type: Ljava/lang/Object;\n";
	
	try {
		File f = new File(OUTPUT_DIR + File.separator + "X.class");
		byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
		ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
		String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
		int index = result.indexOf(expectedOutput);
		if (index == -1 || expectedOutput.length() == 0) {
			System.out.println(Util.displayString(result, 3));
		}
		if (index == -1) {
			assertEquals("Wrong contents", expectedOutput, result);
		}
	} catch (org.eclipse.jdt.core.util.ClassFormatException e) {
		assertTrue(false);
	} catch (IOException e) {
		assertTrue(false);
	}
}

