public void test024() { 
	this.runConformTest(
		new String[] {
			"X.java",
			"import java.util.List;\n" + 
			"import java.util.ArrayList;\n" + 
			"\n" + 
			"public class X {\n" + 
			"	public static void main(String[] args) {\n" + 
			"		String[] tab = new String[] {\"SUCCESS\"};\n" + 
			"		List list = new ArrayList();\n" + 
			"		for (String arg : tab) {		\n" + 
			"			list.add(arg);\n" + 
			"		}\n" + 
			"		for (Object arg: list) {\n" + 
			"			System.out.print(arg);\n" + 
			"		}\n" + 
			"	}\n" + 
			"}",
		},
		"SUCCESS");
		
	String expectedOutput =
		"  // Method descriptor #15 ([Ljava/lang/String;)V\n" + 
		"  // Stack: 4, Locals: 7\n" + 
		"  public static void main(java.lang.String[] args);\n" + 
		"     0  iconst_1\n" + 
		"     1  anewarray java.lang.String [16]\n" + 
		"     4  dup\n" + 
		"     5  iconst_0\n" + 
		"     6  ldc <String \"SUCCESS\"> [18]\n" + 
		"     8  aastore\n" + 
		"     9  astore_1 [tab]\n" + 
		"    10  new java.util.ArrayList [20]\n" + 
		"    13  dup\n" + 
		"    14  invokespecial java.util.ArrayList() [22]\n" + 
		"    17  astore_2 [list]\n" + 
		"    18  aload_1 [tab]\n" + 
		"    19  dup\n" + 
		"    20  astore 6\n" + 
		"    22  arraylength\n" + 
		"    23  istore 5\n" + 
		"    25  iconst_0\n" + 
		"    26  istore 4\n" + 
		"    28  goto 48\n" + 
		"    31  aload 6\n" + 
		"    33  iload 4\n" + 
		"    35  aaload\n" + 
		"    36  astore_3 [arg]\n" + 
		"    37  aload_2 [list]\n" + 
		"    38  aload_3 [arg]\n" + 
		"    39  invokeinterface java.util.List.add(java.lang.Object) : boolean [23] [nargs: 2]\n" + 
		"    44  pop\n" + 
		"    45  iinc 4 1\n" + 
		"    48  iload 4\n" + 
		"    50  iload 5\n" + 
		"    52  if_icmplt 31\n" + 
		"    55  aload_2 [list]\n" + 
		"    56  invokeinterface java.util.List.iterator() : java.util.Iterator [29] [nargs: 1]\n" + 
		"    61  astore 4\n" + 
		"    63  goto 81\n" + 
		"    66  aload 4\n" + 
		"    68  invokeinterface java.util.Iterator.next() : java.lang.Object [33] [nargs: 1]\n" + 
		"    73  astore_3 [arg]\n" + 
		"    74  getstatic java.lang.System.out : java.io.PrintStream [39]\n" + 
		"    77  aload_3 [arg]\n" + 
		"    78  invokevirtual java.io.PrintStream.print(java.lang.Object) : void [45]\n" + 
		"    81  aload 4\n" + 
		"    83  invokeinterface java.util.Iterator.hasNext() : boolean [51] [nargs: 1]\n" + 
		"    88  ifne 66\n" + 
		"    91  return\n" + 
		"      Line numbers:\n" + 
		"        [pc: 0, line: 6]\n" + 
		"        [pc: 10, line: 7]\n" + 
		"        [pc: 18, line: 8]\n" + 
		"        [pc: 37, line: 9]\n" + 
		"        [pc: 45, line: 8]\n" + 
		"        [pc: 55, line: 11]\n" + 
		"        [pc: 74, line: 12]\n" + 
		"        [pc: 81, line: 11]\n" + 
		"        [pc: 91, line: 14]\n" + 
		"      Local variable table:\n" + 
		"        [pc: 0, pc: 92] local: args index: 0 type: java.lang.String[]\n" + 
		"        [pc: 10, pc: 92] local: tab index: 1 type: java.lang.String[]\n" + 
		"        [pc: 18, pc: 92] local: list index: 2 type: java.util.List\n" + 
		"        [pc: 37, pc: 45] local: arg index: 3 type: java.lang.String\n" + 
		"        [pc: 74, pc: 81] local: arg index: 3 type: java.lang.Object\n";
	
	try {
		File f = new File(OUTPUT_DIR + File.separator + "X.class");
		byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
		ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
		String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
		int index = result.indexOf(expectedOutput);
		if (index == -1 || expectedOutput.length() == 0) {
			System.out.println(Util.displayString(result, 3));
		}
		if (index == -1) {
			assertEquals("Wrong contents", expectedOutput, result);
		}
	} catch (org.eclipse.jdt.core.util.ClassFormatException e) {
		assertTrue(false);
	} catch (IOException e) {
		assertTrue(false);
	}
}

