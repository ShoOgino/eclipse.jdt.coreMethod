	// Normal parameter list, with modifiers & annotations  + expression body lambda in invocation context.
	public void test0013() throws IOException {
		String source =
				"interface I {\n" +
				"    int square(int x);\n" +
				"}\n" +
				"public class X {\n" +
				"    @interface Positive {}\n" +
				"    static void foo(I i1, I i2) {\n" +
				"        System.out.println(i1.square(10));\n" +
				"        System.out.println(i2.square(10));\n" +
				"    }\n" +
				"    public static void main(String [] args) {\n" +
				"        foo((final int x) -> x * x, (final @Positive int x) -> x * x * x);\n" +
				"    }\n" +
				"}\n";

		String expectedUnitToString =
				"interface I {\n" +
				"  int square(int x);\n" +
				"}\n" +
				"public class X {\n" +
				"  @interface Positive {\n" +
				"  }\n" +
				"  public X() {\n" +
				"    super();\n" +
				"  }\n" +
				"  static void foo(I i1, I i2) {\n" +
				"    System.out.println(i1.square(10));\n" +
				"    System.out.println(i2.square(10));\n" +
				"  }\n" +
				"  public static void main(String[] args) {\n" +
				"    foo((final int x) -> (x * x), (final @Positive int x) -> ((x * x) * x));\n" +
				"  }\n" +
				"}\n";
		checkParse(CHECK_PARSER | CHECK_JAVAC_PARSER , source.toCharArray(), null, "test0013", expectedUnitToString);
	}

