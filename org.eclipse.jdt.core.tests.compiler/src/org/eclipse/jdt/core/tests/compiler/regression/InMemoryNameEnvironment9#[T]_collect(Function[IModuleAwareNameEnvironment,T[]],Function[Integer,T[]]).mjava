	protected <T> T[] collect(Function<IModuleAwareNameEnvironment, T[]> function, Function<Integer,T[]> arraySupplier) {
		Set<T> mods = new HashSet<>();
		for (int i = 0; i < this.classLibs.length; i++) {
			INameEnvironment env = this.classLibs[i];
			if (env instanceof IModuleAwareNameEnvironment) {
				T[] someMods = function.apply((IModuleAwareNameEnvironment) env);
				if (someMods != null) {
					for (int j = 0; j < someMods.length; j++)
						mods.add(someMods[j]);
				}
			}
		}
		return mods.toArray(arraySupplier.apply(mods.size()));
	}

