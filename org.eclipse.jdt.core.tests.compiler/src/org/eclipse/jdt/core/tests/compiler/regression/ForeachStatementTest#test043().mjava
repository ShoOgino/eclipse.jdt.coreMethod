//https://bugs.eclipse.org/bugs/show_bug.cgi?id=150074
public void test043() throws Exception {
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X {\n" +
			"        public static void main(String[] args) {\n" +
			"			 foo();\n" +
			"        }\n" +
			"        public static void foo() {\n" +
			"                for (int i : initForEach()) {\n" +
			"                }\n" +
			"        }\n" +
			"        static int[] initForEach() {\n" +
			"                System.out.println(\"initForEach\");\n" +
			"                return new int[] {1, 2, 3, 4};\n" +
			"        }\n" +
			"}",
		},
		"initForEach");

	String expectedOutput =
		"  // Method descriptor #6 ()V\n" +
		"  // Stack: 1, Locals: 0\n" +
		"  public static void foo();\n" +
		"    0  invokestatic X.initForEach() : int[] [21]\n" +
		"    3  pop\n" +
		"    4  return\n" +
		"      Line numbers:\n" +
		"        [pc: 0, line: 6]\n" +
		"        [pc: 4, line: 8]\n";

	File f = new File(OUTPUT_DIR + File.separator + "X.class");
	byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
	ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
	String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
	int index = result.indexOf(expectedOutput);
	if (index == -1 || expectedOutput.length() == 0) {
		System.out.println(Util.displayString(result, 3));
	}
	if (index == -1) {
		assertEquals("Wrong contents", expectedOutput, result);
	}
}

