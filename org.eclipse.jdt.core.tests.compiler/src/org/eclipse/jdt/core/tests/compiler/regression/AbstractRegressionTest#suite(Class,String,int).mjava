	public static Test suite(Class evaluationTestClass, String suiteName, int testDigits) {
		DecimalFormat format = (DecimalFormat) NumberFormat.getIntegerInstance();
		format.setMinimumIntegerDigits(testDigits);
		format.setMaximumIntegerDigits(testDigits);
		format.setGroupingSize(0);
		TestSuite suite = new TestSuite(suiteName==null?evaluationTestClass.getName():suiteName);
		try {
			Class[] paramTypes = new Class[] { String.class };
			Constructor constructor = evaluationTestClass.getConstructor(paramTypes);
			if (testsNames != null) {
				for (int i = 0; i < testsNames.length; i++) {
					String meth = "test" + testsNames[i];
					Object[] params = {meth};
					suite.addTest((Test)constructor.newInstance(params));
				}
			}
			else if (testsNumbers != null) {
				for (int i = 0; i < testsNumbers.length; i++) {
					Object[] params = {"test" + format.format(testsNumbers[i])};
					suite.addTest((Test)constructor.newInstance(params));
				}
			}
			else if (testsRange != null && testsRange.length == 2) {
				if (testsRange[0]>=0 && testsRange[0]<=testsRange[1]) {
					for (int i=testsRange[0]; i<=testsRange[1]; i++) {
						Object[] params = {"test" + format.format(i)};
						suite.addTest((Test)constructor.newInstance(params));
					}
				} else if (testsRange[0] <0) { // run all tests under a specific test number
					// Run all tests
					Method[] methods = evaluationTestClass.getMethods();
					for (int i = 0, max = methods.length; i < max; i++) {
						String methodName = methods[i].getName();
						if (methods[i].getModifiers() == 1 && methodName.startsWith("test")) { //$NON-NLS-1$
							try {
								int number = Integer.decode(methodName.substring(4)).intValue();
								if (number <= testsRange[1]) {
									Object[] params = {methods[i].getName()};
									suite.addTest((Test)constructor.newInstance(params));
								}
							} catch (NumberFormatException e1) {
								// do nothing
							}
						}
					}
				} else if (testsRange[1] <0) { // run all tests over a specific test number
					// Run all tests
					Method[] methods = evaluationTestClass.getMethods();
					for (int i = 0, max = methods.length; i < max; i++) {
						String methodName = methods[i].getName();
						if (methods[i].getModifiers() == 1 && methodName.startsWith("test")) { //$NON-NLS-1$
							try {
								int number = Integer.parseInt(methodName.substring(4), 10);
								if (number >= testsRange[0]) {
									Object[] params = {methods[i].getName()};
									suite.addTest((Test)constructor.newInstance(params));
								}
							} catch (NumberFormatException e1) {
								// do nothing
							}
						}
					}
				}
			} else {
				// Run all tests
				Method[] methods = evaluationTestClass.getMethods();
				for (int i = 0, max = methods.length; i < max; i++) {
					if (methods[i].getModifiers() == 1 && methods[i].getName().startsWith("test")) { //$NON-NLS-1$
						Object[] params = {methods[i].getName()};
						suite.addTest((Test)constructor.newInstance(params));
					}
				}
			}
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
		return suite;
	}

