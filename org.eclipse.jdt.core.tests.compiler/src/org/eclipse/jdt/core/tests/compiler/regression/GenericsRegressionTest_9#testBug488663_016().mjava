// Inaccessible type inferred for anonymous diamond is an error - interface case
public void testBug488663_016() {
	this.runNegativeTest(
		new String[] {
			"Test.java",
			"public class Test<T> {\n" + 
			"	private static class Inner {" +
			"		public Inner(){}\n" +	
			"	}\n" + 
			"	<R extends Inner> void print(I<R> i) {}\n" + 
			"	public Inner get() {\n" + 
			"		return new Inner();\n" + 
			"	}\n" + 
			"}\n",
			"X.java",
			"public class X {\n" +  
			"	public static void main(String[] args) {\n" + 
			"		Test<String> t = new Test<>();\n" + 
			"		t.print(new I<>() {\n" + 
			"			public String toString() {\n" + 
			"				return \"\";\n" + 
			"			}\n" + 
			"		});\n" + 
			"	}\n" + 
			"}\n" + 
			"interface I<T> {\n" + 
			"	String toString();\n" + 
			"}"
		},
		"----------\n" +
		"1. ERROR in X.java (at line 4)\n" + 
		"	t.print(new I<>() {\n" + 
		"	            ^^^^^\n" + 
		"The type Test$Inner is not visible\n" + 
		"----------\n");
}

