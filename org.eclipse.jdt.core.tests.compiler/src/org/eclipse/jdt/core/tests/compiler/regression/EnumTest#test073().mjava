	// https://bugs.eclipse.org/bugs/show_bug.cgi?id=83901
	public void test073() {
		this.runNegativeTest( // implement inherited method but as abstract
			new String[] {
				"X3.java",
				"public enum X3 implements I {\n" +
				"	;\n" +
				"	public abstract void test();\n" +
				"}\n" +
				"interface I { void test(); }\n"
			},
			"----------\n" + 
			"1. ERROR in X3.java (at line 3)\r\n" + 
			"	public abstract void test();\r\n" + 
			"	                     ^^^^^^\n" + 
			"The enum X3 can only define the abstract method test() if it also defines enum constants with corresponding implementations\n" + 
			"----------\n"
			// X3 is not abstract and does not override abstract method test() in X3
		);
		this.runNegativeTest( // implement inherited method as abstract with constant
			new String[] {
				"X3a.java",
				"public enum X3a implements I {\n" +
				"	A;\n" +
				"	public abstract void test();\n" +
				"}\n" +
				"interface I { void test(); }\n"
			},
			"----------\n" + 
			"1. ERROR in X3a.java (at line 3)\r\n" + 
			"	public abstract void test();\r\n" + 
			"	                     ^^^^^^\n" + 
			"The enum X3a can only define the abstract method test() if it also defines enum constants with corresponding implementations\n" + 
			"----------\n"
			// X3a is not abstract and does not override abstract method test() in X3a
		);
		this.runConformTest( // implement inherited method as abstract with constant body
			new String[] {
				"X3b.java",
				"public enum X3b implements I {\n" +
				"	A() { public void test() {} };\n" +
				"	public abstract void test();\n" +
				"}\n" +
				"interface I { void test(); }\n"
			},
			""
		);
		this.runNegativeTest( // implement inherited method as abstract with random constant body
			new String[] {
				"X3c.java",
				"public enum X3c implements I {\n" +
				"	A() { void random() {} };\n" +
				"	public abstract void test();\n" +
				"}\n" +
				"interface I { void test(); }\n"
			},
			"----------\n" + 
			"1. ERROR in X3c.java (at line 2)\r\n" + 
			"	A() { void random() {} };\r\n" + 
			"	    ^\n" + 
			"The type new X3c(){} must implement the inherited abstract method X3c.test()\n" + 
			"----------\n"
			// <anonymous X3c$1> is not abstract and does not override abstract method test() in X3c
		);
	}

