// https://bugs.eclipse.org/bugs/show_bug.cgi?id=430571,  [1.8][compiler] Lambda parameter names and annotations don't make it to class files.
public void test430571() throws IOException, ClassFormatException {
	Map customOptions = getCompilerOptions();
	customOptions.put(CompilerOptions.OPTION_MethodParametersAttribute, CompilerOptions.GENERATE);
	this.runConformTest(
			new String[] {
				"X.java",
				"import java.lang.annotation.ElementType;\n" +
				"import java.lang.annotation.Target;\n" +
				"import java.lang.annotation.Retention;\n" +
				"import java.lang.annotation.RetentionPolicy;\n" +
				"\n" +
				"@Retention(RetentionPolicy.CLASS)\n" +
				"@Target(ElementType.TYPE_USE) @interface A {}\n" +
				"\n" +
				"interface I { int foo(int x); }\n" +
				"\n" +
				"class X {\n" +
				"  	I x = (@A int x) -> x + 1;\n" +
				"}"
			}, customOptions);

		String expectedOutput =
				"  // Method descriptor #23 (I)I\n" +
				"  // Stack: 2, Locals: 1\n" +
				"  private static synthetic int lambda$0(int x);\n" +
				"    0  iload_0 [x]\n" +
				"    1  iconst_1\n" +
				"    2  iadd\n" +
				"    3  ireturn\n" +
				"      Line numbers:\n" +
				"        [pc: 0, line: 12]\n" +
				"      Local variable table:\n" +
				"        [pc: 0, pc: 4] local: x index: 0 type: int\n" +
				"      Method Parameters:\n" + // Method Parameters
				"        x\n" + // <---
				"    RuntimeInvisibleTypeAnnotations: \n" + // Annotations
				"      #26 @A(\n" + // <---
				"        target type = 0x16 METHOD_FORMAL_PARAMETER\n" +
				"        method parameter index = 0\n" +
				"      )";

	verifyClassFile(expectedOutput, "X.class", ClassFileBytesDisassembler.SYSTEM);
}

