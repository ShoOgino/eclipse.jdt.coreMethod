	// Constructor reference expression - X<T>.Y<K>::new form, with type arguments.
	public void test0032() throws IOException {
		String source = 
				"interface I {\n" +
				"    void foo(Y<String> y);\n" +
				"}\n" +
				"public class X  {\n" +
				"    public static void main(String [] args) {\n" +
				"        I i = Y<String>.Z<Integer>::<String>new;\n" +
				"        i.foo(new Y<String>()); \n" +
				"    }\n" +
				"}\n" +
				"class Y<T> {\n" +
				"    class Z<K> {\n" +
				"        Z() {\n" +
				"            System.out.println(\"Y<T>.Z<K>::new\");\n" +
				"        }\n" +
				"    }\n" +
				"}\n";
		String expectedUnitToString = 
				"interface I {\n" + 
					"  void foo(Y<String> y);\n" + 
					"}\n" + 
					"public class X {\n" + 
					"  public X() {\n" + 
					"    super();\n" + 
					"  }\n" + 
					"  public static void main(String[] args) {\n" + 
					"    I i = Y<String>.Z<Integer>::<String>new;\n" + 
					"    i.foo(new Y<String>());\n" + 
					"  }\n" + 
					"}\n" + 
					"class Y<T> {\n" + 
					"  class Z<K> {\n" + 
					"    Z() {\n" + 
					"      super();\n" + 
					"      System.out.println(\"Y<T>.Z<K>::new\");\n" + 
					"    }\n" + 
					"  }\n" + 
					"  Y() {\n" + 
					"    super();\n" + 
					"  }\n" + 
					"}\n";
		checkParse(CHECK_PARSER | CHECK_JAVAC_PARSER , source.toCharArray(), null, "test0032", expectedUnitToString);
	}

