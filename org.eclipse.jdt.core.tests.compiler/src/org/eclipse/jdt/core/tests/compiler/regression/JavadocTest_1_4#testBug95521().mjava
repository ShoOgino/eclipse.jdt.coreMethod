	/**
	 * Bug 95521: [1.5][javadoc] validation with @see tag not working for generic method
	 * @see "http://bugs.eclipse.org/bugs/show_bug.cgi?id=95521"
	 */
	public void testBug95521() {
		runNegativeTest(
			new String[] {
				"test/X.java",
				"package test;\n" + 
				"\n" + 
				"/** Test */\n" + 
				"public class X implements I {\n" + 
				"	/**\n" + 
				"	 * @see test.I#foo(java.lang.Class)\n" + 
				"	 */\n" + 
				"	public <T> G<T> foo(Class<T> stuffClass) {\n" + 
				"		return null;\n" + 
				"	}\n" + 
				"}\n" + 
				"/** Interface */\n" + 
				"interface I {\n" + 
				"    /**\n" + 
				"     * @param <T>\n" + 
				"     * @param stuffClass \n" + 
				"     * @return stuff\n" + 
				"     */\n" + 
				"    public <T extends Object> G<T> foo(Class<T> stuffClass);\n" + 
				"}\n" + 
				"/** \n" + 
				" * @param <T>\n" + 
				" */\n" + 
				"class G<T> {}\n"
			},
			"----------\n" + 
			"1. ERROR in test\\X.java (at line 8)\r\n" + 
			"	public <T> G<T> foo(Class<T> stuffClass) {\r\n" + 
			"	        ^\n" + 
			"Syntax error, type parameters are only available if source level is 5.0\n" + 
			"----------\n" + 
			"2. ERROR in test\\X.java (at line 8)\r\n" + 
			"	public <T> G<T> foo(Class<T> stuffClass) {\r\n" + 
			"	             ^\n" + 
			"Syntax error, parameterized types are only available if source level is 5.0\n" + 
			"----------\n" + 
			"3. ERROR in test\\X.java (at line 8)\r\n" + 
			"	public <T> G<T> foo(Class<T> stuffClass) {\r\n" + 
			"	             ^\n" + 
			"T cannot be resolved to a type\n" + 
			"----------\n" + 
			"4. ERROR in test\\X.java (at line 8)\r\n" + 
			"	public <T> G<T> foo(Class<T> stuffClass) {\r\n" + 
			"	                          ^\n" + 
			"Syntax error, parameterized types are only available if source level is 5.0\n" + 
			"----------\n" + 
			"5. ERROR in test\\X.java (at line 8)\r\n" + 
			"	public <T> G<T> foo(Class<T> stuffClass) {\r\n" + 
			"	                          ^\n" + 
			"T cannot be resolved to a type\n" + 
			"----------\n" + 
			"6. ERROR in test\\X.java (at line 15)\r\n" + 
			"	* @param <T>\r\n" + 
			"	         ^^^\n" + 
			"Javadoc: Invalid param tag name\n" + 
			"----------\n" + 
			"7. ERROR in test\\X.java (at line 19)\r\n" + 
			"	public <T extends Object> G<T> foo(Class<T> stuffClass);\r\n" + 
			"	        ^^^^^^^^^^^^^^^^\n" + 
			"Syntax error, type parameters are only available if source level is 5.0\n" + 
			"----------\n" + 
			"8. ERROR in test\\X.java (at line 19)\r\n" + 
			"	public <T extends Object> G<T> foo(Class<T> stuffClass);\r\n" + 
			"	                            ^\n" + 
			"T cannot be resolved to a type\n" + 
			"----------\n" + 
			"9. ERROR in test\\X.java (at line 19)\r\n" + 
			"	public <T extends Object> G<T> foo(Class<T> stuffClass);\r\n" + 
			"	                            ^\n" + 
			"Syntax error, parameterized types are only available if source level is 5.0\n" + 
			"----------\n" + 
			"10. ERROR in test\\X.java (at line 19)\r\n" + 
			"	public <T extends Object> G<T> foo(Class<T> stuffClass);\r\n" + 
			"	                                         ^\n" + 
			"Syntax error, parameterized types are only available if source level is 5.0\n" + 
			"----------\n" + 
			"11. ERROR in test\\X.java (at line 19)\r\n" + 
			"	public <T extends Object> G<T> foo(Class<T> stuffClass);\r\n" + 
			"	                                         ^\n" + 
			"T cannot be resolved to a type\n" + 
			"----------\n" + 
			"12. ERROR in test\\X.java (at line 22)\r\n" + 
			"	* @param <T>\r\n" + 
			"	         ^^^\n" + 
			"Javadoc: Invalid param tag name\n" + 
			"----------\n" + 
			"13. ERROR in test\\X.java (at line 24)\r\n" + 
			"	class G<T> {}\r\n" + 
			"	        ^\n" + 
			"Syntax error, type parameters are only available if source level is 5.0\n" + 
			"----------\n"
		);
	}

