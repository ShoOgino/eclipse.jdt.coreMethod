	// type parameter hiding
	public void test509() {
		this.runNegativeTest(
			new String[] {
				"X.java",//====================================
				"import java.util.*;\n" + 
				"public class X {\n" + 
				"	public static void main(String[] args) {\n" + 
				"        List<MyTigerSimpleObject> list = new ArrayList<MyTigerSimpleObject>();\n" + 
				"        list.add(new MyTigerSimpleObject(\"a\"));\n" + 
				"        list.add(new MyTigerSimpleObject(\"b\"));\n" + 
				"        \n" + 
				"        for (MyTigerSimpleObject so : list)\n" + 
				"            System.out.println(so.getSomeAttribute());		\n" + 
				"	}\n" + 
				"}\n" + 
				"class MyTigerSimpleObject<E> {\n" + 
				"	MyTigerSimpleObject(String s) {}\n" + 
				"	E getSomeAttribute() { return null; }\n" + 
				"}\n" + 
				"\n" + 
				"class TigerList<MyTigerSimpleObject> extends ArrayList<MyTigerSimpleObject> {\n" + 
				"    public void listAll() {\n" + 
				"        for (MyTigerSimpleObject so : this)\n" + 
				"            System.out.println(so.getSomeAttribute());\n" + 
				"    }\n" + 
				"	\n" + 
				"}\n"
			},
			"----------\n" + 
			"1. WARNING in X.java (at line 17)\n" + 
			"	class TigerList<MyTigerSimpleObject> extends ArrayList<MyTigerSimpleObject> {\n" + 
			"	      ^^^^^^^^^\n" + 
			"The serializable class TigerList does not declare a static final serialVersionUID field of type long\n" + 
			"----------\n" + 
			"2. WARNING in X.java (at line 17)\n" + 
			"	class TigerList<MyTigerSimpleObject> extends ArrayList<MyTigerSimpleObject> {\n" + 
			"	                ^^^^^^^^^^^^^^^^^^^\n" + 
			"The type parameter MyTigerSimpleObject is hiding the type MyTigerSimpleObject<E>\n" + 
			"----------\n" + 
			"3. ERROR in X.java (at line 20)\n" + 
			"	System.out.println(so.getSomeAttribute());\n" + 
			"	                      ^^^^^^^^^^^^^^^^\n" + 
			"The method getSomeAttribute() is undefined for the type MyTigerSimpleObject\n" + 
			"----------\n");
	}			

