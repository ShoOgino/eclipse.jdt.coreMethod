//https://bugs.eclipse.org/bugs/show_bug.cgi?id=106744 - variation
public void test802() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			"public class X<U> {\n" + 
			"    void bar(Y y, X<ZZ> x) {\n" + 
			"    	y.foo(x).zz();\n" + 
			"    }\n" + 
			"}\n" + 
			"class Y<V> {\n" + 
			"    <T extends Z> T foo(X<T> x) { return null; }\n" + 
			"}\n" + 
			"\n" + 
			"class Z {\n" + 
			"}\n" + 
			"class ZZ extends Z {\n" + 
			"	void zz() {}\n" + 
			"}\n",
		},
		"----------\n" + 
		"1. WARNING in X.java (at line 2)\n" + 
		"	void bar(Y y, X<ZZ> x) {\n" + 
		"	         ^\n" + 
		"Y is a raw type. References to generic type Y<V> should be parameterized\n" + 
		"----------\n" + 
		"2. WARNING in X.java (at line 3)\n" + 
		"	y.foo(x).zz();\n" + 
		"	^^^^^^^^\n" + 
		"Type safety: The method foo(X) belongs to the raw type Y. References to generic type Y<V> should be parameterized\n" + 
		"----------\n" + 
		"3. ERROR in X.java (at line 3)\n" + 
		"	y.foo(x).zz();\n" + 
		"	         ^^\n" + 
		"The method zz() is undefined for the type Z\n" + 
		"----------\n");
}

