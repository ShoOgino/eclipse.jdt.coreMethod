public void test1392()  throws Exception {
	this.runConformTest(
		new String[] {
			"X.java",
			"public class X<T extends SubX2<T>> {\n" +
			"	T sx1;\n" +
			"	void foo(X<T> x0) {\n" +
			"		x0.sx1.sx2.t.getClass();\n" +
			"	}\n" +
			"}\n" +
			"class X1<T extends SubX2<T>> {\n" +
			"	T sx2;\n" +
			"}\n" +
			"abstract class SubX1<T extends SubX2<T>> extends X1<T> {\n" +
			"}\n" +
			"class X2<T extends SubX2<T>> extends X1<T>{\n" +
			"	T t;\n" +
			"}\n" +
			"abstract class SubX2<T extends SubX2<T>> extends X2<T> {\n" +
			"}\n",
		},
		"");
	String expectedOutput =
		"  // Method descriptor #21 (LX;)V\n" +
		"  // Signature: (LX<TT;>;)V\n" +
		"  // Stack: 1, Locals: 2\n" +
		"  void foo(X x0);\n" +
		"     0  aload_1 [x0]\n" +
		"     1  getfield X.sx1 : SubX2 [23]\n" +
		"     4  getfield SubX2.sx2 : SubX2 [25]\n" +
		"     7  getfield SubX2.t : SubX2 [30]\n" +
		"    10  invokevirtual java.lang.Object.getClass() : java.lang.Class [33]\n" +
		"    13  pop\n" +
		"    14  return\n" +
		"      Line numbers:\n" +
		"        [pc: 0, line: 4]\n" +
		"        [pc: 14, line: 5]\n" +
		"      Local variable table:\n" +
		"        [pc: 0, pc: 15] local: this index: 0 type: X\n" +
		"        [pc: 0, pc: 15] local: x0 index: 1 type: X\n";

	File f = new File(OUTPUT_DIR + File.separator + "X.class");
	byte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);
	ClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();
	String result = disassembler.disassemble(classFileBytes, "\n", ClassFileBytesDisassembler.DETAILED);
	int index = result.indexOf(expectedOutput);
	if (index == -1 || expectedOutput.length() == 0) {
		System.out.println(Util.displayString(result, 3));
	}
	if (index == -1) {
		assertEquals("Wrong contents", expectedOutput, result);
	}
}

