// null analysis -- static fields accessed from Member type
// Qualified access to static fields should also work
public void testBug247564i_3() {
	Map compilerOptions = getCompilerOptions();
	compilerOptions.put(CompilerOptions.OPTION_ReportNonStaticAccessToStatic, CompilerOptions.IGNORE);
	this.runNegativeTest(
		true,
		new String[] {
			"X.java",
			"public class X {\n" +
			"  static Object field0;\n" +
			"  static Object field1;\n" +
			"  static Y getY(){ return new Y();}\n" +
			"  static X getX() { return new X();}\n" +
			"  static class XInner{\n" +
			"    static Object xinnerfield;\n" +
			"    XInner getXInner() { return new XInner();\n}" +
			"    void goo(Object var) {\n" +
			"    	if (new Y().getY().yField1 == null && field0.toString() == \"\"){}\n" +  // no warn
			"    	if (getY().yField1 == null && field0.toString() == \"\"){}\n" +  // no warn
			"    	if (new Y().getX().field0 == null && field0.toString() == \"\"){}\n" +   // warn
			"    	if (getX().field0 == null && field0.toString() == \"\"){}\n" +   // warn
			"    	if (getX().field0 == null && getX().field0.toString() == \"\"){}\n" +   // no warn, getX() wipes out null info
			"    	if (getX().field0 == null && X.field0.toString() == \"\"){}\n" +   // warn, qualified access
			"    	if (getXInner().xinnerfield == null && xinnerfield.toString() == \"\"){}\n" +   // warn
			"    	if (getXInner().xinnerfield == null && this.xinnerfield.toString() == \"\"){}\n" +   // warn
			"    	if (getX().field0 == null && this.xinnerfield.toString() == \"\"){}\n" +   // no warn
			"    	if (getXInner().xinnerfield == null && field0.toString() == \"\"){}\n" +   // no warn
			// fields from other types, don't warn
			"    	if (new Y().getY().yField1 == null && Y.yField1.toString() == \"\"){}\n" +  // no warn
			"    	if (getY().yField1 == null && Y.yField1.toString() == \"\"){}\n" +  // no warn
			"    	if (getX().field0 == null && Y.yField1.toString() == \"\"){}\n" +  // no warn
			// qualified accesses
			"    	if (Y.yField1 == null && field0.toString() == \"\"){}\n" +  // no warn
			"    	if (Y.xiny.field0 == null && Y.xiny.field0.toString() == \"\"){}\n" +  // warn, qualified access
			"    	if (Y.yField1 == null && Y.yField1.toString() == \"\"){}\n" +  // no warn
			"    	if (Y.xiny.field1 == null && Y.yField1.toString() == \"\"){}\n" +  // no warn
			"    	if (X.field0 == null && X.field0.toString() == \"\"){}\n" +   // warn
			"    	if (X.field0 == null && getX().field0.toString() == \"\"){}\n" +   // no warn
			"    }\n" +
			"  }\n" +
			"}\n" +
			"class Y{\n" +
			"	Y getY(){ return new Y();}\n" +
			"	X getX(){ return new X();}\n" +
			"   static Object yField1;\n" +
			"   static X xiny;\n" +
			"}"},
		null,
		compilerOptions,
		"----------\n" + 
		"1. ERROR in X.java (at line 12)\n" + 
		"	if (new Y().getX().field0 == null && field0.toString() == \"\"){}\n" + 
		"	                                     ^^^^^^\n" + 
		"Potential null pointer access: The field field0 may be null at this location\n" + 
		"----------\n" + 
		"2. ERROR in X.java (at line 13)\n" + 
		"	if (getX().field0 == null && field0.toString() == \"\"){}\n" + 
		"	                             ^^^^^^\n" + 
		"Potential null pointer access: The field field0 may be null at this location\n" + 
		"----------\n" + 
		"3. ERROR in X.java (at line 15)\n" + 
		"	if (getX().field0 == null && X.field0.toString() == \"\"){}\n" + 
		"	                               ^^^^^^\n" + 
		"Potential null pointer access: The field field0 may be null at this location\n" + 
		"----------\n" + 
		"4. ERROR in X.java (at line 16)\n" + 
		"	if (getXInner().xinnerfield == null && xinnerfield.toString() == \"\"){}\n" + 
		"	                                       ^^^^^^^^^^^\n" + 
		"Potential null pointer access: The field xinnerfield may be null at this location\n" + 
		"----------\n" + 
		"5. ERROR in X.java (at line 17)\n" + 
		"	if (getXInner().xinnerfield == null && this.xinnerfield.toString() == \"\"){}\n" + 
		"	                                            ^^^^^^^^^^^\n" + 
		"Potential null pointer access: The field xinnerfield may be null at this location\n" + 
		"----------\n" +
		"6. ERROR in X.java (at line 24)\n" + 
		"	if (Y.xiny.field0 == null && Y.xiny.field0.toString() == \"\"){}\n" + 
		"	                                    ^^^^^^\n" + 
		"Potential null pointer access: The field field0 may be null at this location\n" + 
		"----------\n" + 
		"7. ERROR in X.java (at line 27)\n" + 
		"	if (X.field0 == null && X.field0.toString() == \"\"){}\n" + 
		"	                          ^^^^^^\n" + 
		"Potential null pointer access: The field field0 may be null at this location\n" + 
		"----------\n",
		JavacTestOptions.Excuse.EclipseWarningConfiguredAsError
	);
}

