// https://bugs.eclipse.org/bugs/show_bug.cgi?id=399773, [1.8][compiler] Cast expression should allow for additional bounds to form intersection types
public void test010() {
	this.runNegativeTest(
			new String[] {
				"X.java",
				"import java.util.List;\n" +
				"import java.util.Map;\n" +
				"interface I<T> {\n" +
				"	void doit(List<T> x);\n" +
				"	boolean equals(Object o);\n" +
				"}\n" +
				"public class X {\n" +
				"	I<String> i = (List<String> p) -> {};\n" +
				"	I<X> i2 = (Map<String, String>.Entry & I<X> & Serializable) null;\n" +
				"}\n",
			},
			"----------\n" + 
			"1. ERROR in X.java (at line 9)\n" + 
			"	I<X> i2 = (Map<String, String>.Entry & I<X> & Serializable) null;\n" + 
			"	           ^^^^^^^^^^^^^^^^^^^^^^^^^\n" + 
			"The member type Map<String,String>.Entry cannot be qualified with a parameterized type, since it is static. Remove arguments from qualifying type Map<String,String>\n" + 
			"----------\n" + 
			"2. ERROR in X.java (at line 9)\n" + 
			"	I<X> i2 = (Map<String, String>.Entry & I<X> & Serializable) null;\n" + 
			"	                                              ^^^^^^^^^^^^\n" + 
			"Serializable cannot be resolved to a type\n" + 
			"----------\n");
}

