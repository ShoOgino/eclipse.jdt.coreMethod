// http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6182950
//https://bugs.eclipse.org/bugs/show_bug.cgi?id=?
public void test187() {
	this.runNegativeTest(
		new String[] {
			"X.java",
			"import java.util.*;\n" +
			"class X {\n" +
			"    int f(List<String> l) {return 0;}\n" +
			"}\n" +
			"class Y extends X {\n" +
			"    double f(List<Integer> l) {return 0;}\n" +// name clash in 7
			"}\n" +
			"interface I {\n" +
			"	double f(List<Integer> l);\n" +
			"}\n" +
			"abstract class Z extends X implements I {}\n" +
			"class XX {\n" +
			"    int f(List<String> l) {return 0;}\n" +
    			"double f(List<Integer> l) {return 0;}\n" +// name clash in 1.5 & 7
			"}"
		},
		"----------\n" + 
		"1. ERROR in X.java (at line 6)\n" + 
		"	double f(List<Integer> l) {return 0;}\n" + 
		"	       ^^^^^^^^^^^^^^^^^^\n" + 
		"Name clash: The method f(List<Integer>) of type Y has the same erasure as f(List<String>) of type X but does not override it\n" + 
		"----------\n" + 
		"2. ERROR in X.java (at line 11)\n" + 
		"	abstract class Z extends X implements I {}\n" + 
		"	               ^\n" + 
		"Name clash: The method f(List<String>) of type X has the same erasure as f(List<Integer>) of type I but does not override it\n" + 
		"----------\n" + 
		"3. ERROR in X.java (at line 13)\n" + 
		"	int f(List<String> l) {return 0;}\n" + 
		"	    ^^^^^^^^^^^^^^^^^\n" + 
		"Method f(List<String>) has the same erasure f(List<E>) as another method in type XX\n" + 
		"----------\n" + 
		"4. ERROR in X.java (at line 14)\n" + 
		"	double f(List<Integer> l) {return 0;}\n" + 
		"	       ^^^^^^^^^^^^^^^^^^\n" + 
		"Method f(List<Integer>) has the same erasure f(List<E>) as another method in type XX\n" + 
		"----------\n"
	);
}

