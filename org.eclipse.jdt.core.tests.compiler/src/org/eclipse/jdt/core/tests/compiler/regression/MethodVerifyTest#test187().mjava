// http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6182950
//https://bugs.eclipse.org/bugs/show_bug.cgi?id=?
public void test187() {
	String expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6 )?
			"----------\n" +
			"1. WARNING in X.java (at line 6)\n" +
			"	double f(List<Integer> l) {return 0;}\n" +
			"	       ^^^^^^^^^^^^^^^^^^\n" +
			"Name clash: The method f(List<Integer>) of type Y has the same erasure as f(List<String>) of type X but does not override it\n" +
			"----------\n" +
			"2. WARNING in X.java (at line 13)\n" +
			"	int f(List<String> l) {return 0;}\n" +
			"	    ^^^^^^^^^^^^^^^^^\n" +
			"Erasure of method f(List<String>) is the same as another method in type XX\n" +
			"----------\n" +
			"3. WARNING in X.java (at line 14)\n" +
			"	double f(List<Integer> l) {return 0;}\n" +
			"	       ^^^^^^^^^^^^^^^^^^\n" +
			"Erasure of method f(List<Integer>) is the same as another method in type XX\n" +
			"----------\n":
				"----------\n" +
				"1. ERROR in X.java (at line 6)\n" +
				"	double f(List<Integer> l) {return 0;}\n" +
				"	       ^^^^^^^^^^^^^^^^^^\n" +
				"Name clash: The method f(List<Integer>) of type Y has the same erasure as f(List<String>) of type X but does not override it\n" +
				"----------\n" +
				"2. ERROR in X.java (at line 13)\n" +
				"	int f(List<String> l) {return 0;}\n" +
				"	    ^^^^^^^^^^^^^^^^^\n" +
				"Erasure of method f(List<String>) is the same as another method in type XX\n" +
				"----------\n" +
				"3. ERROR in X.java (at line 14)\n" +
				"	double f(List<Integer> l) {return 0;}\n" +
				"	       ^^^^^^^^^^^^^^^^^^\n" +
				"Erasure of method f(List<Integer>) is the same as another method in type XX\n" +
				"----------\n";
	this.runNegativeTest(
		new String[] {
			"X.java",
			"import java.util.*;\n" +
			"class X {\n" +
			"    int f(List<String> l) {return 0;}\n" +
			"}\n" +
			"class Y extends X {\n" +
			"    double f(List<Integer> l) {return 0;}\n" +// name clash in 7
			"}\n" +
			"interface I {\n" +
			"	double f(List<Integer> l);\n" +
			"}\n" +
			"abstract class Z extends X implements I {}\n" +
			"class XX {\n" +
			"    int f(List<String> l) {return 0;}\n" +
    			"double f(List<Integer> l) {return 0;}\n" +// name clash in 1.5 & 7
			"}"
		},
		expectedCompilerLog
	);
}

