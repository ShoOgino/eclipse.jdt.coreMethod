// assigning values upper bounded wildcard types carrying null annotations
public void testTypeBounds3() {
	runNegativeTestWithLibs(
		new String[] {
			"C.java",
			"import java.util.List;\n" +
			"\n" +
			"import org.eclipse.jdt.annotation.NonNull;\n" +
			"import org.eclipse.jdt.annotation.Nullable;\n" +
			"\n" +
			"class A { }\n" +
			"class B extends A {}\n" +
			"public class C {\n" +
			"	\n" +
			"	void testExtends(List<? extends @NonNull B> lb1, List<? extends @Nullable B> lb2) {\n" +
			"		List<? extends @NonNull A> la1 = lb1;\n" +
			"		la1 = lb2; // ERR\n" +
			"		List<? extends @Nullable A> la2 = lb1;\n" +
			"		la2 = lb2;\n" +
			"	}\n" +
			"}\n"
		},
		getCompilerOptions(),
		"----------\n" +
		"1. ERROR in C.java (at line 12)\n" +
		"	la1 = lb2; // ERR\n" +
		"	      ^^^\n" +
		"Null type mismatch (type annotations): required \'List<? extends @NonNull A>\' but this expression has type \'List<capture#of ? extends @Nullable B>\'\n" +
		"----------\n"
	);
}

